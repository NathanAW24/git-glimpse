Pull Request Number: 3112
Title: refactor(date): updated errorMessage story and modified to import props
Base Branch: canary
Head Branch: refactor/date-stories
Author: ryo-manba
URL: https://github.com/nextui-org/nextui/pull/3112
State: MERGED
Created At: 2024-05-28T14:37:33Z
Merged At: 2024-06-15T00:00:11Z
Participants: ryo-manba, jrgarciadev, wingkwong

Description:
Closes # 
üìù Description
Modified to import HelpTextProps and ValidationResult from @react-types/shared.
Fixed the storybook to display errorMessage. Added a pattern to the docs for passing errorMessage as a function.
‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


New Features

Introduced DateRangePicker component with error message functionality for stay duration input validation.
Added DateInput component with error message functionality for date validation.



Enhancements

Updated time-input stories to include error message configurations with WithErrorMessage and WithErrorMessageFunction exports.

Commits:
- refactor(date): updated errorMessage story and modified to import props\n- docs(date): add errorMessageFunction examples\n- chore: add changeset\n- fix: remove unnecessary props\n- fix: typo\n

Labels:


Comments:
- vercel: [vc]: #h7NTcWZUKl9NWzyw41ZjmELztRe+akip0eRaJPBijOg=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi85cDg3dnRHTkxyS3hTNFRxbW1XdFFqRjl1dHN4IiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1yZWZhY3Rvci1kYXRlLXN0b3JpZXMtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1kb2NzLXYyLWdpdC1yZWZhY3Rvci1kYXRlLXN0b3JpZXMtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19LHsibmFtZSI6Im5leHR1aS1zdG9yeWJvb2stdjIiLCJyb290RGlyZWN0b3J5IjoicGFja2FnZXMvc3Rvcnlib29rIiwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi8zUUJ1RkZxZ1ozeVR5RndQZVhlNXNWNENoUHFOIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LXJlZmFjdG9yLWRhdGUtc3Rvcmllcy1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtcmVmYWN0b3ItZGF0ZS1zdG9yaWVzLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/9p87vtGNLrKxS4TqmmWtQjF9utsx)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-refactor-date-stories-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-refactor-date-stories-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 2, 2024 7:30am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/3QBuFFqgZ3yTyFwPeXe5sV4ChPqN)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-refactor-date-stories-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-refactor-date-stories-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 2, 2024 7:30am |


\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: fd52342d5c412334097f4e1fa1f63be2b26aae49

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 3 packages</summary>

  | Name                    | Type  |
| ----------------------- | ----- |
| @nextui-org/date-input  | Patch |
| @nextui-org/date-picker | Patch |
| @nextui-org/react       | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/refactor/date-stories?filename=.changeset/rich-kids-search.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Fdate-input%22%3A%20patch%0A%22%40nextui-org%2Fdate-picker%22%3A%20patch%0A---%0A%0Arefactor(date)%3A%20updated%20errorMessage%20story%20and%20modified%20to%20import%20props%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The recent changes introduce error message functionality for date and time input components within a React application. The `DateRangePicker` and `DateInput` components now include validation features that display error messages when the input does not meet specified criteria. Additionally, new stories have been added to demonstrate these error message capabilities.

## Changes

| File Path                                                                                           | Change Summary                                                                                                         |
|-----------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------|
| `apps/docs/content/components/date-range-picker/error-message-function.ts`                          | Updated `DateRangePicker` component to include error message functionality for stay duration input validation.         |
| `packages/components/date-input/stories/time-input.stories.tsx`                                     | Added imports for `ValidationResult` and new exports `WithErrorMessage` and `WithErrorMessageFunction` with configurations for error messages. |
| `apps/docs/content/components/date-input/error-message-function.ts`                                 | Introduced a new `DateInput` React component with error message functionality for validation.                          |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

# Existing changesets

apps/docs/content/components/date-range-picker/error-message-function.ts: ### Summary
The file `error-message-function.ts` introduces a React component `DateRangePicker` that includes error message functionality for stay duration input validation.

### Alterations to the declarations of exported or public entities
- `const App` in `error-message-function.ts` has been updated to include a `DateRangePicker` component with error message functionality for stay duration input validation.

---

packages/components/date-input/stories/time-input.stories.tsx: ### Summary

In the `time-input.stories.tsx` file within the `packages/components/date-input/stories` directory:
- Added import for `ValidationResult` from `@react-types/shared`.
- Added `WithErrorMessage` and `WithErrorMessageFunction` exports with error message configurations.

# New changesets

apps/docs/content/components/date-input/error-message-function.ts: ## Summary

The new file `error-message-function.ts` introduces a React component `DateInput` that allows users to input a date with error message functionality for validation.

## Alterations to the declarations of exported or public entities

- Added a new React component `DateInput` with error message functionality in the file `error-message-function.ts`.

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

### PR Summary

**Title:** refactor(date): updated errorMessage story and modified to import props

**Description:**
- Modified to import `HelpTextProps` and `ValidationResult` from `@react-types/shared`.
- Fixed the storybook to display `errorMessage`.
- Added a pattern to the documentation for passing `errorMessage` as a function.

### Comments Summary

1. **jrgarciadev:** Requested @ryo-manba to add examples to the date input documentation and verify the time-input one.
2. **jrgarciadev:** Asked @ryo-manba to add a changeset.
3. **ryo-manba:** Suggested that the pattern of passing `errorMessage` as a function should be added to the documentation for other components as well, but will address this in a separate PR.
4. **ryo-manba:** Confirmed that the requested changes have been fixed.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated summary of generated summaries

Recent updates introduce new React components with error message functionalities for input validation in the `apps/docs` and `packages/components` directories. Specifically, the `DateRangePicker` component in `apps/docs/content/components/date-range-picker/error-message-function.ts` now includes error message functionality for validating stay duration inputs. Similarly, a new `DateInput` component with error message functionality has been added in `apps/docs/content/components/date-input/error-message-function.ts`. Additionally, the `time-input.stories.tsx` file in `packages/components/date-input/stories` has been updated to include imports for `ValidationResult` and new exports `WithErrorMessage` and `WithErrorMessageFunction` for error message configurations.

### Alterations to the declarations of exported or public entities

#### apps/docs/content/components/date-range-picker/error-message-function.ts

**Before:**
```typescript
const App = () => {
  // existing implementation
};
```

**After:**
```typescript
const App = () => {
  return (
    <DateRangePicker />
  );
};
```

#### packages/components/date-input/stories/time-input.stories.tsx

**Before:**
```typescript
// existing imports and exports
```

**After:**
```typescript
import { ValidationResult } from '@react-types/shared';

export const WithErrorMessage = () => {
  // implementation with error message
};

export const WithErrorMessageFunction = () => {
  // implementation with error message function
};
```

#### apps/docs/content/components/date-input/error-message-function.ts

**New File:**
```typescript
import React from 'react';

const DateInput = () => {
  // implementation with error message functionality
};

export default DateInput;
```

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- f6869779a93b3d3be6919940926199a7d6e798bf -->
<!-- bd7f177ae2417e73180cc445983c4fe8bebf1638 -->
<!-- d5efeeb226e9a303d531083c31e2c300c2f1cadd -->
<!-- fd52342d5c412334097f4e1fa1f63be2b26aae49 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- jrgarciadev: @ryo-manba please add these examples to the date input docs as well and verify the time-input one\n- jrgarciadev: @ryo-manba add changeset\n- ryo-manba: We might want to add the pattern of passing `errorMessage` as a function to the docs for other components as well, but I will address that in a separate PR.\n- ryo-manba: @jrgarciadev Fixed it!\n

Files Changed:
- .changeset/spicy-islands-drum.md (added, 6 changes)\n  Patch: @@ -0,0 +1,6 @@
+---
+"@nextui-org/date-input": patch
+"@nextui-org/date-picker": patch
+---
+
+chore(date): update errorMessageFunction story and docs for date libraries\n- apps/docs/content/components/date-input/error-message-function.ts (added, 30 changes)\n  Patch: @@ -0,0 +1,30 @@
+const App = `import {DateInput} from "@nextui-org/react";
+import {CalendarDate, parseDate} from "@internationalized/date";
+
+export default function App() {
+  return (
+    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+      <DateInput 
+        label={"Birth date"} 
+        defaultValue={parseDate("2024-04-04")} 
+        placeholderValue={new CalendarDate(1995, 11, 6)} 
+        description={"This is my birth date."}
+        isInvalid
+        errorMessage={(value) => {
+          if (value.isInvalid) {
+            return "Please enter a valid date.";
+          }
+        }}
+        className="max-w-xs"
+      />
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/date-input/index.ts (modified, 2 changes)\n  Patch: @@ -7,6 +7,7 @@ import labelPlacements from "./label-placements";
 import description from "./description";
 import startEndContent from "./start-end-content";
 import errorMessage from "./error-message";
+import errorMessageFunction from "./error-message-function";
 import controlled from "./controlled";
 import timeZones from "./time-zones";
 import granularity from "./granularity";
@@ -25,6 +26,7 @@ export const dateInputContent = {
   description,
   startEndContent,
   errorMessage,
+  errorMessageFunction,
   controlled,
   timeZones,
   granularity,\n- apps/docs/content/components/date-picker/error-message-function.ts (added, 26 changes)\n  Patch: @@ -0,0 +1,26 @@
+const App = `import {DatePicker} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+      <DatePicker 
+        label="Birth date"
+        className="max-w-[284px]"
+        isInvalid
+        errorMessage={(value) => {
+          if (value.isInvalid) {
+            return "Please enter a valid date.";
+          }
+        }}
+      />
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/date-picker/index.ts (modified, 2 changes)\n  Patch: @@ -6,6 +6,7 @@ import variants from "./variants";
 import labelPlacements from "./label-placements";
 import description from "./description";
 import errorMessage from "./error-message";
+import errorMessageFunction from "./error-message-function";
 import withMonthAndYearPickers from "./with-month-and-year-pickers";
 import withTimeField from "./with-time-field";
 import selectorIcon from "./selector-icon";
@@ -28,6 +29,7 @@ export const datePickerContent = {
   labelPlacements,
   description,
   errorMessage,
+  errorMessageFunction,
   withMonthAndYearPickers,
   withTimeField,
   selectorIcon,\n- apps/docs/content/components/date-range-picker/error-message-function.ts (added, 30 changes)\n  Patch: @@ -0,0 +1,30 @@
+const App = `import {DateRangePicker} from "@nextui-org/react";
+import {parseDate} from "@internationalized/date";
+
+export default function App() {
+  return (
+    <DateRangePicker 
+      isInvalid
+      label="Stay duration" 
+      variant="bordered"
+      errorMessage={(value) => {
+        if (value.isInvalid) {
+          return "Please enter your stay duration";
+        }
+      }}
+      defaultValue={{
+        start: parseDate("2024-04-01"),
+        end: parseDate("2024-04-08"),
+      }}
+      className="max-w-xs"
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/date-range-picker/index.ts (modified, 2 changes)\n  Patch: @@ -6,6 +6,7 @@ import variants from "./variants";
 import labelPlacements from "./label-placements";
 import description from "./description";
 import errorMessage from "./error-message";
+import errorMessageFunction from "./error-message-function";
 import withTimeField from "./with-time-field";
 import selectorIcon from "./selector-icon";
 import controlled from "./controlled";
@@ -28,6 +29,7 @@ export const dateRangePickerContent = {
   labelPlacements,
   description,
   errorMessage,
+  errorMessageFunction,
   withTimeField,
   selectorIcon,
   controlled,\n- apps/docs/content/components/time-input/error-message-function.ts (added, 23 changes)\n  Patch: @@ -0,0 +1,23 @@
+const App = `import {TimeInput} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <TimeInput 
+      label="Event Time"
+      isInvalid
+      errorMessage={(value) => {
+        if (value.isInvalid) {
+          return "Please enter a valid time";
+        }
+      }}
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/time-input/error-message.ts (added, 19 changes)\n  Patch: @@ -0,0 +1,19 @@
+const App = `import {TimeInput} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <TimeInput 
+      label="Event Time"
+      isInvalid
+      errorMessage="Please enter a valid time"
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/time-input/index.ts (modified, 4 changes)\n  Patch: @@ -4,6 +4,8 @@ import disabled from "./disabled";
 import readonly from "./read-only";
 import withoutLabel from "./without-label";
 import withDescription from "./with-description";
+import errorMessage from "./error-message";
+import errorMessageFunction from "./error-message-function";
 import labelPlacement from "./label-placement";
 import startContent from "./start-content";
 import endContent from "./end-content";
@@ -23,6 +25,8 @@ export const timeInputContent = {
   readonly,
   withoutLabel,
   withDescription,
+  errorMessage,
+  errorMessageFunction,
   labelPlacement,
   startContent,
   endContent,\n- apps/docs/content/docs/components/date-input.mdx (modified, 4 changes)\n  Patch: @@ -84,6 +84,10 @@ You can combine the `isInvalid` and `errorMessage` properties to show an invalid
 
 <CodeDemo title="With Error Message" files={dateInputContent.errorMessage} />
 
+You can also pass an error message as a function. This allows for dynamic error message handling based on the [ValidationResult]((https://github.com/adobe/react-spectrum/blob/1cacbf1d438675feb3859fee54b17e620b458d9c/packages/%40react-types/shared/src/inputs.d.ts#L44-L51)).
+
+<CodeDemo title="With Error Message Function" files={dateInputContent.errorMessageFunction} />
+
 ### Controlled
 
 You can use the `value` and `onChange` properties to control the input value.\n- apps/docs/content/docs/components/date-picker.mdx (modified, 4 changes)\n  Patch: @@ -77,6 +77,10 @@ You can combine the `isInvalid` and `errorMessage` properties to show an invalid
 
 <CodeDemo title="With Error Message" files={datePickerContent.errorMessage} />
 
+You can also pass an error message as a function. This allows for dynamic error message handling based on the [ValidationResult]((https://github.com/adobe/react-spectrum/blob/1cacbf1d438675feb3859fee54b17e620b458d9c/packages/%40react-types/shared/src/inputs.d.ts#L44-L51)).
+
+<CodeDemo title="With Error Message Function" files={datePickerContent.errorMessageFunction} />
+
 ### With Month and Year Pickers
 
 <CodeDemo title="With Month and Year Pickers" files={datePickerContent.withMonthAndYearPickers} />\n- apps/docs/content/docs/components/date-range-picker.mdx (modified, 4 changes)\n  Patch: @@ -92,6 +92,10 @@ You can combine the `isInvalid` and `errorMessage` properties to show an invalid
 
 <CodeDemo title="With Error Message" files={dateRangePickerContent.errorMessage} />
 
+You can also pass an error message as a function. This allows for dynamic error message handling based on the [ValidationResult]((https://github.com/adobe/react-spectrum/blob/1cacbf1d438675feb3859fee54b17e620b458d9c/packages/%40react-types/shared/src/inputs.d.ts#L44-L51)).
+
+<CodeDemo title="With Error Message Function" files={dateRangePickerContent.errorMessageFunction} />
+
 ### With Time Fields
 
 DateRangePicker automatically includes time fields when a `CalendarDateTime` or `ZonedDateTime` object is provided as the value.\n- apps/docs/content/docs/components/time-input.mdx (modified, 11 changes)\n  Patch: @@ -78,6 +78,17 @@ A description for the field. Provides a hint such as specific requirements for w
 
 <CodeDemo title="With Description" files={timeInputContent.withDescription} />
 
+### With Error Message
+
+You can combine the `isInvalid` and `errorMessage` properties to show an invalid input.
+
+<CodeDemo title="With Error Message" files={timeInputContent.errorMessage} />
+
+You can also pass an error message as a function. This allows for dynamic error message handling based on the [ValidationResult]((https://github.com/adobe/react-spectrum/blob/1cacbf1d438675feb3859fee54b17e620b458d9c/packages/%40react-types/shared/src/inputs.d.ts#L44-L51)).
+
+<CodeDemo title="With Error Message Function" files={timeInputContent.errorMessageFunction} />
+
+
 ### Label Placement
 
 The label's overall position relative to the element it is labeling.\n- packages/components/date-input/src/date-input-group.tsx (modified, 18 changes)\n  Patch: @@ -1,21 +1,11 @@
 import type {HTMLAttributes, ReactElement, ReactNode} from "react";
-import type {GroupDOMAttributes} from "@react-types/shared";
+import type {GroupDOMAttributes, HelpTextProps, ValidationResult} from "@react-types/shared";
 
 import {useMemo} from "react";
 import {forwardRef} from "@nextui-org/system";
 import {dataAttr} from "@nextui-org/shared-utils";
 
-// TODO: Use HelpTextProps from "@react-types/shared"; once we upgrade react-aria packages to the latest version.
-export interface ValidationResult {
-  /** Whether the input value is invalid. */
-  isInvalid: boolean;
-  /** The current error messages for the input if it is invalid, otherwise an empty array. */
-  validationErrors: string[];
-  /** The native validation details for the input. */
-  validationDetails: ValidityState;
-}
-
-export interface DateInputGroupProps extends ValidationResult {
+export interface DateInputGroupProps extends ValidationResult, HelpTextProps {
   children?: ReactElement | ReactElement[];
   shouldLabelBeOutside?: boolean;
   label?: ReactNode;
@@ -27,10 +17,6 @@ export interface DateInputGroupProps extends ValidationResult {
   labelProps?: HTMLAttributes<HTMLElement>;
   descriptionProps?: HTMLAttributes<HTMLElement>;
   errorMessageProps?: HTMLAttributes<HTMLElement>;
-  /** A description for the field. Provides a hint such as specific requirements for what to choose. */
-  description?: ReactNode;
-  /** An error message for the field. */
-  errorMessage?: ReactNode | ((v: ValidationResult) => ReactNode);
 }
 
 export const DateInputGroup = forwardRef<"div", DateInputGroupProps>((props, ref) => {\n- packages/components/date-input/stories/date-input.stories.tsx (modified, 16 changes)\n  Patch: @@ -13,6 +13,7 @@ import {
 } from "@internationalized/date";
 import {CalendarBoldIcon} from "@nextui-org/shared-icons";
 import {useDateFormatter, I18nProvider} from "@react-aria/i18n";
+import {ValidationResult} from "@react-types/shared";
 
 import {DateInput, DateInputProps} from "../src";
 
@@ -254,10 +255,25 @@ export const WithErrorMessage = {
 
   args: {
     ...defaultProps,
+    isInvalid: true,
     errorMessage: "Please enter a valid date",
   },
 };
 
+export const WithErrorMessageFunction = {
+  render: Template,
+
+  args: {
+    ...defaultProps,
+    isInvalid: true,
+    errorMessage: (value: ValidationResult) => {
+      if (value.isInvalid) {
+        return "Please enter a valid date";
+      }
+    },
+  },
+};
+
 export const IsInvalid = {
   render: Template,
 \n- packages/components/date-input/stories/time-input.stories.tsx (modified, 25 changes)\n  Patch: @@ -9,6 +9,7 @@ import {
   ZonedDateTime,
 } from "@internationalized/date";
 import {useDateFormatter} from "@react-aria/i18n";
+import {ValidationResult} from "@react-types/shared";
 
 import {TimeInput, TimeInputProps, TimeInputValue as TimeValue} from "../src";
 
@@ -192,6 +193,30 @@ export const WithDescription = {
   },
 };
 
+export const WithErrorMessage = {
+  render: Template,
+
+  args: {
+    ...defaultProps,
+    isInvalid: true,
+    errorMessage: "Please enter a valid time",
+  },
+};
+
+export const WithErrorMessageFunction = {
+  render: Template,
+
+  args: {
+    ...defaultProps,
+    isInvalid: true,
+    errorMessage: (value: ValidationResult) => {
+      if (value.isInvalid) {
+        return "Please enter a valid date";
+      }
+    },
+  },
+};
+
 export const LabelPlacement = {
   render: LabelPlacementTemplate,
 \n- packages/components/date-picker/stories/date-picker.stories.tsx (modified, 16 changes)\n  Patch: @@ -17,6 +17,7 @@ import {I18nProvider, useDateFormatter, useLocale} from "@react-aria/i18n";
 import {Button, ButtonGroup} from "@nextui-org/button";
 import {Radio, RadioGroup} from "@nextui-org/radio";
 import {cn} from "@nextui-org/theme";
+import {ValidationResult} from "@react-types/shared";
 
 import {DatePicker, DatePickerProps} from "../src";
 
@@ -424,10 +425,25 @@ export const WithErrorMessage = {
 
   args: {
     ...defaultProps,
+    isInvalid: true,
     errorMessage: "Please enter a valid date",
   },
 };
 
+export const WithErrorMessageFunction = {
+  render: Template,
+
+  args: {
+    ...defaultProps,
+    isInvalid: true,
+    errorMessage: (value: ValidationResult) => {
+      if (value.isInvalid) {
+        return "Please enter a valid date";
+      }
+    },
+  },
+};
+
 export const IsInvalid = {
   render: Template,
 \n- packages/components/date-picker/stories/date-range-picker.stories.tsx (modified, 19 changes)\n  Patch: @@ -13,7 +13,7 @@ import {
   startOfWeek,
   today,
 } from "@internationalized/date";
-import {RangeValue} from "@react-types/shared";
+import {RangeValue, ValidationResult} from "@react-types/shared";
 import {DateValue} from "@react-types/datepicker";
 import {I18nProvider, useDateFormatter, useLocale} from "@react-aria/i18n";
 import {Button, ButtonGroup} from "@nextui-org/button";
@@ -499,7 +499,22 @@ export const WithErrorMessage = {
 
   args: {
     ...defaultProps,
-    errorMessage: "Please enter your stay duration",
+    isInvalid: true,
+    errorMessage: "Please enter a valid date range",
+  },
+};
+
+export const WithErrorMessageFunction = {
+  render: Template,
+
+  args: {
+    ...defaultProps,
+    isInvalid: true,
+    errorMessage: (value: ValidationResult) => {
+      if (value.isInvalid) {
+        return "Please enter a valid date range";
+      }
+    },
   },
 };
 \n
Pull Request Number: 3682
Title: chore(docs): add TS examples for single & multiple selection
Base Branch: main
Head Branch: fix/eng-1259
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/3682
State: MERGED
Created At: 2024-08-23T14:09:13Z
Merged At: 2024-08-23T19:30:18Z
Participants: wingkwong, jrgarciadev

Description:
Closes #3626
üìù Description
currently dropdown single and multiple selection only provide jsx. For those who are using typescript, those code will throw warning on onSelectionChange and they don't know how to fix it. Hence, add the TS examples as well.
‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


New Features

Introduced new TypeScript versions of the dropdown components, enhancing type safety and performance.
Added single and multiple selection capabilities to dropdowns, improving user interaction.



Documentation

Updated documentation for dropdown components by removing highlighted lines in code demos for a cleaner presentation.

Commits:
- feat(docs): add TS examples for single & multiple selection\n

Labels:
üìã Scope : Docs

Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-1259/[bug]-warning-thrown-in-onselectionchange-in-dropdown-example-code">ENG-1259 [BUG] - warning thrown in onSelectionChange in dropdown example code</a></p>\n- vercel: [vc]: #CkwwlJeSodBwadxt3zFOfz8OHjPZjFDKqx/oM99Y6Tg=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9GQnVtZmM0TnByRzZ0YmJhZnVTYXRoZ2hRd1h5IiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtZW5nLTEyNTktbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtZW5nLTEyNTktbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19LHsibmFtZSI6Im5leHR1aS1zdG9yeWJvb2stdjIiLCJyb290RGlyZWN0b3J5IjoicGFja2FnZXMvc3Rvcnlib29rIiwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi9GelBRQ3FVQjlGQ2lLc1BHZmFnMTIyUGIyYTVGIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZpeC1lbmctMTI1OS1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LWVuZy0xMjU5LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/FBumfc4NprG6tbbafuSathghQwXy)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-1259-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-1259-nextui-org.vercel.app?via=pr-comment-feedback-link) | Aug 23, 2024 2:11pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/FzPQCqUB9FCiKsPGfag122Pb2a5F)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-1259-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-1259-nextui-org.vercel.app?via=pr-comment-feedback-link) | Aug 23, 2024 2:11pm |


\n- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: 7efa8a71656264a16b4f76d4e704d5eaa0d11250

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/nextui-org/nextui/new/fix/eng-1259?filename=.changeset/shy-fans-ring.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A---%0A%0Achore(docs)%3A%20add%20TS%20examples%20for%20single%20%26%20multiple%20selection%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The changes introduce TypeScript versions of the dropdown selection components, enhancing type safety and performance. The updated components manage selected keys using TypeScript's type system and React hooks, with improvements in state management and accessibility features. The documentation was also modified to reflect the changes without highlighted lines in code demos.

## Changes

| File Path                                                  | Change Summary                                                                                       |
|-----------------------------------------------------------|-----------------------------------------------------------------------------------------------------|
| `apps/docs/content/components/dropdown/multiple-selection.ts` <br> `apps/docs/content/components/dropdown/single-selection.ts` | Introduced TypeScript versions (`AppTs`) of the dropdown components, enhancing type safety and state management. Updated selected value computation using `React.useMemo`. |
| `apps/docs/content/docs/components/dropdown.mdx`         | Removed `highlightedLines` property from `CodeDemo` sections for a cleaner presentation.           |

## Sequence Diagram(s)

```mermaid
sequenceDiagram
    participant User
    participant AppTs
    participant Dropdown

    User->>AppTs: Select option
    AppTs->>Dropdown: Update selectedKeys
    Dropdown->>Dropdown: Calculate selectedValue
    Dropdown->>User: Display selected value
```

## Assessment against linked issues

| Objective                                                                      | Addressed | Explanation                                      |
|-------------------------------------------------------------------------------|-----------|--------------------------------------------------|
| There shouldn't be any errors in the dropdown properties. (#3626)              | ‚úÖ        |                                                  |
| Standardize the type for keys and clarify the implementation. (#3562)        | ‚ùå        | Types still use `Set`, causing potential confusion. |
| Update the documentation to reflect clear usage of types. (#3562)             | ‚ùì        | Documentation changes are unclear on type standardization. |

## Possibly related issues

- **nextui-org/nextui#3562**: The introduction of TypeScript in the dropdown components addresses the inconsistency issues raised regarding TypeScript usage and type safety concerns.

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

```
apps/docs/content/components/dropdown/multiple-selection.ts: ## AI-generated summary of changes

The diff introduces a new TypeScript version of the `App` component, named `AppTs`, which enhances the original JavaScript implementation by integrating TypeScript's type system. The new `AppTs` function utilizes the `Selection` type from the `@nextui-org/react` library to define the state for `selectedKeys`, initialized as a `Set` containing a default value of `"text"`. This change improves type safety and clarity regarding the expected data structure for selected keys.

Additionally, the `selectedValue` is computed using `React.useMemo`, transforming the `selectedKeys` set into a string representation that replaces underscores with spaces. This memoization optimizes performance by recalculating the value only when `selectedKeys` changes, thereby minimizing unnecessary renders.

The component's return structure remains similar to the original, encapsulating a `Dropdown` with a `DropdownTrigger` and a `DropdownMenu`. However, the `DropdownMenu` now explicitly defines properties such as `aria-label`, `variant`, `closeOnSelect`, `disallowEmptySelection`, `selectionMode`, `selectedKeys`, and `onSelectionChange`, enhancing accessibility and user interaction capabilities. The `DropdownItem` components are also defined, providing multiple selectable options.

Overall, the changes reflect a significant enhancement in the component's functionality through the adoption of TypeScript, improving type safety, performance, and user experience.

## Alterations to the declarations of exported or public entities

- `export default function App() {...}` in `apps/docs/content/components/dropdown/multiple-selection.ts` ‚Üí `export default function App() {...}` in `apps/docs/content/components/dropdown/multiple-selection.ts` (new TypeScript version added)
- `const react = {...}` in `apps/docs/content/components/dropdown/multiple-selection.ts` ‚Üí `const react = {..., "/App.tsx": AppTs}` in `apps/docs/content/components/dropdown/multiple-selection.ts` (new export for TypeScript version)

---

apps/docs/content/components/dropdown/single-selection.ts: ## AI-generated summary of changes

The provided diff introduces a new TypeScript component, `AppTs`, which implements a dropdown selection feature using the NextUI library. This component utilizes React hooks to manage the state of selected keys, initializing it with a default value of "text". The `selectedValue` is computed using `React.useMemo`, transforming the selected keys into a string format suitable for display, replacing underscores with spaces. The dropdown interface includes a trigger button that displays the selected value and a menu that allows single selection from various options such as "Text", "Number", "Date", "Single Date", and "Iteration". The dropdown menu is configured to disallow empty selections and uses the `onSelectionChange` event to update the state of selected keys. The addition of this component enhances the application's functionality by providing a user-friendly way to select from predefined options.

## Alterations to the declarations of exported or public entities

- `export default function App() {...}` in `src/components/dropdown/single-selection.ts` ‚Üí `export default function App() {...}` in `src/components/dropdown/single-selection.ts`
- `const react = {...}` in `src/components/dropdown/single-selection.ts` ‚Üí `const react = {..., "/App.tsx": AppTs}` in `src/components/dropdown/single-selection.ts`

---

apps/docs/content/docs/components/dropdown.mdx: ## AI-generated summary of changes

The diff reflects a modification in the documentation for the dropdown component, specifically in the `CodeDemo` sections for single and multiple selection modes. The `highlightedLines` property has been removed from both instances of the `CodeDemo` component. This change suggests a shift in how the code examples are presented, potentially indicating that the highlighted lines are no longer relevant or necessary for understanding the examples provided. The overall functionality of the dropdown component remains unchanged, but the documentation now presents a cleaner format without the highlighted lines.

## Alterations to the declarations of exported or public entities

- No alterations to the declarations of exported or public entities were made.
```

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR Summary

The pull request titled "chore(docs): add TS examples for single & multiple selection" was created by the user wingkwong and is numbered 3682. It aims to address the lack of TypeScript examples for the dropdown component's single and multiple selection features, which currently only provide JSX examples. This limitation has led to warnings being thrown in the `onSelectionChange` function for TypeScript users, causing confusion about how to resolve these issues. The PR proposes adding TypeScript examples to help users understand how to implement the dropdown selection without encountering type-related warnings. The pull request closes issue #3626, which highlights the problem of warnings in the dropdown example code.

## Objectives from Linked Issues

The linked issue, titled "[BUG] - warning thrown in onSelectionChange in dropdown example code," outlines a specific bug encountered in the NextUI version 14.2.4. Users reported that there is an error in the dropdown properties, specifically related to type compatibility. The error message indicates that a type mismatch occurs between the expected parameter types for the `onSelectionChange` function. The issue describes that while the dropdown functionality works correctly, a warning appears due to the type incompatibility, which can be confusing for developers. The expected behavior is for there to be no errors in the dropdown properties, allowing for a smoother development experience without warnings. The issue emphasizes the need for clarification and resolution regarding the type definitions used in the dropdown component to improve usability for TypeScript users.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 7efa8a71656264a16b4f76d4e704d5eaa0d11250 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- apps/docs/content/components/dropdown/multiple-selection.ts (modified, 41 changes)\n  Patch: @@ -37,8 +37,49 @@ export default function App() {
   );
 }`;
 
+const AppTs = `import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from "@nextui-org/react";
+import type { Selection } from "@nextui-org/react";
+
+export default function App() {
+  const [selectedKeys, setSelectedKeys] = React.useState<Selection>(new Set(["text"]));
+
+  const selectedValue = React.useMemo(
+    () => Array.from(selectedKeys).join(", ").replaceAll("_", " "),
+    [selectedKeys]
+  );
+
+  return (
+    <Dropdown>
+      <DropdownTrigger>
+        <Button 
+          variant="bordered" 
+          className="capitalize"
+        >
+          {selectedValue}
+        </Button>
+      </DropdownTrigger>
+      <DropdownMenu 
+        aria-label="Multiple selection example"
+        variant="flat"
+        closeOnSelect={false}
+        disallowEmptySelection
+        selectionMode="multiple"
+        selectedKeys={selectedKeys}
+        onSelectionChange={setSelectedKeys}
+      >
+        <DropdownItem key="text">Text</DropdownItem>
+        <DropdownItem key="number">Number</DropdownItem>
+        <DropdownItem key="date">Date</DropdownItem>
+        <DropdownItem key="single_date">Single Date</DropdownItem>
+        <DropdownItem key="iteration">Iteration</DropdownItem>
+      </DropdownMenu>
+    </Dropdown>
+  );
+}`;
+
 const react = {
   "/App.jsx": App,
+  "/App.tsx": AppTs,
 };
 
 export default {\n- apps/docs/content/components/dropdown/single-selection.ts (modified, 40 changes)\n  Patch: @@ -36,8 +36,48 @@ export default function App() {
   );
 }`;
 
+const AppTs = `import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from "@nextui-org/react";
+import type { Selection } from "@nextui-org/react";
+
+export default function App() {
+  const [selectedKeys, setSelectedKeys] = React.useState<Selection>(new Set(["text"]));
+
+  const selectedValue = React.useMemo(
+    () => Array.from(selectedKeys).join(", ").replaceAll("_", " "),
+    [selectedKeys]
+  );
+
+  return (
+    <Dropdown>
+      <DropdownTrigger>
+        <Button 
+          variant="bordered" 
+          className="capitalize"
+        >
+          {selectedValue}
+        </Button>
+      </DropdownTrigger>
+      <DropdownMenu 
+        aria-label="Single selection example"
+        variant="flat"
+        disallowEmptySelection
+        selectionMode="single"
+        selectedKeys={selectedKeys}
+        onSelectionChange={setSelectedKeys}
+      >
+        <DropdownItem key="text">Text</DropdownItem>
+        <DropdownItem key="number">Number</DropdownItem>
+        <DropdownItem key="date">Date</DropdownItem>
+        <DropdownItem key="single_date">Single Date</DropdownItem>
+        <DropdownItem key="iteration">Iteration</DropdownItem>
+      </DropdownMenu>
+    </Dropdown>
+  );
+}`;
+
 const react = {
   "/App.jsx": App,
+  "/App.tsx": AppTs,
 };
 
 export default {\n- apps/docs/content/docs/components/dropdown.mdx (modified, 2 changes)\n  Patch: @@ -97,7 +97,6 @@ You can set the `selectionMode` property as `single` to allow the user to select
 
 <CodeDemo
   title="Single Selection"
-  highlightedLines="26-28"
   files={dropdownContent.singleSelection}
 />
 
@@ -107,7 +106,6 @@ You can set the `selectionMode` property as `multiple` to allow the user to sele
 
 <CodeDemo
   title="Multiple Selection"
-  highlightedLines="26-28"
   files={dropdownContent.multipleSelection}
 />
 \n
Pull Request Number: 4055
Title: refactor(docs): overall dx
Base Branch: beta/release-next
Head Branch: refactor/overall-dx
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/4055
State: MERGED
Created At: 2024-11-14T19:58:39Z
Merged At: 2024-11-28T20:39:53Z
Participants: jrgarciadev, wingkwong, ryo-manba

Description:
Closes # 
üìù Description
full list: https://linear.app/nextui-inc/issue/ENG-1438/dx-improvement
‚õ≥Ô∏è Current behavior (updates)

üöÄ New behavior

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Commits:
- refactor(docs): revise code block (#3922)

* refactor(docs): revise code block

* chore(docs): resolve pr comments\n- refactor(docs): autocomplete dx (#3934)

* feat(docs): add *.js?raw module

* feat(docs): change to react-jsx and add **/*.js

* chore(root): include js and jsx

* refactor(docs): autocomplete dx

* chore(docs): rollback overrides

* chore(autocomplete): lint

* fix(autocomplete): incorrect import path

* fix(docs): autocomplete dx

* chore(docs): remove highlightedLines\n- refactor(docs): breadcrumbs dx (#3968)

* refactor(docs): breadcrumbs dx

* fix(docs): export issue

* chore(docs): use preserve for jsx

* fix(docs): support multiline import

* fix(docs): support multiple export

* chore(docs): add back export\n- refactor(docs): avatar dx (#3951)\n- refactor(docs): badge dx (#3960)

* refactor(docs): badge dx

* chore(docs): incorrect import path\n- refactor(docs): button dx (#3981)\n- refactor(docs): calendar dx (#4022)

* refactor(docs): calendar dx

* fix(docs): incorrect import path\n- refactor(docs): switch dx (#4037)

* refactor(docs): switch dx

* chore(docs): remove highlightedLines\n- refactor(docs): tooltip (#4035)\n- refactor(docs): usage dx (#4036)\n- refactor(docs): circular-progress dx (#4029)\n- refactor(docs): chip-dx (#4028)\n- refactor(docs): checkbox-group dx (#4027)\n- refactor(docs): checkbox dx (#4024)

* refactor(docs): checkbox dx

* fix(docs): incorrect import path\n- refactor(docs): card dx (#4023)\n- refactor(docs): skeleton dx (#4042)\n- refactor(docs): spacer dx (#4043)\n- refactor(docs): snippet dx (#4044)\n- refactor(docs): scroll-shadow dx (#4045)\n- refactor(docs): code dx (#4046)\n- refactor(docs): kbd dx (#4047)\n- refactor(docs): link dx (#4048)\n- refactor(docs): progress dx (#4049)\n- refactor(docs): divider dx (#4050)\n- refactor(docs): listbox dx (#4051)

* refactor(docs): listbox dx

* fix(docs): import path

* fix(docs): import path

* chore(docs): remove highlightedLines

* fix(docs): indentation\n- Merge branch 'beta/release-next' into refactor/overall-dx\n- Merge branch 'beta/release-next' into refactor/overall-dx\n- chore(docs): replace the props of autocomplete from value to key (#4129)\n- refactor(docs): alert dx (#4108)

* refactor(docs): alert dx

* refactor(docs): alert dx\n- refactor(docs): image dx (#4061)\n- refactor(docs): textarea dx (#4063)\n- refactor(docs): spinner dx (#4088)\n- refactor(docs): radio-group dx (#4064)\n- refactor(docs): pagination dx (#4062)

* refactor(docs): pagination dx

* refactor(docs): pagination dx\n- refactor(docs): time-input dx (#4065)

* refactor(docs): time-input dx

* refactor(docs): time-input dx\n- refactor(docs): slider dx (#4066)

* refactor(docs): slider dx

* refactor(docs): slider dx

* refactor(docs): move SliderValue to type

* refactor(docs): slider dx\n- Merge branch 'beta/release-next' into refactor/overall-dx\n- refactor(docs): make icon code collapsible\n- refactor(docs): specify versions for date packages (#4138)

* refactor(docs): specify versions for date packages

* fix(docs): correct RA i18n version

* chore(deps): sync version from package\n- refactor(docs): tabs dx (#4067)

* refactor(docs): tab dx

* refactor(docs): tabs dx\n- refactor(docs): input dx (#4102)

* refactor(docs): input dx

* refactor(docs): input dx\n- refactor(docs): navbar dx (#4076)

* refactor(docs): navbar dx

* refactor(docs): navbar dx

* refactor(docs): navbar dx\n- refactor(docs): modal dx (#4077)

* refactor(docs): modal dx

* refactor(docs): modal dx\n- refactor(docs): select dx (#4078)

* refactor(docs): select dx

* refactor(docs): select dx

* refactor(docs): select dx

* refactor(docs): select dx

* refactor(docs): select dx\n- refactor(docs): table dx (#4079)

* refactor(docs): table dx

* fix(docs): import path

* refactor(docs): table dx

* refactor(docs): table dx\n- refactor(docs): popover dx (#4090)\n- refactor(docs): range-calendar dx (#4089)

* refactor(docs): range-calendar dx

* fix(docs): import path\n- refactor(docs): date input dx (#4100)\n- refactor(docs): dropdown dx (#4101)

* refactor(docs): dropdown dx

* refactor(docs): remove highlightedLines

* refactor(docs): dropdown dx

* refactor(docs): dropdown dx\n- refactor(docs): date-picker dx (#4103)

* refactor(docs): date-picker dx

* fix(docs): import paths\n

Labels:


Comments:
- vercel: [vc]: #IqPWcH2O7ZvmUJv+TX4zbtV73ozRXD0nT7drL2pZQ9c=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LXJlZmFjdG9yLW92ZXJhbGwtZHgtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn0sImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1kb2NzLXYyL0Z3M3l1YW9vbldQR2NoanJEZ0o1UGNrdlhkSlciLCJwcmV2aWV3VXJsIjoibmV4dHVpLWRvY3MtdjItZ2l0LXJlZmFjdG9yLW92ZXJhbGwtZHgtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIn0seyJuYW1lIjoibmV4dHVpLXN0b3J5Ym9vay12MiIsInJvb3REaXJlY3RvcnkiOiJwYWNrYWdlcy9zdG9yeWJvb2siLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtcmVmYWN0b3Itb3ZlcmFsbC1keC1uZXh0dWktb3JnLnZlcmNlbC5hcHAifSwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi9FQkRmMVdhaTJTcGRDc3dKeW5jd1p5Rk5hMWZpIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LXJlZmFjdG9yLW92ZXJhbGwtZHgtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIn1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/Fw3yuaoonWPGchjrDgJ5PckvXdJW)) | [Visit Preview](https://nextui-docs-v2-git-refactor-overall-dx-nextui-org.vercel.app) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-refactor-overall-dx-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 28, 2024 4:32am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/EBDf1Wai2SpdCswJyncwZyFNa1fi)) | [Visit Preview](https://nextui-storybook-v2-git-refactor-overall-dx-nextui-org.vercel.app) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-refactor-overall-dx-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 28, 2024 4:32am |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: skip review by coderabbit.ai -->

> [!IMPORTANT]
> ## Review skipped
> 
> Auto reviews are disabled on base/target branches other than the default branch.
> 
> <details>
> <summary>üóÇÔ∏è Base branches to auto review (5)</summary>
> 
> * main
> * canary
> * fix/.*
> * chore/.*
> * feat/.*
> 
> </details>
> 
> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.
> 
> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.

<!-- end of auto-generated comment: skip review by coderabbit.ai -->

<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- jrgarciadev: @wingkwong please fix the conflicts\n- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: c75ee3ea8263f2f5f7a19b9de11b86919fad0ee7

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/nextui-org/nextui/new/refactor/overall-dx?filename=.changeset/little-eggs-care.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A---%0A%0Arefactor(docs)%3A%20overall%20dx%0A)

\n- wingkwong: TODO: after merging all dx PRs, I need to have a final check on Icon collapse on this branch. Hence, marking Do Not Merge here.\n

Files Changed:
- apps/docs/.eslintrc.json (modified, 4 changes)\n  Patch: @@ -22,10 +22,6 @@
     {
       "files": ["*.ts", "*.tsx"],
       "rules": {}
-    },
-    {
-      "files": ["*.js", "*.jsx"],
-      "rules": {}
     }
   ]
 }\n- apps/docs/components/docs/components/code-demo/utils.ts (modified, 4 changes)\n  Patch: @@ -1,6 +1,6 @@
 import {FileCode} from "./types";
 
-const importRegex = /^(import)\s(?!type(of\s|\s)(?!from)).*?$/gm;
+const importRegex = /^(import\s+(?!type\s+\{)[\s\S]*?;)/gm;
 
 const exportDefaultRegex = /export\s+default\s+function\s+\w+\s*\(\s*\)\s*\{/;
 
@@ -31,7 +31,7 @@ export const transformCode = (
       // replace match with const Name = () => (
       return `const ${compName} = () => {`;
     })
-    .replace("export", "");
+    .replace(/export/g, "");
 
   // add render(<App/>) to cleanedCode if has const App = () => {
   if (cleanedCode.includes(`const App = () => {`)) {\n- apps/docs/components/docs/components/codeblock.tsx (modified, 106 changes)\n  Patch: @@ -1,7 +1,13 @@
+import type {Language, PrismTheme} from "prism-react-renderer";
+import type {TransformTokensTypes} from "./helper";
+
 import React, {forwardRef, useEffect} from "react";
 import {clsx, dataAttr, getUniqueID} from "@nextui-org/shared-utils";
 import BaseHighlight, {Language, PrismTheme, defaultProps} from "prism-react-renderer";
 import {debounce, omit} from "@nextui-org/shared-utils";
+import {cn} from "@nextui-org/react";
+
+import {transformTokens} from "./helper";
 
 import defaultTheme from "@/libs/prism-theme";
 
@@ -142,21 +148,36 @@ const Codeblock = forwardRef<HTMLPreElement, CodeblockProps>(
         {...props}
       >
         {({className, style, tokens, getLineProps, getTokenProps}) => (
-          <div className="w-full" data-language={language}>
-            <pre
-              ref={ref}
-              className={clsx(className, classNameProp, "flex max-w-full", {
+          <pre
+            ref={ref}
+            className={clsx(
+              className,
+              classNameProp,
+              `language-${codeLang}`,
+              "max-w-full contents",
+              {
                 "flex-col": isMultiLine,
-                "scrollbar-hide overflow-x-scroll": hideScrollBar,
-              })}
-              style={style}
-              translate="no"
-            >
-              {tokens.map((line, i) => {
+                "overflow-x-scroll scrollbar-hide": hideScrollBar,
+              },
+            )}
+            data-language={language}
+            style={style}
+          >
+            {transformTokens(tokens).map((line) => {
+              const folderLine = line[0] as TransformTokensTypes;
+
+              const isFolder = folderLine.types?.includes("folderStart");
+
+              const renderLine = (
+                line: TransformTokensTypes[],
+                i: number,
+                as: "div" | "span" = "div",
+              ) => {
+                const Tag = as;
                 const lineProps = getLineProps({line, key: i});
 
                 return (
-                  <div
+                  <Tag
                     {...omit(lineProps, ["key"])}
                     key={`${i}-${getUniqueID("line-wrapper")}`}
                     className={clsx(
@@ -167,25 +188,48 @@ const Codeblock = forwardRef<HTMLPreElement, CodeblockProps>(
                         "px-2": showLines,
                       },
                       {
-                        "before:content-[''] before:w-full before:h-full before:absolute before:z-0 before:left-0 before:bg-gradient-to-r before:from-white/10 before:to-code-background":
-                          shouldHighlightLine(i),
+                        "before:to-code-background before:absolute before:left-0 before:z-0 before:h-full before:w-full before:bg-gradient-to-r before:from-white/10 before:content-['']":
+                          isFolder ? false : shouldHighlightLine(i),
                       },
                     )}
                     data-deleted={dataAttr(highlightStyle?.[i] === "deleted")}
                     data-inserted={dataAttr(highlightStyle?.[i] === "inserted")}
                   >
                     {showLines && (
-                      <span className="select-none text-xs mr-6 opacity-30">{i + 1}</span>
+                      <span
+                        className={cn(
+                          "mr-6 select-none text-xs opacity-30",
+                          i + 1 >= 10 ? "mr-4" : "",
+                          i + 1 >= 100 ? "mr-2" : "",
+                          i + 1 >= 1000 ? "mr-0" : "",
+                        )}
+                      >
+                        {i + 1}
+                      </span>
                     )}
+
                     {line.map((token, key) => {
-                      // Bun has no color style by default in the code block, so hack add in here
                       const props = getTokenProps({token, key}) || {};
-
-                      return (
+                      const isCopy = token.types.includes("copy");
+
+                      return isCopy ? (
+                        <span key={key} className="copy-token" style={{whiteSpace: "inherit"}}>
+                          {token.folderContent?.map((folderTokens) => {
+                            return folderTokens.map((token, index) => {
+                              // Hack for wrap line
+                              return token.content === "" ? (
+                                <div key={`${index}-${getUniqueID("line")}`} />
+                              ) : (
+                                <span key={`${index}-${getUniqueID("line")}`}>{token.content}</span>
+                              );
+                            });
+                          })}
+                        </span>
+                      ) : (
                         <span
                           {...omit(props, ["key"])}
                           key={`${key}-${getUniqueID("line")}`}
-                          className={className}
+                          className={cn(className, token.class)}
                           style={{
                             ...props.style,
                             ...(highlightStyleToken.some((t) => {
@@ -201,11 +245,29 @@ const Codeblock = forwardRef<HTMLPreElement, CodeblockProps>(
                         />
                       );
                     })}
-                  </div>
+                  </Tag>
                 );
-              })}
-            </pre>
-          </div>
+              };
+              const renderFolderTokens = (tokens: TransformTokensTypes[][]) => {
+                return tokens.map((token, key) => {
+                  const index = key + folderLine.index! + 1;
+
+                  return renderLine(token, index);
+                });
+              };
+
+              return isFolder ? (
+                <details key={`${folderLine.index}`} open={folderLine.open ? true : undefined}>
+                  <summary className="cursor-pointer">
+                    {renderLine(folderLine.summaryContent as any, folderLine.index!, "span")}
+                  </summary>
+                  {renderFolderTokens(folderLine.folderContent as any)}
+                </details>
+              ) : (
+                renderLine(line, folderLine.index!)
+              );
+            })}
+          </pre>
         )}
       </BaseHighlight>
     );\n- apps/docs/components/docs/components/helper.ts (added, 189 changes)\n  Patch: @@ -0,0 +1,189 @@
+import type Highlight from "prism-react-renderer";
+
+export type TransformTokens = Parameters<Highlight["props"]["children"]>[0]["tokens"];
+
+export type TransformTokensTypes = TransformTokens[0][0] & {
+  folderContent?: TransformTokens;
+  summaryContent?: TransformTokens[0];
+  class?: string;
+  index?: number;
+  open?: boolean;
+};
+
+const startFlag = ["{", "["];
+const endFlag = ["}", "]"];
+const specialStartFlag = ["("];
+const specialEndFlag = [")"];
+const defaultFoldFlagList = ["cn", "HTMLAttributes"];
+const defaultShowFlagList = ["Component", "forwardRef", "App"];
+
+/**
+ * Transform tokens from `prism-react-renderer` to wrap them in folder structure
+ *
+ * @example
+ * transformTokens(tokens) -> wrap tokens in folder structure
+ */
+export function transformTokens(tokens: TransformTokens, folderLine = 10) {
+  const result: TransformTokens = [];
+  let lastIndex = 0;
+  let isShowFolder = false;
+  let fold = false;
+
+  tokens.forEach((token, index) => {
+    if (index < lastIndex) {
+      return;
+    }
+
+    let startToken: TransformTokens[0][0] = null as any;
+    let mergedStartFlagList = [...startFlag];
+
+    token.forEach((t) => {
+      if (defaultFoldFlagList.some((text) => t.content.includes(text))) {
+        // If cn then need to judge whether it is import token
+        if (t.content.includes("cn") && token.some((t) => t.content === "import")) {
+          return;
+        }
+
+        // If HTMLAttributes then need to judge whether it have start flag
+        if (
+          t.content.includes("HTMLAttributes") &&
+          !token.some((t) => startFlag.includes(t.content))
+        ) {
+          return;
+        }
+
+        fold = true;
+        mergedStartFlagList.push(...specialStartFlag);
+      }
+
+      if (mergedStartFlagList.includes(t.content)) {
+        startToken = t;
+      }
+
+      if (defaultShowFlagList.some((text) => t.content.includes(text))) {
+        isShowFolder = true;
+      }
+    });
+
+    const mergedOptions = fold
+      ? {
+          specialEndFlag,
+          specialStartFlag,
+        }
+      : undefined;
+    const isFolder = checkIsFolder(token, mergedOptions);
+
+    if (isFolder && startToken) {
+      const endIndex = findEndIndex(tokens, index + 1, mergedOptions);
+
+      // Greater than or equal to folderLine then will folder otherwise it will show directly
+      if (endIndex !== -1 && (endIndex - index >= folderLine || isShowFolder || fold)) {
+        lastIndex = endIndex;
+        const folder = tokens.slice(index + 1, endIndex);
+        const endToken = tokens[endIndex];
+        const ellipsisToken: TransformTokensTypes = {
+          types: ["ellipsis"],
+          content: "",
+          class: "custom-folder ellipsis-token",
+        };
+        const copyContent: TransformTokensTypes = {
+          types: ["copy"],
+          content: "",
+          folderContent: folder,
+          class: "custom-folder copy-token",
+        };
+
+        endToken.forEach((t, _, arr) => {
+          let className = "";
+
+          className += "custom-folder";
+          if (t.content.trim() === "" && (arr.length === 3 || arr.length === 4)) {
+            // Add length check to sure it's added to } token
+            className += " empty-token";
+          }
+          (t as TransformTokensTypes).class = className;
+        });
+
+        startToken.types = ["folderStart"];
+        (startToken as TransformTokensTypes).folderContent = folder;
+        (startToken as TransformTokensTypes).summaryContent = [
+          ...token,
+          ellipsisToken,
+          copyContent,
+          ...endToken,
+        ];
+        (startToken as TransformTokensTypes).index = index;
+        if (isShowFolder && !fold) {
+          (startToken as TransformTokensTypes).open = true;
+        }
+
+        result.push([startToken]);
+
+        isShowFolder = false;
+        fold = false;
+
+        return;
+      }
+    }
+    token.forEach((t) => {
+      (t as TransformTokensTypes).index = index;
+    });
+    result.push(token);
+  });
+
+  return result;
+}
+
+interface SpecialOptions {
+  specialStartFlag?: string[];
+  specialEndFlag?: string[];
+}
+
+function checkIsFolder(
+  token: TransformTokens[0],
+  {specialStartFlag, specialEndFlag}: SpecialOptions = {},
+) {
+  const stack: string[] = [];
+  const mergedStartFlagList = specialStartFlag ? [...startFlag, ...specialStartFlag] : startFlag;
+  const mergedEndFlagList = specialEndFlag ? [...endFlag, ...specialEndFlag] : endFlag;
+
+  for (const t of token) {
+    if (mergedStartFlagList.includes(t.content)) {
+      stack.push(t.content);
+    } else if (mergedEndFlagList.includes(t.content)) {
+      stack.pop();
+    }
+  }
+
+  return stack.length !== 0;
+}
+
+function findEndIndex(
+  tokens: TransformTokens,
+  startIndex: number,
+  {specialStartFlag, specialEndFlag}: SpecialOptions = {},
+) {
+  const stack: string[] = ["flag"];
+  const mergedStartFlagList = specialStartFlag ? [...startFlag, ...specialStartFlag] : startFlag;
+  const mergedEndFlagList = specialEndFlag ? [...endFlag, ...specialEndFlag] : endFlag;
+
+  for (let i = startIndex; i < tokens.length; i++) {
+    const token = tokens[i];
+
+    for (const line of token) {
+      const transformLine = line.content.replace(/\$/g, "");
+
+      if (mergedStartFlagList.includes(transformLine)) {
+        stack.push("flag");
+      } else if (mergedEndFlagList.includes(transformLine)) {
+        stack.pop();
+      }
+
+      if (stack.length === 0) {
+        return i;
+      }
+    }
+  }
+
+  return -1;
+}\n- apps/docs/components/mdx-components.tsx (modified, 7 changes)\n  Patch: @@ -153,7 +153,12 @@ const Code = ({
         });
       }}
     >
-      <Codeblock codeString={codeString} language={language} metastring={meta} />
+      <Codeblock
+        className="sp-editor"
+        codeString={codeString}
+        language={language}
+        metastring={meta}
+      />
     </Components.Snippet>
   );
 };\n- apps/docs/content/components/accordion/custom-styles.raw.jsx (modified, 368 changes)\n  Patch: @@ -1,188 +1,196 @@
 import {Accordion, AccordionItem} from "@nextui-org/react";
 
-const MonitorMobileIcon = (props) => (
-  <svg
-    aria-hidden="true"
-    fill="none"
-    focusable="false"
-    height="24"
-    role="presentation"
-    viewBox="0 0 24 24"
-    width="24"
-    {...props}
-  >
-    <path
-      d="M10 16.95H6.21C2.84 16.95 2 16.11 2 12.74V6.74003C2 3.37003 2.84 2.53003 6.21 2.53003H16.74C20.11 2.53003 20.95 3.37003 20.95 6.74003"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="1.5"
-    />
-    <path
-      d="M10 21.4699V16.95"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="1.5"
-    />
-    <path
-      d="M2 12.95H10"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="1.5"
-    />
-    <path
-      d="M6.73999 21.47H9.99999"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="1.5"
-    />
-    <path
-      d="M22 12.8V18.51C22 20.88 21.41 21.47 19.04 21.47H15.49C13.12 21.47 12.53 20.88 12.53 18.51V12.8C12.53 10.43 13.12 9.83997 15.49 9.83997H19.04C21.41 9.83997 22 10.43 22 12.8Z"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="1.5"
-    />
-    <path
-      d="M17.2445 18.25H17.2535"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="2"
-    />
-  </svg>
-);
+const MonitorMobileIcon = (props) => {
+  return (
+    <svg
+      aria-hidden="true"
+      fill="none"
+      focusable="false"
+      height="24"
+      role="presentation"
+      viewBox="0 0 24 24"
+      width="24"
+      {...props}
+    >
+      <path
+        d="M10 16.95H6.21C2.84 16.95 2 16.11 2 12.74V6.74003C2 3.37003 2.84 2.53003 6.21 2.53003H16.74C20.11 2.53003 20.95 3.37003 20.95 6.74003"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="1.5"
+      />
+      <path
+        d="M10 21.4699V16.95"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="1.5"
+      />
+      <path
+        d="M2 12.95H10"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="1.5"
+      />
+      <path
+        d="M6.73999 21.47H9.99999"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="1.5"
+      />
+      <path
+        d="M22 12.8V18.51C22 20.88 21.41 21.47 19.04 21.47H15.49C13.12 21.47 12.53 20.88 12.53 18.51V12.8C12.53 10.43 13.12 9.83997 15.49 9.83997H19.04C21.41 9.83997 22 10.43 22 12.8Z"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="1.5"
+      />
+      <path
+        d="M17.2445 18.25H17.2535"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="2"
+      />
+    </svg>
+  );
+};
 
-const ShieldSecurityIcon = (props) => (
-  <svg
-    aria-hidden="true"
-    fill="none"
-    focusable="false"
-    height="24"
-    role="presentation"
-    viewBox="0 0 24 24"
-    width="24"
-    {...props}
-  >
-    <path
-      d="M10.49 2.23006L5.49997 4.11006C4.34997 4.54006 3.40997 5.90006 3.40997 7.12006V14.5501C3.40997 15.7301 4.18997 17.2801 5.13997 17.9901L9.43997 21.2001C10.85 22.2601 13.17 22.2601 14.58 21.2001L18.88 17.9901C19.83 17.2801 20.61 15.7301 20.61 14.5501V7.12006C20.61 5.89006 19.67 4.53006 18.52 4.10006L13.53 2.23006C12.68 1.92006 11.32 1.92006 10.49 2.23006Z"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="1.5"
-    />
-    <path
-      d="M12 12.5C13.1046 12.5 14 11.6046 14 10.5C14 9.39543 13.1046 8.5 12 8.5C10.8954 8.5 10 9.39543 10 10.5C10 11.6046 10.8954 12.5 12 12.5Z"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeMiterlimit="10"
-      strokeWidth="1.5"
-    />
-    <path
-      d="M12 12.5V15.5"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeMiterlimit="10"
-      strokeWidth="1.5"
-    />
-  </svg>
-);
+const ShieldSecurityIcon = (props) => {
+  return (
+    <svg
+      aria-hidden="true"
+      fill="none"
+      focusable="false"
+      height="24"
+      role="presentation"
+      viewBox="0 0 24 24"
+      width="24"
+      {...props}
+    >
+      <path
+        d="M10.49 2.23006L5.49997 4.11006C4.34997 4.54006 3.40997 5.90006 3.40997 7.12006V14.5501C3.40997 15.7301 4.18997 17.2801 5.13997 17.9901L9.43997 21.2001C10.85 22.2601 13.17 22.2601 14.58 21.2001L18.88 17.9901C19.83 17.2801 20.61 15.7301 20.61 14.5501V7.12006C20.61 5.89006 19.67 4.53006 18.52 4.10006L13.53 2.23006C12.68 1.92006 11.32 1.92006 10.49 2.23006Z"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="1.5"
+      />
+      <path
+        d="M12 12.5C13.1046 12.5 14 11.6046 14 10.5C14 9.39543 13.1046 8.5 12 8.5C10.8954 8.5 10 9.39543 10 10.5C10 11.6046 10.8954 12.5 12 12.5Z"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeMiterlimit="10"
+        strokeWidth="1.5"
+      />
+      <path
+        d="M12 12.5V15.5"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeMiterlimit="10"
+        strokeWidth="1.5"
+      />
+    </svg>
+  );
+};
 
-const InfoIcon = (props) => (
-  <svg
-    aria-hidden="true"
-    fill="none"
-    focusable="false"
-    height="24"
-    role="presentation"
-    viewBox="0 0 24 24"
-    width="24"
-    {...props}
-  >
-    <path
-      d="M12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22Z"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="1.5"
-    />
-    <path
-      d="M12 8V13"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="1.5"
-    />
-    <path
-      d="M11.9945 16H12.0035"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="2"
-    />
-  </svg>
-);
+const InfoIcon = (props) => {
+  return (
+    <svg
+      aria-hidden="true"
+      fill="none"
+      focusable="false"
+      height="24"
+      role="presentation"
+      viewBox="0 0 24 24"
+      width="24"
+      {...props}
+    >
+      <path
+        d="M12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22Z"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="1.5"
+      />
+      <path
+        d="M12 8V13"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="1.5"
+      />
+      <path
+        d="M11.9945 16H12.0035"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="2"
+      />
+    </svg>
+  );
+};
 
-const InvalidCardIcon = (props) => (
-  <svg
-    aria-hidden="true"
-    fill="none"
-    focusable="false"
-    height="24"
-    role="presentation"
-    viewBox="0 0 24 24"
-    width="24"
-    {...props}
-  >
-    <path
-      d="M10 16.95H6.21C2.84 16.95 2 16.11 2 12.74V6.74003C2 3.37003 2.84 2.53003 6.21 2.53003H16.74C20.11 2.53003 20.95 3.37003 20.95 6.74003"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="1.5"
-    />
-    <path
-      d="M10 21.4699V16.95"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="1.5"
-    />
-    <path
-      d="M2 12.95H10"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="1.5"
-    />
-    <path
-      d="M6.73999 21.47H9.99999"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="1.5"
-    />
-    <path
-      d="M22 12.8V18.51C22 20.88 21.41 21.47 19.04 21.47H15.49C13.12 21.47 12.53 20.88 12.53 18.51V12.8C12.53 10.43 13.12 9.83997 15.49 9.83997H19.04C21.41 9.83997 22 10.43 22 12.8Z"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="1.5"
-    />
-    <path
-      d="M17.2445 18.25H17.2535"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="2"
-    />
-  </svg>
-);
+const InvalidCardIcon = (props) => {
+  return (
+    <svg
+      aria-hidden="true"
+      fill="none"
+      focusable="false"
+      height="24"
+      role="presentation"
+      viewBox="0 0 24 24"
+      width="24"
+      {...props}
+    >
+      <path
+        d="M10 16.95H6.21C2.84 16.95 2 16.11 2 12.74V6.74003C2 3.37003 2.84 2.53003 6.21 2.53003H16.74C20.11 2.53003 20.95 3.37003 20.95 6.74003"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="1.5"
+      />
+      <path
+        d="M10 21.4699V16.95"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="1.5"
+      />
+      <path
+        d="M2 12.95H10"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="1.5"
+      />
+      <path
+        d="M6.73999 21.47H9.99999"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="1.5"
+      />
+      <path
+        d="M22 12.8V18.51C22 20.88 21.41 21.47 19.04 21.47H15.49C13.12 21.47 12.53 20.88 12.53 18.51V12.8C12.53 10.43 13.12 9.83997 15.49 9.83997H19.04C21.41 9.83997 22 10.43 22 12.8Z"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="1.5"
+      />
+      <path
+        d="M17.2445 18.25H17.2535"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="2"
+      />
+    </svg>
+  );
+};
 
 export default function App() {
   const itemClasses = {\n- apps/docs/content/components/accordion/indicator-function.raw.jsx (modified, 146 changes)\n  Patch: @@ -1,77 +1,83 @@
 import {Accordion, AccordionItem} from "@nextui-org/react";
 
-const AnchorIcon = (props) => (
-  <svg
-    aria-hidden="true"
-    focusable="false"
-    height="24"
-    role="presentation"
-    viewBox="0 0 24 24"
-    width="24"
-    {...props}
-  >
-    <path
-      d="M8.465,11.293c1.133-1.133,3.109-1.133,4.242,0L13.414,12l1.414-1.414l-0.707-0.707c-0.943-0.944-2.199-1.465-3.535-1.465 S7.994,8.935,7.051,9.879L4.929,12c-1.948,1.949-1.948,5.122,0,7.071c0.975,0.975,2.255,1.462,3.535,1.462 c1.281,0,2.562-0.487,3.536-1.462l0.707-0.707l-1.414-1.414l-0.707,0.707c-1.17,1.167-3.073,1.169-4.243,0 c-1.169-1.17-1.169-3.073,0-4.243L8.465,11.293z"
-      fill="currentColor"
-    />
-    <path
-      d="M12,4.929l-0.707,0.707l1.414,1.414l0.707-0.707c1.169-1.167,3.072-1.169,4.243,0c1.169,1.17,1.169,3.073,0,4.243 l-2.122,2.121c-1.133,1.133-3.109,1.133-4.242,0L10.586,12l-1.414,1.414l0.707,0.707c0.943,0.944,2.199,1.465,3.535,1.465 s2.592-0.521,3.535-1.465L19.071,12c1.948-1.949,1.948-5.122,0-7.071C17.121,2.979,13.948,2.98,12,4.929z"
-      fill="currentColor"
-    />
-  </svg>
-);
+const AnchorIcon = (props) => {
+  return (
+    <svg
+      aria-hidden="true"
+      focusable="false"
+      height="24"
+      role="presentation"
+      viewBox="0 0 24 24"
+      width="24"
+      {...props}
+    >
+      <path
+        d="M8.465,11.293c1.133-1.133,3.109-1.133,4.242,0L13.414,12l1.414-1.414l-0.707-0.707c-0.943-0.944-2.199-1.465-3.535-1.465 S7.994,8.935,7.051,9.879L4.929,12c-1.948,1.949-1.948,5.122,0,7.071c0.975,0.975,2.255,1.462,3.535,1.462 c1.281,0,2.562-0.487,3.536-1.462l0.707-0.707l-1.414-1.414l-0.707,0.707c-1.17,1.167-3.073,1.169-4.243,0 c-1.169-1.17-1.169-3.073,0-4.243L8.465,11.293z"
+        fill="currentColor"
+      />
+      <path
+        d="M12,4.929l-0.707,0.707l1.414,1.414l0.707-0.707c1.169-1.167,3.072-1.169,4.243,0c1.169,1.17,1.169,3.073,0,4.243 l-2.122,2.121c-1.133,1.133-3.109,1.133-4.242,0L10.586,12l-1.414,1.414l0.707,0.707c0.943,0.944,2.199,1.465,3.535,1.465 s2.592-0.521,3.535-1.465L19.071,12c1.948-1.949,1.948-5.122,0-7.071C17.121,2.979,13.948,2.98,12,4.929z"
+        fill="currentColor"
+      />
+    </svg>
+  );
+};
 
-const MoonIcon = (props) => (
-  <svg
-    aria-hidden="true"
-    focusable="false"
-    height="24"
-    role="presentation"
-    viewBox="0 0 512 512"
-    width="24"
-    {...props}
-  >
-    <path
-      d="M160 136c0-30.62 4.51-61.61 16-88C99.57 81.27 48 159.32 48 248c0 119.29 96.71 216 216 216 88.68 0 166.73-51.57 200-128-26.39 11.49-57.38 16-88 16-119.29 0-216-96.71-216-216z"
-      fill="none"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth={32}
-    />
-  </svg>
-);
+const MoonIcon = (props) => {
+  return (
+    <svg
+      aria-hidden="true"
+      focusable="false"
+      height="24"
+      role="presentation"
+      viewBox="0 0 512 512"
+      width="24"
+      {...props}
+    >
+      <path
+        d="M160 136c0-30.62 4.51-61.61 16-88C99.57 81.27 48 159.32 48 248c0 119.29 96.71 216 216 216 88.68 0 166.73-51.57 200-128-26.39 11.49-57.38 16-88 16-119.29 0-216-96.71-216-216z"
+        fill="none"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth={32}
+      />
+    </svg>
+  );
+};
 
-const SunIcon = (props) => (
-  <svg
-    aria-hidden="true"
-    focusable="false"
-    height="24"
-    role="presentation"
-    viewBox="0 0 512 512"
-    width="24"
-    {...props}
-  >
-    <path
-      d="M256 48v48M256 416v48M403.08 108.92l-33.94 33.94M142.86 369.14l-33.94 33.94M464 256h-48M96 256H48M403.08 403.08l-33.94-33.94M142.86 142.86l-33.94-33.94"
-      fill="none"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeMiterlimit={10}
-      strokeWidth={32}
-    />
-    <circle
-      cx={256}
-      cy={256}
-      fill="none"
-      r={80}
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeMiterlimit={10}
-      strokeWidth={32}
-    />
-  </svg>
-);
+const SunIcon = (props) => {
+  return (
+    <svg
+      aria-hidden="true"
+      focusable="false"
+      height="24"
+      role="presentation"
+      viewBox="0 0 512 512"
+      width="24"
+      {...props}
+    >
+      <path
+        d="M256 48v48M256 416v48M403.08 108.92l-33.94 33.94M142.86 369.14l-33.94 33.94M464 256h-48M96 256H48M403.08 403.08l-33.94-33.94M142.86 142.86l-33.94-33.94"
+        fill="none"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeMiterlimit={10}
+        strokeWidth={32}
+      />
+      <circle
+        cx={256}
+        cy={256}
+        fill="none"
+        r={80}
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeMiterlimit={10}
+        strokeWidth={32}
+      />
+    </svg>
+  );
+};
 
 export default function App() {
   const defaultContent =\n- apps/docs/content/components/accordion/indicator.raw.jsx (modified, 146 changes)\n  Patch: @@ -1,77 +1,83 @@
 import {Accordion, AccordionItem} from "@nextui-org/react";
 
-const AnchorIcon = (props) => (
-  <svg
-    aria-hidden="true"
-    focusable="false"
-    height="24"
-    role="presentation"
-    viewBox="0 0 24 24"
-    width="24"
-    {...props}
-  >
-    <path
-      d="M8.465,11.293c1.133-1.133,3.109-1.133,4.242,0L13.414,12l1.414-1.414l-0.707-0.707c-0.943-0.944-2.199-1.465-3.535-1.465 S7.994,8.935,7.051,9.879L4.929,12c-1.948,1.949-1.948,5.122,0,7.071c0.975,0.975,2.255,1.462,3.535,1.462 c1.281,0,2.562-0.487,3.536-1.462l0.707-0.707l-1.414-1.414l-0.707,0.707c-1.17,1.167-3.073,1.169-4.243,0 c-1.169-1.17-1.169-3.073,0-4.243L8.465,11.293z"
-      fill="currentColor"
-    />
-    <path
-      d="M12,4.929l-0.707,0.707l1.414,1.414l0.707-0.707c1.169-1.167,3.072-1.169,4.243,0c1.169,1.17,1.169,3.073,0,4.243 l-2.122,2.121c-1.133,1.133-3.109,1.133-4.242,0L10.586,12l-1.414,1.414l0.707,0.707c0.943,0.944,2.199,1.465,3.535,1.465 s2.592-0.521,3.535-1.465L19.071,12c1.948-1.949,1.948-5.122,0-7.071C17.121,2.979,13.948,2.98,12,4.929z"
-      fill="currentColor"
-    />
-  </svg>
-);
+const AnchorIcon = (props) => {
+  return (
+    <svg
+      aria-hidden="true"
+      focusable="false"
+      height="24"
+      role="presentation"
+      viewBox="0 0 24 24"
+      width="24"
+      {...props}
+    >
+      <path
+        d="M8.465,11.293c1.133-1.133,3.109-1.133,4.242,0L13.414,12l1.414-1.414l-0.707-0.707c-0.943-0.944-2.199-1.465-3.535-1.465 S7.994,8.935,7.051,9.879L4.929,12c-1.948,1.949-1.948,5.122,0,7.071c0.975,0.975,2.255,1.462,3.535,1.462 c1.281,0,2.562-0.487,3.536-1.462l0.707-0.707l-1.414-1.414l-0.707,0.707c-1.17,1.167-3.073,1.169-4.243,0 c-1.169-1.17-1.169-3.073,0-4.243L8.465,11.293z"
+        fill="currentColor"
+      />
+      <path
+        d="M12,4.929l-0.707,0.707l1.414,1.414l0.707-0.707c1.169-1.167,3.072-1.169,4.243,0c1.169,1.17,1.169,3.073,0,4.243 l-2.122,2.121c-1.133,1.133-3.109,1.133-4.242,0L10.586,12l-1.414,1.414l0.707,0.707c0.943,0.944,2.199,1.465,3.535,1.465 s2.592-0.521,3.535-1.465L19.071,12c1.948-1.949,1.948-5.122,0-7.071C17.121,2.979,13.948,2.98,12,4.929z"
+        fill="currentColor"
+      />
+    </svg>
+  );
+};
 
-const MoonIcon = (props) => (
-  <svg
-    aria-hidden="true"
-    focusable="false"
-    height="24"
-    role="presentation"
-    viewBox="0 0 512 512"
-    width="24"
-    {...props}
-  >
-    <path
-      d="M160 136c0-30.62 4.51-61.61 16-88C99.57 81.27 48 159.32 48 248c0 119.29 96.71 216 216 216 88.68 0 166.73-51.57 200-128-26.39 11.49-57.38 16-88 16-119.29 0-216-96.71-216-216z"
-      fill="none"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth={32}
-    />
-  </svg>
-);
+const MoonIcon = (props) => {
+  return (
+    <svg
+      aria-hidden="true"
+      focusable="false"
+      height="24"
+      role="presentation"
+      viewBox="0 0 512 512"
+      width="24"
+      {...props}
+    >
+      <path
+        d="M160 136c0-30.62 4.51-61.61 16-88C99.57 81.27 48 159.32 48 248c0 119.29 96.71 216 216 216 88.68 0 166.73-51.57 200-128-26.39 11.49-57.38 16-88 16-119.29 0-216-96.71-216-216z"
+        fill="none"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth={32}
+      />
+    </svg>
+  );
+};
 
-const SunIcon = (props) => (
-  <svg
-    aria-hidden="true"
-    focusable="false"
-    height="24"
-    role="presentation"
-    viewBox="0 0 512 512"
-    width="24"
-    {...props}
-  >
-    <path
-      d="M256 48v48M256 416v48M403.08 108.92l-33.94 33.94M142.86 369.14l-33.94 33.94M464 256h-48M96 256H48M403.08 403.08l-33.94-33.94M142.86 142.86l-33.94-33.94"
-      fill="none"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeMiterlimit={10}
-      strokeWidth={32}
-    />
-    <circle
-      cx={256}
-      cy={256}
-      fill="none"
-      r={80}
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeMiterlimit={10}
-      strokeWidth={32}
-    />
-  </svg>
-);
+const SunIcon = (props) => {
+  return (
+    <svg
+      aria-hidden="true"
+      focusable="false"
+      height="24"
+      role="presentation"
+      viewBox="0 0 512 512"
+      width="24"
+      {...props}
+    >
+      <path
+        d="M256 48v48M256 416v48M403.08 108.92l-33.94 33.94M142.86 369.14l-33.94 33.94M464 256h-48M96 256H48M403.08 403.08l-33.94-33.94M142.86 142.86l-33.94-33.94"
+        fill="none"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeMiterlimit={10}
+        strokeWidth={32}
+      />
+      <circle
+        cx={256}
+        cy={256}
+        fill="none"
+        r={80}
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeMiterlimit={10}
+        strokeWidth={32}
+      />
+    </svg>
+  );
+};
 
 export default function App() {
   const defaultContent =\n- apps/docs/content/components/alert/colors.raw.jsx (added, 15 changes)\n  Patch: @@ -0,0 +1,15 @@
+import {Alert} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex items-center justify-center w-full">
+      <div className="flex flex-col w-full">
+        {["default", "primary", "secondary", "success", "warning", "danger"].map((color) => (
+          <div key={color} className="w-full flex items-center my-3">
+            <Alert color={color} title={`This is a ${color} alert`} />
+          </div>
+        ))}
+      </div>
+    </div>
+  );
+}\n- apps/docs/content/components/alert/colors.ts (modified, 19 changes)\n  Patch: @@ -1,21 +1,4 @@
-const App = `import {Alert} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <div className="flex items-center justify-center w-full">
-      <div className="flex flex-col w-full">
-        {["default", "primary", "secondary", "success", "warning", "danger"].map((color) => (
-          <div key={color} className="w-full flex items-center my-3">
-            <Alert 
-              color={color} 
-              title={\`This is a \${color} alert\`}
-            />
-          </div>
-        ))}
-      </div>
-    </div>
-  );
-}`;
+import App from "./colors.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/alert/controlled.raw.jsx (added, 28 changes)\n  Patch: @@ -0,0 +1,28 @@
+import {Alert, Button} from "@nextui-org/react";
+
+export default function App() {
+  const [isVisible, setIsVisible] = React.useState(true);
+
+  const title = "Success Notification";
+  const description =
+    "Your action has been completed successfully. We'll notify you when updates are available.";
+
+  return (
+    <div className="flex flex-col gap-4">
+      {isVisible ? (
+        <Alert
+          color="success"
+          description={description}
+          isVisible={isVisible}
+          title={title}
+          variant="faded"
+          onClose={() => setIsVisible(false)}
+        />
+      ) : (
+        <Button variant="bordered" onPress={() => setIsVisible(true)}>
+          Show Alert
+        </Button>
+      )}
+    </div>
+  );
+}\n- apps/docs/content/components/alert/controlled.ts (modified, 31 changes)\n  Patch: @@ -1,33 +1,4 @@
-const App = `import {Alert, Button} from "@nextui-org/react";
-
-export default function App() {
-  const [isVisible, setIsVisible] = React.useState(true);
-
-  const title = "Success Notification";
-  const description = "Your action has been completed successfully. We'll notify you when updates are available.";
-
-  return (
-    <div className="flex flex-col gap-4">
-      {isVisible ? (
-        <Alert 
-          title={title}
-          description={description}
-          isVisible={isVisible} 
-          variant="faded"
-          color="success"
-          onClose={() => setIsVisible(false)}
-        />
-      ) : (
-        <Button 
-          variant="bordered" 
-          onPress={() => setIsVisible(true)}
-        >
-          Show Alert
-        </Button>
-      )}
-    </div>
-  );
-}`;
+import App from "./controlled.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/alert/custom-impl.raw.jsx (added, 124 changes)\n  Patch: @@ -0,0 +1,124 @@
+import React, {forwardRef, useMemo} from "react";
+import {useAlert} from "@nextui-org/react";
+
+export const InfoCircleIcon = (props) => {
+  return (
+    <svg
+      fill="none"
+      height="24"
+      viewBox="0 0 24 24"
+      width="24"
+      xmlns="http://www.w3.org/2000/svg"
+      {...props}
+    >
+      <path d="M12 22C17.51 22 22 17.51 22 12C22 6.49 17.51 2 12 2C6.49 2 2 6.49 2 12C2 17.51 6.49 22 12 22ZM12.75 16C12.75 16.41 12.41 16.75 12 16.75C11.59 16.75 11.25 16.41 11.25 16L11.25 11C11.25 10.59 11.59 10.25 12 10.25C12.41 10.25 12.75 10.59 12.75 11L12.75 16ZM11.08 7.62C11.13 7.49 11.2 7.39 11.29 7.29C11.39 7.2 11.5 7.13 11.62 7.08C11.74 7.03 11.87 7 12 7C12.13 7 12.26 7.03 12.38 7.08C12.5 7.13 12.61 7.2 12.71 7.29C12.8 7.39 12.87 7.49 12.92 7.62C12.97 7.74 13 7.87 13 8C13 8.13 12.97 8.26 12.92 8.38C12.87 8.5 12.8 8.61 12.71 8.71C12.61 8.8 12.5 8.87 12.38 8.92C12.14 9.02 11.86 9.02 11.62 8.92C11.5 8.87 11.39 8.8 11.29 8.71C11.2 8.61 11.13 8.5 11.08 8.38C11.03 8.26 11 8.13 11 8C11 7.87 11.03 7.74 11.08 7.62Z" />
+    </svg>
+  );
+};
+
+export const CloseIcon = (props) => {
+  return (
+    <svg
+      aria-hidden="true"
+      fill="none"
+      focusable="false"
+      height="1em"
+      role="presentation"
+      stroke="currentColor"
+      strokeLinecap="round"
+      strokeLinejoin="round"
+      strokeWidth={2}
+      viewBox="0 0 24 24"
+      width="1em"
+      {...props}
+    >
+      <path d="M18 6L6 18M6 6l12 12" />
+    </svg>
+  );
+};
+
+const styles = {
+  base: [
+    "bg-slate-100",
+    "border",
+    "shadow",
+    "hover:bg-slate-200",
+    "focus-within:!bg-slate-100",
+    "dark:bg-slate-900",
+    "dark:hover:bg-slate-800",
+    "dark:border-slate-800",
+    "dark:focus-within:!bg-slate-900",
+    "cursor-pointer",
+  ],
+  title: ["text-base", "text-slate-500", "font-bold"],
+  description: ["text-base", "text-slate-500"],
+};
+
+const MyAlert = forwardRef((props, ref) => {
+  const {
+    title,
+    description,
+    isClosable,
+    domRef,
+    handleClose,
+    getBaseProps,
+    getMainWrapperProps,
+    getDescriptionProps,
+    getTitleProps,
+    getCloseButtonProps,
+    color,
+    isVisible,
+    onClose,
+    getAlertIconProps,
+  } = useAlert({
+    ...props,
+    ref,
+    // this is just for the example, the props bellow should be passed by the parent component
+    title: "Email Sent!!",
+    description: "You will get a reply soon",
+    // custom styles
+    classNames: {
+      ...styles,
+    },
+  });
+
+  const mainWrapper = useMemo(() => {
+    return (
+      <div {...getMainWrapperProps()}>
+        {title && <div {...getTitleProps()}>{title}</div>}
+        <div {...getDescriptionProps()}>{description}</div>
+      </div>
+    );
+  }, [title, description, getMainWrapperProps, getTitleProps, getDescriptionProps]);
+
+  const baseWrapper = useMemo(() => {
+    return isVisible ? (
+      <div ref={domRef} {...getBaseProps()}>
+        <InfoCircleIcon {...getAlertIconProps()} />
+        {mainWrapper}
+        {(isClosable || onClose) && (
+          <button onClick={handleClose} {...getCloseButtonProps()}>
+            <CloseIcon />
+          </button>
+        )}
+      </div>
+    ) : null;
+  }, [
+    mainWrapper,
+    isClosable,
+    getCloseButtonProps,
+    isVisible,
+    domRef,
+    getBaseProps,
+    handleClose,
+    color,
+    onClose,
+    getAlertIconProps,
+  ]);
+
+  return <>{baseWrapper}</>;
+});
+
+MyAlert.displayName = "MyAlert";
+
+export default MyAlert;\n- apps/docs/content/components/alert/custom-impl.ts (modified, 135 changes)\n  Patch: @@ -1,140 +1,7 @@
-const InfoCircleIcon = `export const InfoCircleIcon = (props) => (
-  <svg
-    fill="none"
-    height="24"
-    viewBox="0 0 24 24"
-    width="24"
-    xmlns="http://www.w3.org/2000/svg"
-    {...props}
-  >
-    <path
-      d="M12 22C17.51 22 22 17.51 22 12C22 6.49 17.51 2 12 2C6.49 2 2 6.49 2 12C2 17.51 6.49 22 12 22ZM12.75 16C12.75 16.41 12.41 16.75 12 16.75C11.59 16.75 11.25 16.41 11.25 16L11.25 11C11.25 10.59 11.59 10.25 12 10.25C12.41 10.25 12.75 10.59 12.75 11L12.75 16ZM11.08 7.62C11.13 7.49 11.2 7.39 11.29 7.29C11.39 7.2 11.5 7.13 11.62 7.08C11.74 7.03 11.87 7 12 7C12.13 7 12.26 7.03 12.38 7.08C12.5 7.13 12.61 7.2 12.71 7.29C12.8 7.39 12.87 7.49 12.92 7.62C12.97 7.74 13 7.87 13 8C13 8.13 12.97 8.26 12.92 8.38C12.87 8.5 12.8 8.61 12.71 8.71C12.61 8.8 12.5 8.87 12.38 8.92C12.14 9.02 11.86 9.02 11.62 8.92C11.5 8.87 11.39 8.8 11.29 8.71C11.2 8.61 11.13 8.5 11.08 8.38C11.03 8.26 11 8.13 11 8C11 7.87 11.03 7.74 11.08 7.62Z"
-    />
-  </svg>
-);`;
-
-const CloseIcon = `export const CloseIcon = (props) => (
-  <svg
-    aria-hidden="true"
-    fill="none"
-    focusable="false"
-    height="1em"
-    role="presentation"
-    stroke="currentColor"
-    strokeLinecap="round"
-    strokeLinejoin="round"
-    strokeWidth={2}
-    viewBox="0 0 24 24"
-    width="1em"
-    {...props}
-  >
-    <path d="M18 6L6 18M6 6l12 12" />
-  </svg>
-);`;
-
-const App = `import React, {forwardRef, useMemo} from "react";
-import {useAlert} from "@nextui-org/react";
-import {InfoCircleIcon} from "./InfoCircleIcon";
-import {CloseIcon} from "./CloseIcon"
-
-const styles = {
-  base: [
-    "bg-slate-100",
-    "border",
-    "shadow",
-    "hover:bg-slate-200",
-    "focus-within:!bg-slate-100",
-    "dark:bg-slate-900",
-    "dark:hover:bg-slate-800",
-    "dark:border-slate-800",
-    "dark:focus-within:!bg-slate-900",
-    "cursor-pointer"
-  ],
-  title: [
-    "text-base",
-    "text-slate-500",
-    "font-bold"
-  ],
-  description: [
-    "text-base",
-    "text-slate-500",
-  ],
-}
-
-const MyAlert = forwardRef((props, ref) => {
-  const {
-    title,
-    description,
-    isClosable,
-    domRef,
-    handleClose,
-    getBaseProps,
-    getMainWrapperProps,
-    getDescriptionProps,
-    getTitleProps,
-    getCloseButtonProps,
-    color,
-    isVisible,
-    onClose,
-    getCloseIconProps,
-    getAlertIconProps,
-  } = useAlert({
-      ...props,
-      ref,
-      // this is just for the example, the props bellow should be passed by the parent component
-      title: "Email Sent!!",
-      description: "You will get a reply soon",
-      // custom styles
-      classNames: {
-        ...styles,
-      },
-    });
-
-  const mainWrapper = useMemo(() => {
-    return (
-      <div {...getMainWrapperProps()}>
-        {title && <div {...getTitleProps()}>{title}</div>}
-        <div {...getDescriptionProps()}>{description}</div>
-      </div>
-    );
-  }, [title, description, getMainWrapperProps, getTitleProps, getDescriptionProps]);
-
-  const baseWrapper = useMemo(() => {
-    return isVisible ? (
-      <div ref={domRef} {...getBaseProps()}>
-        <InfoCircleIcon {...getAlertIconProps()} />
-        {mainWrapper}
-        {(isClosable || onClose) && (
-          <button onClick={handleClose} {...getCloseButtonProps()}>
-            <CloseIcon />
-          </button>
-        )}
-      </div>
-    ) : null;
-  }, [
-    mainWrapper,
-    isClosable,
-    getCloseButtonProps,
-    isVisible,
-    domRef,
-    getBaseProps,
-    handleClose,
-    color,
-    onClose,
-    getAlertIconProps,
-  ]);
-
-  return <>{baseWrapper}</>;
-});
-
-MyAlert.displayName = "MyAlert";
-
-export default MyAlert;`;
+import App from "./custom-impl.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,
-  "/InfoCircleIcon": InfoCircleIcon,
-  "/CloseIcon": CloseIcon,
 };
 
 export default {\n- apps/docs/content/components/alert/custom-styles.raw.jsx (added, 91 changes)\n  Patch: @@ -0,0 +1,91 @@
+import {Alert, Button} from "@nextui-org/react";
+
+const CustomAlert = React.forwardRef(
+  (
+    {title, children, variant = "faded", color = "secondary", className, classNames = {}, ...props},
+    ref,
+  ) => {
+    const colorClass = React.useMemo(() => {
+      switch (color) {
+        case "default":
+          return "before:bg-default-300";
+        case "primary":
+          return "before:bg-primary";
+        case "secondary":
+          return "before:bg-secondary";
+        case "success":
+          return "before:bg-success";
+        case "warning":
+          return "before:bg-warning";
+        case "danger":
+          return "before:bg-danger";
+        default:
+          return "before:bg-default-200";
+      }
+    }, []);
+
+    return (
+      <Alert
+        ref={ref}
+        classNames={{
+          ...classNames,
+          base: cn(
+            [
+              "bg-default-50 dark:bg-background shadow-sm",
+              "border-1 border-default-200 dark:border-default-100",
+              "relative before:content-[''] before:absolute before:z-10",
+              "before:left-0 before:top-[-1px] before:bottom-[-1px] before:w-1",
+              "rounded-l-none border-l-0",
+              colorClass,
+            ],
+            classNames.base,
+            className,
+          ),
+          mainWrapper: cn("pt-1", classNames.mainWrapper),
+          iconWrapper: cn("dark:bg-transparent", classNames.iconWrapper),
+        }}
+        color={color}
+        title={title}
+        variant={variant}
+        {...props}
+      >
+        {children}
+      </Alert>
+    );
+  },
+);
+
+CustomAlert.displayName = "CustomAlert";
+
+export default function App() {
+  const colors = ["default", "primary", "secondary", "success", "warning", "danger"];
+
+  return (
+    <div className="flex flex-col w-full gap-y-6">
+      {colors.map((color) => (
+        <CustomAlert
+          key={color}
+          color={color}
+          title="The documents you requested are ready to be viewed"
+        >
+          <div className="flex items-center gap-1 mt-3">
+            <Button
+              className="bg-background text-default-700 font-medium border-1 shadow-small"
+              size="sm"
+              variant="bordered"
+            >
+              View documents
+            </Button>
+            <Button
+              className="text-default-500 font-medium underline underline-offset-4"
+              size="sm"
+              variant="light"
+            >
+              Maybe later
+            </Button>
+          </div>
+        </CustomAlert>
+      ))}
+    </div>
+  );
+}\n- apps/docs/content/components/alert/custom-styles.raw.tsx (added, 94 changes)\n  Patch: @@ -0,0 +1,94 @@
+import type {AlertProps} from "@nextui-org/react";
+
+import React from "react";
+import {Alert, Button, cn} from "@nextui-org/react";
+
+const CustomAlert = React.forwardRef<HTMLDivElement, AlertProps>(
+  (
+    {title, children, variant = "faded", color = "secondary", className, classNames, ...props},
+    ref,
+  ) => {
+    const colorClass = React.useMemo(() => {
+      switch (color) {
+        case "default":
+          return "before:bg-default-300";
+        case "primary":
+          return "before:bg-primary";
+        case "secondary":
+          return "before:bg-secondary";
+        case "success":
+          return "before:bg-success";
+        case "warning":
+          return "before:bg-warning";
+        case "danger":
+          return "before:bg-danger";
+        default:
+          return "before:bg-default-200";
+      }
+    }, []);
+
+    return (
+      <Alert
+        ref={ref}
+        classNames={{
+          ...classNames,
+          base: cn(
+            [
+              "bg-default-50 dark:bg-background shadow-sm",
+              "border-1 border-default-200 dark:border-default-100",
+              "relative before:content-[''] before:absolute before:z-10",
+              "before:left-0 before:top-[-1px] before:bottom-[-1px] before:w-1",
+              "rounded-l-none border-l-0",
+              colorClass,
+            ],
+            classNames?.base,
+            className,
+          ),
+          mainWrapper: cn("pt-1", classNames?.mainWrapper),
+          iconWrapper: cn("dark:bg-transparent", classNames?.iconWrapper),
+        }}
+        color={color}
+        title={title}
+        variant={variant}
+        {...props}
+      >
+        {children}
+      </Alert>
+    );
+  },
+);
+
+CustomAlert.displayName = "CustomAlert";
+
+export default function App() {
+  const colors = ["default", "primary", "secondary", "success", "warning", "danger"];
+
+  return (
+    <div className="flex flex-col w-full gap-y-6">
+      {colors.map((color) => (
+        <CustomAlert
+          key={color}
+          color={color}
+          title="The documents you requested are ready to be viewed"
+        >
+          <div className="flex items-center gap-1 mt-3">
+            <Button
+              className="bg-background text-default-700 font-medium border-1 shadow-small"
+              size="sm"
+              variant="bordered"
+            >
+              View documents
+            </Button>
+            <Button
+              className="text-default-500 font-medium underline underline-offset-4"
+              size="sm"
+              variant="light"
+            >
+              Maybe later
+            </Button>
+          </div>
+        </CustomAlert>
+      ))}
+    </div>
+  );
+}\n- apps/docs/content/components/alert/custom-styles.ts (modified, 189 changes)\n  Patch: @@ -1,192 +1,15 @@
-const AppTs = `import {Alert, Button} from "@nextui-org/react";
-
-const CustomAlert = React.forwardRef<HTMLDivElement, AlertProps>(
-  (
-    {title, children, variant = "faded", color = "secondary", className, classNames, ...props},
-    ref,
-  ) => {
-    const colorClass = React.useMemo(() => {
-      switch (color) {
-        case "default":
-          return "before:bg-default-300";
-        case "primary":
-          return "before:bg-primary";
-        case "secondary":
-          return "before:bg-secondary";
-        case "success":
-          return "before:bg-success";
-        case "warning":
-          return "before:bg-warning";
-        case "danger":
-          return "before:bg-danger";
-        default:
-          return "before:bg-default-200";
-      }
-    }, []);
-
-    return (
-      <Alert
-        ref={ref}
-        classNames={{
-          ...classNames,
-          base: cn(
-            [
-              "bg-default-50 dark:bg-background shadow-sm",
-              "border-1 border-default-200 dark:border-default-100",
-              "relative before:content-[''] before:absolute before:z-10",
-              "before:left-0 before:top-[-1px] before:bottom-[-1px] before:w-1",
-              "rounded-l-none border-l-0",
-              colorClass,
-            ],
-            classNames?.base,
-            className,
-          ),
-          mainWrapper: cn("pt-1", classNames?.mainWrapper),
-          iconWrapper: cn("dark:bg-transparent", classNames?.iconWrapper),
-        }}
-        color={color}
-        title={title}
-        variant={variant}
-        {...props}
-      >
-        {children}
-      </Alert>
-    );
-  },
-);
-
-CustomAlert.displayName = "CustomAlert";
-
-export default function App() {
-  const colors = ["default", "primary", "secondary", "success", "warning", "danger"];
-
-  return (
-    <div className="flex flex-col w-full gap-y-6">
-      {colors.map((color) => (
-        <CustomAlert
-          key={color}
-          color={color}
-          title="The documents you requested are ready to be viewed"
-        >
-          <div className="flex items-center gap-1 mt-3">
-            <Button
-              className="bg-background text-default-700 font-medium border-1 shadow-small"
-              size="sm"
-              variant="bordered"
-            >
-              View documents
-            </Button>
-            <Button
-              className="text-default-500 font-medium underline underline-offset-4"
-              size="sm"
-              variant="light"
-            >
-              Maybe later
-            </Button>
-          </div>
-        </CustomAlert>
-      ))}
-    </div>
-  );
-}`;
-
-const App = `import {Alert, Button} from "@nextui-org/react";
-
-const CustomAlert = React.forwardRef(
-  (
-    {title, children, variant = "faded", color = "secondary", className, classNames = {}, ...props},
-    ref,
-  ) => {
-    const colorClass = React.useMemo(() => {
-      switch (color) {
-        case "default":
-          return "before:bg-default-300";
-        case "primary":
-          return "before:bg-primary";
-        case "secondary":
-          return "before:bg-secondary";
-        case "success":
-          return "before:bg-success";
-        case "warning":
-          return "before:bg-warning";
-        case "danger":
-          return "before:bg-danger";
-        default:
-          return "before:bg-default-200";
-      }
-    }, []);
-
-    return (
-      <Alert
-        ref={ref}
-        classNames={{
-          ...classNames,
-          base: cn(
-            [
-              "bg-default-50 dark:bg-background shadow-sm",
-              "border-1 border-default-200 dark:border-default-100",
-              "relative before:content-[''] before:absolute before:z-10",
-              "before:left-0 before:top-[-1px] before:bottom-[-1px] before:w-1",
-              "rounded-l-none border-l-0",
-              colorClass,
-            ],
-            classNames.base,
-            className,
-          ),
-          mainWrapper: cn("pt-1", classNames.mainWrapper),
-          iconWrapper: cn("dark:bg-transparent", classNames.iconWrapper),
-        }}
-        color={color}
-        title={title}
-        variant={variant}
-        {...props}
-      >
-        {children}
-      </Alert>
-    );
-  },
-);
-
-CustomAlert.displayName = "CustomAlert";
-
-export default function App() {
-  const colors = ["default", "primary", "secondary", "success", "warning", "danger"];
-
-  return (
-    <div className="flex flex-col w-full gap-y-6">
-      {colors.map((color) => (
-        <CustomAlert
-          key={color}
-          color={color}
-          title="The documents you requested are ready to be viewed"
-        >
-          <div className="flex items-center gap-1 mt-3">
-            <Button
-              className="bg-background text-default-700 font-medium border-1 shadow-small"
-              size="sm"
-              variant="bordered"
-            >
-              View documents
-            </Button>
-            <Button
-              className="text-default-500 font-medium underline underline-offset-4"
-              size="sm"
-              variant="light"
-            >
-              Maybe later
-            </Button>
-          </div>
-        </CustomAlert>
-      ))}
-    </div>
-  );
-}`;
+import App from "./custom-styles.raw.jsx?raw";
+import AppTs from "./custom-styles.raw.tsx?raw";
 
 const react = {
   "/App.jsx": App,
+};
+
+const reactTs = {
   "/App.tsx": AppTs,
 };
 
 export default {
   ...react,
+  ...reactTs,
 };\n- apps/docs/content/components/alert/radius.raw.jsx (added, 15 changes)\n  Patch: @@ -0,0 +1,15 @@
+import {Alert} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex items-center justify-center w-full">
+      <div className="flex flex-col w-full">
+        {["none", "sm", "md", "lg", "full"].map((radius) => (
+          <div key={radius} className="w-full flex items-center my-3">
+            <Alert radius={radius} title={`This is a ${radius} radius alert`} />
+          </div>
+        ))}
+      </div>
+    </div>
+  );
+}\n- apps/docs/content/components/alert/radius.ts (modified, 19 changes)\n  Patch: @@ -1,21 +1,4 @@
-const App = `import {Alert} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <div className="flex items-center justify-center w-full">
-      <div className="flex flex-col w-full">
-        {["none", "sm", "md", "lg", "full"].map((radius) => (
-          <div key={radius} className="w-full flex items-center my-3">
-            <Alert 
-              radius={radius} 
-              title={\`This is a \${radius} radius alert\`}
-            />
-          </div>
-        ))}
-      </div>
-    </div>
-  );
-}`;
+import App from "./radius.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/alert/usage.raw.jsx (added, 12 changes)\n  Patch: @@ -0,0 +1,12 @@
+import {Alert} from "@nextui-org/react";
+
+export default function App() {
+  const title = "This is an alert";
+  const description = "Thanks for subscribing to our newsletter!";
+
+  return (
+    <div className="flex items-center justify-center w-full">
+      <Alert description={description} title={title} />
+    </div>
+  );
+}\n- apps/docs/content/components/alert/usage.ts (modified, 13 changes)\n  Patch: @@ -1,15 +1,4 @@
-const App = `import {Alert} from "@nextui-org/react";
-
-export default function App() {
-  const title = "This is an alert";
-  const description = "Thanks for subscribing to our newsletter!";
-  
-  return (
-    <div className="flex items-center justify-center w-full">
-      <Alert title={title} description={description} />
-    </div>
-  );
-}`;
+import App from "./usage.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/alert/variants.raw.jsx (added, 16 changes)\n  Patch: @@ -0,0 +1,16 @@
+import {Alert} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex flex-col gap-4 w-full">
+      {["solid", "bordered", "flat", "faded"].map((variant) => (
+        <Alert
+          key={variant}
+          color="secondary"
+          title={`This is a ${variant} variant alert`}
+          variant={variant}
+        />
+      ))}
+    </div>
+  );
+}\n- apps/docs/content/components/alert/variants.ts (modified, 12 changes)\n  Patch: @@ -1,14 +1,4 @@
-const App = `import {Alert} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <div className="flex flex-col gap-4 w-full">
-      {["solid", "bordered", "flat", "faded"].map((variant) => (
-        <Alert key={variant} variant={variant} color="secondary" title={\`This is a \${variant} variant alert\`}/>
-      ))}
-    </div>
-  );
-}`;
+import App from "./variants.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/alert/with-action.raw.jsx (added, 19 changes)\n  Patch: @@ -0,0 +1,19 @@
+import {Alert, Button} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex items-center justify-center w-full">
+      <Alert
+        color="warning"
+        description="Upgrade to a paid plan to continue"
+        endContent={
+          <Button color="warning" size="sm" variant="flat">
+            Upgrade
+          </Button>
+        }
+        title="You have no credits left"
+        variant="faded"
+      />
+    </div>
+  );
+}\n- apps/docs/content/components/alert/with-action.ts (modified, 22 changes)\n  Patch: @@ -1,24 +1,4 @@
-const App = `import {Alert, Button} from "@nextui-org/react";
-
-export default function App() {
-  const [isVisible, setIsVisible] = React.useState(true);
-
-  return (
-    <div className="flex items-center justify-center w-full">
-      <Alert
-        color="warning"
-        description="Upgrade to a paid plan to continue"
-        endContent={
-          <Button color="warning" size="sm" variant="flat">
-            Upgrade
-          </Button>
-        }
-        title="You have no credits left"
-        variant="faded"
-      />
-    </div>
-  );
-}`;
+import App from "./with-action.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/alert/with-icon.raw.jsx (added, 33 changes)\n  Patch: @@ -0,0 +1,33 @@
+import {Alert} from "@nextui-org/react";
+
+const UserIcon = ({fill = "currentColor", size, height, width, ...props}) => {
+  return (
+    <svg
+      data-name="Iconly/Curved/Profile"
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      width={size || width || 24}
+      xmlns="http://www.w3.org/2000/svg"
+      {...props}
+    >
+      <g
+        fill="none"
+        stroke={fill}
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeMiterlimit={10}
+        strokeWidth={1.5}
+      >
+        <path
+          d="M11.845 21.662C8.153 21.662 5 21.088 5 18.787s3.133-4.425 6.845-4.425c3.692 0 6.845 2.1 6.845 4.4s-3.134 2.9-6.845 2.9z"
+          data-name="Stroke 1"
+        />
+        <path d="M11.837 11.174a4.372 4.372 0 10-.031 0z" data-name="Stroke 3" />
+      </g>
+    </svg>
+  );
+};
+
+export default function App() {
+  return <Alert icon={<UserIcon />}>An alert with a custom icon</Alert>;
+}\n- apps/docs/content/components/alert/with-icon.ts (modified, 47 changes)\n  Patch: @@ -1,49 +1,4 @@
-const App = `import {Alert} from "@nextui-org/react";
-
-const UserIcon = ({
-  fill = 'currentColor',
-  filled,
-  size,
-  height,
-  width,
-  label,
-  ...props
-}) => {
-  return (
-    <svg
-      data-name="Iconly/Curved/Profile"
-      xmlns="http://www.w3.org/2000/svg"
-      viewBox="0 0 24 24"
-      width={size || width || 24}
-      height={size || height || 24}
-      {...props}
-    >
-      <g
-        fill="none"
-        stroke={fill}
-        strokeLinecap="round"
-        strokeLinejoin="round"
-        strokeMiterlimit={10}
-        strokeWidth={1.5}
-      >
-        <path
-          data-name="Stroke 1"
-          d="M11.845 21.662C8.153 21.662 5 21.088 5 18.787s3.133-4.425 6.845-4.425c3.692 0 6.845 2.1 6.845 4.4s-3.134 2.9-6.845 2.9z"
-        />
-        <path
-          data-name="Stroke 3"
-          d="M11.837 11.174a4.372 4.372 0 10-.031 0z"
-        />
-      </g>
-    </svg>
-  );
-};
-
-export default function App() {
-  return (
-    <Alert icon={<UserIcon />}>An alert with a custom icon</Alert>
-  );
-}`;
+import App from "./with-icon.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/alert/without-icon.raw.jsx (added, 12 changes)\n  Patch: @@ -0,0 +1,12 @@
+import {Alert} from "@nextui-org/react";
+
+export default function App() {
+  const title = "This is an alert";
+  const description = "Thanks for subscribing to our newsletter!";
+
+  return (
+    <div className="flex items-center justify-center w-full">
+      <Alert hideIcon color="success" description={description} title={title} variant="faded" />
+    </div>
+  );
+}\n- apps/docs/content/components/alert/without-icon.ts (modified, 19 changes)\n  Patch: @@ -1,21 +1,4 @@
-const App = `import {Alert} from "@nextui-org/react";
-
-export default function App() {
-  const title = "This is an alert";
-  const description = "Thanks for subscribing to our newsletter!";
-  
-  return (
-    <div className="flex items-center justify-center w-full">
-      <Alert 
-        title={title} 
-        description={description} 
-        hideIcon 
-        color="success" 
-        variant="faded" 
-      />
-    </div>
-  );
-}`;
+import App from "./without-icon.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/autocomplete/async-filtering.raw.jsx (added, 34 changes)\n  Patch: @@ -0,0 +1,34 @@
+import {Autocomplete, AutocompleteItem} from "@nextui-org/react";
+import {useAsyncList} from "@react-stately/data";
+
+export default function App() {
+  let list = useAsyncList({
+    async load({signal, filterText}) {
+      let res = await fetch(`https://swapi.py4e.com/api/people/?search=${filterText}`, {signal});
+      let json = await res.json();
+
+      return {
+        items: json.results,
+      };
+    },
+  });
+
+  return (
+    <Autocomplete
+      className="max-w-xs"
+      inputValue={list.filterText}
+      isLoading={list.isLoading}
+      items={list.items}
+      label="Select a character"
+      placeholder="Type to search..."
+      variant="bordered"
+      onInputChange={list.setFilterText}
+    >
+      {(item) => (
+        <AutocompleteItem key={item.name} className="capitalize">
+          {item.name}
+        </AutocompleteItem>
+      )}
+    </Autocomplete>
+  );
+}\n
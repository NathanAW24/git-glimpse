Pull Request Number: 2590
Title: feat: add component meta data
Base Branch: main
Head Branch: feature-component-meta
Author: winchesHe
URL: https://github.com/nextui-org/nextui/pull/2590
State: MERGED
Created At: 2024-03-26T13:30:05Z
Merged At: 2024-03-31T14:56:28Z
Participants: winchesHe, jrgarciadev

Description:
Closes # 
üìù Description
add components.json when publish
the content like the following picture


Add a brief description

‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit

New Features

Enhanced path resolution and console output with colored messages.
Implemented automatic generation of components metadata with improved error handling.
Defined constants for directory paths and URLs.
Updated main function to handle file restoration and metadata generation.

Commits:
- feat: add component meta data\n- feat: add component meta data\n- feat: add description and status component data\n- fix: review problem\n

Labels:


Comments:
- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: 6d3f24829d85197db89d67efec8b93a3f2362be4

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/winchesHe/nextui/new/feature-component-meta?filename=.changeset/rich-suns-try.md&value=---%0A%22%40nextui-org%2Freact%22%3A%20patch%0A---%0A%0Afeat%3A%20add%20component%20meta%20data%0A)

\n- vercel: [vc]: #n7nPR2frWf9xtlVv3bpoYU7pDe/OaYeX5rSXN397LVs=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvNExTR1I1d1BnYjZoZWZUTWpwUnRvYUZxMnoxWSIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLXdpbmNoZXNoZS1mZWF0dXItY2U1ZDM1LW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLXdpbmNoZXNoZS1mZWF0dXItY2U1ZDM1LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/4LSGR5wPgb6hefTMjpRtoaFq2z1Y)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-wincheshe-featur-ce5d35-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-wincheshe-featur-ce5d35-nextui-org.vercel.app?via=pr-comment-feedback-link) | Mar 31, 2024 2:52pm |

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The update enhances the post-build script for "@nextui-org/react" by improving component metadata inclusion. It introduces path resolution, directory definitions, a base URL for documentation, a function for managing component metadata, and enhancements to the main function for file operations and metadata generation.

## Changes

| File | Summary |
|------|---------|
| `packages/core/react/src/scripts/postbuild.js` | Added path and chalk module imports for path resolution and colored console output.<br>Defined constants for directory paths and URLs.<br>Implemented `generateComponents` function to process components and generate metadata.<br>Updated main function to restore the original file, delete the backup, and generate components metadata with error handling. |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->
<!--


packages/core/react/src/scripts/postbuild.js: ## Short summary

- Added path and chalk module imports for path resolution and colored console output.
- Defined constants for directory paths and URLs.
- Implemented `generateComponents` function to process components and generate metadata.
- Updated main function to restore the original file, delete the backup, and generate components metadata with error handling.

-->
<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: short summary by coderabbit.ai -->
<!--


### PR Objectives

The pull request titled "feat: add component meta data" with the number 2590 aims to introduce a new feature into the project. The primary objective of this PR is to add a `components.json` file during the publishing process. This JSON file is intended to contain metadata about the components of the project. The description of the PR includes a visual representation of what the content of the `components.json` file would look like, although the actual content is not provided in the text description.

The PR is submitted with the intention of enhancing the project's documentation and metadata management by including detailed information about each component when the project is published. This addition is likely to facilitate better understanding and utilization of the components by users and contributors by providing them with essential metadata at their disposal.

The changes are encapsulated within the `.changeset/twenty-deers-wink.md` file and modifications to the `packages/core/react/src/scripts/postbuild.js` script. The `.changeset` file mentions the introduction of functionality to add components metadata upon publishing specifically for "@nextui-org/react". The `postbuild.js` script is updated to include the necessary logic for generating the `components.json` file. This involves importing the `path` module for path resolution, defining directory paths for core, packages, components, and output, creating a baseDocs URL for documentation, and implementing a `generateComponents` function to process components. Additionally, the main function within the script is updated to restore a file, delete a backup, and generate components metadata.

### AI-generated Summary of Generated Summaries

The pull request introduces a new feature that involves the creation and addition of a `components.json` file during the publishing process of the project. This file is intended to contain metadata about the project's components, aiming to enhance documentation and metadata management. The implementation of this feature is detailed in a new `.changeset` file and involves significant updates to the `postbuild.js` script within the `packages/core/react/src/scripts` directory.

Key changes include the introduction of the `path` module for effective path resolution and the definition of various directory paths such as core, packages, components, and output. A `baseDocs` URL is established for documentation purposes. A crucial part of the update is the creation of the `generateComponents` function, which is responsible for processing the components and generating the metadata to be included in the `components.json` file. Furthermore, the main function of the script is enhanced to ensure the restoration of files, deletion of backups, and the generation of components metadata, thereby automating the process of enriching the project's publication with valuable component information. This addition is specifically tailored for "@nextui-org/react", indicating a focused improvement on this particular package within the project.

-->
<!-- end of auto-generated comment: short summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- eb96bd25dbb73c842540647675107dcc30edd43e -->
<!-- ee8adf517b6b9511e2c47ac02780a5d4de2703b9 -->
<!-- 327aa93eed106d0cd7ec695519cf9021a92d56b8 -->
<!-- 6d3f24829d85197db89d67efec8b93a3f2362be4 -->

<!-- commit_ids_reviewed_end --><!-- tweet_start -->

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<!-- tweet_end --><!-- tips_start -->

---

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with CodeRabbit:

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- The JSON schema for the configuration file is available [here](https://coderabbit.ai/integrations/coderabbit-overrides.v2.json).
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/coderabbit-overrides.v2.json`

### CodeRabbit Discord Community

Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.

</details>

<!-- tips_end -->\n- vercel: @winchesHe is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%22eb96bd25dbb73c842540647675107dcc30edd43e%22%7D%2C%22id%22%3A%22QmdUKGNK72ssMJ3cjHxMhmYti9q6AHnN7YRSywaLaJzqpE%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A2590%2C%22repo%22%3A%22nextui%22%7D).

\n

Files Changed:
- packages/core/react/src/scripts/postbuild.js (modified, 78 changes)\n  Patch: @@ -1,21 +1,81 @@
 /* eslint-disable no-console */
 const fs = require('fs');
+const path = require('path');
+
+const chalk = require('chalk');
+
+const coreDir = path.resolve(__dirname, '../..'); // Core directory path
+const packagesDir = path.resolve(coreDir, '../..'); // Packages directory path
+const componentsDir = path.resolve(packagesDir, 'components'); // Components directory path
+const outputPath = path.resolve(coreDir, 'dist'); // Output directory path
+
+const rootDir = path.resolve(__dirname, '../../../../..'); // Root directory path
+const appsConfigDir = path.resolve(rootDir, 'apps/docs/config'); // Apps config directory path
+const appsRoutesJsonPath = path.resolve(appsConfigDir, 'routes.json'); // Apps routes file path
 
 const filePath = './src/index.ts'; // Updated file path
 const backupFilePath = filePath + '.backup.ts'; // Backup file
 
-// Restore the original file from the backup
-fs.copyFile(backupFilePath, filePath, (err) => {
-    if (err) {
-        return console.log(err);
+const baseDocs = 'https://nextui.org/docs/components';
+
+const EXCLUDE_LIST = ['.DS_Store'];
+
+function generateComponents() {
+    const routesJson = require(appsRoutesJsonPath);
+    const routes = routesJson.routes.find(route => route.key === 'components').routes;
+    const components = fs.readdirSync(componentsDir);
+    const resultList = [];
+
+    for (const component of components) {
+        if (EXCLUDE_LIST.includes(component)) continue;
+        const componentPath = path.resolve(componentsDir, component);
+
+        const componentPkg = require(path.resolve(componentPath, 'package.json'));
+        const componentPkgName = componentPkg.name;
+        const componentVersion = componentPkg.version;
+        const componentDocs = `${baseDocs}/${component}`;
+        const componentDesc = componentPkg.description;
+
+        const routeComponent = routes.find(route => route.key === component) || {};
+
+        const componentInfo = {
+            name: component,
+            package: componentPkgName,
+            version: componentVersion,
+            docs: componentDocs,
+            description: componentDesc,
+            status: (routeComponent.updated && 'updated') || (routeComponent.newPost && 'newPost') || 'stable'
+        }
+
+        resultList.push(componentInfo);
     }
-    console.log('The original file has been restored.');
 
-    // Delete the backup file
-    fs.unlink(backupFilePath, (err) => {
+    fs.writeFileSync(path.resolve(outputPath, 'components.json'), JSON.stringify(resultList, null, 2));
+}
+
+function main() {
+    // Restore the original file from the backup
+    fs.copyFile(backupFilePath, filePath, (err) => {
         if (err) {
             return console.log(err);
         }
-        console.log('The backup file has been deleted.');
+        console.log('The original file has been restored.');
+
+        // Delete the backup file
+        fs.unlink(backupFilePath, (err) => {
+            if (err) {
+                return console.log(err);
+            }
+            console.log('The backup file has been deleted.');
+        });
     });
-});
+
+    // Generate the components meta data
+    try {
+        generateComponents()
+    } catch (error) {
+        console.error(chalk.red(`Generate the components Error: ${error}`))
+    }
+}
+
+main()\n
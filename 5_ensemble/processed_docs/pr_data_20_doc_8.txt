Pull Request Number: 1630
Title: fix(accordion): accordion is no longer preventing spacebar
Base Branch: main
Head Branch: fix/1608
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/1630
State: MERGED
Created At: 2023-09-15T20:27:16Z
Merged At: 2023-09-15T20:42:02Z
Participants: jrgarciadev

Description:
Closes #1405
Closes #1608
üìù Description
Accordion prevents Spacebar key event
‚õ≥Ô∏è Current behavior (updates)
Accordion prevents Spacebar key event
üöÄ New behavior
Custom hook use-aria-accordion added to remove needless events handlers
üí£ Is this a breaking change (Yes/No): No

üìù Additional Information

  
    
    

    CleanShot.2023-09-15.at.15.59.55.mp4

Commits:
- fix(accordion): accordion is no longer preventing spacebar\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 8b4327179d77e5dddad6892e0a6684d62787c858

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 4 packages</summary>

  | Name                                | Type  |
| ----------------------------------- | ----- |
| @nextui-org/use-aria-accordion-item | Patch |
| @nextui-org/use-aria-accordion      | Patch |
| @nextui-org/accordion               | Patch |
| @nextui-org/react                   | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/1608?filename=.changeset/famous-yaks-call.md&value=---%0A%22%40nextui-org%2Faccordion%22%3A%20patch%0A%22%40nextui-org%2Fuse-aria-accordion-item%22%3A%20patch%0A%22%40nextui-org%2Fuse-aria-accordion%22%3A%20patch%0A---%0A%0Afix(accordion)%3A%20accordion%20is%20no%20longer%20preventing%20spacebar%0A)

\n- vercel: [vc]: #iPRRrfBEllmilrjWGQf0pZjlDx9GBvfTZQJd8jxCWFo=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi80bTdwNlloVXRrM2tCR2dlQmJFZ2Q4SkJQU0RLIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtMTYwOC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWZpeC0xNjA4LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvRjNhUTdOejExMTNqOUpEY0FBUUNFcmF0VFZaZCIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1maXgtMTYwOC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LTE2MDgtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/4m7p6YhUtk3kBGgeBbEgd8JBPSDK)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-1608-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-1608-nextui-org.vercel.app?via=pr-comment-feedback-link) | Sep 15, 2023 8:34pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/F3aQ7Nz1113j9JDcAAQCEratTVZd)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-1608-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-1608-nextui-org.vercel.app?via=pr-comment-feedback-link) | Sep 15, 2023 8:34pm |


\n

Files Changed:
- .changeset/itchy-birds-divide.md (added, 7 changes)\n  Patch: @@ -0,0 +1,7 @@
+---
+"@nextui-org/use-aria-accordion-item": patch
+"@nextui-org/use-aria-accordion": patch
+"@nextui-org/accordion": patch
+---
+
+Fix #1405 and #1608 accordion is no longer preventing spacebar key for Input/Textarea components\n- packages/components/accordion/package.json (modified, 5 changes)\n  Patch: @@ -49,20 +49,21 @@
     "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/react-utils": "workspace:*",
     "@nextui-org/framer-transitions": "workspace:*",
-    "@nextui-org/use-aria-accordion-item": "workspace:*",
     "@nextui-org/system": "workspace:*",
     "@nextui-org/theme": "workspace:*",
     "@nextui-org/divider": "workspace:*",
-    "@react-aria/accordion": "3.0.0-alpha.21",
+    "@nextui-org/use-aria-accordion": "workspace:*",
     "@react-aria/interactions": "^3.18.0",
     "@react-aria/focus": "^3.14.1",
     "@react-aria/utils": "^3.20.0",
     "@react-stately/tree": "^3.7.2",
+    "@react-aria/button": "^3.8.2",
     "@react-types/accordion": "3.0.0-alpha.16",
     "@react-types/shared": "^3.20.0"
   },
   "devDependencies": {
     "@nextui-org/avatar": "workspace:*",
+    "@nextui-org/input": "workspace:*",
     "@nextui-org/test-utils": "workspace:*",
     "framer-motion": "^10.15.1",
     "clean-package": "2.2.0",\n- packages/components/accordion/src/use-accordion-item.ts (modified, 4 changes)\n  Patch: @@ -4,7 +4,7 @@ import {accordionItem} from "@nextui-org/theme";
 import {clsx, callAllHandlers, dataAttr} from "@nextui-org/shared-utils";
 import {ReactRef, useDOMRef, filterDOMProps} from "@nextui-org/react-utils";
 import {NodeWithProps} from "@nextui-org/aria-utils";
-import {useAriaAccordionItem} from "@nextui-org/use-aria-accordion-item";
+import {useReactAriaAccordionItem} from "@nextui-org/use-aria-accordion";
 import {useCallback, useMemo} from "react";
 import {chain, mergeProps} from "@react-aria/utils";
 import {useHover, usePress} from "@react-aria/interactions";
@@ -75,7 +75,7 @@ export function useAccordionItem<T extends object = {}>(props: UseAccordionItemP
   const isDisabled = state.disabledKeys.has(item.key) || isDisabledProp;
   const isOpen = state.selectionManager.isSelected(item.key);
 
-  const {buttonProps: buttonCompleteProps, regionProps} = useAriaAccordionItem(
+  const {buttonProps: buttonCompleteProps, regionProps} = useReactAriaAccordionItem(
     {item, isDisabled},
     {...state, focusedKey: focusedKey},
     domRef,\n- packages/components/accordion/src/use-accordion.ts (modified, 2 changes)\n  Patch: @@ -6,12 +6,12 @@ import type {AccordionGroupVariantProps} from "@nextui-org/theme";
 import {ReactRef, filterDOMProps} from "@nextui-org/react-utils";
 import React, {Key, useCallback} from "react";
 import {TreeState, useTreeState} from "@react-stately/tree";
-import {useAccordion as useReactAriaAccordion} from "@react-aria/accordion";
 import {mergeProps} from "@react-aria/utils";
 import {accordion} from "@nextui-org/theme";
 import {useDOMRef} from "@nextui-org/react-utils";
 import {useMemo, useState} from "react";
 import {DividerProps} from "@nextui-org/divider";
+import {useReactAriaAccordion} from "@nextui-org/use-aria-accordion";
 
 import {AccordionItemProps} from "./accordion-item";
 \n- packages/components/accordion/stories/accordion.stories.tsx (modified, 47 changes)\n  Patch: @@ -2,7 +2,7 @@ import type {Selection} from "@react-types/shared";
 
 import React from "react";
 import {Meta} from "@storybook/react";
-import {accordionItem} from "@nextui-org/theme";
+import {accordionItem, button} from "@nextui-org/theme";
 import {
   AnchorIcon,
   MoonIcon,
@@ -13,6 +13,7 @@ import {
   InvalidCardIcon,
 } from "@nextui-org/shared-icons";
 import {Avatar} from "@nextui-org/avatar";
+import {Input} from "@nextui-org/input";
 
 import {Accordion, AccordionProps, AccordionItem} from "../src";
 import {AccordionItemProps} from "../src";
@@ -313,6 +314,42 @@ const CustomWithClassNamesTemplate = (args: AccordionProps) => {
   );
 };
 
+const WithFormTemplate = (args: AccordionProps) => {
+  const form = (
+    <form className="flex flex-col gap-4">
+      <Input
+        isRequired
+        label="Email"
+        placeholder="Enter your email"
+        type="email"
+        onValueChange={(value) =>
+          // eslint-disable-next-line no-console
+          console.log(value)
+        }
+      />
+      <Input isRequired label="Password" placeholder="Enter your password" type="password" />
+
+      <div className="flex gap-2 justify-end">
+        <button className={button({color: "primary"})}>Login</button>
+      </div>
+    </form>
+  );
+
+  return (
+    <Accordion {...args}>
+      <AccordionItem key="1" aria-label="Accordion 1" title="Accordion 1">
+        {form}
+      </AccordionItem>
+      <AccordionItem key="2" aria-label="Accordion 2" title="Accordion 2">
+        {defaultContent}
+      </AccordionItem>
+      <AccordionItem key="3" aria-label="Accordion 3" title="Accordion 3">
+        {defaultContent}
+      </AccordionItem>
+    </Accordion>
+  );
+};
+
 export const Default = {
   render: Template,
 
@@ -390,6 +427,14 @@ export const Variants = {
   },
 };
 
+export const WithForm = {
+  render: WithFormTemplate,
+
+  args: {
+    ...defaultProps,
+  },
+};
+
 export const CustomMotion = {
   render: Template,
 \n- packages/hooks/use-aria-accordion-item/src/index.ts (modified, 3 changes)\n  Patch: @@ -24,6 +24,9 @@ export interface AccordionItemAria {
   regionProps: DOMAttributes;
 }
 
+/**
+ * @deprecated use useReactAriaAccordionItem instead from @nextui-org/use-aria-accordion
+ */
 export function useAriaAccordionItem<T>(
   props: AccordionItemAriaProps<T>,
   state: TreeState<T> & {\n- packages/hooks/use-aria-accordion/README.md (added, 24 changes)\n  Patch: @@ -0,0 +1,24 @@
+# @nextui-org/use-aria-accordion
+
+A Quick description of the component
+
+> This is an internal utility, not intended for public usage.
+
+## Installation
+
+```sh
+yarn add @nextui-org/use-aria-accordion
+# or
+npm i @nextui-org/use-aria-accordion
+```
+
+## Contribution
+
+Yes please! See the
+[contributing guidelines](https://github.com/nextui-org/nextui/blob/master/CONTRIBUTING.md)
+for details.
+
+## Licence
+
+This project is licensed under the terms of the
+[MIT license](https://github.com/nextui-org/nextui/blob/master/LICENSE).\n- packages/hooks/use-aria-accordion/package.json (added, 61 changes)\n  Patch: @@ -0,0 +1,61 @@
+{
+  "name": "@nextui-org/use-aria-accordion",
+  "version": "2.0.0",
+  "description": "React-aria useAccordion hooks with custom implementations",
+  "keywords": [
+    "use-aria-accordion"
+  ],
+  "author": "Junior Garcia <jrgarciadev@gmail.com>",
+  "homepage": "https://nextui.org",
+  "license": "MIT",
+  "main": "src/index.ts",
+  "sideEffects": false,
+  "files": [
+    "dist"
+  ],
+  "publishConfig": {
+    "access": "public"
+  },
+  "repository": {
+    "type": "git",
+    "url": "git+https://github.com/nextui-org/nextui.git",
+    "directory": "packages/hooks/use-aria-accordion"
+  },
+  "bugs": {
+    "url": "https://github.com/nextui-org/nextui/issues"
+  },
+  "scripts": {
+    "build": "tsup src --dts",
+    "build:fast": "tsup src",
+    "dev": "yarn build:fast -- --watch",
+    "clean": "rimraf dist .turbo",
+    "typecheck": "tsc --noEmit",
+    "prepack": "clean-package",
+    "postpack": "clean-package restore"
+  },
+  "dependencies": {
+    "@react-aria/focus": "^3.14.1",
+    "@react-stately/tree": "^3.7.2",
+    "@react-aria/button": "^3.8.2",
+    "@react-types/shared": "^3.20.0",
+    "@react-aria/utils": "^3.20.0",
+    "@react-aria/selection": "^3.16.2",
+    "@react-types/accordion": "3.0.0-alpha.16"
+  },
+  "peerDependencies": {
+    "react": ">=18"
+  },
+  "devDependencies": {
+    "clean-package": "2.2.0",
+    "react": "^18.0.0"
+  },
+  "clean-package": "../../../clean-package.config.json",
+  "tsup": {
+    "clean": true,
+    "target": "es2019",
+    "format": [
+      "cjs",
+      "esm"
+    ]
+  }
+}\n- packages/hooks/use-aria-accordion/src/index.ts (added, 2 changes)\n  Patch: @@ -0,0 +1,2 @@
+export {useReactAriaAccordion} from "./use-accordion";
+export {useReactAriaAccordionItem} from "./use-accordion-item";\n- packages/hooks/use-aria-accordion/src/use-accordion-item.ts (added, 148 changes)\n  Patch: @@ -0,0 +1,148 @@
+import {
+  useId,
+  useCallback,
+  useEffect,
+  KeyboardEventHandler,
+  ButtonHTMLAttributes,
+  RefObject,
+  Key,
+} from "react";
+import {DOMAttributes, Node, LongPressEvent, PressEvent} from "@react-types/shared";
+import {focusSafely} from "@react-aria/focus";
+import {TreeState} from "@react-stately/tree";
+import {useButton} from "@react-aria/button";
+
+export interface AccordionItemAriaProps<T> {
+  item: Node<T>;
+  isDisabled?: boolean;
+}
+
+export interface AccordionItemAria {
+  /** Props for the accordion item button. */
+  buttonProps: ButtonHTMLAttributes<HTMLElement>;
+  /** Props for the accordion item content element. */
+  regionProps: DOMAttributes;
+}
+
+export function useReactAriaAccordionItem<T>(
+  props: AccordionItemAriaProps<T>,
+  state: TreeState<T> & {
+    focusedKey?: Key | null;
+  },
+  ref: RefObject<HTMLButtonElement>,
+): AccordionItemAria {
+  let {item, isDisabled: isDisabledProp} = props;
+  let key = item.key;
+  let manager = state.selectionManager;
+  let buttonId = useId();
+  let regionId = useId();
+  let isDisabled = state.disabledKeys.has(item.key) || isDisabledProp;
+
+  // Focus the associated DOM node when this item becomes the focusedKey
+  useEffect(() => {
+    let isFocused = key === state.focusedKey;
+
+    if (isFocused && document.activeElement !== ref.current) {
+      ref.current && focusSafely(ref.current);
+    }
+  }, [ref, key, state.focusedKey]);
+
+  let onSelect = useCallback(
+    (e: PressEvent | LongPressEvent | PointerEvent) => {
+      if (!manager.canSelectItem(key)) {
+        return;
+      }
+      manager.select(key, e);
+      state.toggleKey(key);
+    },
+    [key, manager],
+  );
+
+  const extendFocusSelection = useCallback(
+    (toKey: Key) => {
+      if (manager.selectionBehavior === "replace") {
+        manager.extendSelection(toKey);
+      }
+      manager.setFocusedKey(toKey);
+    },
+    [manager],
+  );
+
+  /**
+   * Manage keyboard navigation between accordion items.
+   */
+  const onKeyDown = useCallback(
+    (event: React.KeyboardEvent) => {
+      const keyMap: Record<string, KeyboardEventHandler> = {
+        ArrowDown: () => {
+          const nextKey = state.collection.getKeyAfter(key);
+
+          if (nextKey && state.disabledKeys.has(nextKey)) {
+            const nextEnabledKey = state.collection.getKeyAfter(nextKey);
+
+            nextEnabledKey && extendFocusSelection(nextEnabledKey);
+          } else {
+            nextKey && extendFocusSelection(nextKey);
+          }
+        },
+        ArrowUp: () => {
+          const prevKey = state.collection.getKeyBefore(key);
+
+          if (prevKey && state.disabledKeys.has(prevKey)) {
+            const prevEnabledKey = state.collection.getKeyBefore(prevKey);
+
+            prevEnabledKey && extendFocusSelection(prevEnabledKey);
+          } else {
+            prevKey && extendFocusSelection(prevKey);
+          }
+        },
+        Home: () => {
+          const firstKey = state.collection.getFirstKey();
+
+          firstKey && extendFocusSelection(firstKey);
+        },
+        End: () => {
+          const lastKey = state.collection.getLastKey();
+
+          lastKey && extendFocusSelection(lastKey);
+        },
+      };
+
+      const action = keyMap[event.key];
+
+      if (action) {
+        event.preventDefault();
+        if (manager.canSelectItem(key)) {
+          action(event);
+        }
+      }
+    },
+    [key, manager],
+  );
+
+  let {buttonProps} = useButton(
+    {
+      id: buttonId,
+      elementType: "button",
+      isDisabled,
+      onKeyDown,
+      onPress: onSelect,
+    },
+    ref,
+  );
+
+  let isExpanded = state.selectionManager.isSelected(item.key);
+
+  return {
+    buttonProps: {
+      ...buttonProps,
+      "aria-expanded": isExpanded,
+      "aria-controls": isExpanded ? regionId : undefined,
+    },
+    regionProps: {
+      id: regionId,
+      role: "region",
+      "aria-labelledby": buttonId,
+    },
+  };
+}\n- packages/hooks/use-aria-accordion/src/use-accordion.ts (added, 47 changes)\n  Patch: @@ -0,0 +1,47 @@
+import {AriaAccordionProps} from "@react-types/accordion";
+import {ButtonHTMLAttributes, RefObject} from "react";
+import {DOMAttributes, Node} from "@react-types/shared";
+import {TreeState} from "@react-stately/tree";
+import {useSelectableList} from "@react-aria/selection";
+
+export interface AccordionAria {
+  /** Props for the accordion container element. */
+  accordionProps: DOMAttributes;
+}
+
+export interface AccordionItemAriaProps<T> {
+  item: Node<T>;
+}
+
+export interface AccordionItemAria {
+  /** Props for the accordion item button. */
+  buttonProps: ButtonHTMLAttributes<HTMLElement>;
+  /** Props for the accordion item content element. */
+  regionProps: DOMAttributes;
+}
+
+export function useReactAriaAccordion<T>(
+  props: AriaAccordionProps<T>,
+  state: TreeState<T>,
+  ref: RefObject<HTMLDivElement>,
+): AccordionAria {
+  let {listProps} = useSelectableList({
+    ...props,
+    ...state,
+    allowsTabNavigation: true,
+    ref,
+  });
+
+  // Fix: https://github.com/nextui-org/nextui/issues/1608 & https://github.com/nextui-org/nextui/issues/1405
+  // Remove onKeyDownCapture from listProps to prevent it from removing spacebar support for
+  // inner elements as the Input, this event provides typeahead support for the list, but we
+  // don't need it for the accordion.
+  delete listProps.onKeyDownCapture;
+
+  return {
+    accordionProps: {
+      ...listProps,
+      tabIndex: undefined,
+    },
+  };
+}\n- packages/hooks/use-aria-accordion/tsconfig.json (added, 4 changes)\n  Patch: @@ -0,0 +1,4 @@
+{
+  "extends": "../../../tsconfig.json",
+  "include": ["src", "index.ts"]
+}\n- pnpm-lock.yaml (modified, 61 changes)\n  Patch: @@ -613,12 +613,12 @@ importers:
       '@nextui-org/theme':
         specifier: workspace:*
         version: link:../../core/theme
-      '@nextui-org/use-aria-accordion-item':
+      '@nextui-org/use-aria-accordion':
         specifier: workspace:*
-        version: link:../../hooks/use-aria-accordion-item
-      '@react-aria/accordion':
-        specifier: 3.0.0-alpha.21
-        version: 3.0.0-alpha.21(react@18.2.0)
+        version: link:../../hooks/use-aria-accordion
+      '@react-aria/button':
+        specifier: ^3.8.2
+        version: 3.8.2(react@18.2.0)
       '@react-aria/focus':
         specifier: ^3.14.1
         version: 3.14.1(react@18.2.0)
@@ -641,6 +641,9 @@ importers:
       '@nextui-org/avatar':
         specifier: workspace:*
         version: link:../avatar
+      '@nextui-org/input':
+        specifier: workspace:*
+        version: link:../input
       '@nextui-org/test-utils':
         specifier: workspace:*
         version: link:../../utilities/test-utils
@@ -2413,6 +2416,37 @@ importers:
         specifier: 2.2.0
         version: 2.2.0
 
+  packages/hooks/use-aria-accordion:
+    dependencies:
+      '@react-aria/button':
+        specifier: ^3.8.2
+        version: 3.8.2(react@18.2.0)
+      '@react-aria/focus':
+        specifier: ^3.14.1
+        version: 3.14.1(react@18.2.0)
+      '@react-aria/selection':
+        specifier: ^3.16.2
+        version: 3.16.2(react@18.2.0)
+      '@react-aria/utils':
+        specifier: ^3.20.0
+        version: 3.20.0(react@18.2.0)
+      '@react-stately/tree':
+        specifier: ^3.7.2
+        version: 3.7.2(react@18.2.0)
+      '@react-types/accordion':
+        specifier: 3.0.0-alpha.16
+        version: 3.0.0-alpha.16(react@18.2.0)
+      '@react-types/shared':
+        specifier: ^3.20.0
+        version: 3.20.0(react@18.2.0)
+    devDependencies:
+      clean-package:
+        specifier: 2.2.0
+        version: 2.2.0
+      react:
+        specifier: ^18.2.0
+        version: 18.2.0
+
   packages/hooks/use-aria-accordion-item:
     dependencies:
       '@react-aria/button':
@@ -8631,23 +8665,6 @@ packages:
       '@babel/runtime': 7.22.15
     dev: true
 
-  /@react-aria/accordion@3.0.0-alpha.21(react@18.2.0):
-    resolution: {integrity: sha512-M9qSIWhakDC9h/5T7iJkPriBDhzUyVh7F0PIg7ygwPTytpd6rKxtn81yVvHAXqAX9kXZA7yozfGp1cu8eyZZ3w==}
-    peerDependencies:
-      react: ^18.2.0
-    dependencies:
-      '@react-aria/button': 3.8.2(react@18.2.0)
-      '@react-aria/interactions': 3.18.0(react@18.2.0)
-      '@react-aria/selection': 3.16.2(react@18.2.0)
-      '@react-aria/utils': 3.20.0(react@18.2.0)
-      '@react-stately/tree': 3.7.2(react@18.2.0)
-      '@react-types/accordion': 3.0.0-alpha.16(react@18.2.0)
-      '@react-types/button': 3.8.0(react@18.2.0)
-      '@react-types/shared': 3.20.0(react@18.2.0)
-      '@swc/helpers': 0.5.2
-      react: 18.2.0
-    dev: false
-
   /@react-aria/button@3.8.2(react@18.2.0):
     resolution: {integrity: sha512-d1Fgx2XrSk8WMFtGu/ta76m5Rx+f2CuHY1k6nD45QciszD26GbzHdLOSjxev97M6vHj/BOsGL01XcwmTL4fZHA==}
     peerDependencies:\n
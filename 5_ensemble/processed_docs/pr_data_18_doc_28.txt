Pull Request Number: 1876
Title: refactor(theme): theme plugin perf improved
Base Branch: main
Head Branch: feat/theme-plugin-speed-optimization
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/1876
State: MERGED
Created At: 2023-11-05T13:19:44Z
Merged At: 2023-11-05T13:43:37Z
Participants: jrgarciadev

Description:
Closes # 
üìù Description
Refactor theme plugin to improve performance and readability.
üí£ Is this a breaking change (Yes/No): No

üìù Additional Information

Commits:
- refactor(theme): refactor theme plugin to improve performance and
readability\n- chore(theme): changeset\n- Merge branch 'main' of github.com:nextui-org/nextui into feat/theme-plugin-speed-optimization\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: ff9107e95c41421faf5cfd85df00799527908e7b

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name              | Type  |
| ----------------- | ----- |
| @nextui-org/theme | Patch |
| @nextui-org/react | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/feat/theme-plugin-speed-optimization?filename=.changeset/real-ducks-fix.md&value=---%0A%22%40nextui-org%2Ftheme%22%3A%20patch%0A---%0A%0Arefactor(theme)%3A%20refactor%20theme%20plugin%20to%20improve%20performance%20and%0A)

\n- vercel: [vc]: #uN+iC1ctsbS6O12zkIxbEzy/4wDyatmfDd2gGbsZQTA=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9ESDc0d05OTVh0OEZHZWhBeVV5SEtjWHVoNHpmIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1mZWF0LXRoZW1lLXBsdWdpbi1zcGVlZC1vcC0yNTc2ODEtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1kb2NzLXYyLWdpdC1mZWF0LXRoZW1lLXBsdWdpbi1zcGVlZC1vcC0yNTc2ODEtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19LHsibmFtZSI6Im5leHR1aS1zdG9yeWJvb2stdjIiLCJyb290RGlyZWN0b3J5IjoicGFja2FnZXMvc3Rvcnlib29rIiwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi9GanRNVlRMdlZhUkVxUmRFSGZMYktFWm83b3hiIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZlYXQtdGhlbWUtcGx1Z2luLXNwZS01MmU3OWMtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZlYXQtdGhlbWUtcGx1Z2luLXNwZS01MmU3OWMtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/DH74wNNMXt8FGehAyUyHKcXuh4zf)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-feat-theme-plugin-speed-op-257681-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-feat-theme-plugin-speed-op-257681-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 5, 2023 1:37pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/FjtMVTLvVaREqRdEHfLbKEZo7oxb)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-feat-theme-plugin-spe-52e79c-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-feat-theme-plugin-spe-52e79c-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 5, 2023 1:37pm |


\n

Files Changed:
- .changeset/tall-suits-ring.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/theme": patch
+---
+
+Theme plugin optimization applied to make it faster\n- packages/core/theme/src/plugin.ts (modified, 76 changes)\n  Patch: @@ -23,6 +23,8 @@ import {baseStyles} from "./utils/classes";
 
 const DEFAULT_PREFIX = "nextui";
 
+const parsedColorsCache: Record<string, number[]> = {};
+
 // @internal
 const resolveConfig = (
   themes: ConfigThemes = {},
@@ -42,7 +44,7 @@ const resolveConfig = (
     colors: {},
   };
 
-  forEach(themes, ({extend, layout, colors}: ConfigTheme, themeName: string) => {
+  for (const [themeName, {extend, layout, colors}] of Object.entries(themes)) {
     let cssSelector = `.${themeName},[data-theme="${themeName}"]`;
     const scheme = themeName === "light" || themeName === "dark" ? themeName : extend;
 
@@ -58,7 +60,7 @@ const resolveConfig = (
       : {};
 
     // flatten color definitions
-    const flatColors = flattenThemeObject(colors);
+    const flatColors = flattenThemeObject(colors) as Record<string, string>;
 
     const flatLayout = layout ? mapKeys(layout, (value, key) => kebabCase(key)) : {};
 
@@ -71,12 +73,16 @@ const resolveConfig = (
     /**
      * Colors
      */
-    forEach(flatColors, (colorValue, colorName) => {
+    for (const [colorName, colorValue] of Object.entries(flatColors)) {
       if (!colorValue) return;
 
       try {
-        // const [h, s, l, defaultAlphaValue] = parseToHsla(colorValue);
-        const [h, s, l, defaultAlphaValue] = Color(colorValue).hsl().round().array();
+        const parsedColor =
+          parsedColorsCache[colorValue] || Color(colorValue).hsl().round().array();
+
+        parsedColorsCache[colorValue] = parsedColor;
+
+        const [h, s, l, defaultAlphaValue] = parsedColor;
         const nextuiColorVariable = `--${prefix}-${colorName}`;
         const nextuiOpacityVariable = `--${prefix}-${colorName}-opacity`;
 
@@ -106,45 +112,46 @@ const resolveConfig = (
         // eslint-disable-next-line no-console
         console.log("error", error?.message);
       }
-    });
+    }
 
     /**
      * Layout
      */
-    forEach(flatLayout, (value, key) => {
+    for (const [key, value] of Object.entries(flatLayout)) {
       if (!value) return;
 
-      if (typeof value === "object") {
-        forEach(value, (v, k) => {
-          const layoutVariable = `--${prefix}-${key}-${k}`;
-
-          resolved.utilities[cssSelector]![layoutVariable] = v;
-        });
-      } else if (key === "spacing-unit") {
-        const layoutVariable = `--${prefix}-${key}`;
+      const layoutVariablePrefix = `--${prefix}-${key}`;
 
-        // add the base unit "--spacing-unit: value"
-        resolved.utilities[cssSelector]![layoutVariable] = value;
+      if (typeof value === "object") {
+        for (const [nestedKey, nestedValue] of Object.entries(value)) {
+          const nestedLayoutVariable = `${layoutVariablePrefix}-${nestedKey}`;
 
-        const spacingScale = generateSpacingScale(Number(value));
+          resolved.utilities[cssSelector]![nestedLayoutVariable] = nestedValue;
+        }
+      } else {
+        // Process base units and spacing scale
+        if (key === "spacing-unit") {
+          resolved.utilities[cssSelector]![layoutVariablePrefix] = value; // Add the base unit
 
-        // add the list of spacing units "--spacing-unit-[key]: value"
-        forEach(spacingScale, (v, k) => {
-          const layoutVariable = `--${prefix}-${key}-${k}`;
+          const spacingScale = generateSpacingScale(Number(value));
 
-          resolved.utilities[cssSelector]![layoutVariable] = v;
-        });
-      } else {
-        const layoutVariable = `--${prefix}-${key}`;
+          for (const [scaleKey, scaleValue] of Object.entries(spacingScale)) {
+            const spacingVariable = `${layoutVariablePrefix}-${scaleKey}`;
 
-        if (layoutVariable.includes("opacity") && typeof value === "number") {
-          value = value.toString().replace(/^0\./, ".");
+            resolved.utilities[cssSelector]![spacingVariable] = scaleValue;
+          }
+        } else {
+          // Handle opacity values and other singular layout values
+          const formattedValue =
+            layoutVariablePrefix.includes("opacity") && typeof value === "number"
+              ? value.toString().replace(/^0\./, ".")
+              : value;
+
+          resolved.utilities[cssSelector]![layoutVariablePrefix] = formattedValue;
         }
-
-        resolved.utilities[cssSelector]![layoutVariable] = value;
       }
-    });
-  });
+    }
+  }
 
   return resolved;
 };
@@ -183,10 +190,11 @@ const corePlugin = (
           ...baseStyles(prefix),
         },
       });
+
       // add the css variables to "@layer utilities"
-      addUtilities({...resolved.utilities, ...utilities});
+      addUtilities({...resolved?.utilities, ...utilities});
       // add the theme as variant e.g. "[theme-name]:text-2xl"
-      resolved.variants.forEach((variant) => {
+      resolved?.variants.forEach((variant) => {
         addVariant(variant.name, variant.definition);
       });
     },
@@ -197,7 +205,7 @@ const corePlugin = (
           // @ts-ignore
           colors: {
             ...(addCommonColors ? commonColors : {}),
-            ...resolved.colors,
+            ...resolved?.colors,
           },
           scale: {
             "80": "0.8",\n
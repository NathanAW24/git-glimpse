Pull Request Number: 3268
Title: fix(input): input with file type
Base Branch: canary
Head Branch: fix/input-file-type
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/3268
State: MERGED
Created At: 2024-06-17T06:40:13Z
Merged At: 2024-07-06T17:54:48Z
Participants: wingkwong, jrgarciadev

Description:
Closes #2397
Closes #2311
Closes #2965

üìù Description

Fixed "uploading file only works on the second attempt" issue
Revised styles for input[type="file"]
Revised labelPlacement logic (only support outside / outside-left) for input[type="file"]

‚õ≥Ô∏è Current behavior (updates)

üöÄ New behavior



üí£ Is this a breaking change (Yes/No):
No
üìù Additional Information

Summary by CodeRabbit


New Features

Introduced support for file type inputs in the input component, enabling seamless file uploads.



Style

Updated styles to ensure file input elements have a pointer cursor and transparent background.



Bug Fixes

Adjusted logic to prevent blocking of file uploads by removing value and onChange attributes for file inputs.



Documentation

Updated input storybook to include examples of file input types.

Commits:
- fix(input): remove value & onChange for input[type="file"]\n- refactor(theme): remove unnecessary styles\n- fix(theme): input file styles\n- fix(theme): revise cursor-pointer on file\n- feat(input): add file input logic\n- feat(changeset): add changeset\n- Merge branch 'canary' into fix/input-file-type\n- refactor(input): use warn function from shared-utils instead\n- Merge branch 'canary' into fix/input-file-type\n- feat(input): add file type story\n- refactor(input): include in Input Types\n

Labels:


Comments:
- vercel: [vc]: #6GKANPrwBaIJPtusv0M2WBWbeihWuRalgGOu/sAdHdQ=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi85N1JSQXVBWldaZWNCSDZxc3Rmakdjenlpc3lUIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtaW5wdXQtZmlsZS10eXBlLW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktZG9jcy12Mi1naXQtZml4LWlucHV0LWZpbGUtdHlwZS1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX0seyJuYW1lIjoibmV4dHVpLXN0b3J5Ym9vay12MiIsInJvb3REaXJlY3RvcnkiOiJwYWNrYWdlcy9zdG9yeWJvb2siLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktc3Rvcnlib29rLXYyLzREN0hBWk5kbTc1OVJ5VGdCcGlyUnVHVzd1dkoiLCJwcmV2aWV3VXJsIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LWlucHV0LWZpbGUtdHlwZS1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LWlucHV0LWZpbGUtdHlwZS1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/97RRAuAZWZecBH6qstfjGczyisyT)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-input-file-type-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-input-file-type-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jul 6, 2024 8:41am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/4D7HAZNdm759RyTgBpirRuGW7uvJ)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-input-file-type-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-input-file-type-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jul 6, 2024 8:41am |


\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 39f47fe0c1f0850a9055be577c6db635c4da0336

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 4 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/input        | Patch |
| @nextui-org/theme        | Patch |
| @nextui-org/autocomplete | Patch |
| @nextui-org/react        | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/input-file-type?filename=.changeset/long-dryers-smash.md&value=---%0A%22%40nextui-org%2Finput%22%3A%20patch%0A%22%40nextui-org%2Ftheme%22%3A%20patch%0A---%0A%0Afix(input)%3A%20input%20with%20file%20type%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The recent changes introduce improved handling for file input types in the `@nextui-org/input` and `@nextui-org/theme` packages. The primary adjustments involve logic modifications in `use-input.ts` and CSS updates in `input.ts` to rectify issues with file uploads. These include preventing the blockage of file uploads on the first attempt and ensuring that the file input value is cleared correctly.

## Changes

| File | Change Summary |
|------|----------------|
| `packages/components/input/src/use-input.ts` | Added logic to properly handle file inputs, including removing `value` and `onChange` attributes, adjusting label placement, and modifying data attributes. |
| `packages/core/theme/src/components/input.ts` | Added a new CSS class for file input styles and removed a label placement configuration block. |
| `packages/components/input/stories/input.stories.tsx` | Added support for file input types in the `InputTypesTemplate` component. |

## Assessment against linked issues

| Objective | Addressed | Explanation |
|-----------|-----------|-------------|
| Fix the issue where input with file type requires a second attempt to set the file value (#2397, #2311) | ‚úÖ | |
| Ensure the file input value is cleared correctly on each click (#2311) | ‚úÖ | |
| Add support for uploading single or multiple images via file input (#2965) | ‚úÖ | |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

.changeset/rich-berries-switch.md: ## Short summary

The new file introduces revised styles and logic for input with file type, impacting the `@nextui-org/input` and `@nextui-org/theme` packages.

---

packages/components/input/src/use-input.ts: ### Short Summary:
The changes in `use-input.ts` include the addition of logic to handle file type inputs (`type="file"`), specifically removing `value` and `onChange` attributes for such inputs to prevent blocking file uploads. Additionally, there are adjustments related to label placement for file type inputs, defaulting to "outside" if not defined and warning and changing to "outside" if set to "inside". Some modifications are made to data attributes based on the presence of file type inputs.

### Alterations to the declarations of exported or public entities:
- `export function useInput<T extends HTMLInputElement | HTMLTextAreaElement = HTML` in `packages/components/input/src/use-input.ts`:
  - Added `const isFileTypeInput = type === "file";`
  - Removed `delete inputProps.value;` and `delete inputProps.onChange;` for file type inputs handling.
  - Adjusted logic for `labelPlacement` based on file type inputs.
  - Modified data attributes calculations to include `isFileTypeInput` in certain conditions.

---

packages/core/theme/src/components/input.ts: ### Summary

In the `input.ts` file in the `packages/core/theme/src/components` directory, the changes include adding a new CSS class for the input element (`file:cursor-pointer file:bg-transparent file:border-0`) and removing a configuration block related to `labelPlacement` and `isMultiline`.

### Alterations to the declarations of exported or public entities

- `const input` in `input.ts` in `packages/core/theme/src/components`
  - Added CSS class: `"file:cursor-pointer file:bg-transparent file:border-0"`
  - Removed configuration block for `labelPlacement` and `isMultiline`

---

packages/components/input/stories/input.stories.tsx: ## Summary

Added support for file input types in the `InputTypesTemplate` component in `input.stories.tsx`.

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR summary

**Title:** fix(input): input with file type  
**User:** wingkwong  
**Number:** 3268  
**URL:** [https://github.com/nextui-org/nextui/pull/3268](https://github.com/nextui-org/nextui/pull/3268)  

**Description:**  
This pull request addresses multiple issues related to the `input` component with `file` type in the NextUI library. The key changes include:

- Fixing the issue where uploading a file only works on the second attempt.
- Revising styles for `input[type="file"]`.
- Revising label placement logic to support only `outside` and `outside-left` for `input[type="file"]`.

The PR closes issues #2397, #2311, and #2965. The current behavior showed an issue where the file input required two attempts to update the value. The new behavior ensures that the file input works correctly on the first attempt. Additionally, the styles and label placement logic have been updated for better functionality and appearance.

## Objectives from linked issues

### Issue #2397: Input with type file not working on first attempt

**Objective:**  
Fix the bug where the `input` component with `file` type requires two attempts to select a file. The expected behavior is to set the file on the first attempt.

### Issue #2311: Bug when input type is file

**Objective:**  
Address the issue where the selected file is logged as "undefined" on the first attempt and correctly logged on the second attempt. The goal is to ensure the file input value is cleared consistently and the correct file information is logged on the first attempt.

### Issue #2965: Input for file type to upload images single or multiple

**Objective:**  
Provide a solution for users to upload one or multiple images using the `input` component with `file` type. The current alternative involves using the `Input` element with type `file`, but the PR aims to improve this functionality.

## Comments summary

**Comment by jrgarciadev:**  
Requested wingkwong to add the `file` type to the `types` storybook for better documentation and testing. The reference link to the storybook was provided: [NextUI Storybook](https://nextui-storybook-v2-git-fix-input-file-type-nextui-org.vercel.app/?path=%2Fstory%2Fcomponents-input--input-types).

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

## Summary of generated summaries

The recent changes introduce revised styles and logic for handling file type inputs in the `@nextui-org/input` and `@nextui-org/theme` packages. Specifically, in the `use-input.ts` file, logic has been added to manage file type inputs by removing the `value` and `onChange` attributes to avoid blocking file uploads. The label placement for file type inputs is adjusted to default to "outside" if not defined, and it automatically changes to "outside" with a warning if set to "inside". Additionally, data attributes are modified to include conditions based on file type inputs.

In the `input.ts` file within the `packages/core/theme/src/components` directory, a new CSS class is added for file input elements, making them cursor pointers, with a transparent background and no border. A configuration block related to `labelPlacement` and `isMultiline` is removed.

In the `input.stories.tsx` file, support for file input types is added to the `InputTypesTemplate` component.

## Alterations to the declarations of exported or public entities

### `packages/components/input/src/use-input.ts`

**Before:**
```typescript
export function useInput<T extends HTMLInputElement | HTMLTextAreaElement = HTML> {
    // Original logic without file type handling
}
```

**After:**
```typescript
export function useInput<T extends HTMLInputElement | HTMLTextAreaElement = HTML> {
    const isFileTypeInput = type === "file";
    if (isFileTypeInput) {
        delete inputProps.value;
        delete inputProps.onChange;
    }
    // Adjusted logic for label placement and data attributes
}
```

### `packages/core/theme/src/components/input.ts`

**Before:**
```typescript
const input = {
    // Original CSS and configuration
    labelPlacement: /* original logic */,
    isMultiline: /* original logic */,
}
```

**After:**
```typescript
const input = {
    "file:cursor-pointer file:bg-transparent file:border-0",
    // Removed configuration block for labelPlacement and isMultiline
}
```

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 7b9338006278cfcbf12dbe09f9c61244f88e4b55 -->
<!-- 39f47fe0c1f0850a9055be577c6db635c4da0336 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- jrgarciadev: @wingkwong add the `file` type to the `types` storybook https://nextui-storybook-v2-git-fix-input-file-type-nextui-org.vercel.app/?path=%2Fstory%2Fcomponents-input--input-types\n- wingkwong: @jrgarciadev added to Input Types.

![image](https://github.com/nextui-org/nextui/assets/35857179/9e9da7b2-f140-4500-ae35-fa039af19d4f)
\n

Files Changed:
- .changeset/rich-berries-switch.md (added, 6 changes)\n  Patch: @@ -0,0 +1,6 @@
+---
+"@nextui-org/input": patch
+"@nextui-org/theme": patch
+---
+
+revised styles and logic for input with file type (#2397, #2311, #2965)\n- packages/components/input/src/use-input.ts (modified, 32 changes)\n  Patch: @@ -13,7 +13,7 @@ import {useFocusRing} from "@react-aria/focus";
 import {input} from "@nextui-org/theme";
 import {useDOMRef, filterDOMProps} from "@nextui-org/react-utils";
 import {useFocusWithin, useHover, usePress} from "@react-aria/interactions";
-import {clsx, dataAttr, isEmpty, objectToDeps, safeAriaLabel} from "@nextui-org/shared-utils";
+import {clsx, dataAttr, isEmpty, objectToDeps, safeAriaLabel, warn} from "@nextui-org/shared-utils";
 import {useControlledState} from "@react-stately/utils";
 import {useMemo, Ref, useCallback, useState} from "react";
 import {chain, mergeProps} from "@react-aria/utils";
@@ -147,6 +147,7 @@ export function useInput<T extends HTMLInputElement | HTMLTextAreaElement = HTML
   const isFilledWithin = isFilled || isFocusWithin;
   const isHiddenType = type === "hidden";
   const isMultiline = originalProps.isMultiline;
+  const isFileTypeInput = type === "file";
 
   const baseStyles = clsx(classNames?.base, className, isFilled ? "is-filled" : "");
 
@@ -191,6 +192,14 @@ export function useInput<T extends HTMLInputElement | HTMLTextAreaElement = HTML
     domRef,
   );
 
+  if (isFileTypeInput) {
+    // for input[type="file"], we don't need `value` and `onChange` from `useTextField`
+    // otherwise, the default value with empty string will block the first attempt of file upload
+    // hence, remove `value` and `onChange` attribute here
+    delete inputProps.value;
+    delete inputProps.onChange;
+  }
+
   const {isFocusVisible, isFocused, focusProps} = useFocusRing({
     autoFocus,
     isTextInput: true,
@@ -212,6 +221,19 @@ export function useInput<T extends HTMLInputElement | HTMLTextAreaElement = HTML
   const isInvalid = validationState === "invalid" || originalProps.isInvalid || isAriaInvalid;
 
   const labelPlacement = useMemo<InputVariantProps["labelPlacement"]>(() => {
+    if (isFileTypeInput) {
+      // if `labelPlacement` is not defined, choose `outside` instead
+      // since the default value `inside` is not supported in file input
+      if (!originalProps.labelPlacement) return "outside";
+
+      // throw a warning if `labelPlacement` is `inside`
+      // and change it to `outside`
+      if (originalProps.labelPlacement === "inside") {
+        warn("Input with file type doesn't support inside label. Converting to outside ...");
+
+        return "outside";
+      }
+    }
     if ((!originalProps.labelPlacement || originalProps.labelPlacement === "inside") && !label) {
       return "outside";
     }
@@ -271,10 +293,14 @@ export function useInput<T extends HTMLInputElement | HTMLTextAreaElement = HTML
         className: slots.base({class: baseStyles}),
         "data-slot": "base",
         "data-filled": dataAttr(
-          isFilled || hasPlaceholder || hasStartContent || isPlaceholderShown,
+          isFilled || hasPlaceholder || hasStartContent || isPlaceholderShown || isFileTypeInput,
         ),
         "data-filled-within": dataAttr(
-          isFilledWithin || hasPlaceholder || hasStartContent || isPlaceholderShown,
+          isFilledWithin ||
+            hasPlaceholder ||
+            hasStartContent ||
+            isPlaceholderShown ||
+            isFileTypeInput,
         ),
         "data-focus-within": dataAttr(isFocusWithin),
         "data-focus-visible": dataAttr(isFocusVisible),\n- packages/components/input/stories/input.stories.tsx (modified, 2 changes)\n  Patch: @@ -343,6 +343,8 @@ const InputTypesTemplate = (args) => (
     <Input {...args} label="Month" placeholder="Enter your month" type="month" />
     <Input {...args} label="Week" placeholder="Enter your week" type="week" />
     <Input {...args} label="Range" placeholder="Enter your range" type="range" />
+    <Input {...args} label="Single File" type="file" />
+    <Input {...args} multiple label="Multiple Files" type="file" />
   </div>
 );
 \n- packages/core/theme/src/components/input.ts (modified, 9 changes)\n  Patch: @@ -43,6 +43,7 @@ const input = tv({
       "w-full font-normal bg-transparent !outline-none placeholder:text-foreground-500 focus-visible:outline-none",
       "data-[has-start-content=true]:ps-1.5",
       "data-[has-end-content=true]:pe-1.5",
+      "file:cursor-pointer file:bg-transparent file:border-0",
     ],
     clearButton: [
       "p-2",
@@ -594,13 +595,7 @@ const input = tv({
         label: ["group-data-[filled-within=true]:pointer-events-auto"],
       },
     },
-    // labelPlacement=[outside,outside-left]
-    {
-      labelPlacement: ["outside", "outside-left"],
-      class: {
-        input: "h-full",
-      },
-    },
+    // labelPlacement=[outside] & isMultiline
     {
       labelPlacement: "outside",
       isMultiline: false,\n
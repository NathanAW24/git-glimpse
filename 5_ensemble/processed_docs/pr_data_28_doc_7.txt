Pull Request Number: 491
Title: refactor(react-radio): integration with react-aria radio
Base Branch: next
Head Branch: refactor/radio
Author: tianenpang
URL: https://github.com/nextui-org/nextui/pull/491
State: MERGED
Created At: 2022-05-26T08:33:32Z
Merged At: 2022-06-02T19:10:19Z
Participants: tianenpang, codecov-commenter, jrgarciadev

Description:
üìù Description
Refactor Radio and integration with react-aria/radio.

üöÄ New behavior
Usage

Radio needs to be wrapped in the Radio.Group.

Styles

The border-radius will be the same as the Checkbox when isSquared.
Keeps RadioPoint disabled style when isChecked, isDisabled and hovered.

Keyboard Accessibility

Tab key to navigate to the group.
Arrow keys to navigate and select within the group.

Radio Props



OLD APIs
NEW APIs




textColor
labelColor


checked
-


animated
disableAnimation


squared
isSquared


disabled
isDisabled


preventDefault
-


onChange
-


...
-



Radio Group Props



OLD APIs
NEW APIs




textColor
labelColor


value: string, number
value: string


initialValue: string, number
defaultValue: string


row
isRow


disabled
isDisabled


onChange: (e:RadioEvent) => void
onChange: (value: T) => void


...
-



Radio Desc Props



NEW APIs




as


css



Radio Types



OLD Types
NEW Types




RadioEvent
-


RadioEventTarget
-



üí£ Is this a breaking change (Yes/No):
Yes

Commits:
- refactor(react-radio): integration with react-aria radio\n- refactor(react-radio): update docs, unit tests and radio desc types\n- chore(react-radio): pinned dependencies version\n- Merge branch 'next' into refactor/radio\n

Labels:
üß± Type: Refactoring

Comments:
- codecov-commenter: # [Codecov](https://codecov.io/gh/nextui-org/nextui/pull/491?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) Report
> Merging [#491](https://codecov.io/gh/nextui-org/nextui/pull/491?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) (3ada8bb) into [main](https://codecov.io/gh/nextui-org/nextui/commit/3aa92a9e0b63a06821bded15c063620f46fc4535?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) (3aa92a9) will **increase** coverage by `0.06%`.
> The diff coverage is `100.00%`.

```diff
@@            Coverage Diff             @@
##             main     #491      +/-   ##
==========================================
+ Coverage   74.95%   75.01%   +0.06%     
==========================================
  Files         183      186       +3     
  Lines        2831     2830       -1     
  Branches      843      847       +4     
==========================================
+ Hits         2122     2123       +1     
+ Misses        698      696       -2     
  Partials       11       11              
```


| [Impacted Files](https://codecov.io/gh/nextui-org/nextui/pull/491?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) | Coverage Œî | |
|---|---|---|
| [packages/react/src/radio/index.ts](https://codecov.io/gh/nextui-org/nextui/pull/491/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL3JhZGlvL2luZGV4LnRz) | `100.00% <100.00%> (√∏)` | |
| [packages/react/src/radio/radio-context.ts](https://codecov.io/gh/nextui-org/nextui/pull/491/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL3JhZGlvL3JhZGlvLWNvbnRleHQudHM=) | `100.00% <100.00%> (√∏)` | |
| [packages/react/src/radio/radio-desc.tsx](https://codecov.io/gh/nextui-org/nextui/pull/491/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL3JhZGlvL3JhZGlvLWRlc2MudHN4) | `100.00% <100.00%> (√∏)` | |
| [packages/react/src/radio/radio-group.tsx](https://codecov.io/gh/nextui-org/nextui/pull/491/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL3JhZGlvL3JhZGlvLWdyb3VwLnRzeA==) | `100.00% <100.00%> (√∏)` | |
| [packages/react/src/radio/radio.styles.ts](https://codecov.io/gh/nextui-org/nextui/pull/491/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL3JhZGlvL3JhZGlvLnN0eWxlcy50cw==) | `100.00% <100.00%> (√∏)` | |
| [packages/react/src/radio/radio.tsx](https://codecov.io/gh/nextui-org/nextui/pull/491/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL3JhZGlvL3JhZGlvLnRzeA==) | `100.00% <100.00%> (+4.65%)` | :arrow_up: |
| [packages/react/src/radio/use-radio-group.ts](https://codecov.io/gh/nextui-org/nextui/pull/491/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL3JhZGlvL3VzZS1yYWRpby1ncm91cC50cw==) | `100.00% <100.00%> (√∏)` | |
| [packages/react/src/radio/use-radio.ts](https://codecov.io/gh/nextui-org/nextui/pull/491/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL3JhZGlvL3VzZS1yYWRpby50cw==) | `100.00% <100.00%> (√∏)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nextui-org/nextui/pull/491?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None)
> `Œî = absolute <relative> (impact)`, `√∏ = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nextui-org/nextui/pull/491?src=pr&el=footer&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None). Last update [3aa92a9...3ada8bb](https://codecov.io/gh/nextui-org/nextui/pull/491?src=pr&el=lastupdated&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None).
\n- jrgarciadev: Thanks a lot @tianenpang üôèüèª , excellent job! \n

Files Changed:
- apps/docs/content/components/radio/color.ts (modified, 18 changes)\n  Patch: @@ -1,26 +1,22 @@
-const App = `import { Radio, Spacer } from "@nextui-org/react";
+const App = `import { Radio } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Radio.Group row value="primary">
+    <Radio.Group label="Colors" defaultValue="primary" isRow>
       <Radio value="primary" color="primary">
-        Primary
+        primary
       </Radio>
-      <Spacer />
       <Radio value="secondary" color="secondary">
-        Secondary
+        secondary
       </Radio>
-      <Spacer />
       <Radio value="success" color="success">
-        Success
+        success
       </Radio>
-      <Spacer />
       <Radio value="warning" color="warning">
-        Warning
+        warning
       </Radio>
-      <Spacer />
       <Radio value="error" color="error">
-        Error
+        error
       </Radio>
     </Radio.Group>
   );\n- apps/docs/content/components/radio/controlled-vs-uncontrolled.ts (added, 40 changes)\n  Patch: @@ -0,0 +1,40 @@
+const App = `import React from 'react'
+import { Radio, Grid } from "@nextui-org/react";
+
+export default function App() {
+  const [checked, setChecked] = React.useState('B');
+
+  return (
+    <Grid.Container gap={2}>
+      <Grid>
+        <Radio.Group label="Options (controlled)" defaultValue="A">
+          <Radio value="A">Option A</Radio>
+          <Radio value="B">Option B</Radio>
+          <Radio value="C">Option C</Radio>
+          <Radio value="D">Option D</Radio>
+        </Radio.Group>
+      </Grid>
+      <Grid>
+        <Radio.Group 
+          label="Options (uncontrolled)"
+          color="secondary"
+          value={checked}
+          onChange={setChecked}
+        >
+          <Radio value="A">Option A</Radio>
+          <Radio value="B">Option B</Radio>
+          <Radio value="C">Option C</Radio>
+          <Radio value="D">Option D</Radio>
+        </Radio.Group>
+      </Grid>
+    </Grid.Container>
+  );
+}`;
+
+const react = {
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/radio/default.ts (modified, 2 changes)\n  Patch: @@ -2,7 +2,7 @@ const App = `import { Radio } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Radio.Group value="A">
+    <Radio.Group label="Options" defaultValue="A">
       <Radio value="A">Option A</Radio>
       <Radio value="B">Option B</Radio>
       <Radio value="C">Option C</Radio>\n- apps/docs/content/components/radio/description.ts (modified, 8 changes)\n  Patch: @@ -2,7 +2,7 @@ const App = `import { Radio } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Radio.Group value="1">
+    <Radio.Group label="Options" defaultValue="1">
       <Radio value="1">
         Option 1
         <Radio.Description>
@@ -17,9 +17,9 @@ export default function App() {
       </Radio>
       <Radio value="3">
         Option 3
-          <Radio.Desc>
-            Description for Option2
-          </Radio.Desc>
+        <Radio.Desc>
+          Description for Option2
+        </Radio.Desc>
       </Radio>
     </Radio.Group>
   );\n- apps/docs/content/components/radio/disabled.ts (modified, 24 changes)\n  Patch: @@ -2,27 +2,13 @@ const App = `import { Radio } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Radio.Group value="1">
-      <Radio 
-        value="1"
-      >
-        Option 1
-      </Radio>
-      <Radio 
-        value="2" 
-        disabled
-      >
+    <Radio.Group label="Options" defaultValue="1">
+      <Radio value="1">Option 1</Radio>
+      <Radio value="2" isDisabled>
         Option 2
       </Radio>
-      <Radio 
-        value="3"
-      >
-        Option 3
-      </Radio>
-      <Radio 
-        value="4" 
-        disabled
-      >
+      <Radio value="3">Option 3</Radio>
+      <Radio value="4" isDisabled>
         Option 4
       </Radio>
     </Radio.Group>\n- apps/docs/content/components/radio/events.ts (added, 31 changes)\n  Patch: @@ -0,0 +1,31 @@
+const App = `import React from 'react'
+import { Radio, Text, Spacer } from "@nextui-org/react";
+
+export default function App() {
+  const [checked, setChecked] = React.useState('');
+
+  return (
+    <>
+      <Radio.Group 
+        label="Options"
+        value={checked}
+        onChange={setChecked}
+      >
+        <Radio value="A">Option A</Radio>
+        <Radio value="B">Option B</Radio>
+        <Radio value="C">Option C</Radio>
+        <Radio value="D">Option D</Radio>
+      </Radio.Group>
+      <Spacer y={1} />
+      <Text>You've checked: {checked}</Text>
+    </>
+  );
+}`;
+
+const react = {
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/radio/index.ts (modified, 24 changes)\n  Patch: @@ -1,19 +1,25 @@
-import default_radio from "./default";
-import disabled from "./disabled";
-import size from "./size";
-import color from "./color";
-import textColor from "./textColor";
-import squared from "./squared";
-import description from "./description";
-import row from "./row";
+import default_radio from './default';
+import disabled from './disabled';
+import size from './size';
+import color from './color';
+import labelColor from './labelColor';
+import squared from './squared';
+import description from './description';
+import row from './row';
+import noAnimation from './noAnimation';
+import controlledVsUncontrolled from './controlled-vs-uncontrolled';
+import events from './events';
 
 export default {
   default_radio,
   disabled,
   size,
   color,
-  textColor,
+  labelColor,
   squared,
   description,
   row,
+  noAnimation,
+  controlledVsUncontrolled,
+  events
 };\n- apps/docs/content/components/radio/labelColor.ts (added, 31 changes)\n  Patch: @@ -0,0 +1,31 @@
+const App = `import { Radio } from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <Radio.Group label="Label colors" defaultValue="primary" isRow>
+      <Radio value="primary" color="primary" labelColor="primary">
+        primary
+      </Radio>
+      <Radio value="secondary" color="secondary" labelColor="secondary">
+        secondary
+      </Radio>
+      <Radio value="success" color="success" labelColor="success">
+        success
+      </Radio>
+      <Radio value="warning" color="warning" labelColor="warning">
+        warning
+      </Radio>
+      <Radio value="error" color="error" labelColor="error">
+        error
+      </Radio>
+    </Radio.Group>
+  );
+}`;
+
+const react = {
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/radio/noAnimation.ts (added, 20 changes)\n  Patch: @@ -0,0 +1,20 @@
+const App = `import { Radio } from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <Radio.Group label="Options" defaultValue="1">
+      <Radio value="1" disableAnimation={true}>Option 1</Radio>
+      <Radio value="2" disableAnimation={true}>Option 2</Radio>
+      <Radio value="3" disableAnimation={true}>Option 3</Radio>
+      <Radio value="4" disableAnimation={true}>Option 4</Radio>
+    </Radio.Group>
+  );
+}`;
+
+const react = {
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/radio/row.ts (modified, 17 changes)\n  Patch: @@ -2,15 +2,24 @@ const App = `import { Radio } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Radio.Group value="1" row>
+    <Radio.Group label="Options" defaultValue="1" isRow>
       <Radio value="1">
-        Option 1<Radio.Description>Description for Option1</Radio.Description>
+        Option 1
+        <Radio.Desc>
+          Description for Option1
+        </Radio.Desc>
       </Radio>
       <Radio value="2">
-        Option 2<Radio.Desc>Description for Option2</Radio.Desc>
+        Option 2
+        <Radio.Desc>
+          Description for Option2
+        </Radio.Desc>
       </Radio>
       <Radio value="3">
-        Option 3<Radio.Desc>Description for Option2</Radio.Desc>
+        Option 3
+        <Radio.Desc>
+          Description for Option2
+        </Radio.Desc>
       </Radio>
     </Radio.Group>
   );\n- apps/docs/content/components/radio/size.ts (modified, 44 changes)\n  Patch: @@ -1,50 +1,24 @@
-const App = `import { Radio, Spacer } from "@nextui-org/react";
-import React from "react";
+const App = `import { Radio } from "@nextui-org/react";
 
 export default function App() {
-  const [selected, setSelected] = React.useState("xs");
   return (
-    <>
-      <Radio
-        checked={selected === "xs"}
-        onChange={() => setSelected("xs")}
-        size="xs"
-      >
-        xs
+    <Radio.Group label="Sizes" defaultValue="md">
+      <Radio value="xs" size="xs">
+        mini
       </Radio>
-      <Spacer />
-      <Radio
-        checked={selected === "sm"}
-        onChange={() => setSelected("sm")}
-        size="sm"
-      >
+      <Radio value="sm" size="sm">
         small
       </Radio>
-      <Spacer />
-      <Radio
-        checked={selected === "md"}
-        onChange={() => setSelected("md")}
-        size="md"
-      >
+      <Radio value="md" size="md">
         medium
       </Radio>
-      <Spacer />
-      <Radio
-        checked={selected === "lg"}
-        onChange={() => setSelected("lg")}
-        size="lg"
-      >
+      <Radio value="lg" size="lg">
         large
       </Radio>
-      <Spacer />
-      <Radio
-        checked={selected === "xl"}
-        onChange={() => setSelected("xl")}
-        size="xl"
-      >
+      <Radio value="xl" size="xl">
         xlarge
       </Radio>
-    </>
+    </Radio.Group>
   );
 }`;
 \n- apps/docs/content/components/radio/squared.ts (modified, 22 changes)\n  Patch: @@ -2,29 +2,17 @@ const App = `import { Radio } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Radio.Group value="1">
-      <Radio 
-        value="1" 
-        squared
-      >
+    <Radio.Group label="Options" defaultValue="1">
+      <Radio value="1" isSquared>
         Option 1
       </Radio>
-      <Radio 
-        value="2" 
-        squared
-      >
+      <Radio value="2" isSquared>
         Option 2
       </Radio>
-      <Radio 
-        value="3" 
-        squared
-      >
+      <Radio value="3" isSquared>
         Option 3
       </Radio>
-      <Radio 
-        value="4" 
-        squared
-      >
+      <Radio value="4" isSquared>
         Option 4
       </Radio>
     </Radio.Group>\n- apps/docs/content/components/radio/textColor.ts (removed, 55 changes)\n  Patch: @@ -1,55 +0,0 @@
-const App = `import { Radio, Spacer } from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <Radio.Group row value="primary">
-      <Radio 
-        value="primary" 
-        color="primary" 
-        textColor="primary"
-      >
-        Primary
-      </Radio>
-      <Spacer />
-      <Radio 
-        value="secondary" 
-        color="secondary" 
-        textColor="secondary"
-      >
-        Secondary
-      </Radio>
-      <Spacer />
-      <Radio 
-        value="success" 
-        color="success" 
-        textColor="success"
-      >
-        Success
-      </Radio>
-      <Spacer />
-      <Radio 
-        value="warning" 
-        color="warning" 
-        textColor="warning"
-      >
-        Warning
-      </Radio>
-      <Spacer />
-      <Radio 
-        value="error" 
-        color="error" 
-        textColor="error"
-      >
-        Error
-      </Radio>
-    </Radio.Group>
-  );
-}`;
-
-const react = {
-  '/App.js': App
-};
-
-export default {
-  ...react
-};\n- apps/docs/content/docs/components/radio.mdx (modified, 118 changes)\n  Patch: @@ -18,7 +18,7 @@ import { Radio } from '@nextui-org/react';
 
 <Playground
   title="Default"
-  desc="You can change the state with `checked` prop"
+  desc="`Radio.Group` accepts multiple `Radio` elements as children. Each `Radio` represents an item that can only be checked singularly, labeled by its children."
   files={radioContent.default_radio}
 />
 
@@ -37,36 +37,58 @@ import { Radio } from '@nextui-org/react';
 <Playground
   title="Colors"
   overflow="auto"
-  desc="You can change the color with `color` prop"
+  desc="You can change the color with `color` prop."
   files={radioContent.color}
 />
 
 <Playground
-  title="Text Colors"
+  title="Label Colors"
   overflow="auto"
-  desc="You can change the `Radio` text color with `textColor` prop"
-  files={radioContent.textColor}
+  desc="You can change the `Radio` label color with `labelColor` prop."
+  files={radioContent.labelColor}
 />
 
 <Playground
   title="Squared"
-  desc="You can change the full style to a squared `Radio` with the `squared` property."
+  desc="You can change the full style to a squared `Radio` with the `isSquared` property."
   files={radioContent.squared}
 />
 
 <Playground
   title="Description"
-  desc="You can add a description to the `Radio` with `Radio.Description` component"
+  desc="You can add a description to the `Radio` with `Radio.Description` component."
   files={radioContent.description}
 />
 
 <Playground
   title="Row"
   overflow="auto"
-  desc="You can change the `Radio.Group` direction with `row` prop."
+  desc="You can change the `Radio.Group` direction with `isRow` prop."
   files={radioContent.row}
 />
 
+<Playground
+  title="No Animated"
+  desc="You can disable the animation of the entire `Radio` with the property `disableAnimation={true}`."
+  files={radioContent.noAnimation}
+/>
+
+<Playground
+  title="Controlled vs Uncontrolled"
+  desc="An initial, **uncontrolled** value can be provided to the `Radio.Group` using the defaultValue prop. Alternatively, a **controlled** value can be provided using the value prop."
+  files={radioContent.controlledVsUncontrolled}
+/>
+
+> Note: See React's documentation on [uncontrolled components](https://reactjs.org/docs/uncontrolled-components.html) for more info.
+
+<Playground
+  title="Events"
+  desc="`Radio.Group` accepts an `onChange` prop, which is triggered when a user checks an item from the list. The example below uses `onChange` to log how the user is interacting with the component."
+  files={radioContent.events}
+/>
+
+> Accessibility: If a visible label isn't specified for a `Radio.Group`, an aria-label must be provided for accessibility. If the field is labeled by a separate element, an aria-labelledby prop must be provided using the id of the labeling element instead. `Radio` elements within a group should always have a visible label.
+
 <Spacer y={3} />
 
 ### APIs
@@ -75,48 +97,45 @@ import { Radio } from '@nextui-org/react';
 
 #### Radio Props
 
-| Attribute          | Type                           | Accepted values                | Description                                                               | Default   |
-| ------------------ | ------------------------------ | ------------------------------ | ------------------------------------------------------------------------- | --------- |
-| **value**          | `string`                       | -                              | Unique ident value (in group)                                             | -         |
-| **color**          | `SimpleColors` `string`        | [SimpleColors](#simple-colors) | Change radio color                                                        | `primary` |
-| **size**           | `NormalSizes` `number`         | [NormalSizes](#normal-sizes)   | Radio size                                                                | `medium`  |
-| **textColor**      | `SimpleColors` `string`        | [SimpleColors](#simple-colors) | Change radio text color                                                   | `default` |
-| **checked**        | `boolean`                      | `true/false`                   | Selected or not (in single)                                               | `false`   |
-| **animated**       | `boolean`                      | `true/false`                   | Display radio animations                                                  | `true`    |
-| **squared**        | `boolean`                      | `true/false`                   | Squared radio                                                             | `false`   |
-| **disabled**       | `boolean`                      | `true/false`                   | Disable radio                                                             | `false`   |
-| **preventDefault** | `boolean`                      | `true/false`                   | Prevent default event on when is selected through the `Space, Enter` keys | `true`    |
-| **onChange**       | `(e: RadioEvent) => void       | -                              | The callback invoked when the checked state of the `Radio` changes.       | -         |
-| **id**             | `string`                       | -                              | Native id attr                                                            | -         |
-| **css**            | `Stitches.CSS`                 | -                              | Override Default CSS style                                                | -         |
-| **as**             | `keyof JSX.IntrinsicElements`  | -                              | Changes which tag component outputs                                       | `label`   |
-| ...                | `InputHTMLAttributes`          | `'id', 'className', ...`       | Native radio props                                                        | -         |
+| Attribute            | Type                          | Accepted values                | Description                         | Default   |
+| -------------------- | ----------------------------- | ------------------------------ | ----------------------------------- | --------- |
+| **value**            | `string`                      | -                              | Unique ident value                  | -         |
+| **color**            | `SimpleColors` `string`       | [SimpleColors](#simple-colors) | Change radio color                  | `primary` |
+| **labelColor**       | `SimpleColors` `string`       | [SimpleColors](#simple-colors) | Change radio label color            | `default` |
+| **size**             | `NormalSizes` `number`        | [NormalSizes](#normal-sizes)   | Radio size                          | `medium`  |
+| **disableAnimation** | `boolean`                     | `true/false`                   | Whether the checkbox has animations | `false`   |
+| **isSquared**        | `boolean`                     | `true/false`                   | Squared radio                       | `false`   |
+| **isDisabled**       | `boolean`                     | `true/false`                   | Disable radio                       | `false`   |
+| **id**               | `string`                      | -                              | Native id attr                      | -         |
+| **css**              | `Stitches.CSS`                | -                              | Override Default CSS style          | -         |
+| **as**               | `keyof JSX.IntrinsicElements` | -                              | Changes which tag component outputs | `label`   |
 
 <Spacer y={2} />
 
 #### Radio Group Props
 
-| Attribute        | Type                                       | Accepted values                | Description                            | Default         |
-| ---------------- | ------------------------------------------ | ------------------------------ | -------------------------------------- | --------------- |
-| **color**        | `SimpleColors` `string`                    | [SimpleColors](#simple-colors) | Change radio group color               | `primary`       |
-| **textColor**    | `SimpleColors` `string`                    | [SimpleColors](#simple-colors) | Change radio group text color          | `default`       |
-| **initialValue** | `string/number`                            | -                              | Initial radio group value              | -               |
-| **value**        | `string/number`                            | -                              | Selected child radio                   | -               |
-| **row**          | `boolean`                                  | `true/false`                   | Change the radio group direction       | `false`         |
-| **disabled**     | `boolean`                                  | `true/false`                   | Disable all radios                     | `false`         |
-| **size**         | `NormalSizes`                              | [NormalSizes](#normal-sizes)   | Size of all radios in the group        | `medium`        |
-| **onChange**     | `(e:`[RadioEvent](#radio-event)) `=> void` | -                              | Radio group event handler              | -               |
-| **css**          | `Stitches.CSS`                             | -                              | Override Default CSS style             | -               |
-| **as**           | `keyof JSX.IntrinsicElements`              | -                              | Changes which tag component outputs    | `div`           |
-| ...              | `InputHTMLAttributes`                      | `'id', 'className', ...`       | Native props                           | -               |
+| Attribute        | Type                          | Accepted values                | Description                         | Default   |
+| ---------------- | ----------------------------- | ------------------------------ | ----------------------------------- | --------- |
+| **value**        | `string`                      | -                              | checked child radio                 | -         |
+| **defaultValue** | `string`                      | -                              | Initial radio group value           | -         |
+| **color**        | `SimpleColors` `string`       | [SimpleColors](#simple-colors) | Change radio group color            | `primary` |
+| **labelColor**   | `SimpleColors` `string`       | [SimpleColors](#simple-colors) | Change radio group label color      | `default` |
+| **size**         | `NormalSizes`                 | [NormalSizes](#normal-sizes)   | Size of all radios in the group     | `medium`  |
+| **isRow**        | `boolean`                     | `true/false`                   | Change the radio group direction    | `false`   |
+| **isDisabled**   | `boolean`                     | `true/false`                   | Disable all radios                  | `false`   |
+| **onChange**     | `(value: T) => void`          | -                              | Radio group event handler           | -         |
+| **css**          | `Stitches.CSS`                | -                              | Override Default CSS style          | -         |
+| **as**           | `keyof JSX.IntrinsicElements` | -                              | Changes which tag component outputs | `div`     |
 
 <Spacer y={2} />
 
 #### Radio Desc Props
 
-| Attribute | Type             | Accepted values          | Description  | Default |
-| --------- | ---------------- | ------------------------ | ------------ | ------- |
-| ...       | `HTMLAttributes` | `'id', 'className', ...` | native props | -       |
+| Attribute | Type                          | Accepted values          | Description                         | Default |
+| --------- | ----------------------------- | ------------------------ | ----------------------------------- | ------- |
+| **as**    | `keyof JSX.IntrinsicElements` | -                        | Changes which tag component outputs | `span`  |
+| **css**   | `Stitches.CSS`                | -                        | Override Default CSS style          | -       |
+| ...       | `HTMLAttributes`              | `'id', 'className', ...` | native props                        | -       |
 
 <Spacer y={2} />
 
@@ -141,22 +160,3 @@ type SimpleColors =
 ```ts
 type NormalSizes = 'xs' | 'sm' | 'md' | 'lg' | 'xl';
 ```
-
-#### Radio Event
-
-```ts
-interface RadioEvent {
-  target: RadioEventTarget;
-  stopPropagation: () => void;
-  preventDefault: () => void;
-  nativeEvent: React.ChangeEvent;
-}
-```
-
-#### Radio Event Target
-
-```ts
-interface RadioEventTarget {
-  checked: boolean;
-}
-```\n- apps/docs/content/docs/manifest.json (modified, 1 changes)\n  Patch: @@ -153,6 +153,7 @@
                         },
                         {
                             "title": "Radio",
+                            "updated": true,
                             "keywords": "check, radio, select",
                             "path": "/docs/components/radio.mdx"
                         },\n- packages/react/package.json (modified, 2 changes)\n  Patch: @@ -64,13 +64,15 @@
     "@react-aria/label": "3.2.5",
     "@react-aria/menu": "3.4.4",
     "@react-aria/overlays": "3.8.2",
+    "@react-aria/radio": "3.1.11",
     "@react-aria/ssr": "3.1.2",
     "@react-aria/table": "3.2.4",
     "@react-aria/utils": "3.12.0",
     "@react-aria/visually-hidden": "3.2.8",
     "@react-stately/checkbox": "3.0.7",
     "@react-stately/data": "3.4.7",
     "@react-stately/overlays": "3.2.0",
+    "@react-stately/radio": "3.3.6",
     "@react-stately/table": "3.1.3",
     "@react-stately/toggle": "3.2.7",
     "@react-stately/tree": "3.2.4",\n- packages/react/src/radio/__tests__/__snapshots__/group.test.tsx.snap (removed, 5 changes)\n  Patch: @@ -1,5 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`Radio Group should render correctly 1`] = `"<div><div role=\\"radiogroup\\" class=\\"nextui-c-iZLPXV nextui-c-iZLPXV-kWtHZW-size-md nextui-c-iZLPXV-kGdIeB-row-false\\"><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-default nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"1\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span>1</span></label><label aria-checked=\\"false\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-default nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-CNfHJ-animated-true nextui-c-cNyWQy-bAyXeE-cv\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"2\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point\\"></span>2</span></label></div><div role=\\"radiogroup\\" class=\\"nextui-c-iZLPXV nextui-c-iZLPXV-kWtHZW-size-md nextui-c-iZLPXV-cBgMPH-row-true\\"><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-default nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"1\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span>1</span></label><label aria-checked=\\"false\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-default nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-CNfHJ-animated-true nextui-c-cNyWQy-bAyXeE-cv\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"2\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point\\"></span>2</span></label></div></div>"`;
-
-exports[`Radio Group should work correctly with different sizes 1`] = `"<div><div role=\\"radiogroup\\" class=\\"nextui-c-iZLPXV nextui-c-iZLPXV-hnzdGI-size-xs nextui-c-iZLPXV-kGdIeB-row-false\\"><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-default nextui-c-cNyWQy-DHfpI-size-xs nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"1\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span>1</span></label></div><div role=\\"radiogroup\\" class=\\"nextui-c-iZLPXV nextui-c-iZLPXV-cdTMkv-size-sm nextui-c-iZLPXV-kGdIeB-row-false\\"><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-default nextui-c-cNyWQy-fmxghf-size-sm nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"1\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span>1</span></label></div><div role=\\"radiogroup\\" class=\\"nextui-c-iZLPXV nextui-c-iZLPXV-jxjGuu-size-lg nextui-c-iZLPXV-kGdIeB-row-false\\"><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-default nextui-c-cNyWQy-gedqai-size-lg nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"1\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span>1</span></label></div></div>"`;\n- packages/react/src/radio/__tests__/__snapshots__/index.test.tsx.snap (modified, 10 changes)\n  Patch: @@ -1,11 +1,11 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`Radio should render correctly 1`] = `"<label aria-checked=\\"false\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-primary nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-CNfHJ-animated-true nextui-c-cNyWQy-bAyXeE-cv\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point\\"></span>Option</span></label>"`;
+exports[`Radio should render correctly 1`] = `"<div><div class=\\"nextui-c-krTaHP nextui-c-krTaHP-kWtHZW-size-md nextui-radio-group\\" role=\\"radiogroup\\" aria-orientation=\\"vertical\\" id=\\"react-aria5589753918-1\\" aria-labelledby=\\"react-aria5589753918-2\\"><label class=\\"nextui-radio-group-label\\" id=\\"react-aria5589753918-2\\">Options</label><div class=\\"nextui-c-fixGjY nextui-c-fixGjY-jzcjqC-isRow-false nextui-radio-group-items\\" role=\\"presentation\\"><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fqNzuY-color-default nextui-c-evidrZ-cNjeeG-size-md nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-3\\" value=\\"1\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-text\\">Option 1</span></div></label></div></div><div class=\\"nextui-c-krTaHP nextui-c-krTaHP-kWtHZW-size-md nextui-radio-group\\" role=\\"radiogroup\\" aria-orientation=\\"horizontal\\" id=\\"react-aria5589753918-4\\" aria-labelledby=\\"react-aria5589753918-5\\"><label class=\\"nextui-radio-group-label\\" id=\\"react-aria5589753918-5\\">Options</label><div class=\\"nextui-c-fixGjY nextui-c-fixGjY-nXPYi-isRow-true nextui-radio-group-items\\" role=\\"presentation\\"><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fqNzuY-color-default nextui-c-evidrZ-cNjeeG-size-md nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-eeoPBd-isChecked-true nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-radio-label nextui-radio--checked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-6\\" value=\\"1\\" checked=\\"\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-text\\">1</span></div></label><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fqNzuY-color-default nextui-c-evidrZ-cNjeeG-size-md nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-6\\" value=\\"2\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-text\\">2</span></div></label></div></div></div>"`;
 
-exports[`Radio should support react-node in description 1`] = `"<div><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-primary nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span>Option</span></label><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-primary nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span>Option 1</span><span class=\\"nextui-c-dfPuPX\\">Description for Option1</span></label><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-primary nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span>Option 1</span><span class=\\"nextui-c-dfPuPX\\"><b>Description</b> for Option1</span></label></div>"`;
+exports[`Radio should support react-node in description 1`] = `"<div class=\\"nextui-c-krTaHP nextui-c-krTaHP-kWtHZW-size-md nextui-radio-group\\" role=\\"radiogroup\\" aria-orientation=\\"vertical\\" id=\\"react-aria5589753918-22\\" aria-labelledby=\\"react-aria5589753918-23\\"><label class=\\"nextui-radio-group-label\\" id=\\"react-aria5589753918-23\\">Options</label><div class=\\"nextui-c-fixGjY nextui-c-fixGjY-jzcjqC-isRow-false nextui-radio-group-items\\" role=\\"presentation\\"><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fqNzuY-color-default nextui-c-evidrZ-cNjeeG-size-md nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-24\\" value=\\"1\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-text\\">Option 1</span></div></label><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fqNzuY-color-default nextui-c-evidrZ-cNjeeG-size-md nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-24\\" value=\\"2\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-text\\">Option 2</span></div><span class=\\"nextui-c-dfPuPX nextui-radio-desc\\">Description for Option2</span></label><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fqNzuY-color-default nextui-c-evidrZ-cNjeeG-size-md nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-24\\" value=\\"3\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-text\\">Option 3</span></div><span class=\\"nextui-c-dfPuPX nextui-radio-desc\\"><b>Description</b> for Option3</span></label></div></div>"`;
 
-exports[`Radio should work correctly with different sizes 1`] = `"<div><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-primary nextui-c-cNyWQy-DHfpI-size-xs nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span>mini</span></label><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-primary nextui-c-cNyWQy-fmxghf-size-sm nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span>small</span></label><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-primary nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span>medium</span></label><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-primary nextui-c-cNyWQy-gedqai-size-lg nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span>large</span></label><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-primary nextui-c-cNyWQy-fEOUqP-size-xl nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span>xlarge</span></label></div>"`;
+exports[`Radio should work correctly with different sizes 1`] = `"<div class=\\"nextui-c-krTaHP nextui-c-krTaHP-kWtHZW-size-md nextui-radio-group\\" role=\\"radiogroup\\" aria-orientation=\\"vertical\\" id=\\"react-aria5589753918-13\\" aria-labelledby=\\"react-aria5589753918-14\\"><label class=\\"nextui-radio-group-label\\" id=\\"react-aria5589753918-14\\">Options</label><div class=\\"nextui-c-fixGjY nextui-c-fixGjY-jzcjqC-isRow-false nextui-radio-group-items\\" role=\\"presentation\\"><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fqNzuY-color-default nextui-c-evidrZ-DHfpI-size-xs nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-15\\" value=\\"xs\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-text\\">mini</span></div></label><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fqNzuY-color-default nextui-c-evidrZ-fmxghf-size-sm nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-15\\" value=\\"sm\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-text\\">small</span></div></label><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fqNzuY-color-default nextui-c-evidrZ-cNjeeG-size-md nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-15\\" value=\\"md\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-text\\">medium</span></div></label><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fqNzuY-color-default nextui-c-evidrZ-gedqai-size-lg nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-15\\" value=\\"lg\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-text\\">large</span></div></label><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fqNzuY-color-default nextui-c-evidrZ-fEOUqP-size-xl nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-15\\" value=\\"xl\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-text\\">xlarge</span></div></label></div></div>"`;
 
-exports[`Radio should work with different colors 1`] = `"<div><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-primary nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span></span></label><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fIEtLE-color-secondary nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span></span></label><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-bPwnTE-color-success nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span></span></label><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-hYvfGc-color-warning nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span></span></label><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fmxTac-color-error nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span></span></label></div>"`;
+exports[`Radio should work with different colors 1`] = `"<div class=\\"nextui-c-krTaHP nextui-c-krTaHP-kWtHZW-size-md nextui-radio-group\\" role=\\"radiogroup\\" aria-orientation=\\"vertical\\" id=\\"react-aria5589753918-16\\" aria-labelledby=\\"react-aria5589753918-17\\"><label class=\\"nextui-radio-group-label\\" id=\\"react-aria5589753918-17\\">Options</label><div class=\\"nextui-c-fixGjY nextui-c-fixGjY-jzcjqC-isRow-false nextui-radio-group-items\\" role=\\"presentation\\"><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fqNzuY-color-primary nextui-c-evidrZ-cNjeeG-size-md nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-18\\" value=\\"primary\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-text\\"></span></div></label><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fIEtLE-color-secondary nextui-c-evidrZ-cNjeeG-size-md nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-18\\" value=\\"secondary\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-text\\"></span></div></label><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-bPwnTE-color-success nextui-c-evidrZ-cNjeeG-size-md nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-18\\" value=\\"success\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-text\\"></span></div></label><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-hYvfGc-color-warning nextui-c-evidrZ-cNjeeG-size-md nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-18\\" value=\\"warning\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-text\\"></span></div></label><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fmxTac-color-error nextui-c-evidrZ-cNjeeG-size-md nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-18\\" value=\\"error\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-cyFBRX-color-default nextui-radio-text\\"></span></div></label></div></div>"`;
 
-exports[`Radio should work with different textColors 1`] = `"<div><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-primary nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-ixnjYu-color-primary nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span></span></label><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-primary nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-krgohU-color-secondary nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span></span></label><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-primary nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-byQUqd-color-success nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span></span></label><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-primary nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-gZEUWQ-color-warning nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span></span></label><label aria-checked=\\"true\\" class=\\"nextui-c-cNyWQy nextui-c-cNyWQy-fqNzuY-color-primary nextui-c-cNyWQy-cNjeeG-size-md nextui-c-cNyWQy-jMAqsJ-squared-false nextui-c-cNyWQy-cTeUqp-active-true nextui-c-cNyWQy-CNfHJ-animated-true\\"><input type=\\"radio\\" tabindex=\\"-1\\" class=\\"nextui-c-PJLV nextui-c-iFHsrU nextui-radio-input\\" value=\\"\\"><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-XlZOi-color-error nextui-radio-name\\"><span tabindex=\\"0\\" class=\\"nextui-c-kgjvqv nextui-c-huiNHE nextui-radio-point nextui-radio-active\\"></span></span></label></div>"`;
+exports[`Radio should work with different textColors 1`] = `"<div class=\\"nextui-c-krTaHP nextui-c-krTaHP-kWtHZW-size-md nextui-radio-group\\" role=\\"radiogroup\\" aria-orientation=\\"vertical\\" id=\\"react-aria5589753918-19\\" aria-labelledby=\\"react-aria5589753918-20\\"><label class=\\"nextui-radio-group-label\\" id=\\"react-aria5589753918-20\\">Options</label><div class=\\"nextui-c-fixGjY nextui-c-fixGjY-jzcjqC-isRow-false nextui-radio-group-items\\" role=\\"presentation\\"><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fqNzuY-color-default nextui-c-evidrZ-cNjeeG-size-md nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-21\\" value=\\"primary\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-ixnjYu-color-primary nextui-radio-text\\"></span></div></label><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fqNzuY-color-default nextui-c-evidrZ-cNjeeG-size-md nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-21\\" value=\\"secondary\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-krgohU-color-secondary nextui-radio-text\\"></span></div></label><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fqNzuY-color-default nextui-c-evidrZ-cNjeeG-size-md nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-21\\" value=\\"success\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-byQUqd-color-success nextui-radio-text\\"></span></div></label><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fqNzuY-color-default nextui-c-evidrZ-cNjeeG-size-md nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-21\\" value=\\"warning\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-gZEUWQ-color-warning nextui-radio-text\\"></span></div></label><label class=\\"nextui-c-evidrZ nextui-c-evidrZ-fqNzuY-color-default nextui-c-evidrZ-cNjeeG-size-md nextui-c-evidrZ-jMAqsJ-isSquared-false nextui-c-evidrZ-bOFUIO-disableAnimation-false nextui-c-evidrZ-cBQacH-cv nextui-radio-label nextui-radio--uncheked\\"><div class=\\"nextui-c-iJNdJu nextui-radio-container\\"><span class=\\"nextui-c-kgjvqv nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-radio-point\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-radio-input\\" tabindex=\\"0\\" type=\\"radio\\" name=\\"react-aria5589753918-21\\" value=\\"error\\"></div></span><span class=\\"nextui-c-hPBoDr nextui-c-hPBoDr-XlZOi-color-error nextui-radio-text\\"></span></div></label></div></div>"`;\n- packages/react/src/radio/__tests__/group.test.tsx (removed, 163 changes)\n  Patch: @@ -1,163 +0,0 @@
-import React from 'react';
-import { mount } from 'enzyme';
-import Radio from '../index';
-import { nativeEvent } from '../../../tests/utils';
-
-describe('Radio Group', () => {
-  it('should render correctly', () => {
-    const wrapper = mount(
-      <div>
-        <Radio.Group value="1">
-          <Radio value="1">1</Radio>
-          <Radio value="2">2</Radio>
-        </Radio.Group>
-        <Radio.Group value="1" row>
-          <Radio value="1">1</Radio>
-          <Radio value="2">2</Radio>
-        </Radio.Group>
-      </div>
-    );
-    expect(wrapper.html()).toMatchSnapshot();
-    expect(() => wrapper.unmount()).not.toThrow();
-  });
-
-  it('should work correctly with different sizes', () => {
-    const wrapper = mount(
-      <div>
-        <Radio.Group value="1" size="xs">
-          <Radio value="1">1</Radio>
-        </Radio.Group>
-        <Radio.Group value="1" size="sm">
-          <Radio value="1">1</Radio>
-        </Radio.Group>
-        <Radio.Group value="1" size="lg">
-          <Radio value="1">1</Radio>
-        </Radio.Group>
-      </div>
-    );
-    expect(wrapper.html()).toMatchSnapshot();
-    expect(() => wrapper.unmount()).not.toThrow();
-  });
-
-  it('should trigger events in group', () => {
-    let value = '';
-    const changeHandler = jest.fn().mockImplementation((val) => (value = val));
-    const wrapper = mount(
-      <Radio.Group onChange={changeHandler}>
-        <Radio value="1">Option 1</Radio>
-        <Radio value="2">Option 2</Radio>
-      </Radio.Group>
-    );
-
-    wrapper
-      .find('input')
-      .at(0)
-      .simulate('change', {
-        ...nativeEvent,
-        target: { checked: true }
-      });
-    expect(changeHandler).toHaveBeenCalled();
-    expect(value).toEqual('1');
-    changeHandler.mockRestore();
-  });
-
-  it('the radio value should be support number', () => {
-    let value = '';
-    const changeHandler = jest.fn().mockImplementation((val) => (value = val));
-    const wrapper = mount(
-      <Radio.Group onChange={changeHandler}>
-        <Radio value={5}>Option 1</Radio>
-        <Radio value={10}>Option 2</Radio>
-      </Radio.Group>
-    );
-
-    wrapper
-      .find('input')
-      .at(0)
-      .simulate('change', {
-        ...nativeEvent,
-        target: { checked: true }
-      });
-    expect(changeHandler).toHaveBeenCalled();
-    expect(value).toEqual(5);
-    changeHandler.mockRestore();
-  });
-
-  it('should ignore events when disabled', () => {
-    const changeHandler = jest.fn();
-    const wrapper = mount(
-      <Radio.Group onChange={changeHandler} disabled>
-        <Radio value="1">Option 1</Radio>
-        <Radio value="2">Option 2</Radio>
-      </Radio.Group>
-    );
-
-    wrapper
-      .find('input')
-      .at(0)
-      .simulate('change', {
-        ...nativeEvent,
-        target: { checked: true }
-      });
-    expect(changeHandler).not.toHaveBeenCalled();
-    changeHandler.mockRestore();
-  });
-
-  it('should render correctly with inital-value', () => {
-    const wrapper = mount(
-      <Radio.Group initialValue="2">
-        <Radio value="1">Option 1</Radio>
-        <Radio value="2">Option 2</Radio>
-      </Radio.Group>
-    );
-    const input = wrapper.find('input').at(1).getDOMNode() as HTMLInputElement;
-    expect(input.checked).toEqual(true);
-  });
-
-  it('should be warning when value unset', () => {
-    const errorSpy = jest.spyOn(console, 'error').mockImplementation(() => {});
-    mount(
-      <Radio.Group>
-        <Radio>Option 1</Radio>
-        <Radio value="2">Option 2</Radio>
-      </Radio.Group>
-    );
-
-    expect(errorSpy).toHaveBeenCalled();
-    errorSpy.mockRestore();
-  });
-
-  it('should be warning when checked is set', () => {
-    const errorSpy = jest.spyOn(console, 'error').mockImplementation(() => {});
-    mount(
-      <Radio.Group>
-        <Radio value="1" checked>
-          Option 1
-        </Radio>
-        <Radio value="2">Option 2</Radio>
-      </Radio.Group>
-    );
-
-    expect(errorSpy).toHaveBeenCalled();
-    errorSpy.mockRestore();
-  });
-
-  it('should set state through value prop', () => {
-    const wrapper = mount(
-      <Radio.Group>
-        <Radio value="1">Option 1</Radio>
-        <Radio value="2">Option 2</Radio>
-      </Radio.Group>
-    );
-    let input = wrapper.find('input').at(0).getDOMNode() as HTMLInputElement;
-    expect(input.checked).toEqual(false);
-
-    wrapper.setProps({ value: '1' });
-    input = wrapper.find('input').at(0).getDOMNode() as HTMLInputElement;
-    expect(input.checked).toEqual(true);
-
-    wrapper.setProps({ value: '2' });
-    input = wrapper.find('input').at(1).getDOMNode() as HTMLInputElement;
-    expect(input.checked).toEqual(true);
-  });
-});\n- packages/react/src/radio/__tests__/index.test.tsx (modified, 211 changes)\n  Patch: @@ -1,78 +1,164 @@
 import React from 'react';
-import { mount, shallow } from 'enzyme';
-import Radio from '../index';
+import { mount } from 'enzyme';
+import userEvent from '@testing-library/user-event';
 import { nativeEvent } from '../../../tests/utils';
+import Radio from '../index';
+import type { ReactWrapper } from 'enzyme';
+
+const getRadioElement = (wrapper: ReactWrapper) => {
+  return wrapper.find('input');
+};
+
+const expectRadioIsChecked = (wrapper: ReactWrapper, value: boolean) => {
+  expect(getRadioElement(wrapper).props().checked).toBe(value);
+};
 
 describe('Radio', () => {
   it('should render correctly', () => {
-    const wrapper = mount(<Radio checked={false}>Option</Radio>);
+    const wrapper = mount(
+      <div>
+        <Radio.Group label="Options">
+          <Radio value="1">Option 1</Radio>
+        </Radio.Group>
+        <Radio.Group label="Options" defaultValue="1" isRow>
+          <Radio value="1">1</Radio>
+          <Radio value="2">2</Radio>
+        </Radio.Group>
+      </div>
+    );
     expect(wrapper.html()).toMatchSnapshot();
     expect(() => wrapper.unmount()).not.toThrow();
   });
 
-  it('should support square and circle', () => {
-    const circle = shallow(<Radio />);
+  it('should support circle and square', () => {
+    const circle = mount(
+      <Radio.Group label="Options">
+        <Radio value="1">Option 1</Radio>
+      </Radio.Group>
+    );
+    const circleDOM = circle.find('.nextui-radio-label').at(0).getDOMNode();
+    expect(circleDOM.className).toContain('isSquared-false');
     expect(() => circle.unmount()).not.toThrow();
-    const square = shallow(<Radio squared />);
+    const square = mount(
+      <Radio.Group label="Options">
+        <Radio value="1" isSquared>
+          Option 1
+        </Radio>
+      </Radio.Group>
+    );
+    const squareDOM = square.find('.nextui-radio-label').at(0).getDOMNode();
+    expect(squareDOM.className).toContain('isSquared-true');
     expect(() => square.unmount()).not.toThrow();
   });
 
   it('should work correctly with different sizes', () => {
     const wrapper = mount(
-      <div>
-        <Radio size="xs">mini</Radio>
-        <Radio size="sm">small</Radio>
-        <Radio size="md">medium</Radio>
-        <Radio size="lg">large</Radio>
-        <Radio size="xl">xlarge</Radio>
-      </div>
+      <Radio.Group label="Options">
+        <Radio value="xs" size="xs">
+          mini
+        </Radio>
+        <Radio value="sm" size="sm">
+          small
+        </Radio>
+        <Radio value="md" size="md">
+          medium
+        </Radio>
+        <Radio value="lg" size="lg">
+          large
+        </Radio>
+        <Radio value="xl" size="xl">
+          xlarge
+        </Radio>
+      </Radio.Group>
     );
     expect(wrapper.html()).toMatchSnapshot();
     expect(() => wrapper.unmount()).not.toThrow();
   });
 
   it('should work with different colors', () => {
     const wrapper = mount(
-      <div>
-        <Radio color="primary" />
-        <Radio color="secondary" />
-        <Radio color="success" />
-        <Radio color="warning" />
-        <Radio color="error" />
-      </div>
+      <Radio.Group label="Options">
+        <Radio value="primary" color="primary" label="primary" />
+        <Radio value="secondary" color="secondary" label="secondary" />
+        <Radio value="success" color="success" label="success" />
+        <Radio value="warning" color="warning" label="warning" />
+        <Radio value="error" color="error" label="error" />
+      </Radio.Group>
     );
     expect(wrapper.html()).toMatchSnapshot();
     expect(() => wrapper.unmount()).not.toThrow();
   });
 
   it('should work with different textColors', () => {
     const wrapper = mount(
-      <div>
-        <Radio textColor="primary" />
-        <Radio textColor="secondary" />
-        <Radio textColor="success" />
-        <Radio textColor="warning" />
-        <Radio textColor="error" />
-      </div>
+      <Radio.Group label="Options">
+        <Radio value="primary" labelColor="primary" label="primary" />
+        <Radio value="secondary" labelColor="secondary" label="secondary" />
+        <Radio value="success" labelColor="success" label="success" />
+        <Radio value="warning" labelColor="warning" label="warning" />
+        <Radio value="error" labelColor="error" label="error" />
+      </Radio.Group>
     );
     expect(wrapper.html()).toMatchSnapshot();
     expect(() => wrapper.unmount()).not.toThrow();
   });
 
-  it('should render correctly with checked prop', () => {
-    const wrapper = mount(<Radio>Option</Radio>);
-    wrapper.setProps({ checked: false });
-    let input = wrapper.find('input').at(0).getDOMNode() as HTMLInputElement;
-    expect(input.checked).toEqual(false);
+  it('should support react-node in description', () => {
+    const wrapper = mount(
+      <Radio.Group label="Options">
+        <Radio value="1">Option 1</Radio>
+        <Radio value="2">
+          Option 2<Radio.Desc>Description for Option2</Radio.Desc>
+        </Radio>
+        <Radio value="3">
+          Option 3
+          <Radio.Desc>
+            <b>Description</b> for Option3
+          </Radio.Desc>
+        </Radio>
+      </Radio.Group>
+    );
+    expect(wrapper.html()).toMatchSnapshot();
+    expect(() => wrapper.unmount()).not.toThrow();
+  });
 
-    wrapper.setProps({ checked: true });
-    input = wrapper.find('input').at(0).getDOMNode() as HTMLInputElement;
-    expect(input.checked).toEqual(true);
+  it('should render correctly with value prop', () => {
+    let value = '1';
+    const wrapper = mount(
+      <Radio.Group
+        label="Options"
+        defaultValue="2"
+        onChange={(val) => (value = val)}
+      >
+        <Radio value="1">Option 1</Radio>
+        <Radio value="2">Option 2</Radio>
+      </Radio.Group>
+    );
+    const option1DOM = getRadioElement(wrapper)
+      .at(0)
+      .getDOMNode() as HTMLInputElement;
+    const option2DOM = getRadioElement(wrapper)
+      .at(1)
+      .getDOMNode() as HTMLInputElement;
+    userEvent.click(option1DOM);
+    expect(value).toEqual('1');
+    expect(option1DOM.checked).toEqual(true);
+    expect(option2DOM.checked).toEqual(false);
+    userEvent.click(option2DOM);
+    expect(value).toEqual('2');
+    expect(option1DOM.checked).toEqual(false);
+    expect(option2DOM.checked).toEqual(true);
   });
 
-  it('should trigger events when use alone', () => {
-    const changeHandler = jest.fn();
-    const wrapper = mount(<Radio onChange={changeHandler}>Option</Radio>);
+  it('should trigger events', () => {
+    let value = '';
+    const changeHandler = jest.fn().mockImplementation((val) => (value = val));
+    const wrapper = mount(
+      <Radio.Group label="Options" onChange={changeHandler}>
+        <Radio value="1">Option 1</Radio>
+        <Radio value="2">Option 2</Radio>
+      </Radio.Group>
+    );
     wrapper
       .find('input')
       .at(0)
@@ -81,15 +167,16 @@ describe('Radio', () => {
         target: { checked: true }
       });
     expect(changeHandler).toHaveBeenCalled();
+    expect(value).toEqual('1');
     changeHandler.mockRestore();
   });
 
   it('should ignore events when disabled', () => {
     const changeHandler = jest.fn();
     const wrapper = mount(
-      <Radio onChange={changeHandler} disabled>
-        Option
-      </Radio>
+      <Radio.Group label="Options" onChange={changeHandler} isDisabled>
+        <Radio value="1">Option 1</Radio>
+      </Radio.Group>
     );
     wrapper
       .find('input')
@@ -102,22 +189,38 @@ describe('Radio', () => {
     changeHandler.mockRestore();
   });
 
-  it('should support react-node in description', () => {
+  it('should render correctly with default-value', () => {
     const wrapper = mount(
-      <div>
-        <Radio>Option</Radio>
-        <Radio>
-          Option 1<Radio.Desc>Description for Option1</Radio.Desc>
-        </Radio>
-        <Radio>
+      <Radio.Group label="Options" defaultValue="1">
+        <Radio value="1">Option 1</Radio>
+      </Radio.Group>
+    );
+    expectRadioIsChecked(wrapper, true);
+  });
+
+  it('should be warning when value unset', () => {
+    const errorSpy = jest.spyOn(console, 'error').mockImplementation(() => {});
+    mount(
+      <Radio.Group label="Options">
+        <Radio>Option 1</Radio>
+        <Radio value="2">Option 2</Radio>
+      </Radio.Group>
+    );
+    expect(errorSpy).toHaveBeenCalled();
+    errorSpy.mockRestore();
+  });
+
+  it('should be warning when checked is set', () => {
+    const errorSpy = jest.spyOn(console, 'error').mockImplementation(() => {});
+    mount(
+      <Radio.Group label="Options">
+        <Radio value="1" checked>
           Option 1
-          <Radio.Desc>
-            <b>Description</b> for Option1
-          </Radio.Desc>
         </Radio>
-      </div>
+        <Radio value="2">Option 2</Radio>
+      </Radio.Group>
     );
-    expect(wrapper.html()).toMatchSnapshot();
-    expect(() => wrapper.unmount()).not.toThrow();
+    expect(errorSpy).toHaveBeenCalled();
+    errorSpy.mockRestore();
   });
 });\n- packages/react/src/radio/index.ts (modified, 21 changes)\n  Patch: @@ -1,23 +1,28 @@
 import Radio from './radio';
+import RadioDesc from './radio-desc';
 import RadioGroup from './radio-group';
-import { StyledRadioDescription as RadioDescription } from './radio.styles';
 
 Radio.Group = RadioGroup;
-Radio.Description = RadioDescription;
-Radio.Desc = RadioDescription;
+Radio.Desc = RadioDesc;
+Radio.Description = RadioDesc;
 
 export {
-  StyledRadioInput,
   StyledRadioLabel,
+  StyledRadioText,
   StyledRadioPoint,
-  StyledRadio,
+  StyledRadioContainer,
+  StyledRadioDescription,
   StyledRadioGroup,
-  StyledRadioDescription
+  StyledRadioGroupContainer
 } from './radio.styles';
 export type {
-  RadioVariantsProps,
   RadioLabelVariantsProps,
-  RadioGroupVariantsProps
+  RadioTexVariantsProps,
+  RadioPointVariantsProps,
+  RadioContainerVariantsProps,
+  RadioDescriptionVariantsProps,
+  RadioGroupVariantsProps,
+  RadioGroupContainerVariantsProps
 } from './radio.styles';
 
 export default Radio;\n- packages/react/src/radio/radio-context.ts (modified, 35 changes)\n  Patch: @@ -1,25 +1,10 @@
-import { NormalColors, NormalSizes } from '../utils/prop-types';
-import React from 'react';
-
-export interface RadioConfig {
-  disabledAll: boolean;
-  size?: NormalSizes;
-  color?: NormalColors;
-  textColor?: NormalColors;
-  value?: string | number;
-  inGroup: boolean;
-  updateState?: (value: string | number) => void;
-}
-
-const defaultContext = {
-  color: 'primary' as NormalColors,
-  size: 'md' as NormalSizes,
-  textColor: 'default' as NormalColors,
-  disabledAll: false,
-  inGroup: false
-};
-
-export const RadioContext = React.createContext<RadioConfig>(defaultContext);
-
-export const useRadioContext = (): RadioConfig =>
-  React.useContext<RadioConfig>(RadioContext);
+import { createContext } from '../utils/context';
+import type { UseRadioGroupReturn } from './use-radio-group';
+
+export const [RadioGroupProvider, useRadioGroupContext] =
+  createContext<UseRadioGroupReturn>({
+    name: 'RadioGroupContext',
+    strict: true,
+    errorMessage:
+      'useRadioGroupContext: `context` is undefined. Seems you forgot to wrap all popover components within `<Radio.Group />`'
+  });\n- packages/react/src/radio/radio-desc.tsx (added, 47 changes)\n  Patch: @@ -0,0 +1,47 @@
+import React from 'react';
+import clsx from '../utils/clsx';
+import { __DEV__ } from '../utils/assertion';
+import { StyledRadioDescription } from './radio.styles';
+import type { ReactRef } from '../utils/refs';
+import type { CSS } from '../theme/stitches.config';
+import type { RadioDescriptionVariantsProps } from './radio.styles';
+
+interface Props {
+  className?: string;
+  children?: React.ReactNode;
+  as?: keyof JSX.IntrinsicElements;
+}
+
+type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props>;
+
+export type RadioDescProps = Props &
+  RadioDescriptionVariantsProps &
+  NativeAttrs & { css?: CSS };
+
+export const RadioDesc = React.forwardRef<HTMLDivElement, RadioDescProps>(
+  (props: RadioDescProps, ref: ReactRef<HTMLDivElement>) => {
+    const { as, className, css, children, ...otherProps } = props;
+
+    return (
+      <StyledRadioDescription
+        ref={ref}
+        className={clsx('nextui-radio-desc', className)}
+        as={as}
+        css={css as any}
+        {...otherProps}
+      >
+        {children}
+      </StyledRadioDescription>
+    );
+  }
+);
+
+if (__DEV__) {
+  RadioDesc.displayName = 'NextUI.RadioDesc';
+}
+
+RadioDesc.toString = () => '.nextui-radio-desc';
+
+const MemoRadioDesc = React.memo(RadioDesc);
+
+export default MemoRadioDesc;\n- packages/react/src/radio/radio-group.tsx (modified, 113 changes)\n  Patch: @@ -1,91 +1,52 @@
-import React, { useEffect, useMemo, useState, ReactNode } from 'react';
-import withDefaults from '../utils/with-defaults';
-import { RadioContext } from './radio-context';
-import { NormalSizes, SimpleColors } from '../utils/prop-types';
-import { ReactRef } from '../utils/refs';
+import React from 'react';
+import clsx from '../utils/clsx';
 import { useDOMRef } from '../utils/dom';
 import { __DEV__ } from '../utils/assertion';
-import { StyledRadioGroup, RadioGroupVariantsProps } from './radio.styles';
-import { CSS } from '../theme/stitches.config';
-
-interface Props {
-  children?: ReactNode;
-  value?: string | number;
-  initialValue?: string | number;
-  disabled?: boolean;
-  color?: SimpleColors;
-  textColor?: SimpleColors;
-  size?: NormalSizes;
-  onChange?: (value: string | number) => void;
+import { useRadioGroup } from './use-radio-group';
+import { RadioGroupProvider } from './radio-context';
+import { StyledRadioGroup, StyledRadioGroupContainer } from './radio.styles';
+import type { ReactRef } from '../utils/refs';
+import type { CSS } from '../theme/stitches.config';
+import type { UseRadioGroupProps } from './use-radio-group';
+
+interface Props extends UseRadioGroupProps {
+  className?: string;
+  children: React.ReactNode;
+  as?: keyof JSX.IntrinsicElements;
 }
 
-const defaultProps = {
-  disabled: false,
-  size: 'md' as NormalSizes | number,
-  color: 'default' as SimpleColors,
-  textColor: 'default' as SimpleColors
-};
-
-type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props>;
-
-export type RadioGroupProps = Props &
-  typeof defaultProps &
-  NativeAttrs &
-  RadioGroupVariantsProps & { css?: CSS };
+export type RadioGroupProps = Props & { css?: CSS };
 
 export const RadioGroup = React.forwardRef(
   (props: RadioGroupProps, ref: ReactRef<HTMLDivElement>) => {
-    const {
-      disabled,
-      onChange,
-      value,
-      size,
-      color,
-      textColor,
-      children,
-      initialValue,
-      ...otherProps
-    } = props;
-
-    const [selfVal, setSelfVal] = useState<string | number | undefined>(
-      initialValue
-    );
+    const { as, css, className, children, label, ...otherProps } = props;
 
     const domRef = useDOMRef(ref);
 
-    const updateState = (nextValue: string | number) => {
-      setSelfVal(nextValue);
-      onChange && onChange(nextValue);
-    };
-
-    const providerValue = useMemo(() => {
-      return {
-        updateState,
-        disabledAll: disabled,
-        inGroup: true,
-        size,
-        color,
-        textColor,
-        value: selfVal
-      };
-    }, [disabled, selfVal]);
-
-    useEffect(() => {
-      if (value === undefined) return;
-      setSelfVal(value);
-    }, [value]);
+    const context = useRadioGroup({ ...otherProps, label });
 
     return (
-      <RadioContext.Provider value={providerValue}>
-        <StyledRadioGroup
-          ref={domRef}
-          role="radiogroup"
-          size={size}
-          {...otherProps}
+      <StyledRadioGroup
+        ref={domRef}
+        className={clsx('nextui-radio-group', className)}
+        as={as}
+        css={css as any}
+        size={context.size}
+        {...context.radioGroupProps}
+      >
+        {label && (
+          <label className="nextui-radio-group-label" {...context.labelProps}>
+            {label}
+          </label>
+        )}
+        <StyledRadioGroupContainer
+          className="nextui-radio-group-items"
+          role="presentation"
+          isRow={context.isRow}
         >
-          {children}
-        </StyledRadioGroup>
-      </RadioContext.Provider>
+          <RadioGroupProvider value={context}>{children}</RadioGroupProvider>
+        </StyledRadioGroupContainer>
+      </StyledRadioGroup>
     );
   }
 );
@@ -96,4 +57,4 @@ if (__DEV__) {
 
 RadioGroup.toString = () => '.nextui-radio-group';
 
-export default withDefaults(RadioGroup, defaultProps);
+export default RadioGroup;\n- packages/react/src/radio/radio.stories.tsx (modified, 300 changes)\n  Patch: @@ -9,166 +9,204 @@ export default {
 } as Meta;
 
 export const Default = () => (
-  <Radio.Group value="A">
+  <Radio.Group label="Options">
     <Radio value="A">Option A</Radio>
     <Radio value="B">Option B</Radio>
     <Radio value="C">Option C</Radio>
     <Radio value="D">Option D</Radio>
   </Radio.Group>
 );
 
-export const Colors = () => (
-  <Radio.Group value="primary">
-    <Radio value="primary" color="primary" checked={true}>
-      Primary
-    </Radio>
-    <br />
-    <Radio value="secondary" color="secondary">
-      Secondary
-    </Radio>
-    <br />
-    <Radio value="success" color="success">
-      Success
-    </Radio>
-    <br />
-    <Radio value="warning" color="warning">
-      Warning
-    </Radio>
-    <br />
-    <Radio value="error" color="error">
-      Error
-    </Radio>
-  </Radio.Group>
-);
-
-export const TextColors = () => (
-  <Radio.Group value="primary">
-    <Radio value="primary" color="primary" textColor="primary">
-      Primary
-    </Radio>
-    <br />
-    <Radio value="secondary" color="secondary" textColor="secondary">
-      Secondary
-    </Radio>
-    <br />
-    <Radio value="success" color="success" textColor="success">
-      Success
-    </Radio>
-    <br />
-    <Radio value="warning" color="warning" textColor="warning">
-      Warning
-    </Radio>
-    <br />
-    <Radio value="error" color="error" textColor="error">
-      Error
-    </Radio>
+export const Disabled = () => (
+  <Radio.Group label="Options" defaultValue="A" isDisabled>
+    <Radio value="A">Option A</Radio>
+    <Radio value="B">Option B</Radio>
+    <Radio value="C">Option C</Radio>
+    <Radio value="D">Option D</Radio>
   </Radio.Group>
 );
 
 export const Sizes = () => {
-  const [selected, setSelected] = React.useState('small');
   return (
-    <>
-      <Radio
-        checked={selected === 'mini'}
-        onChange={() => setSelected('mini')}
-        size="xs"
-      >
-        mini
-      </Radio>
-      <Radio
-        checked={selected === 'small'}
-        onChange={() => setSelected('small')}
-        size="sm"
-      >
-        small
-      </Radio>
-      <Radio
-        checked={selected === 'medium'}
-        onChange={() => setSelected('medium')}
-        size="md"
-      >
-        medium
-      </Radio>
-      <Radio
-        checked={selected === 'large'}
-        onChange={() => setSelected('large')}
-        size="lg"
-      >
-        large
-      </Radio>
-      <Radio
-        checked={selected === 'xlarge'}
-        onChange={() => setSelected('xlarge')}
-        size="xl"
-      >
-        xlarge
-      </Radio>
-    </>
+    <div style={{ display: 'flex', flexDirection: 'row', gap: 200 }}>
+      <Radio.Group label="Sizes" defaultValue="md">
+        <Radio value="xs" size="xs">
+          mini
+        </Radio>
+        <Radio value="sm" size="sm">
+          small
+        </Radio>
+        <Radio value="md" size="md">
+          medium
+        </Radio>
+        <Radio value="lg" size="lg">
+          large
+        </Radio>
+        <Radio value="xl" size="xl">
+          xlarge
+        </Radio>
+      </Radio.Group>
+      <Radio.Group label="Sizes" defaultValue="md">
+        <Radio value="xs" size="xs">
+          mini
+          <Radio.Desc>Description for Option mini</Radio.Desc>
+        </Radio>
+        <Radio value="sm" size="sm">
+          small
+          <Radio.Desc>Description for Option small</Radio.Desc>
+        </Radio>
+        <Radio value="md" size="md">
+          medium
+          <Radio.Desc>Description for Option medium</Radio.Desc>
+        </Radio>
+        <Radio value="lg" size="lg">
+          large
+          <Radio.Desc>Description for Option large</Radio.Desc>
+        </Radio>
+        <Radio value="xl" size="xl">
+          xlarge
+          <Radio.Desc>Description for Option xlarge</Radio.Desc>
+        </Radio>
+      </Radio.Group>
+    </div>
+  );
+};
+
+export const Colors = () => {
+  return (
+    <Radio.Group label="Colors" defaultValue="primary">
+      <Radio value="primary" color="primary">
+        primary
+      </Radio>
+      <Radio value="secondary" color="secondary">
+        secondary
+      </Radio>
+      <Radio value="success" color="success">
+        success
+      </Radio>
+      <Radio value="warning" color="warning">
+        warning
+      </Radio>
+      <Radio value="error" color="error">
+        error
+      </Radio>
+    </Radio.Group>
+  );
+};
+
+export const LabelColors = () => {
+  return (
+    <Radio.Group label="Label colors" defaultValue="primary">
+      <Radio value="primary" color="primary" labelColor="primary">
+        primary
+      </Radio>
+      <Radio value="secondary" color="secondary" labelColor="secondary">
+        secondary
+      </Radio>
+      <Radio value="success" color="success" labelColor="success">
+        success
+      </Radio>
+      <Radio value="warning" color="warning" labelColor="warning">
+        warning
+      </Radio>
+      <Radio value="error" color="error" labelColor="error">
+        error
+      </Radio>
+    </Radio.Group>
   );
 };
 
 export const Squared = () => (
-  <Radio.Group value="primary">
-    <Radio squared value="primary" color="primary" checked={true}>
-      Primary
+  <Radio.Group label="Options" defaultValue="A">
+    <Radio value="A" isSquared>
+      Option A
     </Radio>
-    <br />
-    <Radio squared value="secondary" color="secondary">
-      Secondary
+    <Radio value="B" isSquared>
+      Option B
     </Radio>
-    <br />
-    <Radio squared value="success" color="success">
-      Success
+    <Radio value="C" isSquared>
+      Option C
     </Radio>
-    <br />
-    <Radio squared value="warning" color="warning">
-      Warning
-    </Radio>
-    <br />
-    <Radio squared value="error" color="error">
-      Error
-    </Radio>
-  </Radio.Group>
-);
-
-export const Disabled = () => (
-  <Radio.Group value="1">
-    <Radio value="1">Option 1</Radio>
-    <Radio value="2" disabled>
-      Option 2
-    </Radio>
-    <Radio value="3">Option 3</Radio>
-    <Radio value="4" disabled>
-      Option 4
+    <Radio value="D" isSquared>
+      Option D
     </Radio>
   </Radio.Group>
 );
 
 export const Description = () => (
-  <Radio.Group value="1">
-    <Radio value="1">
-      Option 1<Radio.Description>Description for Option1</Radio.Description>
+  <Radio.Group label="Options" defaultValue="A">
+    <Radio value="A">
+      Option A<Radio.Desc>Description for Option A</Radio.Desc>
+    </Radio>
+    <Radio value="B">
+      Option B<Radio.Desc>Description for Option B</Radio.Desc>
     </Radio>
-    <Radio value="2">
-      Option 2<Radio.Desc>Description for Option2</Radio.Desc>
+    <Radio value="C">
+      Option C<Radio.Desc>Description for Option C</Radio.Desc>
     </Radio>
-    <Radio value="3">
-      Option 3<Radio.Desc>Description for Option2</Radio.Desc>
+    <Radio value="D">
+      Option D<Radio.Desc>Description for Option D</Radio.Desc>
     </Radio>
   </Radio.Group>
 );
 
 export const Row = () => (
-  <Radio.Group value="1" row>
-    <Radio value="1">
-      Option 1<Radio.Desc>Description for Option1</Radio.Desc>
-    </Radio>
-    <Radio value="2">
-      Option 2<Radio.Desc>Description for Option2</Radio.Desc>
-    </Radio>
-    <Radio value="3">
-      Option 3<Radio.Desc>Description for Option2</Radio.Desc>
-    </Radio>
-  </Radio.Group>
+  <div style={{ display: 'flex', flexDirection: 'column', gap: 100 }}>
+    <Radio.Group label="Options" defaultValue="A" isRow>
+      <Radio value="A">Option A</Radio>
+      <Radio value="B">Option B</Radio>
+      <Radio value="C">Option C</Radio>
+      <Radio value="D">Option D</Radio>
+    </Radio.Group>
+    <Radio.Group label="Options" defaultValue="A" isRow>
+      <Radio value="A">
+        Option A<Radio.Desc>Description for Option A</Radio.Desc>
+      </Radio>
+      <Radio value="B">
+        Option B<Radio.Desc>Description for Option B</Radio.Desc>
+      </Radio>
+      <Radio value="C">
+        Option C<Radio.Desc>Description for Option C</Radio.Desc>
+      </Radio>
+      <Radio value="D">
+        Option D<Radio.Desc>Description for Option D</Radio.Desc>
+      </Radio>
+    </Radio.Group>
+  </div>
 );
+
+export const Controlled = () => {
+  const [checked, setChecked] = React.useState<string>('london');
+
+  React.useEffect(() => {
+    console.log('checked:', checked);
+  }, [checked]);
+
+  return (
+    <Radio.Group label="Check cities" value={checked} onChange={setChecked}>
+      <Radio value="buenos-aires">Buenos Aires</Radio>
+      <Radio value="sydney">Sydney</Radio>
+      <Radio value="london">London</Radio>
+      <Radio value="tokyo">Tokyo</Radio>
+    </Radio.Group>
+  );
+};
+
+export const NoAnimated = () => {
+  return (
+    <Radio.Group label="Options" defaultValue="A">
+      <Radio value="A" disableAnimation>
+        Option A
+      </Radio>
+      <Radio value="B" disableAnimation>
+        Option B
+      </Radio>
+      <Radio value="C" disableAnimation>
+        Option C
+      </Radio>
+      <Radio value="D" disableAnimation>
+        Option D
+      </Radio>
+    </Radio.Group>
+  );
+};\n- packages/react/src/radio/radio.styles.ts (modified, 124 changes)\n  Patch: @@ -1,9 +1,7 @@
-import { styled, VariantProps } from '../theme/stitches.config';
-import { sharedFocus, sharedVisuallyHidden } from '../theme/shared-css';
+import { styled, cssFocusVisible } from '../theme/stitches.config';
+import type { VariantProps } from '../theme/stitches.config';
 
-export const StyledRadioInput = styled('input', {}, sharedVisuallyHidden);
-
-export const StyledRadioLabel = styled('span', {
+export const StyledRadioText = styled('span', {
   fontSize: '$$radioSize',
   us: 'none',
   d: 'inline-flex',
@@ -29,7 +27,7 @@ export const StyledRadioLabel = styled('span', {
         color: '$error'
       }
     },
-    disabled: {
+    isDisabled: {
       true: {
         color: '$accents5'
       }
@@ -55,10 +53,10 @@ export const StyledRadioPoint = styled(
       border: '2px solid $border'
     }
   },
-  sharedFocus
+  cssFocusVisible
 );
 
-export const StyledRadio = styled('label', {
+export const StyledRadioLabel = styled('label', {
   d: 'flex',
   w: 'initial',
   ai: 'flex-start',
@@ -118,21 +116,21 @@ export const StyledRadio = styled('label', {
         $$radioSize: '$space$11'
       }
     },
-    disabled: {
+    isDisabled: {
       true: {
         cursor: 'not-allowed',
         $$radioColor: '$colors$accents4'
       }
     },
-    squared: {
+    isSquared: {
       true: {
-        $$radioRadii: '$space$1'
+        $$radioRadii: '$radii$squared'
       },
       false: {
         $$radioRadii: '$radii$rounded'
       }
     },
-    active: {
+    isChecked: {
       true: {
         [`& ${StyledRadioPoint}`]: {
           '&:after': {
@@ -148,35 +146,49 @@ export const StyledRadio = styled('label', {
         }
       }
     },
-    animated: {
+    disableAnimation: {
       true: {
         [`& ${StyledRadioPoint}`]: {
-          transition: '$default',
+          transition: 'none',
           '&:after': {
-            transition: '$default'
+            transition: 'none'
           }
         }
       },
       false: {
         [`& ${StyledRadioPoint}`]: {
-          transition: 'none',
+          transition: '$default',
           '&:after': {
-            transition: 'none'
+            transition: '$default'
           }
         }
       }
     }
   },
   defaultVariants: {
     size: 'md',
-    squared: false,
-    animated: true
+    isSquared: false,
+    disableAnimation: false
   },
   compoundVariants: [
     {
-      // !active && !disabled
-      active: false,
-      disabled: false,
+      // isChecked && isDisabled
+      isChecked: true,
+      isDisabled: true,
+      css: {
+        '&:hover': {
+          [`& ${StyledRadioPoint}`]: {
+            '&:after': {
+              border: 'calc($$radioSize * 0.34) solid $$radioColor'
+            }
+          }
+        }
+      }
+    },
+    {
+      // !isChecked && !isDisabled
+      isChecked: false,
+      isDisabled: false,
       css: {
         '&:hover': {
           [`& ${StyledRadioPoint}`]: {
@@ -188,12 +200,34 @@ export const StyledRadio = styled('label', {
   ]
 });
 
+export const StyledRadioDescription = styled('span', {
+  color: '$accents7',
+  fontSize: 'calc($$radioSize * 0.85)',
+  paddingLeft: 'calc($$radioSize + $$radioSize * 0.375)'
+});
+
+export const StyledRadioContainer = styled('div', {
+  w: 'initial',
+  position: 'relative',
+  d: 'flex',
+  fd: 'row',
+  ai: 'center',
+  jc: 'flex-start'
+});
+
 export const StyledRadioGroup = styled('div', {
   border: 0,
   margin: 0,
   padding: 0,
   display: 'flex',
   fd: 'column',
+  '& .nextui-radio-group-label': {
+    d: 'block',
+    fontWeight: '$normal',
+    fontSize: 'calc($$checkboxSize * 0.8)',
+    color: '$accents7',
+    mb: '$3'
+  },
   variants: {
     size: {
       xs: {
@@ -211,35 +245,47 @@ export const StyledRadioGroup = styled('div', {
       xl: {
         $$radioGroupGap: '$space$11'
       }
-    },
-    row: {
+    }
+  }
+});
+
+export const StyledRadioGroupContainer = styled('div', {
+  display: 'flex',
+  flexDirection: 'column',
+  variants: {
+    isRow: {
       true: {
-        fd: 'row',
-        [`& ${StyledRadio}`]: {
-          marginTop: 0,
-          marginRight: '$$radioGroupGap'
+        mt: 0,
+        flexDirection: 'row',
+        [`& ${StyledRadioLabel}:not(:last-child)`]: {
+          mr: '$$radioSize'
         }
       },
       false: {
-        [`& ${StyledRadio}`]: {
-          marginTop: '$$radioGroupGap',
-          marginRight: 0
+        mr: 0,
+        flexDirection: 'column',
+        [`& ${StyledRadioLabel}:not(:first-child)`]: {
+          mt: '$$radioSize'
         }
       }
     }
   },
   defaultVariants: {
-    row: false
+    isRow: false
   }
 });
 
-export const StyledRadioDescription = styled('span', {
-  color: '$accents7',
-  fontSize: 'calc($$radioSize * 0.85)',
-  paddingLeft: 'calc($$radioSize + $$radioSize * 0.375)'
-});
-
 // types
-export type RadioVariantsProps = VariantProps<typeof StyledRadio>;
 export type RadioLabelVariantsProps = VariantProps<typeof StyledRadioLabel>;
+export type RadioTexVariantsProps = VariantProps<typeof StyledRadioText>;
+export type RadioPointVariantsProps = VariantProps<typeof StyledRadioPoint>;
 export type RadioGroupVariantsProps = VariantProps<typeof StyledRadioGroup>;
+export type RadioContainerVariantsProps = VariantProps<
+  typeof StyledRadioContainer
+>;
+export type RadioGroupContainerVariantsProps = VariantProps<
+  typeof StyledRadioGroupContainer
+>;
+export type RadioDescriptionVariantsProps = VariantProps<
+  typeof StyledRadioDescription
+>;\n- packages/react/src/radio/radio.tsx (modified, 277 changes)\n  Patch: @@ -1,219 +1,126 @@
-import React, { useEffect, useMemo, useState, ReactNode } from 'react';
-import { useRadioContext } from './radio-context';
-import RadioGroup from './radio-group';
-import { pickChild } from '../utils/collections';
-import useWarning from '../use-warning';
-import useKeyboard, { KeyCode } from '../use-keyboard';
-import { SimpleColors, NormalSizes } from '../utils/prop-types';
-import { CSS } from '../theme/stitches.config';
-import withDefaults from '../utils/with-defaults';
-import { ReactRef } from '../utils/refs';
-import { useDOMRef } from '../utils/dom';
-import { __DEV__ } from '../utils/assertion';
+import React, { useMemo } from 'react';
+import { mergeProps } from '@react-aria/utils';
+import { useFocusRing } from '@react-aria/focus';
+import { VisuallyHidden } from '@react-aria/visually-hidden';
 import clsx from '../utils/clsx';
+import { __DEV__ } from '../utils/assertion';
+import { useFocusableRef } from '../utils/dom';
+import { pickChild } from '../utils/collections';
+import RadioDesc from './radio-desc';
+import RadioGroup from './radio-group';
+import { useRadio } from './use-radio';
 import {
-  StyledRadio,
-  StyledRadioLabel,
-  StyledRadioInput,
+  StyledRadioText,
   StyledRadioPoint,
-  StyledRadioDescription,
-  RadioVariantsProps
+  StyledRadioLabel,
+  StyledRadioContainer
 } from './radio.styles';
-
-interface RadioEventTarget {
-  checked: boolean;
+import type { FocusRingAria } from '@react-aria/focus';
+import type { FocusableRef } from '@react-types/shared';
+import type { ReactRef } from '../utils/refs';
+import type { CSS } from '../theme/stitches.config';
+import type { UseRadioProps } from './use-radio';
+
+interface Props extends UseRadioProps {
+  label?: string;
+  className?: string;
+  children?: React.ReactNode;
+  as?: keyof JSX.IntrinsicElements;
 }
 
-export interface RadioEvent {
-  target: RadioEventTarget;
-  stopPropagation: () => void;
-  preventDefault: () => void;
-  nativeEvent: React.ChangeEvent;
-}
+export type RadioProps = Props & { css?: CSS };
 
-interface Props {
-  children?: ReactNode;
-  checked?: boolean;
-  value?: string | number;
-  size?: NormalSizes;
-  color?: SimpleColors;
-  textColor?: SimpleColors;
-  disabled?: boolean;
-  preventDefault?: boolean;
-  onChange?: (e: RadioEvent) => void;
+interface IFocusRingAria extends FocusRingAria {
+  focusProps: Omit<React.HTMLAttributes<HTMLElement>, keyof RadioProps>;
 }
 
-const defaultProps = {
-  size: 'md' as NormalSizes,
-  color: 'default' as SimpleColors,
-  textColor: 'default' as SimpleColors,
-  disabled: false,
-  preventDefault: true
-};
-
-type NativeAttrs = Omit<React.InputHTMLAttributes<unknown>, keyof Props>;
-
-export type RadioProps = Props &
-  typeof defaultProps &
-  NativeAttrs &
-  RadioVariantsProps & { css?: CSS };
-
-const preClass = 'nextui-radio';
-
 export const Radio = React.forwardRef(
   (props: RadioProps, ref: ReactRef<HTMLInputElement>) => {
-    const {
-      checked,
-      onChange,
-      disabled,
-      color,
-      size,
-      textColor,
-      value: radioValue,
-      preventDefault,
-      children,
-      ...otherProps
-    } = props;
-
-    const [selfChecked, setSelfChecked] = useState<boolean>(!!checked);
+    const { className, as, css, children, label, ...otherProps } = props;
 
-    const domRef = useDOMRef(ref);
+    const [textChildren, descChildren] = pickChild(children, RadioDesc);
 
     const {
-      value: groupValue,
-      disabledAll,
-      inGroup,
-      color: groupColor,
-      size: groupSize,
-      textColor: textGroupColor,
-      updateState
-    } = useRadioContext();
-
-    const [withoutDescChildren, DescChildren] = pickChild(
-      children,
-      StyledRadioDescription
-    );
-
-    if (inGroup && __DEV__) {
-      if (checked !== undefined) {
-        useWarning('Remove props "checked" if in the Radio.Group.', 'Radio');
-      }
-      if (radioValue === undefined) {
-        useWarning(
-          'Props "value" must be deinfed if in the Radio.Group.',
-          'Radio'
-        );
-      }
-    }
-
-    useEffect(() => {
-      setSelfChecked(groupValue === radioValue);
-    }, [groupValue, radioValue]);
-
-    const isDisabled = useMemo(
-      () => disabled || disabledAll,
-      [disabled, disabledAll]
+      size,
+      color,
+      labelColor,
+      isSquared,
+      disableAnimation,
+      inputRef,
+      inputProps
+    } = useRadio({ ...otherProps, children: children ?? label });
+
+    const domRef = useFocusableRef<HTMLLabelElement>(
+      ref as FocusableRef<HTMLLabelElement>,
+      inputRef
     );
 
-    const radioColor = (
-      color !== 'default' ? color : groupColor
-    ) as SimpleColors;
-    const radioSize = (size !== 'md' ? size : groupSize) as NormalSizes;
-    const labelColor = (
-      textColor !== 'default' ? textColor : textGroupColor
-    ) as SimpleColors;
+    const { focusProps, isFocusVisible }: IFocusRingAria = useFocusRing({
+      autoFocus: inputProps.autoFocus
+    });
 
-    const changeHandler = (event: React.ChangeEvent) => {
-      if (isDisabled || (inGroup && selfChecked)) return;
-      const selfEvent: RadioEvent = {
-        target: {
-          checked: !selfChecked
-        },
-        stopPropagation: event.stopPropagation,
-        preventDefault: event.preventDefault,
-        nativeEvent: event
-      };
-      setSelfChecked(!selfChecked);
-      if (inGroup) {
-        updateState && updateState(radioValue as string | number);
-      }
-      onChange && onChange(selfEvent);
-    };
-
-    const { bindings } = useKeyboard(
-      (event: any) => {
-        changeHandler(event);
-      },
-      [KeyCode.Enter, KeyCode.Space],
-      {
-        disableGlobalEvent: true,
-        preventDefault
-      }
-    );
-    useEffect(() => {
-      if (checked === undefined) return;
-      setSelfChecked(Boolean(checked));
-    }, [checked]);
+    const radioState = useMemo(() => {
+      if (inputProps.disabled) return 'disabled';
+      return inputProps.checked ? 'checked' : 'uncheked';
+    }, [inputProps.disabled, inputProps.checked]);
 
     return (
-      <StyledRadio
-        aria-checked={selfChecked}
-        disabled={isDisabled}
-        active={selfChecked}
-        size={radioSize}
-        color={radioColor}
-        {...otherProps}
-        {...bindings}
+      <StyledRadioLabel
+        ref={domRef}
+        className={clsx(
+          'nextui-radio-label',
+          `nextui-radio--${radioState}`,
+          className
+        )}
+        as={as}
+        css={css as any}
+        size={size}
+        color={color as any}
+        isSquared={isSquared}
+        isChecked={inputProps.checked}
+        isDisabled={inputProps.disabled}
+        disableAnimation={disableAnimation}
       >
-        <StyledRadioInput
-          type="radio"
-          tabIndex={-1}
-          ref={domRef}
-          value={radioValue}
-          checked={selfChecked}
-          onChange={changeHandler}
-          className={`${preClass}-input`}
-        />
-        <StyledRadioLabel
-          color={labelColor}
-          disabled={isDisabled}
-          className={`${preClass}-name`}
-        >
+        <StyledRadioContainer className="nextui-radio-container">
           <StyledRadioPoint
-            tabIndex={isDisabled ? -1 : 0}
-            className={clsx(`${preClass}-point`, {
-              [`${preClass}-active`]: selfChecked,
-              [`${preClass}-disabled`]: isDisabled
-            })}
-          />
-          {withoutDescChildren}
-        </StyledRadioLabel>
-        {DescChildren && DescChildren}
-      </StyledRadio>
+            className="nextui-radio-point"
+            isFocusVisible={isFocusVisible}
+            {...focusProps}
+          >
+            <VisuallyHidden>
+              <input
+                ref={inputRef}
+                className="nextui-radio-input"
+                {...mergeProps(inputProps, focusProps)}
+              />
+            </VisuallyHidden>
+          </StyledRadioPoint>
+          <StyledRadioText
+            className="nextui-radio-text"
+            color={labelColor}
+            isDisabled={inputProps.disabled}
+          >
+            {textChildren}
+          </StyledRadioText>
+        </StyledRadioContainer>
+        {descChildren && descChildren}
+      </StyledRadioLabel>
     );
   }
 );
 
-type RadioComponent<P = {}> = React.FC<P> & {
+type RadioComponent<T, P = {}> = React.ForwardRefExoticComponent<
+  React.PropsWithoutRef<P> & React.RefAttributes<T>
+> & {
   Group: typeof RadioGroup;
-  Desc: typeof StyledRadioDescription;
-  Description: typeof StyledRadioDescription;
+  Desc: typeof RadioDesc;
+  Description: typeof RadioDesc;
 };
 
-type ComponentProps = Partial<typeof defaultProps> &
-  Omit<Props, keyof typeof defaultProps> &
-  NativeAttrs &
-  RadioVariantsProps & { css?: CSS };
-
-Radio.defaultProps = defaultProps;
-
 if (__DEV__) {
   Radio.displayName = 'NextUI.Radio';
 }
 
 Radio.toString = () => '.nextui-radio';
 
-export default withDefaults(
-  Radio,
-  defaultProps
-) as RadioComponent<ComponentProps>;
+export default Radio as RadioComponent<HTMLLabelElement, RadioProps>;\n- packages/react/src/radio/use-radio-group.ts (added, 59 changes)\n  Patch: @@ -0,0 +1,59 @@
+import React, { useMemo } from 'react';
+import { useRadioGroupState } from '@react-stately/radio';
+import { useRadioGroup as useReactAriaRadioGroup } from '@react-aria/radio';
+import type { AriaRadioGroupProps } from '@react-types/radio';
+import type {
+  NormalSizes,
+  NormalColors,
+  SimpleColors
+} from '../utils/prop-types';
+
+interface Props extends AriaRadioGroupProps {
+  isRow?: boolean;
+  size?: NormalSizes;
+  color?: NormalColors;
+  labelColor?: SimpleColors;
+}
+
+type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props>;
+
+export type UseRadioGroupProps = Props & NativeAttrs;
+
+/**
+ * @internal
+ */
+export const useRadioGroup = (props: UseRadioGroupProps) => {
+  const {
+    size = 'md',
+    color = 'default',
+    labelColor = 'default',
+    isRow = false,
+    ...otherProps
+  } = props;
+
+  const otherPropsWithOrientation = useMemo<AriaRadioGroupProps>(() => {
+    return {
+      ...otherProps,
+      orientation: isRow ? 'horizontal' : 'vertical'
+    };
+  }, [otherProps]);
+
+  const radioGroupState = useRadioGroupState(otherPropsWithOrientation);
+
+  const { radioGroupProps, labelProps } = useReactAriaRadioGroup(
+    otherPropsWithOrientation,
+    radioGroupState
+  );
+
+  return {
+    size,
+    isRow,
+    color,
+    labelColor,
+    radioGroupState,
+    radioGroupProps,
+    labelProps
+  };
+};
+
+export type UseRadioGroupReturn = ReturnType<typeof useRadioGroup>;\n- packages/react/src/radio/use-radio.ts (added, 71 changes)\n  Patch: @@ -0,0 +1,71 @@
+import React, { useRef } from 'react';
+import { useRadio as useReactAriaRadio } from '@react-aria/radio';
+import useWarning from '../use-warning';
+import { __DEV__ } from '../utils/assertion';
+import { useRadioGroupContext } from './radio-context';
+import type { AriaRadioProps } from '@react-types/radio';
+import type {
+  NormalSizes,
+  NormalColors,
+  SimpleColors
+} from '../utils/prop-types';
+
+interface Props extends AriaRadioProps {
+  isSquared?: boolean;
+  disableAnimation?: boolean;
+  size?: NormalSizes;
+  color?: NormalColors;
+  labelColor?: SimpleColors;
+}
+
+type NativeAttrs = Omit<React.InputHTMLAttributes<unknown>, keyof Props>;
+
+export type UseRadioProps = Props & NativeAttrs;
+
+/**
+ * @internal
+ */
+export const useRadio = (props: UseRadioProps) => {
+  const groupContext = useRadioGroupContext();
+
+  const {
+    size = groupContext.size ?? 'md',
+    color = groupContext.color ?? 'default',
+    labelColor = groupContext.labelColor ?? 'default',
+    isSquared = false,
+    disableAnimation = false,
+    ...otherProps
+  } = props;
+
+  if (groupContext && __DEV__) {
+    if (otherProps.checked !== undefined) {
+      useWarning('Remove props "checked" if in the Radio.Group.', 'Radio');
+    }
+    if (otherProps.value === undefined) {
+      useWarning(
+        'Props "value" must be deinfed if in the Radio.Group.',
+        'Radio'
+      );
+    }
+  }
+
+  const inputRef = useRef<HTMLInputElement>(null);
+
+  const { inputProps } = useReactAriaRadio(
+    otherProps,
+    groupContext.radioGroupState,
+    inputRef
+  );
+
+  return {
+    size,
+    color,
+    labelColor,
+    isSquared,
+    disableAnimation,
+    inputRef,
+    inputProps
+  };
+};
+
+export type UseRadioReturn = ReturnType<typeof useRadio>;\n- yarn.lock (modified, 30 changes)\n  Patch: @@ -3890,6 +3890,20 @@
     "@react-types/shared" "^3.12.0"
     dom-helpers "^3.3.1"
 
+"@react-aria/radio@3.1.11":
+  version "3.1.11"
+  resolved "https://registry.yarnpkg.com/@react-aria/radio/-/radio-3.1.11.tgz#269c67fb7163870a6bc8bd1e34658d5a72e2c66e"
+  integrity sha512-xT7FgxECPgGHFDCiMu9QZlRJheesjy13N5KwIfCwKt+Tl8ZDacZ8jxswPrDpTfdwdQaA0TCiHWcmfWkAs790Yw==
+  dependencies:
+    "@babel/runtime" "^7.6.2"
+    "@react-aria/focus" "^3.5.5"
+    "@react-aria/i18n" "^3.3.9"
+    "@react-aria/interactions" "^3.8.4"
+    "@react-aria/label" "^3.2.5"
+    "@react-aria/utils" "^3.12.0"
+    "@react-stately/radio" "^3.3.6"
+    "@react-types/radio" "^3.1.6"
+
 "@react-aria/selection@^3.8.0", "@react-aria/selection@^3.8.2":
   version "3.8.2"
   resolved "https://registry.yarnpkg.com/@react-aria/selection/-/selection-3.8.2.tgz#0e64c412ee8e73268994e72f4cb28f5b1100aff9"
@@ -4082,6 +4096,15 @@
     "@react-stately/utils" "^3.4.1"
     "@react-types/overlays" "^3.5.5"
 
+"@react-stately/radio@3.3.6", "@react-stately/radio@^3.3.6":
+  version "3.3.6"
+  resolved "https://registry.yarnpkg.com/@react-stately/radio/-/radio-3.3.6.tgz#c0cea40c9625818b211544c5028341f128e7f4f7"
+  integrity sha512-G35xuEIk7TkqA3SGGlSVUyrkauf7bNVxq0/ELSM1mhrAuKF6nXkLqK2kI5LtOrngk/ZrsVFtfJYN+H6cBNhu2Q==
+  dependencies:
+    "@babel/runtime" "^7.6.2"
+    "@react-stately/utils" "^3.4.1"
+    "@react-types/radio" "^3.1.6"
+
 "@react-stately/selection@^3.9.3":
   version "3.9.3"
   resolved "https://registry.yarnpkg.com/@react-stately/selection/-/selection-3.9.3.tgz#e40cadb8a248be189b919f256e55665d69219629"
@@ -4226,6 +4249,13 @@
   dependencies:
     "@react-types/shared" "^3.12.0"
 
+"@react-types/radio@^3.1.6":
+  version "3.1.6"
+  resolved "https://registry.yarnpkg.com/@react-types/radio/-/radio-3.1.6.tgz#4de6e29468b8806ccf1f85acc77bf816e80c3757"
+  integrity sha512-OmsYEdKnBIGIwX66u2dcbETWeWKlu0bKCzRUDQiTAUpBZOON6s2/34AvknzEGhmxj/OlQB916UzpUHH1EaiqdA==
+  dependencies:
+    "@react-types/shared" "^3.12.0"
+
 "@react-types/shared@3.12.0", "@react-types/shared@^3.12.0":
   version "3.12.0"
   resolved "https://registry.yarnpkg.com/@react-types/shared/-/shared-3.12.0.tgz#31a53fcec5c3159fd0d5c67f7e3f3876c7d19908"\n
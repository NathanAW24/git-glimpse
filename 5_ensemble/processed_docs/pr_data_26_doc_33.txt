Pull Request Number: 709
Title: refactor(react-checkbox): new prop added to manage the container css
Base Branch: next
Head Branch: refactor/checkbox-container-css
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/709
State: MERGED
Created At: 2022-08-28T19:35:14Z
Merged At: 2022-08-28T19:35:49Z
Participants: jrgarciadev

Description:
üìù Description
In order to make easier the Checkbox container customization, a new prop was added and the docs were updated.
‚õ≥Ô∏è Current behavior (updates)
Users have to use the .nextui-checkbox-container class to modify the checkbox container styles
üöÄ New behavior

A new prop called containerCss was added to make easier the container customization
The checkbox documentation was updated

üí£ Is this a breaking change (Yes/No): No

üìù Additional Information
Usage example:
Before
<Checkbox
   defaultSelected
   css={{
      ".nextui-checkbox-container": {
        borderRadius: "4px"
      }
   }}
 >
   Option
</Checkbox>
After
<Checkbox
   defaultSelected
   containerCss={{
     // it changes the checkbox (square) border radius
     borderRadius: "4px"
   }}
 >
   Option
</Checkbox>

Commits:
- chore(docs-checkbox): controlled vs uncontrolled re-sorted\n- fix(docs-autocomplete): search item border bottom color\n- chore(repo): stale plugin removed\n- refactor(react-checbox): new prop added to manage the container css, docs updated\n

Labels:
üß± Type: Refactoring

Comments:
- vercel: **The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Updated |
| :--- | :----- | :------ | :------ |
| **nextui-docs** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs/6P9PADij8WwY9CtLTMkiwMjviz8E)) | [Visit Preview](https://nextui-docs-git-refactor-checkbox-container-css-nextui-org.vercel.app) | Aug 28, 2022 at 7:35PM (UTC) |
| **nextui-storybook** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook/6jwAuuU41g57ZK8KeE6QHCD7rPYH)) | [Visit Preview](https://nextui-storybook-git-refactor-checkbox-container-css-nextui-org.vercel.app) | Aug 28, 2022 at 7:35PM (UTC) |


\n

Files Changed:
- .github/stale.yml (removed, 30 changes)\n  Patch: @@ -1,30 +0,0 @@
-# Number of days of inactivity before an issue becomes stale
-daysUntilStale: 60
-# Number of days of inactivity before a stale issue is closed
-daysUntilClose: 15
-# Issues with these labels will never be considered stale
-exemptLabels:
-  - pinned
-  - üìå pin
-  - security
-  - accessibility
-  - performance
-  - documentation
-  - good first issue
-  - "help wanted"
-  - "help wanted: high priority"
-  - "help wanted: urgent"
-  - "feature request"
-# Label to use when marking an issue as stale
-staleLabel: 'type: stale'
-# Comment to post when marking an issue as stale. Set to `false` to disable
-markComment: >
-  Hello üëã, to help manage issues we automatically close stale issues.
-  This issue has been automatically marked as stale because it has not had activity for quite some time.
-  Has this issue been fixed, or does it still require the community's attention?
-  > This issue will be closed in 10 days if no further activity occurs.
-  Thank you for your contributions.
-# Comment to post when closing a stale issue. Set to `false` to disable
-closeComment: >
-  Closing this issue after a prolonged period of inactivity. If this is still present in the latest release, please feel free to create a new issue with up-to-date information.
-only: issues
\ No newline at end of file\n- apps/docs/content/components/checkbox-group/controlled-vs-uncontrolled.ts (modified, 16 changes)\n  Patch: @@ -1,15 +1,17 @@
-const App = `import React from 'react'
+const App = `import React from "react";
 import { Checkbox, Grid } from "@nextui-org/react";
 
 export default function App() {
-  const [selected, setSelected] = React.useState(['buenos-aires', 'sydney']);
+  const [selected, setSelected] = React.useState(["buenos-aires", "sydney"]);
 
   return (
     <Grid.Container gap={2}>
       <Grid>
         <Checkbox.Group
-          label="Select cities (uncontrolled)"
-          defaultValue={['buenos-aires', 'auckland']}
+          label="Select cities (controlled)"
+          color="secondary"
+          value={selected}
+          onChange={setSelected}
         >
           <Checkbox value="buenos-aires">Buenos Aires</Checkbox>
           <Checkbox value="auckland">Auckland</Checkbox>
@@ -18,10 +20,8 @@ export default function App() {
       </Grid>
       <Grid>
         <Checkbox.Group
-          label="Select cities (controlled)"
-          color="secondary"
-          value={selected}
-          onChange={setSelected}
+          label="Select cities (uncontrolled)"
+          defaultValue={["buenos-aires", "auckland"]}
         >
           <Checkbox value="buenos-aires">Buenos Aires</Checkbox>
           <Checkbox value="auckland">Auckland</Checkbox>\n- apps/docs/content/components/checkbox/color.ts (modified, 12 changes)\n  Patch: @@ -3,27 +3,27 @@ const App = `import { Checkbox, Spacer } from "@nextui-org/react";
 export default function App() {
   return (
     <>
-      <Checkbox color="primary" defaultSelected={true}>
+      <Checkbox color="primary" defaultSelected>
         Primary
       </Checkbox>
       <Spacer />
-      <Checkbox color="secondary" defaultSelected={true}>
+      <Checkbox color="secondary" defaultSelected>
         Secondary
       </Checkbox>
       <Spacer />
-      <Checkbox color="success" defaultSelected={true}>
+      <Checkbox color="success" defaultSelected>
         Success
       </Checkbox>
       <Spacer />
-      <Checkbox color="warning" defaultSelected={true}>
+      <Checkbox color="warning" defaultSelected>
         Warning
       </Checkbox>
       <Spacer />
-      <Checkbox color="error" defaultSelected={true}>
+      <Checkbox color="error" defaultSelected>
         Error
       </Checkbox>
       <Spacer />
-      <Checkbox color="gradient" defaultSelected={true}>
+      <Checkbox color="gradient" defaultSelected>
         Gradient
       </Checkbox>
     </>\n- apps/docs/content/components/checkbox/controlled-vs-uncontrolled.ts (modified, 10 changes)\n  Patch: @@ -1,16 +1,18 @@
-const App = `import React from 'react'
+const App = `import React from "react";
 import { Checkbox, Spacer } from "@nextui-org/react";
 
 export default function App() {
   const [selected, setSelected] = React.useState(true);
 
   return (
     <>
-      <Checkbox defaultSelected={true} color="success">Subscribe (uncontrolled)</Checkbox>
-      <Spacer x={1} />
-      <Checkbox isSelected={selected} color="success" onChange={setSelected} >
+      <Checkbox isSelected={selected} color="success" onChange={setSelected}>
         Subscribe (controlled)
       </Checkbox>
+      <Spacer x={1} />
+      <Checkbox defaultSelected color="success">
+        Subscribe (uncontrolled)
+      </Checkbox>
     </>
   );
 }`;\n- apps/docs/content/components/checkbox/default.ts (modified, 2 changes)\n  Patch: @@ -1,7 +1,7 @@
 const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
-  return <Checkbox defaultSelected={true}>Option</Checkbox>;
+  return <Checkbox defaultSelected>Option</Checkbox>;
 }`;
 
 const react = {\n- apps/docs/content/components/checkbox/disabled.ts (modified, 2 changes)\n  Patch: @@ -2,7 +2,7 @@ const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Checkbox isDisabled={true} defaultSelected={true}>
+    <Checkbox isDisabled defaultSelected>
       Default
     </Checkbox>
   );\n- apps/docs/content/components/checkbox/interminate.ts (modified, 2 changes)\n  Patch: @@ -2,7 +2,7 @@ const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Checkbox isIndeterminate={true} defaultSelected={true}>
+    <Checkbox isIndeterminate defaultSelected>
       Option
     </Checkbox>
   );\n- apps/docs/content/components/checkbox/label-color.ts (modified, 10 changes)\n  Patch: @@ -3,23 +3,23 @@ const App = `import { Checkbox, Spacer } from "@nextui-org/react";
 export default function App() {
   return (
     <>
-      <Checkbox color="primary" labelColor="primary" defaultSelected={true}>
+      <Checkbox color="primary" labelColor="primary" defaultSelected>
         Primary
       </Checkbox>
       <Spacer />
-      <Checkbox color="secondary" labelColor="secondary" defaultSelected={true}>
+      <Checkbox color="secondary" labelColor="secondary" defaultSelected>
         Secondary
       </Checkbox>
       <Spacer />
-      <Checkbox color="success" labelColor="success" defaultSelected={true}>
+      <Checkbox color="success" labelColor="success" defaultSelected>
         Success
       </Checkbox>
       <Spacer />
-      <Checkbox color="warning" labelColor="warning" defaultSelected={true}>
+      <Checkbox color="warning" labelColor="warning" defaultSelected>
         Warning
       </Checkbox>
       <Spacer />
-      <Checkbox color="error" labelColor="error" defaultSelected={true}>
+      <Checkbox color="error" labelColor="error" defaultSelected>
         Error
       </Checkbox>
     </>\n- apps/docs/content/components/checkbox/line-through.ts (modified, 2 changes)\n  Patch: @@ -2,7 +2,7 @@ const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Checkbox lineThrough={true} defaultSelected={true}>
+    <Checkbox lineThrough defaultSelected>
       Option
     </Checkbox>
   );\n- apps/docs/content/components/checkbox/no-animated.ts (modified, 2 changes)\n  Patch: @@ -2,7 +2,7 @@ const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Checkbox disableAnimation={true} defaultSelected={true} lineThrough={true}>
+    <Checkbox disableAnimation defaultSelected lineThrough>
       Option
     </Checkbox>
   );\n- apps/docs/content/components/checkbox/rounded.ts (modified, 2 changes)\n  Patch: @@ -2,7 +2,7 @@ const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Checkbox isRounded={true} defaultSelected={true} color="primary">
+    <Checkbox isRounded defaultSelected color="primary">
       Rounded option
     </Checkbox>
   );\n- apps/docs/content/components/checkbox/size.ts (modified, 10 changes)\n  Patch: @@ -3,23 +3,23 @@ const App = `import { Checkbox, Spacer } from "@nextui-org/react";
 export default function App() {
   return (
     <>
-      <Checkbox defaultSelected={true} size="xs">
+      <Checkbox defaultSelected size="xs">
         mini
       </Checkbox>
       <Spacer />
-      <Checkbox defaultSelected={true} size="sm">
+      <Checkbox defaultSelected size="sm">
         small
       </Checkbox>
       <Spacer />
-      <Checkbox defaultSelected={true} size="md">
+      <Checkbox defaultSelected size="md">
         medium
       </Checkbox>
       <Spacer />
-      <Checkbox defaultSelected={true} size="lg">
+      <Checkbox defaultSelected size="lg">
         large
       </Checkbox>
       <Spacer />
-      <Checkbox defaultSelected={true} size="xl">
+      <Checkbox defaultSelected size="xl">
         xlarge
       </Checkbox>
     </>\n- apps/docs/content/docs/components/checkbox.mdx (modified, 77 changes)\n  Patch: @@ -1,6 +1,6 @@
 ---
-title: 'Checkbox'
-description: 'Checkboxes allow users to select multiple items from a list of individual items, or to mark one individual item as selected.'
+title: "Checkbox"
+description: "Checkboxes allow users to select multiple items from a list of individual items, or to mark one individual item as selected."
 url: https://nextui.org/docs/components/checkbox
 ---
 
@@ -10,7 +10,7 @@ Checkboxes allow users to select multiple items from a list of individual items,
 @react-aria/checkbox</a>
 
 ```jsx
-import { Checkbox } from '@nextui-org/react';
+import { Checkbox } from "@nextui-org/react";
 ```
 
 <CarbonAd />
@@ -87,27 +87,28 @@ import { Checkbox } from '@nextui-org/react';
 
 #### Checkbox Props
 
-| Attribute            | Type                           | Description                                                                                                                                                    | Default   |
-| -------------------- | ------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- |
-| **children**         | `ReactNode`                    | The label for the element                                                                                                                                      | -         |
-| **value**            | `string`                       | The value of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefvalue) | -         |
-| **label**            | `string`                       | The label for the element                                                                                                                                      | -         |
-| **name**             | `string`                       | The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname)   | -         |
-| **color**            | [NormalColors](#normal-colors) | The color of the component                                                                                                                                     | `default` |
-| **labelColor**       | [SimpleColors](#simple-colors) | The color of the label                                                                                                                                         | `default` |
-| **size**             | [NormalSizes](#normal-sizes)   | The size of the component                                                                                                                                      | `md`      |
-| **isSelected**       | `boolean`                      | Whether the element should be selected (controlled)                                                                                                            | `false`   |
-| **defaultSelected**  | `boolean`                      | Whether the element should be selected (uncontrolled)                                                                                                          | `false`   |
-| **disableAnimation** | `boolean`                      | Whether the checkbox has animations                                                                                                                            | `false`   |
-| **isDisabled**       | `boolean`                      | Whether the input is disabled                                                                                                                                  | `false`   |
-| **isIndeterminate**  | `boolean`                      | Indeterminism is presentational only. The indeterminate visual representation remains regardless of user interaction.                                          | `false`   |
-| **isRounded**        | `boolean`                      | Whether the checkbox is rounded                                                                                                                                | `false`   |
-| **lineThrough**      | `boolean`                      | Line in the middle of the label when the `Checkbox` is checked                                                                                                 | -         |
-| **isReadOnly**       | `boolean`                      | Whether the input can be selected but not changed by the user.                                                                                                 | `false`   |
-| **isRequired**       | `boolean`                      | Whether user input is required on the input before form submission.                                                                                            | `false`   |
-| **autoFocus**        | `boolean`                      | Whether the element should receive focus on render                                                                                                             |
-| **css**              | `Stitches.CSS`                 | Override Default CSS style                                                                                                                                     | -         |
-| **as**               | `keyof JSX.IntrinsicElements`  | Changes which tag component outputs                                                                                                                            | `label`   |
+| Attribute              | Type                           | Description                                                                                                                                                    | Default   |
+| ---------------------- | ------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- |
+| **children**           | `ReactNode`                    | The label for the element                                                                                                                                      | -         |
+| **value**              | `string`                       | The value of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefvalue) | -         |
+| **label**              | `string`                       | The label for the element                                                                                                                                      | -         |
+| **name**               | `string`                       | The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname)   | -         |
+| **color**              | [NormalColors](#normal-colors) | The color of the component                                                                                                                                     | `default` |
+| **labelColor**         | [SimpleColors](#simple-colors) | The color of the label                                                                                                                                         | `default` |
+| **size**               | [NormalSizes](#normal-sizes)   | The size of the component                                                                                                                                      | `md`      |
+| **isSelected**         | `boolean`                      | Whether the element should be selected (controlled)                                                                                                            | `false`   |
+| **defaultSelected**    | `boolean`                      | Whether the element should be selected (uncontrolled)                                                                                                          | `false`   |
+| **disableAnimation**   | `boolean`                      | Whether the checkbox has animations                                                                                                                            | `false`   |
+| **isDisabled**         | `boolean`                      | Whether the input is disabled                                                                                                                                  | `false`   |
+| **isIndeterminate**    | `boolean`                      | Indeterminism is presentational only. The indeterminate visual representation remains regardless of user interaction.                                          | `false`   |
+| **isRounded**          | `boolean`                      | Whether the checkbox is rounded                                                                                                                                | `false`   |
+| **lineThrough**        | `boolean`                      | Line in the middle of the label when the `Checkbox` is checked                                                                                                 | -         |
+| **isReadOnly**         | `boolean`                      | Whether the input can be selected but not changed by the user.                                                                                                 | `false`   |
+| **isRequired**         | `boolean`                      | Whether user input is required on the input before form submission.                                                                                            | `false`   |
+| **autoFocus**          | `boolean`                      | Whether the element should receive focus on render                                                                                                             |
+| **containerCss** `new` | `Stitches.CSS`                 | Override Default CSS Container style                                                                                                                           | -         |
+| **css**                | `Stitches.CSS`                 | Override Default CSS style                                                                                                                                     | -         |
+| **as**                 | `keyof JSX.IntrinsicElements`  | Changes which tag component outputs                                                                                                                            | `label`   |
 
 <Spacer y={1} />
 
@@ -147,31 +148,31 @@ import { Checkbox } from '@nextui-org/react';
 
 ```ts
 type NormalColors =
-  | 'default'
-  | 'primary'
-  | 'secondary'
-  | 'success'
-  | 'warning'
-  | 'error'
-  | 'gradient';
+  | "default"
+  | "primary"
+  | "secondary"
+  | "success"
+  | "warning"
+  | "error"
+  | "gradient";
 ```
 
 #### Simple Colors
 
 ```ts
 type SimpleColors =
-  | 'default'
-  | 'primary'
-  | 'secondary'
-  | 'success'
-  | 'warning'
-  | 'error';
+  | "default"
+  | "primary"
+  | "secondary"
+  | "success"
+  | "warning"
+  | "error";
 ```
 
 #### Normal Sizes
 
 ```ts
-type NormalSizes = 'xs' | 'sm' | 'md' | 'lg' | 'xl';
+type NormalSizes = "xs" | "sm" | "md" | "lg" | "xl";
 ```
 
 #### Keyboard event\n- apps/docs/content/docs/manifest.json (modified, 3 changes)\n  Patch: @@ -155,7 +155,8 @@
             {
               "title": "Checkbox",
               "keywords": "check, radio, selectable, checkbox, box",
-              "path": "/docs/components/checkbox.mdx"
+              "path": "/docs/components/checkbox.mdx",
+              "updated": true
             },
             {
               "title": "Checkbox Group",\n- apps/docs/src/components/search/suggestion.tsx (modified, 2 changes)\n  Patch: @@ -49,7 +49,7 @@ const Suggestion: React.FC<Props> = ({hit, highlighted}) => {
               cursor: pointer;
               padding: 16px 8px;
               justify-content: space-between;
-              border-bottom: 1px solid ${addColorAlpha(theme?.colors?.border?.value, 0.6)};
+              border-bottom: 1px solid ${addColorAlpha(theme?.colors?.border?.value, 0.1)};
               min-height: 68px;
               transition: all 0.2s ease;
             }\n- packages/react/src/checkbox/checkbox.styles.ts (modified, 7 changes)\n  Patch: @@ -4,6 +4,8 @@ import {styled} from "../theme/stitches.config";
 import {cssFocusVisible} from "../theme/shared-css";
 
 export const StyledCheckboxLabel = styled("label", {
+  $$checkboxBorderColor: "$colors$border",
+  $$checkboxBorderRadius: "$radii$squared",
   d: "inline-flex",
   jc: "flex-start",
   ai: "center",
@@ -13,7 +15,6 @@ export const StyledCheckboxLabel = styled("label", {
   zIndex: "$1",
   opacity: 1,
   transition: "opacity 0.25s ease",
-  $$checkboxBorderColor: "$colors$border",
   "@motion": {
     transition: "none",
   },
@@ -461,7 +462,7 @@ export const StyledCheckboxText = styled("span", {
 export const StyledCheckboxContainer = styled(
   "div",
   {
-    br: "$squared",
+    br: "$$checkboxBorderRadius",
     position: "relative",
     sizeMin: "$$checkboxSize",
     transition: "box-shadow 0.25s ease",
@@ -517,7 +518,7 @@ export const StyledCheckboxContainer = styled(
       },
       isRounded: {
         true: {
-          br: "$pill",
+          $$checkboxBorderRadius: "$radii$pill",
         },
       },
       isDisabled: {\n- packages/react/src/checkbox/checkbox.tsx (modified, 4 changes)\n  Patch: @@ -59,6 +59,7 @@ const Checkbox = React.forwardRef<HTMLLabelElement, CheckboxProps>(
       isIndeterminate,
       inputRef,
       inputProps,
+      containerCss,
     } = useCheckbox({...otherProps, children: children ?? label});
 
     const domRef = useFocusableRef<HTMLLabelElement>(
@@ -92,7 +93,7 @@ const Checkbox = React.forwardRef<HTMLLabelElement, CheckboxProps>(
     return (
       <StyledCheckboxLabel
         ref={domRef}
-        {...mergeProps(hoverProps, pressProps)}
+        {...mergeProps(hoverProps, pressProps, otherProps)}
         as={as}
         className={clsx("nextui-checkbox-label", `nextui-checkbox--${checkboxState}`, className)}
         css={css}
@@ -103,6 +104,7 @@ const Checkbox = React.forwardRef<HTMLLabelElement, CheckboxProps>(
         <StyledCheckboxContainer
           className="nextui-checkbox-container"
           color={color}
+          css={containerCss}
           disableAnimation={disableAnimation}
           isDisabled={inputProps.disabled}
           isFocusVisible={isFocusVisible}\n- packages/react/src/checkbox/use-checkbox.ts (modified, 4 changes)\n  Patch: @@ -8,6 +8,7 @@ import {
   useCheckboxGroupItem as useReactAriaCheckboxGroupItem,
 } from "@react-aria/checkbox";
 
+import {CSS} from "../theme";
 import {__DEV__} from "../utils/assertion";
 
 import {useCheckboxGroupContext} from "./checkbox-context";
@@ -19,6 +20,7 @@ export interface UseCheckboxProps extends AriaCheckboxProps {
   size?: NormalSizes;
   color?: NormalColors;
   labelColor?: SimpleColors;
+  containerCss?: CSS;
 }
 
 /**
@@ -35,6 +37,7 @@ export const useCheckbox = (props: UseCheckboxProps) => {
     isRounded = false,
     disableAnimation = false,
     isIndeterminate = false,
+    containerCss,
     ...otherProps
   } = props;
 
@@ -85,6 +88,7 @@ export const useCheckbox = (props: UseCheckboxProps) => {
     isIndeterminate,
     inputRef,
     inputProps,
+    containerCss,
   };
 };
 \n
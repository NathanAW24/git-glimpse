Pull Request Number: 3354
Title: feat: eslint add rule prefer top level type import
Base Branch: canary
Head Branch: eslint-import-type
Author: winchesHe
URL: https://github.com/nextui-org/nextui/pull/3354
State: MERGED
Created At: 2024-06-28T15:22:44Z
Merged At: 2024-07-06T07:32:14Z
Participants: winchesHe, jrgarciadev, wingkwong

Description:
Closes # 
üìù Description

Add a brief description

‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit

Chores

Updated linting rules and scripts in configuration files for improved code quality.
Refined import statements across various components for better code organization and consistency.

Commits:
- feat: eslint add rule prefer top level type import\n

Labels:


Comments:
- vercel: [vc]: #IORTysLkzEvlCZ4qToXxXNH/VYy9YCogTeBbkbG2sdw=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9Bd1dRQzFFMnpScnVYTmp4akxVdWphMXdGNkhRIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1lc2xpbnQtaW1wb3J0LXR5cGUtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1kb2NzLXYyLWdpdC1lc2xpbnQtaW1wb3J0LXR5cGUtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19LHsibmFtZSI6Im5leHR1aS1zdG9yeWJvb2stdjIiLCJyb290RGlyZWN0b3J5IjoicGFja2FnZXMvc3Rvcnlib29rIiwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi81eXZDZFROUlA3eEhyZjNrUEhXcUREeGJUSmp6IiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWVzbGludC1pbXBvcnQtdHlwZS1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZXNsaW50LWltcG9ydC10eXBlLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/AwWQC1E2zRruXNjxjLUuja1wF6HQ)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-eslint-import-type-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-eslint-import-type-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 28, 2024 3:27pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/5yvCdTNRP7xHrf3kPHWqDDxbTJjz)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-eslint-import-type-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-eslint-import-type-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 28, 2024 3:27pm |


\n- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: 3881127125b28b5fd622cd2b99465d74ff1ee95f

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/nextui-org/nextui/new/eslint-import-type?filename=.changeset/plenty-donkeys-develop.md&value=---%0A%22%40nextui-org%2Faccordion%22%3A%20patch%0A%22%40nextui-org%2Fbutton%22%3A%20patch%0A%22%40nextui-org%2Fcheckbox%22%3A%20patch%0A%22%40nextui-org%2Fdropdown%22%3A%20patch%0A%22%40nextui-org%2Fmenu%22%3A%20patch%0A%22%40nextui-org%2Fselect%22%3A%20patch%0A%22%40nextui-org%2Fsystem-rsc%22%3A%20patch%0A%22%40nextui-org%2Fsystem%22%3A%20patch%0A---%0A%0Afeat%3A%20eslint%20add%20rule%20prefer%20top%20level%20type%20import%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The changes primarily focus on refining import statements across various TypeScript modules to enforce consistent style and improving linting configurations. This involves separating type imports from functional imports and simplifying file patterns in lint scripts within the `package.json`. Overall, these updates enhance code readability and maintainability while ensuring adherence to consistent coding standards.

## Changes

| File Path                                                          | Summary                                                                                                |
|--------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------|
| `.eslintrc.json`                                                   | Added a new rule to ensure consistent type specifier style: `"prefer-top-level"`.                       |
| `package.json`                                                     | Refined linting and fixing scripts by altering file patterns to target directories more efficiently.   |
| `packages/components/accordion/src/use-accordion.ts`               | Modified imports to separate type imports from functional imports for better clarity.                   |
| `packages/components/button/src/use-button.ts`                     | Adjusted imports to include types without the `type` keyword.                                           |
| `packages/components/checkbox/src/use-checkbox-group.ts`, `‚Ä¶/use-checkbox.ts`, `‚Ä¶/use-dropdown.ts` | Updated to separate type and functional imports from `@nextui-org/system`.                              |
| `packages/components/menu/src/use-menu.ts`                         | Reorganized and adjusted import statements for better modular consistency.                              |
| `packages/components/select/__tests__/select.test.tsx`             | Simplified import statements by removing redundant type redeclarations.                                 |
| `packages/core/system-rsc/test-utils/no-slots-component.tsx`       | Modified import of `VariantProps` to improve import structure.                                          |
| `packages/core/system-rsc/test-utils/slots-component.tsx`          | Adjusted import statements to remove redundant imports of `VariantProps`.                               |

## Sequence Diagram(s)

This section is omitted as the changes do not introduce new features or modify control flow. The updates are primarily structural and stylistic improvements.

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

.eslintrc.json: ### Summary

In the `.eslintrc.json` file, a new rule `"import/consistent-type-specifier-style": ["error", "prefer-top-level"]` has been added under the `rules` section.

---

package.json: ## Short Summary

The diff in `package.json` involves adjusting the linting scripts by refining the file patterns for linting and fixing in specific directories, primarily targeting TypeScript and TypeScript/JSX files.

## Alterations to the declarations of exported or public entities

- `"lint:pkg": "eslint -c .eslintrc.json ./packages/**/**/*.{ts,tsx}"` in `package.json` ‚Üí `"lint:pkg": "eslint -c .eslintrc.json ./packages/**/*.{ts,tsx}"`
- `"lint:fix": "eslint --fix -c .eslintrc.json ./packages/**/**/*.{ts,tsx}"` in `package.json` ‚Üí `"lint:fix": "eslint --fix -c .eslintrc.json ./packages/**/*.{ts,tsx}"`

---

packages/components/accordion/src/use-accordion.ts: ### Short Summary
The change in `use-accordion.ts` involves modifying the imports related to types and dependencies, specifically removing `HTMLNextUIProps` and `PropGetter` from the `useProviderContext` import and adding them as individual imports from `"@nextui-org/system"`.

### Alterations to the declarations of exported or public entities
- `useProviderContext, type HTMLNextUIProps, type PropGetter` from `"@nextui-org/system"` ‚Üí `useProviderContext` from `"@nextui-org/system"`
- Added new imports: `HTMLNextUIProps, PropGetter` from `"@nextui-org/system"`

---

packages/components/button/src/use-button.ts: ### Summary

The diff in `use-button.ts` involves changes to the imports of `HTMLNextUIProps` and `PropGetter` from the `@nextui-org/system` module. The import statements have been modified to only import `HTMLNextUIProps` and `PropGetter` without using the `type` keyword.

---

packages/components/checkbox/src/use-checkbox-group.ts: ### Summary

The change in `packages/components/checkbox/src/use-checkbox-group.ts` involves modifying the import statements for `HTMLNextUIProps` and `PropGetter`. The `useProviderContext` function now imports only `useProviderContext` from `@nextui-org/system`, removing the import of `HTMLNextUIProps` and `PropGetter`.

---

packages/components/checkbox/src/use-checkbox.ts: ### Summary

The change in `use-checkbox.ts` involves modifying the import statements related to types and functions. Specifically, the import of `HTMLNextUIProps` and `PropGetter` from `"@nextui-org/system"` has been moved to a separate line and now includes additional types `HTMLNextUIProps` and `PropGetter` from `"@nextui-org/system"`. This change alters the module's dependencies and potentially affects how certain types are accessed within the file.

---

packages/components/dropdown/src/use-dropdown.ts: ### Summary

The change in `use-dropdown.ts` involves removing the import of `HTMLNextUIProps` and `PropGetter` from `@nextui-org/system` and instead importing them directly from `@nextui-org/system`. This modification affects the type imports in the file.

---

packages/components/menu/src/use-menu.ts: ## Short Summary
The change in functionality involves reorganizing imports in `use-menu.ts` by separating the import of `useProviderContext` from other imports and adjusting the import syntax for `HTMLNextUIProps` and `PropGetter`.

## Alterations to the declarations of exported or public entities
- `import {useProviderContext, type HTMLNextUIProps, type PropGetter}` in `use-menu.ts`
  ‚Üí
  `import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";`
- `import {useProviderContext}` in `use-menu.ts`

---

packages/components/select/__tests__/select.test.tsx: ### Summary

The diff in `select.test.tsx` includes the following changes:

- Removed the redeclaration of `SelectProps` in the import statement.
- Added an import for `SelectProps` from the `src` module.

---

packages/core/system-rsc/test-utils/no-slots-component.tsx: ### Short Summary
The change in functionality involves modifying the import statement for `VariantProps` in `no-slots-component.tsx`. The import for `VariantProps` has been updated to be imported directly from `@nextui-org/theme`.

### Alterations to the declarations of exported or public entities
- `import {tv, type VariantProps} from "@nextui-org/theme";` in `packages/core/system-rsc/test-utils/no-slots-component.tsx` 
  changed to 
  `import {tv} from "@nextui-org/theme";`

---

packages/core/system-rsc/test-utils/slots-component.tsx: ## Short summary

The change in `slots-component.tsx` involves adjusting the import of `VariantProps` from `@nextui-org/theme`, removing the redundant import of `VariantProps`.

## Alterations to the declarations of exported or public entities

- `import {SlotsToClasses, tv, type VariantProps} from "@nextui-org/theme";` in `packages/core/system-rsc/test-utils/slots-component.tsx`
- `import type {VariantProps} from "@nextui-org/theme";` in `packages/core/system-rsc/test-utils/slots-component.tsx`

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

### PR Summary

**Title**: feat: eslint add rule prefer top level type import  
**User**: winchesHe  
**Number**: 3354  

**Description**:  

This pull request introduces a new ESLint rule that enforces the preference for top-level type imports. The specifics of the current behavior being modified and the new behavior introduced by this rule were not detailed in the description. The PR does not specify if this is a breaking change or provide additional information regarding its impact on existing NextUI users.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated Summary of Generated Summaries

The recent changes across various files primarily focus on refining import statements and adjusting linting scripts. 

1. **Linting Configuration and Scripts**:
   - In `.eslintrc.json`, a new ESLint rule `"import/consistent-type-specifier-style": ["error", "prefer-top-level"]` has been added.
   - In `package.json`, the linting scripts have been refined to target specific directories and file patterns, particularly for TypeScript and TypeScript/JSX files. The patterns for `lint:pkg` and `lint:fix` have been simplified from `./packages/**/**/*.{ts,tsx}` to `./packages/**/*.{ts,tsx}`.

2. **Import Statement Modifications**:
   - Across multiple files (`use-accordion.ts`, `use-button.ts`, `use-checkbox-group.ts`, `use-checkbox.ts`, `use-dropdown.ts`, `use-menu.ts`, `select.test.tsx`, `no-slots-component.tsx`, `slots-component.tsx`), import statements have been adjusted to either separate type imports from function imports or to import types directly from their respective modules. This change enhances the clarity and maintainability of the import statements.

3. **Specific Changes in Components**:
   - **Accordion**: In `use-accordion.ts`, `HTMLNextUIProps` and `PropGetter` are now imported directly from `@nextui-org/system` instead of being bundled with `useProviderContext`.
   - **Button**: In `use-button.ts`, `HTMLNextUIProps` and `PropGetter` are imported without the `type` keyword.
   - **Checkbox**: In `use-checkbox-group.ts` and `use-checkbox.ts`, `HTMLNextUIProps` and `PropGetter` imports have been separated from `useProviderContext`.
   - **Dropdown**: In `use-dropdown.ts`, the import of `HTMLNextUIProps` and `PropGetter` has been moved to a separate line.
   - **Menu**: In `use-menu.ts`, imports have been reorganized to separate `useProviderContext` from `HTMLNextUIProps` and `PropGetter`.
   - **Select**: In `select.test.tsx`, redundant redeclaration of `SelectProps` has been removed, and it is now imported from the `src` module.
   - **No-Slots Component**: In `no-slots-component.tsx`, the import of `VariantProps` has been adjusted to be imported directly from `@nextui-org/theme`.
   - **Slots Component**: In `slots-component.tsx`, redundant import of `VariantProps` has been removed.

### Alterations to the Declarations of Exported or Public Entities

#### package.json
- `"lint:pkg": "eslint -c .eslintrc.json ./packages/**/**/*.{ts,tsx}"` 
  ‚Üí 
  `"lint:pkg": "eslint -c .eslintrc.json ./packages/**/*.{ts,tsx}"`
- `"lint:fix": "eslint --fix -c .eslintrc.json ./packages/**/**/*.{ts,tsx}"` 
  ‚Üí 
  `"lint:fix": "eslint --fix -c .eslintrc.json ./packages/**/*.{ts,tsx}"`

#### packages/components/accordion/src/use-accordion.ts
- `import { useProviderContext, type HTMLNextUIProps, type PropGetter } from "@nextui-org/system";`
  ‚Üí 
  `import { useProviderContext } from "@nextui-org/system";`
  `import type { HTMLNextUIProps, PropGetter } from "@nextui-org/system";`

#### packages/components/button/src/use-button.ts
- `import { type HTMLNextUIProps, type PropGetter } from "@nextui-org/system";`
  ‚Üí 
  `import { HTMLNextUIProps, PropGetter } from "@nextui-org/system";`

#### packages/components/checkbox/src/use-checkbox-group.ts
- `import { useProviderContext, type HTMLNextUIProps, type PropGetter } from "@nextui-org/system";`
  ‚Üí 
  `import { useProviderContext } from "@nextui-org/system";`
  `import type { HTMLNextUIProps, PropGetter } from "@nextui-org/system";`

#### packages/components/checkbox/src/use-checkbox.ts
- `import { useProviderContext, type HTMLNextUIProps, type PropGetter } from "@nextui-org/system";`
  ‚Üí 
  `import { useProviderContext } from "@nextui-org/system";`
  `import type { HTMLNextUIProps, PropGetter } from "@nextui-org/system";`

#### packages/components/dropdown/src/use-dropdown.ts
- `import { useProviderContext, type HTMLNextUIProps, type PropGetter } from "@nextui-org/system";`
  ‚Üí 
  `import { useProviderContext } from "@nextui-org/system";`
  `import type { HTMLNextUIProps, PropGetter } from "@nextui-org/system";`

#### packages/components/menu/src/use-menu.ts
- `import { useProviderContext, type HTMLNextUIProps, type PropGetter } from "@nextui-org/system";`
  ‚Üí 
  `import { useProviderContext } from "@nextui-org/system";`
  `import type { HTMLNextUIProps, PropGetter } from "@nextui-org/system";`

#### packages/components/select/__tests__/select.test.tsx
- `import { SelectProps } from "../src";`
  ‚Üí 
  `import { SelectProps } from "../src";`

#### packages/core/system-rsc/test-utils/no-slots-component.tsx
- `import { tv, type VariantProps } from "@nextui-org/theme";`
  ‚Üí 
  `import { tv } from "@nextui-org/theme";`

#### packages/core/system-rsc/test-utils/slots-component.tsx
- `import { SlotsToClasses, tv, type VariantProps } from "@nextui-org/theme";`
  ‚Üí 
  `import { SlotsToClasses, tv } from "@nextui-org/theme";`
  `import type { VariantProps } from "@nextui-org/theme";`

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 3881127125b28b5fd622cd2b99465d74ff1ee95f -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .eslintrc.json (modified, 3 changes)\n  Patch: @@ -87,6 +87,7 @@
         "prev": ["const", "let", "var"],
         "next": ["const", "let", "var"]
       }
-    ]
+    ],
+    "import/consistent-type-specifier-style": ["error", "prefer-top-level"]
   }
 }\n- package.json (modified, 4 changes)\n  Patch: @@ -27,9 +27,9 @@
     "test": "jest --verbose --config ./jest.config.js",
     "typecheck": "turbo typecheck",
     "lint": "pnpm lint:pkg && pnpm lint:docs",
-    "lint:pkg": "eslint -c .eslintrc.json ./packages/**/**/*.{ts,tsx}",
+    "lint:pkg": "eslint -c .eslintrc.json ./packages/**/*.{ts,tsx}",
     "lint:docs": "eslint -c .eslintrc.json ./apps/docs/**/*.{ts,tsx}",
-    "lint:fix": "eslint --fix -c .eslintrc.json ./packages/**/**/*.{ts,tsx}",
+    "lint:fix": "eslint --fix -c .eslintrc.json ./packages/**/*.{ts,tsx}",
     "lint:docs-fix": "eslint --fix -c .eslintrc.json ./apps/docs/**/*.{ts,tsx}",
     "check:rap": "tsx scripts/check-rap-updates.ts",
     "fix:rap": "tsx scripts/fix-rap.ts",\n- packages/components/accordion/src/use-accordion.ts (modified, 3 changes)\n  Patch: @@ -1,8 +1,9 @@
 import type {SelectionBehavior, MultipleSelection} from "@react-types/shared";
 import type {AriaAccordionProps} from "@react-types/accordion";
 import type {AccordionGroupVariantProps} from "@nextui-org/theme";
+import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 
-import {useProviderContext, type HTMLNextUIProps, type PropGetter} from "@nextui-org/system";
+import {useProviderContext} from "@nextui-org/system";
 import {ReactRef, filterDOMProps} from "@nextui-org/react-utils";
 import React, {Key, useCallback} from "react";
 import {TreeState, useTreeState} from "@react-stately/tree";\n- packages/components/button/src/use-button.ts (modified, 3 changes)\n  Patch: @@ -2,8 +2,9 @@ import type {ButtonVariantProps} from "@nextui-org/theme";
 import type {AriaButtonProps} from "@nextui-org/use-aria-button";
 import type {ReactNode} from "react";
 import type {RippleProps} from "@nextui-org/ripple";
+import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 
-import {useProviderContext, type HTMLNextUIProps, type PropGetter} from "@nextui-org/system";
+import {useProviderContext} from "@nextui-org/system";
 import {dataAttr} from "@nextui-org/shared-utils";
 import {ReactRef} from "@nextui-org/react-utils";
 import {MouseEventHandler, useCallback} from "react";\n- packages/components/checkbox/src/use-checkbox-group.ts (modified, 3 changes)\n  Patch: @@ -3,8 +3,9 @@ import type {AriaCheckboxGroupProps} from "@react-types/checkbox";
 import type {Orientation} from "@react-types/shared";
 import type {ReactRef} from "@nextui-org/react-utils";
 import type {CheckboxGroupProps} from "@react-types/checkbox";
+import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 
-import {useProviderContext, type HTMLNextUIProps, type PropGetter} from "@nextui-org/system";
+import {useProviderContext} from "@nextui-org/system";
 import {useCallback, useMemo} from "react";
 import {chain, mergeProps} from "@react-aria/utils";
 import {checkboxGroup} from "@nextui-org/theme";\n- packages/components/checkbox/src/use-checkbox.ts (modified, 3 changes)\n  Patch: @@ -1,7 +1,8 @@
 import type {CheckboxVariantProps, CheckboxSlots, SlotsToClasses} from "@nextui-org/theme";
 import type {AriaCheckboxProps} from "@react-types/checkbox";
+import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 
-import {useProviderContext, type HTMLNextUIProps, type PropGetter} from "@nextui-org/system";
+import {useProviderContext} from "@nextui-org/system";
 import {ReactNode, Ref, useCallback, useId, useState} from "react";
 import {useMemo, useRef} from "react";
 import {useToggleState} from "@react-stately/toggle";\n- packages/components/dropdown/src/use-dropdown.ts (modified, 3 changes)\n  Patch: @@ -1,8 +1,9 @@
 import type {PopoverProps} from "@nextui-org/popover";
 import type {MenuTriggerType} from "@react-types/menu";
 import type {Ref} from "react";
+import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 
-import {useProviderContext, type HTMLNextUIProps, type PropGetter} from "@nextui-org/system";
+import {useProviderContext} from "@nextui-org/system";
 import {useMenuTriggerState} from "@react-stately/menu";
 import {useMenuTrigger} from "@react-aria/menu";
 import {dropdown} from "@nextui-org/theme";\n- packages/components/menu/src/use-menu.ts (modified, 4 changes)\n  Patch: @@ -1,4 +1,6 @@
-import {useProviderContext, type HTMLNextUIProps, type PropGetter} from "@nextui-org/system";
+import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
+
+import {useProviderContext} from "@nextui-org/system";
 import {AriaMenuProps} from "@react-types/menu";
 import {AriaMenuOptions} from "@react-aria/menu";
 import {useAriaMenu} from "@nextui-org/use-aria-menu";\n- packages/components/select/__tests__/select.test.tsx (modified, 4 changes)\n  Patch: @@ -1,9 +1,11 @@
+import type {SelectProps} from "../src";
+
 import * as React from "react";
 import {render, renderHook, act} from "@testing-library/react";
 import userEvent from "@testing-library/user-event";
 import {useForm} from "react-hook-form";
 
-import {Select, SelectItem, SelectSection, type SelectProps} from "../src";
+import {Select, SelectItem, SelectSection} from "../src";
 import {Modal, ModalContent, ModalHeader, ModalBody, ModalFooter} from "../../modal/src";
 
 type Item = {\n- packages/core/system-rsc/test-utils/no-slots-component.tsx (modified, 3 changes)\n  Patch: @@ -1,7 +1,8 @@
 import type {HTMLNextUIProps} from "../src/types";
+import type {VariantProps} from "@nextui-org/theme";
 
 import React, {useMemo} from "react";
-import {tv, type VariantProps} from "@nextui-org/theme";
+import {tv} from "@nextui-org/theme";
 import {filterDOMProps, ReactRef, useDOMRef} from "@nextui-org/react-utils";
 import {objectToDeps} from "@nextui-org/shared-utils";
 \n- packages/core/system-rsc/test-utils/slots-component.tsx (modified, 3 changes)\n  Patch: @@ -1,7 +1,8 @@
 import type {HTMLNextUIProps} from "../src/types";
+import type {VariantProps} from "@nextui-org/theme";
 
 import React, {useMemo} from "react";
-import {SlotsToClasses, tv, type VariantProps} from "@nextui-org/theme";
+import {SlotsToClasses, tv} from "@nextui-org/theme";
 import {filterDOMProps, ReactRef, useDOMRef} from "@nextui-org/react-utils";
 import {objectToDeps} from "@nextui-org/shared-utils";
 import clsx from "clsx";\n
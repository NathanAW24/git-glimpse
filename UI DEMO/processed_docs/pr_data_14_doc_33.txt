Pull Request Number: 2553
Title: fix(select): positioning the label if a description is used
Base Branch: v.2.3.0
Head Branch: fix/select-label
Author: novsource
URL: https://github.com/nextui-org/nextui/pull/2553
State: MERGED
Created At: 2024-03-20T07:51:22Z
Merged At: 2024-04-14T19:17:56Z
Participants: novsource, jrgarciadev, wingkwong

Description:
Closes #2543
üìù Description
Fixed the bug of positioning the label in the Select component if the description prop was used
‚õ≥Ô∏è Current behavior (updates)
Currently, when using the description prop, the label is displayed incorrectly

üöÄ New behavior
This PR solves the bug of incorrect label positioning

üí£ Is this a breaking change (Yes/No):
No
üìù Additional Information

Bug Fixes

Fixed the label placement issue in Select component if a description prop is used




Summary by CodeRabbit

Bug Fixes

Fixed a bug affecting the positioning of the label in the Select component when a description is provided.


New Features

Enhanced the Select component to allow labels to be positioned outside on the left side, improving flexibility in UI design.

Commits:
- fix(select): positioning the label if a description is used\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 921a4cd8c06f74030365c1ec98eb4bddf9dd4e57

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name               | Type  |
| ------------------ | ----- |
| @nextui-org/select | Patch |
| @nextui-org/react  | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/novsource/nextui/new/fix/select-label?filename=.changeset/little-islands-care.md&value=---%0A%22%40nextui-org%2Fselect%22%3A%20patch%0A---%0A%0Afix(select)%3A%20positioning%20the%20label%20if%20a%20description%20is%20used%0A)

\n- vercel: [vc]: #+BMrdvotgTOQQnGjf7YEM2CKLBj1j411u0CbPhfJrNs=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvREY2cmNibmF1WFg0WWk3R2phVVNWbTJKZXV3VyIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLW5vdnNvdXJjZS1maXgtc2UtYmU3ZDQxLW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLW5vdnNvdXJjZS1maXgtc2UtYmU3ZDQxLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/DF6rcbnauXX4Yi7GjaUSVm2JeuwW)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-novsource-fix-se-be7d41-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-novsource-fix-se-be7d41-nextui-org.vercel.app?via=pr-comment-feedback-link) | Mar 20, 2024 7:53am |

\n- vercel: Someone is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%22921a4cd8c06f74030365c1ec98eb4bddf9dd4e57%22%7D%2C%22id%22%3A%22QmSJZCQn6yi9cDVXDMhnbPLpTDLejc1t6sQG5rg2urdBKY%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A2553%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The changes primarily address a bug in the `Select` component of the "@nextui-org/select" package, where the label was misaligned when using a description field and setting the label placement to "outside". The modifications include a semantic shift in how the label's positioning is determined, introducing a more specific condition for placing the label outside on the left side. This update aims to enhance the UI's consistency and address the misalignment issue.

## Changes

| File Path                                 | Change Summary                                                                 |
|-------------------------------------------|--------------------------------------------------------------------------------|
| `.changeset/giant-carrots-reply.md`       | Introduced a patch for label positioning bug in the `Select` component.        |
| `packages/.../select/src/select.tsx`      | Replaced `shouldLabelBeOutside` with `isOutsideLeft` for label positioning.    |
| `packages/.../select/src/use-select.ts`   | Added `isOutsideLeft` to handle "outside-left" label placement.                |

## Assessment against linked issues

| Objective                                                    | Addressed | Explanation                                                                                   |
|--------------------------------------------------------------|-----------|-----------------------------------------------------------------------------------------------|
| Fix label misalignment in Select Component (#2543)           | ‚úÖ        |                                                                                               |
| Ensure label aligns with input when `labelPlacement` is "outside" and `errorMessage` is set (#2543) | ‚úÖ        |                                                                                               |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->
<!--


.changeset/giant-carrots-reply.md: **Summary:**
The new file introduces a patch for "@nextui-org/select" to fix a bug related to positioning the label in the `Select` component when the description field is utilized.

---

packages/components/select/src/select.tsx: ## Short summary

The `Select` component in `select.tsx` underwent a semantic change in functionality related to the positioning of the label. The variable `shouldLabelBeOutside` was replaced with `isOutsideLeft` to control whether the label should be positioned outside on the left side. This change affects the rendering logic and control flow of the label within the component.

---

packages/components/select/src/use-select.ts: ## Short summary

In the `useSelect` function within `use-select.ts`, a new variable `isOutsideLeft` is introduced to handle the condition where `labelPlacement` is "outside-left". This variable is used to determine the label placement logic alongside existing variables like `shouldLabelBeInside`.

-->
<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: short summary by coderabbit.ai -->
<!--


### PR Objectives

This Pull Request (PR) with the title "fix(select): positioning the label if a description is used" and numbered 2553, aims to address a specific bug in the `Select` component of a UI library. The issue, documented under issue #2543, involves incorrect positioning of the `label` when the `description` prop is utilized within the `Select` component. The problem is visually represented through screenshots, highlighting the misalignment before and after the proposed fix. The current behavior shows the label displayed incorrectly when a description is used, while the new behavior demonstrates the label correctly positioned, indicating the bug fix's effectiveness.

The linked issue #2543 further elaborates on a related problem where the label placement disrupts the UI's error state in the Select component. It describes a scenario where the label misaligns with the input when the `labelPlacement` is set to "outside" and an `errorMessage` value is set, expecting an aligned label with the input as the correct behavior.

The PR introduces changes to the `Select` component and its use of the `label` positioning logic. Specifically, it modifies the handling of label placement when a description is present, ensuring the label is correctly positioned, thereby resolving the UI misalignment issues highlighted in the linked issue and the PR description.

### AI-Generated Summary of Generated Summaries

The Pull Request introduces a crucial fix to the `Select` component within a UI library, specifically targeting the incorrect positioning of the label when a description is used. The core of the changes revolves around the adjustment in the logic for determining the label's placement, particularly when the `description` prop is present. A significant modification is the replacement of the `shouldLabelBeOutside` variable with `isOutsideLeft` in the `select.tsx` file. This change is pivotal for controlling the label's positioning, ensuring it can be correctly placed outside on the left side if required. 

Additionally, the `useSelect` function within `use-select.ts` has been updated to incorporate the `isOutsideLeft` variable. This adjustment is part of a broader effort to refine the label placement logic, taking into account the new condition of "outside-left" placement. This variable works in tandem with existing logic, such as determining when the label should be inside, to provide a more flexible and accurate positioning system for the label relative to the `Select` component.

These modifications collectively address the bug of incorrect label positioning when a description is utilized, as initially reported. By refining the logic for label placement and introducing a new variable to better handle specific positioning scenarios, the PR effectively resolves the misalignment issues, ensuring a more consistent and visually correct UI for the `Select` component. This fix not only addresses the immediate bug reported in issue #2543 but also enhances the component's overall functionality and user experience by ensuring that labels are correctly aligned, especially in contexts where additional properties like descriptions and error messages are used.

-->
<!-- end of auto-generated comment: short summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 921a4cd8c06f74030365c1ec98eb4bddf9dd4e57 -->

<!-- commit_ids_reviewed_end --><!-- tweet_start -->

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<!-- tweet_end --><!-- tips_start -->

---

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with CodeRabbit:

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit-tests for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit tests for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit tests.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- The JSON schema for the configuration file is available [here](https://coderabbit.ai/integrations/coderabbit-overrides.v2.json).
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/coderabbit-overrides.v2.json`

### CodeRabbit Discord Community

Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.

</details>

<!-- tips_end -->\n- jrgarciadev: Thanks! @novsource \n

Files Changed:
- .changeset/giant-carrots-reply.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/select": patch
+---
+
+Fixed the bug of positioning the label in the `Select` component if the description field was used\n- packages/components/select/src/select.tsx (modified, 6 changes)\n  Patch: @@ -28,7 +28,7 @@ function Select<T extends object>(props: Props<T>, ref: ForwardedRef<HTMLSelectE
     endContent,
     placeholder,
     renderValue,
-    shouldLabelBeOutside,
+    isOutsideLeft,
     disableAnimation,
     getBaseProps,
     getLabelProps,
@@ -115,10 +115,10 @@ function Select<T extends object>(props: Props<T>, ref: ForwardedRef<HTMLSelectE
   return (
     <div {...getBaseProps()}>
       <HiddenSelect {...getHiddenSelectProps()} />
-      {shouldLabelBeOutside ? labelContent : null}
+      {isOutsideLeft ? labelContent : null}
       <div {...getMainWrapperProps()}>
         <Component {...getTriggerProps()}>
-          {!shouldLabelBeOutside ? labelContent : null}
+          {!isOutsideLeft ? labelContent : null}
           <div {...getInnerWrapperProps()}>
             {startContent}
             <span {...getValueProps()}>\n- packages/components/select/src/use-select.ts (modified, 2 changes)\n  Patch: @@ -262,6 +262,7 @@ export function useSelect<T extends object>(originalProps: UseSelectProps<T>) {
     labelPlacement === "outside-left" ||
     (labelPlacement === "outside" && (hasPlaceholder || !!originalProps.isMultiline));
   const shouldLabelBeInside = labelPlacement === "inside";
+  const isOutsideLeft = labelPlacement === "outside-left";
 
   const isFilled =
     state.isOpen ||
@@ -585,6 +586,7 @@ export function useSelect<T extends object>(originalProps: UseSelectProps<T>) {
     renderValue,
     selectionMode,
     disableAnimation,
+    isOutsideLeft,
     shouldLabelBeOutside,
     shouldLabelBeInside,
     getBaseProps,\n
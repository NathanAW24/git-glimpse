Pull Request Number: 4100
Title: refactor(docs): date input dx
Base Branch: refactor/overall-dx
Head Branch: refactor/date-input-dx
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/4100
State: MERGED
Created At: 2024-11-17T06:36:13Z
Merged At: 2024-11-27T18:11:39Z
Participants: wingkwong, jrgarciadev

Description:
Closes # 
üìù Description

‚õ≥Ô∏è Current behavior (updates)

üöÄ New behavior

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Commits:
- refactor(docs): date input dx\n

Labels:


Comments:
- vercel: [vc]: #kMhCjjr9TGXE4zYoAloQVayZF0YV9FgL/tUqLRnN+R8=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LXJlZmFjdG9yLWRhdGUtaW5wdXQtZHgtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn0sImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1kb2NzLXYyLzdNQzF0ZlVndXJvV0Q0QldBY01qQ1lDWW1yZzMiLCJwcmV2aWV3VXJsIjoibmV4dHVpLWRvY3MtdjItZ2l0LXJlZmFjdG9yLWRhdGUtaW5wdXQtZHgtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIn0seyJuYW1lIjoibmV4dHVpLXN0b3J5Ym9vay12MiIsInJvb3REaXJlY3RvcnkiOiJwYWNrYWdlcy9zdG9yeWJvb2siLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtcmVmYWN0b3ItZGF0ZS1pbnB1dC1keC1uZXh0dWktb3JnLnZlcmNlbC5hcHAifSwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi80SHQ2ZGhKWlVXblVyRVBaY1o4emZHSGQ5NTdxIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LXJlZmFjdG9yLWRhdGUtaW5wdXQtZHgtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIn1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/7MC1tfUguroWD4BWAcMjCYCYmrg3)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-refactor-date-input-dx-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-refactor-date-input-dx-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 17, 2024 6:36am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/4Ht6dhJZUWnUrEPZcZ8zfGHd957q)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-refactor-date-input-dx-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-refactor-date-input-dx-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 17, 2024 6:36am |


\n- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: ea181f37a67389b9ee209a9d24dae004e0f110fb

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/nextui-org/nextui/new/refactor/date-input-dx?filename=.changeset/nine-foxes-mix.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A---%0A%0Arefactor(docs)%3A%20date%20input%20dx%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: skip review by coderabbit.ai -->

> [!IMPORTANT]
> ## Review skipped
> 
> Auto reviews are disabled on base/target branches other than the default branch.
> 
> <details>
> <summary>üóÇÔ∏è Base branches to auto review (5)</summary>
> 
> * main
> * canary
> * fix/.*
> * chore/.*
> * feat/.*
> 
> </details>
> 
> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.
> 
> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.

<!-- end of auto-generated comment: skip review by coderabbit.ai -->

<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- apps/docs/content/components/date-input/controlled.raw.jsx (added, 20 changes)\n  Patch: @@ -0,0 +1,20 @@
+import {DateInput} from "@nextui-org/react";
+import {parseDate, getLocalTimeZone} from "@internationalized/date";
+import {useDateFormatter} from "@react-aria/i18n";
+
+export default function App() {
+  const [value, setValue] = React.useState(parseDate("2024-04-04"));
+
+  let formatter = useDateFormatter({dateStyle: "full"});
+
+  return (
+    <div className="w-full flex flex-row gap-2">
+      <div className="w-full flex flex-col gap-y-2">
+        <DateInput label="Date (controlled)" value={value} onChange={setValue} />
+        <p className="text-default-500 text-sm">
+          Selected date: {value ? formatter.format(value.toDate(getLocalTimeZone())) : "--"}
+        </p>
+      </div>
+    </div>
+  );
+}\n- apps/docs/content/components/date-input/controlled.raw.tsx (added, 21 changes)\n  Patch: @@ -0,0 +1,21 @@
+import React from "react";
+import {DateInput} from "@nextui-org/react";
+import {DateValue, parseDate, getLocalTimeZone} from "@internationalized/date";
+import {useDateFormatter} from "@react-aria/i18n";
+
+export default function App() {
+  const [value, setValue] = React.useState<DateValue>(parseDate("2024-04-04"));
+
+  let formatter = useDateFormatter({dateStyle: "full"});
+
+  return (
+    <div className="w-full flex flex-row gap-2">
+      <div className="w-full flex flex-col gap-y-2">
+        <DateInput label="Date (controlled)" value={value} onChange={setValue} />
+        <p className="text-default-500 text-sm">
+          Selected date: {value ? formatter.format(value.toDate(getLocalTimeZone())) : "--"}
+        </p>
+      </div>
+    </div>
+  );
+}\n- apps/docs/content/components/date-input/controlled.ts (modified, 47 changes)\n  Patch: @@ -1,50 +1,15 @@
-const App = `import {DateInput} from "@nextui-org/react";
-import {parseDate, getLocalTimeZone} from "@internationalized/date";
-import {useDateFormatter} from "@react-aria/i18n";
-
-export default function App() {
-  const [value, setValue] = React.useState(parseDate("2024-04-04"));
-
-  let formatter = useDateFormatter({dateStyle: "full"});
-
-  return (
-    <div className="w-full flex flex-row gap-2">
-      <div className="w-full flex flex-col gap-y-2">
-        <DateInput label="Date (controlled)" value={value} onChange={setValue} />
-        <p className="text-default-500 text-sm">
-          Selected date: {value ? formatter.format(value.toDate(getLocalTimeZone())) : "--"}
-        </p>
-      </div>
-    </div>
-  );
-}`;
-
-const AppTs = `import {DateInput} from "@nextui-org/react";
-import {DateValue, parseDate, getLocalTimeZone} from "@internationalized/date";
-import {useDateFormatter} from "@react-aria/i18n";
-
-export default function App() {
-  const [value, setValue] = React.useState<DateValue>(parseDate("2024-04-04"));
-
-  let formatter = useDateFormatter({dateStyle: "full"});
-
-  return (
-    <div className="w-full flex flex-row gap-2">
-      <div className="w-full flex flex-col gap-y-2">
-        <DateInput label="Date (controlled)" value={value} onChange={setValue} />
-        <p className="text-default-500 text-sm">
-          Selected date: {value ? formatter.format(value.toDate(getLocalTimeZone())) : "--"}
-        </p>
-      </div>
-    </div>
-  );
-}`;
+import App from "./controlled.raw.jsx?raw";
+import AppTs from "./controlled.raw.tsx?raw";
 
 const react = {
   "/App.jsx": App,
+};
+
+const reactTs = {
   "/App.tsx": AppTs,
 };
 
 export default {
   ...react,
+  ...reactTs,
 };\n- apps/docs/content/components/date-input/description.raw.jsx (added, 14 changes)\n  Patch: @@ -0,0 +1,14 @@
+import {DateInput} from "@nextui-org/react";
+import {CalendarDate} from "@internationalized/date";
+
+export default function App() {
+  return (
+    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+      <DateInput
+        description={"This is my birth date."}
+        label={"Birth date"}
+        placeholderValue={new CalendarDate(1995, 11, 6)}
+      />
+    </div>
+  );
+}\n- apps/docs/content/components/date-input/description.ts (modified, 15 changes)\n  Patch: @@ -1,17 +1,4 @@
-const App = `import {DateInput} from "@nextui-org/react";
-import {CalendarDate} from "@internationalized/date";
-
-export default function App() {
-  return (
-    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
-      <DateInput 
-        label={"Birth date"} 
-        placeholderValue={new CalendarDate(1995, 11, 6)} 
-        description={"This is my birth date."}
-      />
-    </div>
-  );
-}`;
+import App from "./description.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/date-input/disabled.raw.jsx (added, 15 changes)\n  Patch: @@ -0,0 +1,15 @@
+import {DateInput} from "@nextui-org/react";
+import {CalendarDate, parseDate} from "@internationalized/date";
+
+export default function App() {
+  return (
+    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+      <DateInput
+        isDisabled
+        defaultValue={parseDate("2024-04-04")}
+        label={"Birth date"}
+        placeholderValue={new CalendarDate(1995, 11, 6)}
+      />
+    </div>
+  );
+}\n- apps/docs/content/components/date-input/disabled.ts (modified, 16 changes)\n  Patch: @@ -1,18 +1,4 @@
-const App = `import {DateInput} from "@nextui-org/react";
-import {CalendarDate, parseDate} from "@internationalized/date";
-
-export default function App() {
-  return (
-    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
-        <DateInput 
-          label={"Birth date"} 
-          isDisabled
-          defaultValue={parseDate("2024-04-04")} 
-          placeholderValue={new CalendarDate(1995, 11, 6)} 
-        />
-    </div>
-  );
-}`;
+import App from "./disabled.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/date-input/error-message-function.raw.jsx (added, 22 changes)\n  Patch: @@ -0,0 +1,22 @@
+import {DateInput} from "@nextui-org/react";
+import {CalendarDate, parseDate} from "@internationalized/date";
+
+export default function App() {
+  return (
+    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+      <DateInput
+        isInvalid
+        className="max-w-xs"
+        defaultValue={parseDate("2024-04-04")}
+        description={"This is my birth date."}
+        errorMessage={(value) => {
+          if (value.isInvalid) {
+            return "Please enter a valid date.";
+          }
+        }}
+        label={"Birth date"}
+        placeholderValue={new CalendarDate(1995, 11, 6)}
+      />
+    </div>
+  );
+}\n- apps/docs/content/components/date-input/error-message-function.ts (modified, 23 changes)\n  Patch: @@ -1,25 +1,4 @@
-const App = `import {DateInput} from "@nextui-org/react";
-import {CalendarDate, parseDate} from "@internationalized/date";
-
-export default function App() {
-  return (
-    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
-      <DateInput 
-        label={"Birth date"} 
-        defaultValue={parseDate("2024-04-04")} 
-        placeholderValue={new CalendarDate(1995, 11, 6)} 
-        description={"This is my birth date."}
-        isInvalid
-        errorMessage={(value) => {
-          if (value.isInvalid) {
-            return "Please enter a valid date.";
-          }
-        }}
-        className="max-w-xs"
-      />
-    </div>
-  );
-}`;
+import App from "./error-message-function.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/date-input/error-message.raw.jsx (added, 18 changes)\n  Patch: @@ -0,0 +1,18 @@
+import {DateInput} from "@nextui-org/react";
+import {CalendarDate, parseDate} from "@internationalized/date";
+
+export default function App() {
+  return (
+    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+      <DateInput
+        isInvalid
+        className="max-w-xs"
+        defaultValue={parseDate("2024-04-04")}
+        description={"This is my birth date."}
+        errorMessage="Please enter a valid date."
+        label={"Birth date"}
+        placeholderValue={new CalendarDate(1995, 11, 6)}
+      />
+    </div>
+  );
+}\n- apps/docs/content/components/date-input/error-message.ts (modified, 19 changes)\n  Patch: @@ -1,21 +1,4 @@
-const App = `import {DateInput} from "@nextui-org/react";
-import {CalendarDate, parseDate} from "@internationalized/date";
-
-export default function App() {
-  return (
-    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
-      <DateInput 
-        label={"Birth date"} 
-        defaultValue={parseDate("2024-04-04")} 
-        placeholderValue={new CalendarDate(1995, 11, 6)} 
-        description={"This is my birth date."}
-        isInvalid
-        errorMessage="Please enter a valid date."
-        className="max-w-xs"
-      />
-    </div>
-  );
-}`;
+import App from "./error-message.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/date-input/granularity.raw.jsx (added, 19 changes)\n  Patch: @@ -0,0 +1,19 @@
+import {DateInput} from "@nextui-org/react";
+import {now, parseAbsoluteToLocal} from "@internationalized/date";
+
+export default function App() {
+  let [date, setDate] = React.useState(parseAbsoluteToLocal("2021-04-07T18:45:22Z"));
+
+  return (
+    <div className="w-full max-w-xl flex flex-col items-start gap-4">
+      <DateInput granularity="second" label="Date and time" value={date} onChange={setDate} />
+      <DateInput granularity="day" label="Date" value={date} onChange={setDate} />
+      <DateInput granularity="second" label="Event date" />
+      <DateInput
+        granularity="second"
+        label="Event date"
+        placeholderValue={now("America/New_York")}
+      />
+    </div>
+  );
+}\n- apps/docs/content/components/date-input/granularity.raw.tsx (added, 20 changes)\n  Patch: @@ -0,0 +1,20 @@
+import React from "react";
+import {DateInput} from "@nextui-org/react";
+import {DateValue, now, parseAbsoluteToLocal} from "@internationalized/date";
+
+export default function App() {
+  let [date, setDate] = React.useState<DateValue>(parseAbsoluteToLocal("2021-04-07T18:45:22Z"));
+
+  return (
+    <div className="w-full max-w-xl flex flex-col items-start gap-4">
+      <DateInput granularity="second" label="Date and time" value={date} onChange={setDate} />
+      <DateInput granularity="day" label="Date" value={date} onChange={setDate} />
+      <DateInput granularity="second" label="Event date" />
+      <DateInput
+        granularity="second"
+        label="Event date"
+        placeholderValue={now("America/New_York")}
+      />
+    </div>
+  );
+}\n- apps/docs/content/components/date-input/granularity.ts (modified, 57 changes)\n  Patch: @@ -1,60 +1,15 @@
-const App = `import {DateInput} from "@nextui-org/react";
-import {now, parseAbsoluteToLocal} from "@internationalized/date";
-import {useDateFormatter} from "@react-aria/i18n";
-
-export default function App() {
-  let [date, setDate] = React.useState(parseAbsoluteToLocal("2021-04-07T18:45:22Z"));
-
-  return (
-    <div className="w-full max-w-xl flex flex-col items-start gap-4">
-      <DateInput
-        granularity="second"
-        label="Date and time"
-        value={date}
-        onChange={setDate}
-      />
-      <DateInput granularity="day" label="Date" value={date} onChange={setDate} />
-      <DateInput granularity="second" label="Event date" />
-      <DateInput
-        granularity="second"
-        label="Event date"
-        placeholderValue={now("America/New_York")}
-      />
-    </div>
-  );
-}`;
-
-const AppTs = `import {DateInput} from "@nextui-org/react";
-import {DateValue, now, parseAbsoluteToLocal} from "@internationalized/date";
-import {useDateFormatter} from "@react-aria/i18n";
-
-export default function App() {
-  let [date, setDate] = React.useState<DateValue>(parseAbsoluteToLocal("2021-04-07T18:45:22Z"));
-
-  return (
-    <div className="w-full max-w-xl flex flex-col items-start gap-4">
-      <DateInput
-        granularity="second"
-        label="Date and time"
-        value={date}
-        onChange={setDate}
-      />
-      <DateInput granularity="day" label="Date" value={date} onChange={setDate} />
-      <DateInput granularity="second" label="Event date" />
-      <DateInput
-        granularity="second"
-        label="Event date"
-        placeholderValue={now("America/New_York")}
-      />
-    </div>
-  );
-}`;
+import App from "./granularity.raw.jsx?raw";
+import AppTs from "./granularity.raw.tsx?raw";
 
 const react = {
   "/App.jsx": App,
+};
+
+const reactTs = {
   "/App.tsx": AppTs,
 };
 
 export default {
   ...react,
+  ...reactTs,
 };\n- apps/docs/content/components/date-input/hide-timezone.raw.jsx (added, 14 changes)\n  Patch: @@ -0,0 +1,14 @@
+import {DateInput} from "@nextui-org/react";
+import {parseZonedDateTime} from "@internationalized/date";
+
+export default function App() {
+  return (
+    <div className="w-full max-w-xl flex flex-row gap-4">
+      <DateInput
+        hideTimeZone
+        defaultValue={parseZonedDateTime("2022-11-07T00:45[America/Los_Angeles]")}
+        label="Appointment time"
+      />
+    </div>
+  );
+}\n- apps/docs/content/components/date-input/hide-timezone.ts (modified, 15 changes)\n  Patch: @@ -1,17 +1,4 @@
-const App = `import {DateInput} from "@nextui-org/react";
-import {parseZonedDateTime} from "@internationalized/date";
-
-export default function App() {
-  return (
-    <div className="w-full max-w-xl flex flex-row gap-4">
-      <DateInput
-        label="Appointment time"
-        hideTimeZone
-        defaultValue={parseZonedDateTime("2022-11-07T00:45[America/Los_Angeles]")}
-      />
-    </div>
-  );
-}`;
+import App from "./hide-timezone.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/date-input/hourly-cycle.raw.jsx (added, 15 changes)\n  Patch: @@ -0,0 +1,15 @@
+import {DateInput} from "@nextui-org/react";
+import {parseZonedDateTime} from "@internationalized/date";
+
+export default function App() {
+  return (
+    <div className="w-full max-w-xl flex flex-row gap-4">
+      <DateInput
+        defaultValue={parseZonedDateTime("2022-11-07T00:45[America/Los_Angeles]")}
+        granularity={"minute"}
+        hourCycle={24}
+        label="Appointment time"
+      />
+    </div>
+  );
+}\n- apps/docs/content/components/date-input/hourly-cycle.ts (modified, 16 changes)\n  Patch: @@ -1,18 +1,4 @@
-const App = `import {DateInput} from "@nextui-org/react";
-import {parseZonedDateTime} from "@internationalized/date";
-
-export default function App() {
-  return (
-    <div className="w-full max-w-xl flex flex-row gap-4">
-      <DateInput
-        label="Appointment time"
-        hourCycle={24}
-        defaultValue={parseZonedDateTime("2022-11-07T00:45[America/Los_Angeles]")}
-        granularity={"minute"}
-      />
-    </div>
-  );
-}`;
+import App from "./hourly-cycle.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/date-input/international-calendar.raw.jsx (added, 15 changes)\n  Patch: @@ -0,0 +1,15 @@
+import {DateInput} from "@nextui-org/react";
+import {parseAbsoluteToLocal} from "@internationalized/date";
+import {I18nProvider} from "@react-aria/i18n";
+
+export default function App() {
+  const [date, setDate] = React.useState(parseAbsoluteToLocal("2021-04-07T18:45:22Z"));
+
+  return (
+    <div className="flex flex-col gap-4">
+      <I18nProvider locale="hi-IN-u-ca-indian">
+        <DateInput label="Appointment date" value={date} onChange={setDate} />
+      </I18nProvider>
+    </div>
+  );
+}\n- apps/docs/content/components/date-input/international-calendar.raw.tsx (added, 16 changes)\n  Patch: @@ -0,0 +1,16 @@
+import React from "react";
+import {DateInput} from "@nextui-org/react";
+import {DateValue, parseAbsoluteToLocal} from "@internationalized/date";
+import {I18nProvider} from "@react-aria/i18n";
+
+export default function App() {
+  const [date, setDate] = React.useState<DateValue>(parseAbsoluteToLocal("2021-04-07T18:45:22Z"));
+
+  return (
+    <div className="flex flex-col gap-4">
+      <I18nProvider locale="hi-IN-u-ca-indian">
+        <DateInput label="Appointment date" value={date} onChange={setDate} />
+      </I18nProvider>
+    </div>
+  );
+}\n- apps/docs/content/components/date-input/international-calendar.ts (modified, 37 changes)\n  Patch: @@ -1,40 +1,15 @@
-const App = `import {DateInput} from "@nextui-org/react";
-import {now, parseAbsoluteToLocal} from "@internationalized/date";
-import {I18nProvider} from "@react-aria/i18n";
-
-export default function App() {
-  const [date, setDate] = React.useState(parseAbsoluteToLocal("2021-04-07T18:45:22Z"));
-
-  return (
-    <div className="flex flex-col gap-4">
-      <I18nProvider locale="hi-IN-u-ca-indian">
-        <DateInput label="Appointment date" value={date} onChange={setDate} />
-      </I18nProvider>
-    </div>
-  );
-}`;
-
-const AppTs = `import {DateInput} from "@nextui-org/react";
-import {DateValue, now, parseAbsoluteToLocal} from "@internationalized/date";
-import {I18nProvider} from "@react-aria/i18n";
-
-export default function App() {
-  const [date, setDate] = React.useState<DateValue>(parseAbsoluteToLocal("2021-04-07T18:45:22Z"));
-
-  return (
-    <div className="flex flex-col gap-4">
-      <I18nProvider locale="hi-IN-u-ca-indian">
-        <DateInput label="Appointment date" value={date} onChange={setDate} />
-      </I18nProvider>
-    </div>
-  );
-}`;
+import App from "./international-calendar.raw.jsx?raw";
+import AppTs from "./international-calendar.raw.tsx?raw";
 
 const react = {
   "/App.jsx": App,
+};
+
+const reactTs = {
   "/App.tsx": AppTs,
 };
 
 export default {
   ...react,
+  ...reactTs,
 };\n- apps/docs/content/components/date-input/label-placements.raw.jsx (added, 20 changes)\n  Patch: @@ -0,0 +1,20 @@
+import {DateInput} from "@nextui-org/react";
+import {CalendarDate} from "@internationalized/date";
+
+export default function App() {
+  const placements = ["inside", "outside", "outside-left"];
+
+  return (
+    <div className="w-full flex flex-col max-w-sm gap-4">
+      {placements.map((placement) => (
+        <DateInput
+          key={placement}
+          description={placement}
+          label="Birth date"
+          labelPlacement={placement}
+          placeholderValue={new CalendarDate(1995, 11, 6)}
+        />
+      ))}
+    </div>
+  );
+}\n- apps/docs/content/components/date-input/label-placements.ts (modified, 24 changes)\n  Patch: @@ -1,26 +1,4 @@
-const App = `import {DateInput} from "@nextui-org/react";
-import {CalendarDate} from "@internationalized/date";
-
-export default function App() {
-  const placements = [
-    "inside",
-    "outside",
-    "outside-left",
-  ];
-
-  return (
-    <div className="w-full flex flex-col max-w-sm gap-4">
-      {placements.map((placement) => (
-        <DateInput 
-          label="Birth date" 
-          placeholderValue={new CalendarDate(1995, 11, 6)} 
-          description={placement}
-          labelPlacement={placement}
-        />
-      ))}
-    </div>  
-  );
-}`;
+import App from "./label-placements.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/date-input/min-and-max-date.raw.jsx (added, 25 changes)\n  Patch: @@ -0,0 +1,25 @@
+import {DateInput} from "@nextui-org/react";
+import {getLocalTimeZone, today} from "@internationalized/date";
+
+export default function App() {
+  return (
+    <div className="w-full max-w-xl flex flex-row gap-4">
+      <div className="w-full flex flex-col gap-1">
+        <h3>Min date</h3>
+        <DateInput
+          defaultValue={today(getLocalTimeZone()).subtract({days: 1})}
+          label="Date and time"
+          minValue={today(getLocalTimeZone())}
+        />
+      </div>
+      <div className="w-full flex flex-col gap-2">
+        <h3>Max date</h3>
+        <DateInput
+          defaultValue={today(getLocalTimeZone()).add({days: 1})}
+          label="Date and time"
+          maxValue={today(getLocalTimeZone())}
+        />
+      </div>
+    </div>
+  );
+}\n- apps/docs/content/components/date-input/min-and-max-date.ts (modified, 26 changes)\n  Patch: @@ -1,28 +1,4 @@
-const App = `import {DateInput} from "@nextui-org/react";
-import {getLocalTimeZone, parseDate, today} from "@internationalized/date";
-
-export default function App() {
-  return (
-    <div className="w-full max-w-xl flex flex-row gap-4">
-      <div className="w-full flex flex-col gap-1">
-        <h3>Min date</h3>
-        <DateInput
-          label="Date and time"
-          minValue={today(getLocalTimeZone())}
-          defaultValue={today(getLocalTimeZone()).subtract({ days: 1 })}
-        />
-      </div>
-      <div className="w-full flex flex-col gap-2">
-        <h3>Max date</h3>
-        <DateInput
-          label="Date and time"
-          maxValue={today(getLocalTimeZone())}
-          defaultValue={today(getLocalTimeZone()).add({ days: 1 })}
-        />
-      </div>
-    </div>
-  );
-}`;
+import App from "./min-and-max-date.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/date-input/readonly.raw.jsx (added, 15 changes)\n  Patch: @@ -0,0 +1,15 @@
+import {DateInput} from "@nextui-org/react";
+import {CalendarDate, parseDate} from "@internationalized/date";
+
+export default function App() {
+  return (
+    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+      <DateInput
+        isReadOnly
+        defaultValue={parseDate("2024-04-04")}
+        label={"Birth date"}
+        placeholderValue={new CalendarDate(1995, 11, 6)}
+      />
+    </div>
+  );
+}\n- apps/docs/content/components/date-input/readonly.ts (modified, 16 changes)\n  Patch: @@ -1,18 +1,4 @@
-const App = `import {DateInput} from "@nextui-org/react";
-import {CalendarDate, parseDate} from "@internationalized/date";
-
-export default function App() {
-  return (
-    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
-        <DateInput 
-          label={"Birth date"} 
-          isReadOnly
-          defaultValue={parseDate("2024-04-04")} 
-          placeholderValue={new CalendarDate(1995, 11, 6)} 
-        />
-    </div>
-  );
-}`;
+import App from "./readonly.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/date-input/required.raw.jsx (added, 15 changes)\n  Patch: @@ -0,0 +1,15 @@
+import {DateInput} from "@nextui-org/react";
+import {CalendarDate, parseDate} from "@internationalized/date";
+
+export default function App() {
+  return (
+    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+      <DateInput
+        isRequired
+        defaultValue={parseDate("2024-04-04")}
+        label={"Birth date"}
+        placeholderValue={new CalendarDate(1995, 11, 6)}
+      />
+    </div>
+  );
+}\n- apps/docs/content/components/date-input/required.ts (modified, 16 changes)\n  Patch: @@ -1,18 +1,4 @@
-const App = `import {DateInput} from "@nextui-org/react";
-import {CalendarDate, parseDate} from "@internationalized/date";
-
-export default function App() {
-  return (
-    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
-        <DateInput 
-          label={"Birth date"} 
-          isRequired
-          defaultValue={parseDate("2024-04-04")} 
-          placeholderValue={new CalendarDate(1995, 11, 6)} 
-        />
-    </div>
-  );
-}`;
+import App from "./required.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/date-input/start-end-content.raw.jsx (added, 53 changes)\n  Patch: @@ -0,0 +1,53 @@
+import {DateInput} from "@nextui-org/react";
+import {CalendarDate, parseDate} from "@internationalized/date";
+
+export const CalendarIcon = (props) => (
+  <svg
+    aria-hidden="true"
+    fill="none"
+    focusable="false"
+    height="1em"
+    role="presentation"
+    viewBox="0 0 24 24"
+    width="1em"
+    {...props}
+  >
+    <path
+      d="M7.75 2.5a.75.75 0 0 0-1.5 0v1.58c-1.44.115-2.384.397-3.078 1.092c-.695.694-.977 1.639-1.093 3.078h19.842c-.116-1.44-.398-2.384-1.093-3.078c-.694-.695-1.639-.977-3.078-1.093V2.5a.75.75 0 0 0-1.5 0v1.513C15.585 4 14.839 4 14 4h-4c-.839 0-1.585 0-2.25.013z"
+      fill="currentColor"
+    />
+    <path
+      clipRule="evenodd"
+      d="M2 12c0-.839 0-1.585.013-2.25h19.974C22 10.415 22 11.161 22 12v2c0 3.771 0 5.657-1.172 6.828C19.657 22 17.771 22 14 22h-4c-3.771 0-5.657 0-6.828-1.172C2 19.657 2 17.771 2 14zm15 2a1 1 0 1 0 0-2a1 1 0 0 0 0 2m0 4a1 1 0 1 0 0-2a1 1 0 0 0 0 2m-4-5a1 1 0 1 1-2 0a1 1 0 0 1 2 0m0 4a1 1 0 1 1-2 0a1 1 0 0 1 2 0m-6-3a1 1 0 1 0 0-2a1 1 0 0 0 0 2m0 4a1 1 0 1 0 0-2a1 1 0 0 0 0 2"
+      fill="currentColor"
+      fillRule="evenodd"
+    />
+  </svg>
+);
+
+export default function App() {
+  return (
+    <div className="flex w-full flex-col gap-4">
+      <div className="flex w-full flex-wrap md:flex-nowrap mb-6 md:mb-0 gap-4">
+        <DateInput
+          defaultValue={parseDate("2024-04-04")}
+          label="Date Input"
+          labelPlacement="outside"
+          placeholderValue={new CalendarDate(1995, 11, 6)}
+          startContent={
+            <CalendarIcon className="text-2xl text-default-400 pointer-events-none flex-shrink-0" />
+          }
+        />
+        <DateInput
+          defaultValue={parseDate("2024-04-04")}
+          endContent={
+            <CalendarIcon className="text-2xl text-default-400 pointer-events-none flex-shrink-0" />
+          }
+          label="Date Input"
+          labelPlacement="outside"
+          placeholderValue={new CalendarDate(1995, 11, 6)}
+        />
+      </div>
+    </div>
+  );
+}\n
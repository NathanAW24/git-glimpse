Pull Request Number: 4196
Title: Feat/doc improvements
Base Branch: canary
Head Branch: feat/doc-improvements
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/4196
State: MERGED
Created At: 2024-11-30T22:03:14Z
Merged At: 2024-11-30T22:03:52Z
Participants: jrgarciadev

Description:
Closes # 
üìù Description

‚õ≥Ô∏è Current behavior (updates)

üöÄ New behavior

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


New Features

Enhanced hover effects for the ReactLiveDemo component, improving user interaction.
Added new properties to the Accordion component for better customization, including motionProps, disabledKeys, and itemClasses.
Expanded event handling documentation for Accordion and AccordionItem components, introducing new attributes and deprecating the onClick event in favor of onPress.



Documentation

Improved clarity and structure of the Accordion component documentation with detailed descriptions and a new <APITable> format.

Commits:
- feat: documentation improvements\n- fix: alert api\n- fix: copy button\n- fix: conflicts\n

Labels:


Comments:
- vercel: [vc]: #RblAUHPnESFDNyLNucelzCDeNEIdhKptfSu4o52fsjA=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi8zOHhScmRVbTdHRVZtV0xwZkp3VDVWc2dIM0Q0IiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1mZWF0LWRvYy1pbXByb3ZlbWVudHMtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1kb2NzLXYyLWdpdC1mZWF0LWRvYy1pbXByb3ZlbWVudHMtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19LHsibmFtZSI6Im5leHR1aS1zdG9yeWJvb2stdjIiLCJyb290RGlyZWN0b3J5IjoicGFja2FnZXMvc3Rvcnlib29rIiwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi9EU3FHTFBkcUxLM0xUOXR5U2hrOGdRclF4SGc0IiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZlYXQtZG9jLWltcHJvdmVtZW50cy1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZmVhdC1kb2MtaW1wcm92ZW1lbnRzLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/38xRrdUm7GEVmWLpfJwT5VsgH3D4)) | [Visit Preview](https://nextui-docs-v2-git-feat-doc-improvements-nextui-org.vercel.app) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-feat-doc-improvements-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 30, 2024 10:10pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/DSqGLPdqLK3LT9tyShk8gQrQxHg4)) | [Visit Preview](https://nextui-storybook-v2-git-feat-doc-improvements-nextui-org.vercel.app) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-feat-doc-improvements-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 30, 2024 10:10pm |


\n- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: fc65de563e791d42e213bed8c1b190c160cd041d

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/nextui-org/nextui/new/feat/doc-improvements?filename=.changeset/metal-pets-push.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A---%0A%0AFeat%2Fdoc%20improvements%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: failure by coderabbit.ai -->

> [!CAUTION]
> ## Review failed
> 
> The pull request is closed.

<!-- end of auto-generated comment: failure by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
The changes in this pull request involve modifications to two components: `ReactLiveDemo` and `Accordion`. The `ReactLiveDemo` component has undergone styling adjustments, particularly concerning hover effects and layout. The `Accordion` component's documentation has been enhanced with detailed descriptions of its properties and event handlers, including the introduction of new properties and the deprecation of the `onClick` event in favor of `onPress`.

## Changes

| File Path                                             | Change Summary                                                                                                      |
|------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------|
| apps/docs/components/docs/components/code-demo/react-live-demo.tsx | Adjusted styling and class names for `CopyButton`, `GradientBox`, and `BgGridContainer` to improve hover effects.  |
| apps/docs/content/docs/components/accordion.mdx      | Enhanced documentation for `Accordion` and `AccordionItem`, added new properties, updated event handlers, and deprecated `onClick`. |

## Possibly related PRs
- [#3856] Chore/ph announcement: This PR focuses on improving the documentation related to the accordion component, which may share styling or structural similarities with the changes made to the `ReactLiveDemo` component in the main PR.
- [#3512] feat(changeset): bump versions: This PR includes updates to various components, including the Accordion, which is relevant due to the shared context of component updates and enhancements.
- [#3650] fix(docs): added missing package manager tabs in docs: This PR enhances documentation for components, which may relate to the overall improvements in user interaction and experience reflected in the main PR's changes to the `ReactLiveDemo` component.

## Suggested labels
`üìã Scope : Docs`

## Suggested reviewers
- wingkwong

<!-- walkthrough_end -->
<!-- This is an auto-generated comment: rate limited by coderabbit.ai -->

> [!WARNING]
> ## Rate limit exceeded
> 
> @jrgarciadev has exceeded the limit for the number of commits or files that can be reviewed per hour. Please wait **10 minutes and 31 seconds** before requesting another review.
> 
> <details>
> <summary>‚åõ How to resolve this issue?</summary>
> 
> After the wait time has elapsed, a review can be triggered using the `@coderabbitai review` command as a PR comment. Alternatively, push new commits to this PR.
> 
> We recommend that you space out your commits to avoid hitting the rate limit.
> 
> </details>
> 
> 
> <details>
> <summary>üö¶ How do rate limits work?</summary>
> 
> CodeRabbit enforces hourly rate limits for each developer per organization.
> 
> Our paid plans have higher rate limits than the trial, open-source and free plans. In all cases, we re-allow further reviews after a brief timeout.
> 
> Please see our [FAQ](https://docs.coderabbit.ai/faq) for further information.
> 
> </details>
> 
> <details>
> <summary>üì• Commits</summary>
> 
> Reviewing files that changed from the base of the PR and between 290182df2670aa176fc44f08a13c3d0a4544ad41 and fc65de563e791d42e213bed8c1b190c160cd041d.
> 
> </details>

<!-- end of auto-generated comment: rate limited by coderabbit.ai -->

<!-- internal state start -->


<!-- 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 -->

<!-- internal state end -->

---

<details>
<summary>üìú Recent review details</summary>

**Configuration used: .coderabbit.yaml**
**Review profile: CHILL**

<details>
<summary>üì• Commits</summary>

Reviewing files that changed from the base of the PR and between 290182df2670aa176fc44f08a13c3d0a4544ad41 and fc65de563e791d42e213bed8c1b190c160cd041d.

</details>

<details>
<summary>üìí Files selected for processing (2)</summary>

* `apps/docs/components/docs/components/code-demo/react-live-demo.tsx` (2 hunks)
* `apps/docs/content/docs/components/accordion.mdx` (1 hunks)

</details>

</details>
<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- apps/docs/components/docs/components/code-demo/react-live-demo.tsx (modified, 11 changes)\n  Patch: @@ -44,8 +44,11 @@ export const ReactLiveDemo: React.FC<ReactLiveDemoProps> = ({
   const content = (
     <>
       {files?.[DEFAULT_FILE] && (
-        <div className="absolute top-[-24px] right-[-8px]">
-          <CopyButton className="text-zinc-400" value={files?.[DEFAULT_FILE]} />
+        <div className="absolute top-[-28px] right-[-8px]">
+          <CopyButton
+            className="opacity-0 group-hover/code-demo:opacity-100 transition-opacity text-zinc-400"
+            value={files?.[DEFAULT_FILE]}
+          />
         </div>
       )}
       <LivePreview
@@ -70,12 +73,12 @@ export const ReactLiveDemo: React.FC<ReactLiveDemoProps> = ({
           color={gradientColor}
           to="top-right"
         >
-          <div className="max-w-full py-4 px-2 w-full h-full scrollbar-hide overflow-x-scroll">
+          <div className="group/code-demo max-w-full py-4 px-2 w-full h-full scrollbar-hide overflow-x-scroll">
             {content}
           </div>
         </GradientBox>
       ) : (
-        <BgGridContainer className={className}>{content}</BgGridContainer>
+        <BgGridContainer className={clsx(className, "group/code-demo")}>{content}</BgGridContainer>
       )}
     </LiveProvider>
   );\n- apps/docs/content/docs/components/accordion.mdx (modified, 340 changes)\n  Patch: @@ -189,69 +189,301 @@ Here's an example of how to customize the accordion styles:
 
 ### Accordion Props
 
-| Attribute                 | Type                                            | Description                                                                                             | Default  |
-| ------------------------- | ----------------------------------------------- | ------------------------------------------------------------------------------------------------------- | -------- |
-| children                  | `ReactNode` \| `ReactNode[]`                    | The contents of the collection. Usually the array of `AccordionItem`                                    |          |
-| variant                   | `light` \| `shadow` \| `bordered` \| `splitted` | The accordion appearance style.                                                                         | `light`  |
-| selectionMode             | `none` \| `single` \| `multiple`                | The type of selection that is allowed in the collection.                                                |          |
-| selectionBehavior         | `toggle` \| `replace`                           | The accordion selection behavior.                                                                       | `toggle` |
-| isCompact                 | `boolean`                                       | Whether all Accordion items should be smaller.                                                          | `false`  |
-| isDisabled                | `boolean`                                       | Whether the Accordion items are disabled.                                                               |          |
-| showDivider               | `boolean`                                       | Whether to display a divider at the bottom of the each accordion item.                                  | `true`   |
-| dividerProps              | [DividerProps](/docs/components/divider)        | The divider component props.                                                                            | -        |
-| hideIndicator             | `boolean`                                       | Whether the Accordion items indicator is hidden.                                                        |          |
-| disableAnimation          | `boolean`                                       | Whether the Accordion items open/close animation is disabled.                                           |          |
-| disableIndicatorAnimation | `boolean`                                       | Whether the Accordion items indicator animation is disabled.                                            |          |
-| disallowEmptySelection    | `boolean`                                       | Whether the collection allows empty selection.                                                          |          |
-| keepContentMounted        | `boolean`                                       | Whether the Accordion items content should be always mounted.                                           | `false`  |
-| fullWidth                 | `boolean`                                       | Whether the accordion should take up the full width of its parent container.                            | `true`   |
-| motionProps               | `MotionProps`                                   | The motion properties of the Accordion.                                                                 |          |
-| disabledKeys              | `React.Key[]`                                   | The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with. |          |
-| itemClasses               | [Classnames](#accordion-item-classnames)        | The accordion items classNames.                                                                         |          |
-| selectedKeys              | `all` \| `React.Key[]`                          | The currently selected keys in the collection (controlled).                                             |          |
-| defaultSelectedKeys       | `all` \| `React.Key[]`                          | The initial selected keys in the collection (uncontrolled).                                             |          |
-| disabledKeys              | `React.Key[]`                                   | The currently disabled keys in the collection (controlled).                                             |          |
+<APITable 
+  data={[
+    {
+      attribute: "children",
+      type: "ReactNode | ReactNode[]",
+      description: "The contents of the collection. Usually the array of AccordionItem",
+      default: "-"
+    },
+    {
+      attribute: "variant",
+      type: "light | shadow | bordered | splitted",
+      description: "The accordion appearance style.",
+      default: "light"
+    },
+    {
+      attribute: "selectionMode", 
+      type: "none | single | multiple",
+      description: "The type of selection that is allowed in the collection.",
+      default: "-"
+    },
+    {
+      attribute: "selectionBehavior",
+      type: "toggle | replace",
+      description: "The accordion selection behavior.",
+      default: "toggle"
+    },
+    {
+      attribute: "isCompact",
+      type: "boolean",
+      description: "Whether all Accordion items should be smaller.",
+      default: "false"
+    },
+    {
+      attribute: "isDisabled",
+      type: "boolean", 
+      description: "Whether the Accordion items are disabled.",
+      default: "false"
+    },
+    {
+      attribute: "showDivider",
+      type: "boolean",
+      description: "Whether to display a divider at the bottom of the each accordion item.",
+      default: "true"
+    },
+    {
+      attribute: "dividerProps",
+      type: "DividerProps",
+      description: "The divider component props.",
+      default: "-"
+    },
+    {
+      attribute: "hideIndicator",
+      type: "boolean",
+      description: "Whether the Accordion items indicator is hidden.",
+      default: "false"
+    },
+    {
+      attribute: "disableAnimation",
+      type: "boolean",
+      description: "Whether the Accordion items open/close animation is disabled.",
+      default: "false"
+    },
+    {
+      attribute: "disableIndicatorAnimation",
+      type: "boolean",
+      description: "Whether the Accordion items indicator animation is disabled.",
+      default: "false"
+    },
+    {
+      attribute: "disallowEmptySelection",
+      type: "boolean",
+      description: "Whether the collection allows empty selection.",
+      default: "false"
+    },
+    {
+      attribute: "keepContentMounted",
+      type: "boolean",
+      description: "Whether the Accordion items content should be always mounted.",
+      default: "false"
+    },
+    {
+      attribute: "fullWidth",
+      type: "boolean",
+      description: "Whether the accordion should take up the full width of its parent container.",
+      default: "true"
+    },
+    {
+      attribute: "motionProps",
+      type: "MotionProps",
+      description: "The motion properties of the Accordion.",
+      default: "-"
+    },
+    {
+      attribute: "disabledKeys",
+      type: "React.Key[]",
+      description: "The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.",
+      default: "-"
+    },
+    {
+      attribute: "itemClasses",
+      type: "AccordionItemClassnames",
+      description: "The accordion items classNames.",
+      default: "-"
+    },
+    {
+      attribute: "selectedKeys",
+      type: "all | React.Key[]",
+      description: "The currently selected keys in the collection (controlled).",
+      default: "-"
+    },
+    {
+      attribute: "defaultSelectedKeys",
+      type: "all | React.Key[]",
+      description: "The initial selected keys in the collection (uncontrolled).",
+      default: "-"
+    }
+  ]}
+/>
 
 ### Accordion Events
 
-| Attribute         | Type                                     | Description                                        |
-| ----------------- | ---------------------------------------- | -------------------------------------------------- |
-| onSelectionChange | `(keys: "all" ÔΩú Set<React.Key>) => any` | Handler that is called when the selection changes. |
+<APITable
+  data={[
+    {
+      attribute: "onSelectionChange",
+      type: "(keys: \"all\" | Set<React.Key>) => any",
+      description: "Handler that is called when the selection changes.",
+      default: "-"
+    }
+  ]}
+/>
 
 ### Accordion Item Props
 
-| Attribute                 | Type                                              | Description                                                                                                                  | Default |
-|---------------------------|---------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------|---------|
-| children                  | `ReactNode` \| `string`                           | The content of the component.                                                                                                |         |
-| title                     | `ReactNode` \| `string`                           | The accordion item title.                                                                                                    |         |
-| subtitle                  | `ReactNode` \| `string`                           | The accordion item subtitle.                                                                                                 |         |
-| indicator                 | [IndicatorProps](#accordion-item-indicator-props) | The accordion item `expanded` indicator, usually an arrow icon.                                                              |         |
-| startContent              | `ReactNode`                                       | The accordion item start content, usually an icon or avatar.                                                                 |         |
-| motionProps               | [MotionProps](#motion-props)                      | The props to modify the framer motion animation. Use the `variants` API to create your own animation.                        |         |
-| isCompact                 | `boolean`                                         | Whether the AccordionItem is compact.                                                                                        | `false` |
-| isDisabled                | `boolean`                                         | The current disabled status.                                                                                                 | `false` |
-| keepContentMounted        | `boolean`                                         | Whether the AccordionItem content is kept mounted when closed.                                                               | `false` |
-| hideIndicator             | `boolean`                                         | Whether the AccordionItem indicator is hidden.                                                                               | `false` |
-| disableAnimation          | `boolean`                                         | Whether the AccordionItem animation is disabled.                                                                             | `false` |
-| disableIndicatorAnimation | `boolean`                                         | Whether the AccordionItem indicator animation is disabled.                                                                   | `false` |
-| HeadingComponent          | `React.ElementType`                               | Customizable heading tag for Web accessibility. Use headings to describe content and use them consistently and semantically. | `h2`    |
-| classNames                | [Classnames](#accordion-item-classnames)          | Allows to set custom class names for the accordion item slots.                                                               | -       |
+<APITable
+  data={[
+    {
+      attribute: "children",
+      type: "ReactNode | string",
+      description: "The content of the component.",
+      default: "-"
+    },
+    {
+      attribute: "title",
+      type: "ReactNode | string",
+      description: "The accordion item title.",
+      default: "-"
+    },
+    {
+      attribute: "subtitle",
+      type: "ReactNode | string",
+      description: "The accordion item subtitle.",
+      default: "-"
+    },
+    {
+      attribute: "indicator",
+      type: "IndicatorProps",
+      description: "The accordion item expanded indicator, usually an arrow icon.",
+      default: "-"
+    },
+    {
+      attribute: "startContent",
+      type: "ReactNode",
+      description: "The accordion item start content, usually an icon or avatar.",
+      default: "-"
+    },
+    {
+      attribute: "motionProps",
+      type: "MotionProps",
+      description: "The props to modify the framer motion animation. Use the variants API to create your own animation.",
+      default: "-"
+    },
+    {
+      attribute: "isCompact",
+      type: "boolean",
+      description: "Whether the AccordionItem is compact.",
+      default: "false"
+    },
+    {
+      attribute: "isDisabled",
+      type: "boolean",
+      description: "The current disabled status.",
+      default: "false"
+    },
+    {
+      attribute: "keepContentMounted",
+      type: "boolean",
+      description: "Whether the AccordionItem content is kept mounted when closed.",
+      default: "false"
+    },
+    {
+      attribute: "hideIndicator",
+      type: "boolean",
+      description: "Whether the AccordionItem indicator is hidden.",
+      default: "false"
+    },
+    {
+      attribute: "disableAnimation",
+      type: "boolean",
+      description: "Whether the AccordionItem animation is disabled.",
+      default: "false"
+    },
+    {
+      attribute: "disableIndicatorAnimation",
+      type: "boolean",
+      description: "Whether the AccordionItem indicator animation is disabled.",
+      default: "false"
+    },
+    {
+      attribute: "HeadingComponent",
+      type: "React.ElementType",
+      description: "Customizable heading tag for Web accessibility. Use headings to describe content and use them consistently and semantically.",
+      default: "h2"
+    },
+    {
+      attribute: "classNames",
+      type: "AccordionItemClassnames",
+      description: "Allows to set custom class names for the accordion item slots.",
+      default: "-"
+    }
+  ]}
+/>
 
 ### Accordion Item Events
 
-| Attribute     | Type                           | Description                                                                                                     |
-| ------------- | ------------------------------ | --------------------------------------------------------------------------------------------------------------- |
-| onFocus       | `(e: FocusEvent) => void`      | Handler that is called when the element receives focus.                                                         |
-| onBlur        | `(e: FocusEvent) => void`      | Handler that is called when the element loses focus.                                                            |
-| onFocusChange | `(isFocused: boolean) => void` | Handler that is called when the element's focus status changes.                                                 |
-| onKeyDown     | `(e: KeyboardEvent) => void`   | Handler that is called when a key is pressed.                                                                   |
-| onKeyUp       | `(e: KeyboardEvent) => void`   | Handler that is called when a key is released.                                                                  |
-| onPress       | `(e: PressEvent) => void`      | Handler called when the press is released over the target.                                                      |
-| onPressStart  | `(e: PressEvent) => void`      | Handler called when a press interaction starts.                                                                 |
-| onPressEnd    | `(e: PressEvent) => void`      | Handler called when a press interaction ends, either over the target or when the pointer leaves the target.     |
-| onPressChange | `(isPressed: boolean) => void` | Handler called when the press state changes.                                                                    |
-| onPressUp     | `(e: PressEvent) => void`      | Handler called when a press is released over the target, regardless of whether it started on the target or not. |
-| onClick       | `MouseEventHandler`            | The native button click event handler (**Deprecated**) use **onPress** instead.                                 |
+<APITable
+  data={[
+    {
+      attribute: "onFocus",
+      type: "(e: FocusEvent) => void",
+      description: "Handler that is called when the element receives focus.",
+      default: "-"
+    },
+    {
+      attribute: "onBlur",
+      type: "(e: FocusEvent) => void",
+      description: "Handler that is called when the element loses focus.",
+      default: "-"
+    },
+    {
+      attribute: "onFocusChange",
+      type: "(isFocused: boolean) => void",
+      description: "Handler that is called when the element's focus status changes.",
+      default: "-"
+    },
+    {
+      attribute: "onKeyDown",
+      type: "(e: KeyboardEvent) => void",
+      description: "Handler that is called when a key is pressed.",
+      default: "-"
+    },
+    {
+      attribute: "onKeyUp",
+      type: "(e: KeyboardEvent) => void",
+      description: "Handler that is called when a key is released.",
+      default: "-"
+    },
+    {
+      attribute: "onPress",
+      type: "(e: PressEvent) => void",
+      description: "Handler called when the press is released over the target.",
+      default: "-"
+    },
+    {
+      attribute: "onPressStart",
+      type: "(e: PressEvent) => void",
+      description: "Handler called when a press interaction starts.",
+      default: "-"
+    },
+    {
+      attribute: "onPressEnd",
+      type: "(e: PressEvent) => void",
+      description: "Handler called when a press interaction ends, either over the target or when the pointer leaves the target.",
+      default: "-"
+    },
+    {
+      attribute: "onPressChange",
+      type: "(isPressed: boolean) => void",
+      description: "Handler called when the press state changes.",
+      default: "-"
+    },
+    {
+      attribute: "onPressUp",
+      type: "(e: PressEvent) => void",
+      description: "Handler called when a press is released over the target, regardless of whether it started on the target or not.",
+      default: "-"
+    },
+    {
+      attribute: "onClick",
+      type: "MouseEventHandler",
+      description: "The native button click event handler (Deprecated) use onPress instead.",
+      default: "-"
+    }
+  ]}
+/>
 
 ---
 \n
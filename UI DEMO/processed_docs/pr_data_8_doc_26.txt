Pull Request Number: 3352
Title: chore: add commands to run tests and storybook in StrictMode
Base Branch: canary
Head Branch: chore/react-strict-mode
Author: chirokas
URL: https://github.com/nextui-org/nextui/pull/3352
State: MERGED
Created At: 2024-06-28T13:42:26Z
Merged At: 2024-09-08T07:35:30Z
Participants: chirokas, wingkwong

Description:
Closes # 
üìù Description
Developing in strict mode is the best practice for React because it helps teams catch bugs earlier.
‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit

New Features

Introduced options for enabling React's Strict Mode in development and testing environments.


Chores

Added new scripts for strict development testing.
Updated and reorganized package dependencies for improved management.


Configuration

Enhanced Storybook configuration with strict mode options and improved structure.

Commits:
- chore: run tests and storybook in StrictMode\n- Merge branch 'canary' into pr/3352\n

Labels:


Comments:
- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: 86e5e39c993e7ac43c527aa2acba8b12e111ce82

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/chirokas/nextui/new/chore/react-strict-mode?filename=.changeset/sour-hairs-explain.md&value=---%0A%22%40nextui-org%2Fstorybook%22%3A%20patch%0A---%0A%0Achore%3A%20add%20commands%20to%20run%20tests%20and%20storybook%20in%20StrictMode%0A)

\n- vercel: [vc]: #zUDt6eotqGwBiqgrVPyYwjqX71fJrpq9bwdDf6IJDfM=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvQTFyRmVnNUJ1QzU0Q2Y4dzM3aVM3cnJEbXRGWCIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWNoaXJva2FzLWNob3JlLXItYTNjNWZhLW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWNoaXJva2FzLWNob3JlLXItYTNjNWZhLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/A1rFeg5BuC54Cf8w37iS7rrDmtFX)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-chirokas-chore-r-a3c5fa-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-chirokas-chore-r-a3c5fa-nextui-org.vercel.app?via=pr-comment-feedback-link) | Sep 8, 2024 7:23am |

\n- vercel: @chirokas is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%223441b654e989a25e2326704c7a50979fcb01aca2%22%7D%2C%22id%22%3A%22QmeMdjfr91XXVgNiQgCpZuySswM89UVeakrnnbWyYHGD7T%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A3352%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: skip review by coderabbit.ai -->

> [!IMPORTANT]
> ## Review skipped
> 
> Review was skipped due to path filters
> 
> <details>
> <summary>Files ignored due to path filters (1)</summary>
> 
> * `pnpm-lock.yaml` is excluded by `!**/pnpm-lock.yaml`
> 
> </details>
> 
> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.

<!-- end of auto-generated comment: skip review by coderabbit.ai --><!-- walkthrough_start -->

## Walkthrough

The updates introduce stricter mode options for both development and testing environments through new scripts in `package.json` and configuration changes in Storybook and testing setup. Key dependencies were added and updated to support these changes. The goal is to ensure more rigorous code quality checks during development and testing phases.

## Changes

| File                                                                                           | Change Summary                                                                                           |
|------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------|
| `package.json`                                                                                 | Added `"test:strict"` script, moved and reevaluated dependencies, updated various package versions.     |
| `packages/storybook/.storybook/main.js`                                                        | Integrated React Strict Mode with an `options` object and added a trailing comma in the `core` section. |
| `packages/storybook/.storybook/addons/react-strict-mode/index.tsx`                            | Introduced `StrictModeDecorator` for conditional wrapping of stories in React's Strict Mode.             |
| `packages/storybook/.storybook/addons/react-strict-mode/register.tsx`                         | Implemented `StrictModeSwitcher` component to toggle Strict Mode based on a query parameter.             |
| `packages/storybook/.storybook/preview.tsx`                                                  | Imported `withStrictModeSwitcher` to conditionally apply the decorator in the preview configuration.      |
| `scripts/setup-test.ts`                                                                        | Added configuration for `reactStrictMode` based on the `STRICT_MODE` environment variable.               |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

```
package.json: ### Summary

- Added a new script `"test:strict": "cross-env STRICT_MODE=true pnpm test"` in the `scripts` section of `package.json`.
- Added `@storybook/react`, `@storybook/manager-api`, and `@storybook/preview-api` to `dependencies`.
- Moved `@storybook/react` from `devDependencies` to `dependencies`.
- Moved `tsx`, `intl-messageformat`, and `npm-check-updates` in `package.json`, indicating a reevaluation of their necessity.
- Updated versions for various packages like `intl-messageformat`, `concurrently`, and others.

### Alterations to the declarations of exported or public entities
- New script added: `"test:strict": "cross-env STRICT_MODE=true pnpm test"`
- `@storybook/react` moved in `devDependencies` in `package.json`.
- `tsx` removed from `devDependencies` and then re-added later.
- `intl-messageformat` moved in `devDependencies`.
- `npm-check-updates` moved in `devDependencies`.

---

packages/storybook/.storybook/main.js: ### Summary

In the `main.js` configuration file for Storybook:
- Added a new entry for the React Strict Mode addon, enhancing the React application with additional checks and warnings.
- Added an `options` object with a `strictMode` property based on the value of `process.env.STRICT_MODE`.
- Added a trailing comma after the `disableTelemetry` property in the `core` section.

### Alterations to the declarations of exported or public entities
- `module.exports` now includes new entry `"./addons/react-strict-mode/register"` in the `addons` array.
- `options` section updated: 
  - Before: `options: {}`
  - After: `options: { strictMode: process.env.STRICT_MODE === "true" }`
- `core` section updated: 
  - Before: `disableTelemetry: true`
  - After: `disableTelemetry: true,`

---

packages/storybook/.storybook/addons/react-strict-mode/index.tsx: ### Summary

This new file introduces a React component decorator for Storybook that conditionally wraps stories in React's `StrictMode`. The `StrictModeDecorator` component utilizes React hooks to manage its internal state, specifically determining whether to enable `StrictMode` based on query parameters. 

### Alterations to the declarations of exported or public entities
- `export const withStrictModeSwitcher` in `packages/storybook/.storybook/addons/react-strict-mode/index.tsx`.

---

packages/storybook/.storybook/addons/react-strict-mode/register.tsx: ### Summary

The newly introduced file `register.tsx` implements a "Strict Mode Switcher" component that allows users to toggle React's Strict Mode in their Storybook environment. This component utilizes React hooks to manage the strict mode state based on a query parameter.

### Alterations to the declarations of exported or public entities
- `function StrictModeSwitcher({ api }: { api: API })` in `packages/storybook/.storybook/addons/react-strict-mode/register.tsx` (new function declaration).

---

packages/storybook/.storybook/preview.tsx: ### Summary

The diff introduces a new import statement for `withStrictModeSwitcher` from the `./addons/react-strict-mode` module, enhancing the functionality of the Storybook preview configuration. This addition allows for the conditional inclusion of the `withStrictModeSwitcher` decorator based on the environment variable `NODE_ENV`.

### Alterations to the declarations of exported or public entities
- `const decorators: Preview["decorators"]` now conditionally includes `withStrictModeSwitcher`.

---

scripts/setup-test.ts: ### Summary

The diff introduces modifications to the `scripts/setup-test.ts` file, enhancing the testing setup for a React application. A new import statement for `configure` from `@testing-library/react` has been added, along with a configuration for `reactStrictMode` based on the `STRICT_MODE` environment variable.

### Alterations to the declarations of exported or public entities
- `configure({ reactStrictMode: process.env.STRICT_MODE === "true" })` in `scripts/setup-test.ts` ‚Üí New configuration added for testing environment.
```

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR Summary

**Title:** chore: add commands to run tests and storybook in StrictMode

**User:** chirokas

**Number:** 3352

**Description:** 

This pull request introduces commands to run tests and Storybook in StrictMode. It emphasizes that developing in strict mode is a best practice for React, as it aids teams in identifying bugs at an earlier stage. 

The PR does not specify a closing issue number, current behavior, new behavior, or whether this is a breaking change. Additionally, no further information is provided.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 3441b654e989a25e2326704c7a50979fcb01aca2 -->
<!-- 5bae67e1580861bb46bcfe1750332fa46ac94326 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>



<!-- tips_end -->\n

Files Changed:
- package.json (modified, 12 changes)\n  Patch: @@ -25,6 +25,7 @@
     "build:sb": "pnpm --filter @nextui-org/storybook build",
     "start:sb": "pnpm --filter @nextui-org/storybook start",
     "test": "jest --verbose --config ./jest.config.js",
+    "test:strict": "cross-env STRICT_MODE=true pnpm test",
     "typecheck": "turbo typecheck",
     "lint": "pnpm lint:pkg && pnpm lint:docs",
     "lint:pkg": "eslint -c .eslintrc.json ./packages/**/*.{ts,tsx}",
@@ -54,7 +55,6 @@
   "devDependencies": {
     "@babel/cli": "^7.14.5",
     "@babel/core": "^7.16.7",
-    "tsx": "^3.8.2",
     "@babel/plugin-proposal-object-rest-spread": "^7.15.6",
     "@babel/plugin-transform-runtime": "^7.14.5",
     "@babel/preset-env": "^7.14.5",
@@ -69,6 +69,7 @@
     "@react-bootstrap/babel-preset": "^2.1.0",
     "@react-types/link": "^3.4.4",
     "@react-types/shared": "3.23.1",
+    "@storybook/react": "^7.4.6",
     "@swc-node/jest": "^1.5.2",
     "@swc/core": "^1.3.35",
     "@swc/jest": "^0.2.24",
@@ -85,10 +86,10 @@
     "@types/testing-library__jest-dom": "5.14.5",
     "@typescript-eslint/eslint-plugin": "^5.42.0",
     "@typescript-eslint/parser": "^5.42.0",
-    "@storybook/react": "^7.4.6",
     "chalk": "^4.1.2",
-    "concurrently": "^7.6.0",
     "commitlint-plugin-function-rules": "^1.7.1",
+    "concurrently": "^7.6.0",
+    "cross-env": "^7.0.3",
     "eslint": "^7.29.0",
     "eslint-config-airbnb": "^18.2.1",
     "eslint-config-airbnb-typescript": "^12.3.1",
@@ -106,19 +107,19 @@
     "eslint-plugin-react": "^7.23.2",
     "eslint-plugin-react-hooks": "^4.6.0",
     "eslint-plugin-unused-imports": "^2.0.0",
-    "npm-check-updates": "^16.10.18",
-    "intl-messageformat": "^10.1.0",
     "execa": "^5.1.1",
     "find-up": "^6.3.0",
     "fs-extra": "^10.0.0",
     "glob": "^8.0.3",
     "graceful-fs": "^4.2.6",
     "gray-matter": "^4.0.3",
     "husky": "^8.0.1",
+    "intl-messageformat": "^10.1.0",
     "jest": "^28.1.1",
     "jest-environment-jsdom": "^28.1.1",
     "jest-watch-typeahead": "1.1.0",
     "lint-staged": "^13.0.3",
+    "npm-check-updates": "^16.10.18",
     "npm-run-all": "^4.1.5",
     "p-iteration": "^1.1.8",
     "parcel": "^2.3.1",
@@ -131,6 +132,7 @@
     "rimraf": "^3.0.2",
     "shelljs": "^0.8.4",
     "tsup": "6.4.0",
+    "tsx": "^3.8.2",
     "turbo": "1.6.3",
     "typescript": "^4.9.5",
     "webpack": "^5.53.0",\n- packages/storybook/.storybook/addons/react-strict-mode/index.tsx (added, 29 changes)\n  Patch: @@ -0,0 +1,29 @@
+import type { PropsWithChildren } from "react"
+
+import { addons, makeDecorator } from "@storybook/preview-api"
+import { getQueryParams } from "@storybook/preview-api"
+import React, { StrictMode, useEffect, useState } from "react"
+
+function StrictModeDecorator({ children }: PropsWithChildren<any>) {
+  const [isStrict, setStrict] = useState(() => getQueryParams()?.strict === "true")
+
+  useEffect(() => {
+    const channel = addons.getChannel()
+
+    channel.on("strict/updated", setStrict)
+
+    return () => {
+      channel.removeListener("strict/updated", setStrict)
+    }
+  }, [])
+
+  return isStrict ? <StrictMode>{children}</StrictMode> : children
+}
+
+export const withStrictModeSwitcher = makeDecorator({
+  name: "withStrictModeSwitcher",
+  parameterName: "strictModeSwitcher",
+  wrapper: (getStory, context) => {
+    return <StrictModeDecorator>{getStory(context)}</StrictModeDecorator>
+  },
+})\n- packages/storybook/.storybook/addons/react-strict-mode/register.tsx (added, 55 changes)\n  Patch: @@ -0,0 +1,55 @@
+import type { API } from "@storybook/manager-api";
+
+import { addons, types } from "@storybook/manager-api";
+import React, { useEffect, useState } from "react";
+
+const ADDON_ID = "StrictModeSwitcher";
+
+function StrictModeSwitcher({ api }: { api: API }) {
+  const [isStrict, setStrict] = useState(() => api.getQueryParam("strict") === "true");
+
+  const onChange = () => setStrict((val) => !val);
+
+  useEffect(() => {
+    const channel = api.getChannel();
+
+    channel?.emit("strict/updated", isStrict);
+
+    api.setQueryParams({
+      strict: String(isStrict),
+    });
+  }, [isStrict]);
+
+  return (
+    <div
+      style={{
+        alignItems: "center",
+        display: "flex",
+        fontSize: "0.75rem",
+        fontWeight: 600,
+        lineHeight: "1rem",
+      }}
+      title="Enable Strict Mode"
+    >
+      <label htmlFor="strictmode">StrictMode:</label>
+      <input
+        checked={isStrict}
+        id="strictmode"
+        name="strictmode"
+        onChange={onChange}
+        type="checkbox"
+      />
+    </div>
+  );
+}
+
+if (process.env.NODE_ENV !== "production") {
+  addons.register(ADDON_ID, (api) => {
+    addons.add(ADDON_ID, {
+      match: ({ viewMode }) => !!viewMode?.match(/^(story|docs)$/),
+      render: () => <StrictModeSwitcher api={api} />,
+      title: "Strict Mode Switcher",
+      type: types.TOOL,
+    });
+  });
+}\n- packages/storybook/.storybook/main.js (modified, 6 changes)\n  Patch: @@ -11,14 +11,14 @@ module.exports = {
     getAbsolutePath("@storybook/addon-essentials"),
     getAbsolutePath("@storybook/addon-links"),
     getAbsolutePath("storybook-dark-mode"),
-    getAbsolutePath("@storybook/addon-mdx-gfm")
+    getAbsolutePath("@storybook/addon-mdx-gfm"),
+    "./addons/react-strict-mode/register",
   ],
   framework: {
     name: getAbsolutePath("@storybook/react-vite"),
-    options: {}
   },
   core: {
-    disableTelemetry: true
+    disableTelemetry: true,
   },
   typescript: {
     reactDocgen: false,\n- packages/storybook/.storybook/preview.tsx (modified, 2 changes)\n  Patch: @@ -4,6 +4,7 @@ import {NextUIProvider} from "@nextui-org/system/src/provider";
 import type {Preview} from "@storybook/react";
 
 import "./style.css";
+import { withStrictModeSwitcher } from "./addons/react-strict-mode";
 
 const decorators: Preview["decorators"] = [
   (Story, {globals: {locale, disableAnimation}}) => {
@@ -19,6 +20,7 @@ const decorators: Preview["decorators"] = [
       </NextUIProvider>
     );
   },
+  ...(process.env.NODE_ENV !== "production" ? [withStrictModeSwitcher] : []),
 ];
 
 const commonTheme = {\n- packages/storybook/package.json (modified, 2 changes)\n  Patch: @@ -44,6 +44,8 @@
     "@storybook/addon-links": "^7.4.6",
     "@storybook/addon-mdx-gfm": "^7.4.6",
     "@storybook/cli": "^7.4.6",
+    "@storybook/manager-api": "^7.6.17",
+    "@storybook/preview-api": "^7.6.17",
     "@storybook/react": "^7.4.6",
     "@storybook/react-vite": "^7.4.6",
     "@storybook/theming": "^7.4.6",\n- pnpm-lock.yaml (modified, 43 changes)\n  Patch: @@ -120,6 +120,9 @@ importers:
       concurrently:
         specifier: ^7.6.0
         version: 7.6.0
+      cross-env:
+        specifier: ^7.0.3
+        version: 7.0.3
       eslint:
         specifier: ^7.29.0
         version: 7.32.0
@@ -3634,6 +3637,12 @@ importers:
       '@storybook/cli':
         specifier: ^7.4.6
         version: 7.6.17(encoding@0.1.13)
+      '@storybook/manager-api':
+        specifier: ^7.6.17
+        version: 7.6.17(react-dom@18.2.0(react@18.2.0))(react@18.2.0)
+      '@storybook/preview-api':
+        specifier: ^7.6.17
+        version: 7.6.17
       '@storybook/react':
         specifier: ^7.4.6
         version: 7.6.17(encoding@0.1.13)(react-dom@18.2.0(react@18.2.0))(react@18.2.0)(typescript@4.9.5)
@@ -5201,9 +5210,11 @@ packages:
   '@humanwhocodes/config-array@0.5.0':
     resolution: {integrity: sha512-FagtKFz74XrTl7y6HCzQpwDfXP0yhxe9lHLD1UZxjvZIcbyRz8zTFF/yYNfSfzU414eDwZ1SrO0Qvtyf+wFMQg==}
     engines: {node: '>=10.10.0'}
+    deprecated: Use @eslint/config-array instead
 
   '@humanwhocodes/object-schema@1.2.1':
     resolution: {integrity: sha512-ZnQMnLV4e7hDlUvw8H+U8ASL02SS2Gn6+9Ac3wGGLIe7+je2AeAOxPY+izIPJDfFDb7eDjev0Us8MO1iFRN8hA==}
+    deprecated: Use @eslint/object-schema instead
 
   '@iconify/icons-solar@1.2.3':
     resolution: {integrity: sha512-dots93IzoaOrJ8aUD2YGZ4+Jy+yf5D87CmzSeBkEi/m+WX1klvHqWuw5kyZvVroLOlaIaJXb5nZVaDnhc8XJyQ==}
@@ -8146,6 +8157,7 @@ packages:
   are-we-there-yet@3.0.1:
     resolution: {integrity: sha512-QZW4EDmGwlYur0Yyf/b2uGucHQMa8aFUP7eu9ddR73vvhFyt4V0Vl3QHPcTNJ8l6qYOBdxgXdnBXQrHilfRQBg==}
     engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
+    deprecated: This package is no longer supported.
 
   arg@4.1.3:
     resolution: {integrity: sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==}
@@ -9026,6 +9038,11 @@ packages:
   crelt@1.0.6:
     resolution: {integrity: sha512-VQ2MBenTq1fWZUH9DJNGti7kKv6EeAuYr3cLwxUWhIu1baTaXh4Ib5W2CqHVqib4/MqbYGJqiL3Zb8GJZr3l4g==}
 
+  cross-env@7.0.3:
+    resolution: {integrity: sha512-+/HKd6EgcQCJGh2PSjZuUitQBQynKor4wrFbRg4DtAgS1aWO+gU52xpH7M9ScGgXSYmAVS9bIJ8EzuaGw0oNAw==}
+    engines: {node: '>=10.14', npm: '>=6', yarn: '>=1'}
+    hasBin: true
+
   cross-spawn@5.1.0:
     resolution: {integrity: sha512-pTgQJ5KC0d2hcY8eyL1IzlBPYjTkyH72XRZPnLyKus2mBfNjQs3klqbJU2VILqZryAZUt9JOb3h/mWMy23/f5A==}
 
@@ -10385,6 +10402,7 @@ packages:
   gauge@4.0.4:
     resolution: {integrity: sha512-f9m+BEN5jkg6a0fZjleidjN51VE1X+mPFQ2DJ0uv1V39oCLCbsGe6yjbBnp7eK7z/+GAon99a3nHuqbuuthyPg==}
     engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
+    deprecated: This package is no longer supported.
 
   gensync@1.0.0-beta.2:
     resolution: {integrity: sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==}
@@ -10487,13 +10505,16 @@ packages:
 
   glob@7.1.7:
     resolution: {integrity: sha512-OvD9ENzPLbegENnYP5UUfJIirTg4+XwMWGaQfQTY0JenxNvvIKP3U3/tAQSPIu/lHxXYSZmpXlUHeqAIdKzBLQ==}
+    deprecated: Glob versions prior to v9 are no longer supported
 
   glob@7.2.3:
     resolution: {integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==}
+    deprecated: Glob versions prior to v9 are no longer supported
 
   glob@8.1.0:
     resolution: {integrity: sha512-r8hpEjiQEYlF2QU0df3dS+nxxSIreXQS1qRhMJM0Q5NDdR386C7jb7Hwwod8Fgiuex+k0GFjgft18yvxm5XoCQ==}
     engines: {node: '>=12'}
+    deprecated: Glob versions prior to v9 are no longer supported
 
   global-dirs@0.1.1:
     resolution: {integrity: sha512-NknMLn7F2J7aflwFOlGdNIuCDpN3VGoSoB+aap3KABFWbHVn1TCgFC+np23J8W2BiZbjfEw3BFBycSMv1AFblg==}
@@ -10891,6 +10912,7 @@ packages:
 
   inflight@1.0.6:
     resolution: {integrity: sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==}
+    deprecated: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
 
   inherits@2.0.4:
     resolution: {integrity: sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==}
@@ -12646,6 +12668,7 @@ packages:
   npmlog@6.0.2:
     resolution: {integrity: sha512-/vBvz5Jfr9dT/aFWd0FIRf+T/Q2WBsLENygUaFUqstqsycmZAP/t5BvFJTK0viFmSUxiUKTUplWy5vt+rvKIxg==}
     engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}
+    deprecated: This package is no longer supported.
 
   nprogress@0.2.0:
     resolution: {integrity: sha512-I19aIingLgR1fmhftnbWWO3dXc0hSxqHQHQb3H8m+K3TnEn/iSeTZZOyvKXWqQESMwuUVnatlCnZdLBZZt2VSA==}
@@ -13516,6 +13539,7 @@ packages:
   read-package-json@6.0.4:
     resolution: {integrity: sha512-AEtWXYfopBj2z5N5PbkAOeNHRPUg5q+Nen7QLxV8M2zJq1ym6/lCz3fYNTCXe19puu2d06jfHhrP7v/S2PtMMw==}
     engines: {node: ^14.17.0 || ^16.13.0 || >=18.0.0}
+    deprecated: This package is no longer supported. Please use @npmcli/package-json instead.
 
   read-pkg-up@7.0.1:
     resolution: {integrity: sha512-zK0TB7Xd6JpCLmlLmufqykGE+/TlOePD6qKClNW7hHDKFh/J7/7gCWGR7joEQEW1bKq3a3yUZSObOoWLFQ4ohg==}
@@ -13811,14 +13835,17 @@ packages:
 
   rimraf@2.6.3:
     resolution: {integrity: sha512-mwqeW5XsA2qAejG46gYdENaxXjx9onRNCfn7L0duuP4hCuTIi/QO7PDK07KJfp1d+izWPrzEJDcSqBa0OZQriA==}
+    deprecated: Rimraf versions prior to v4 are no longer supported
     hasBin: true
 
   rimraf@2.7.1:
     resolution: {integrity: sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==}
+    deprecated: Rimraf versions prior to v4 are no longer supported
     hasBin: true
 
   rimraf@3.0.2:
     resolution: {integrity: sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==}
+    deprecated: Rimraf versions prior to v4 are no longer supported
     hasBin: true
 
   rimraf@5.0.5:
@@ -20769,7 +20796,7 @@ snapshots:
   '@types/body-parser@1.19.5':
     dependencies:
       '@types/connect': 3.4.38
-      '@types/node': 20.2.5
+      '@types/node': 15.14.9
 
   '@types/buble@0.20.5':
     dependencies:
@@ -20789,7 +20816,7 @@ snapshots:
 
   '@types/connect@3.4.38':
     dependencies:
-      '@types/node': 20.2.5
+      '@types/node': 15.14.9
 
   '@types/cross-spawn@6.0.6':
     dependencies:
@@ -20833,7 +20860,7 @@ snapshots:
 
   '@types/express-serve-static-core@4.19.0':
     dependencies:
-      '@types/node': 20.2.5
+      '@types/node': 15.14.9
       '@types/qs': 6.9.14
       '@types/range-parser': 1.2.7
       '@types/send': 0.17.4
@@ -21021,12 +21048,12 @@ snapshots:
   '@types/send@0.17.4':
     dependencies:
       '@types/mime': 1.3.5
-      '@types/node': 20.2.5
+      '@types/node': 15.14.9
 
   '@types/serve-static@1.15.7':
     dependencies:
       '@types/http-errors': 2.0.4
-      '@types/node': 20.2.5
+      '@types/node': 15.14.9
       '@types/send': 0.17.4
 
   '@types/shelljs@0.8.15':
@@ -22568,6 +22595,10 @@ snapshots:
 
   crelt@1.0.6: {}
 
+  cross-env@7.0.3:
+    dependencies:
+      cross-spawn: 7.0.3
+
   cross-spawn@5.1.0:
     dependencies:
       lru-cache: 4.1.5
@@ -27902,7 +27933,7 @@ snapshots:
       '@protobufjs/path': 1.1.2
       '@protobufjs/pool': 1.1.0
       '@protobufjs/utf8': 1.1.0
-      '@types/node': 20.2.5
+      '@types/node': 15.14.9
       long: 5.2.3
 
   proxy-addr@2.0.7:\n- scripts/setup-test.ts (modified, 5 changes)\n  Patch: @@ -1,4 +1,5 @@
 import "@testing-library/jest-dom/extend-expect";
+import { configure } from "@testing-library/react";
 
 const {getComputedStyle} = window;
 window.getComputedStyle = (elt) => getComputedStyle(elt);
@@ -29,3 +30,7 @@ global.ResizeObserver = jest.fn().mockImplementation(() => ({
   unobserve: jest.fn(),
   disconnect: jest.fn(),
 }));
+
+configure({
+  reactStrictMode: process.env.STRICT_MODE === "true",
+});\n
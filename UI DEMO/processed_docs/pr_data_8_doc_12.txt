Pull Request Number: 3374
Title: fix(select): close select by pressing selector button
Base Branch: canary
Head Branch: fix/eng-1020
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/3374
State: MERGED
Created At: 2024-06-30T10:05:49Z
Merged At: 2024-07-06T07:24:18Z
Participants: wingkwong, jrgarciadev

Description:
Closes #3276
üìù Description

pass domRef to ariaShouldCloseOnInteractOutside instead so that clicking selector button won't trigger the incorrect logic.

‚õ≥Ô∏è Current behavior
pressing select button won't close the select (if open)
üöÄ New behavior

  
    
    

    pr3374-demo.webm
    
  

  

  


üí£ Is this a breaking change (Yes/No):
No
üìù Additional Information

Summary by CodeRabbit


Bug Fixes

Resolved the issue where the select component would close unexpectedly when interacting with the selector button.



Tests

Added test cases to verify the opening and closing behavior of the select listbox when clicking the selector button.

Commits:
- feat(select): add test\n- Merge branch 'canary' into fix/eng-1020\n- fix(select): use domRef in ariaShouldCloseOnInteractOutside\n- feat(changeset): add changeset\n- fix(select): rewrite "should unset form value" test\n

Labels:


Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-1020/[bug]-select-not-able-to-close-when-clicked-on-again">ENG-1020 [BUG] - Select not able to close when clicked on again</a></p>\n- vercel: [vc]: #7sixY4xnd4TVDhVHQkt3lbd8RHMPFCWKW0IhyCIS+54=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9DbVdBNWhwc0ZXMWpodnVURjVYMnNuY3J1NVR2IiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtZW5nLTEwMjAtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtZW5nLTEwMjAtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19LHsibmFtZSI6Im5leHR1aS1zdG9yeWJvb2stdjIiLCJyb290RGlyZWN0b3J5IjoicGFja2FnZXMvc3Rvcnlib29rIiwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi9FVXpDWjFHMmRTaHdya1RUWHB3YmdaejRXYUN4IiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZpeC1lbmctMTAyMC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LWVuZy0xMDIwLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/CmWA5hpsFW1jhvuTF5X2sncru5Tv)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-1020-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-1020-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 30, 2024 11:34am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/EUzCZ1G2dShwrkTTXpwbgZz4WaCx)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-1020-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-1020-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 30, 2024 11:34am |


\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 727a229f7aab56cf17e7be830400a1194c8e5684

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name               | Type  |
| ------------------ | ----- |
| @nextui-org/select | Patch |
| @nextui-org/react  | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/eng-1020?filename=.changeset/wicked-maps-approve.md&value=---%0A%22%40nextui-org%2Fselect%22%3A%20patch%0A---%0A%0Afix(select)%3A%20close%20select%20by%20pressing%20selector%20button%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The patch introduces a fix for the `@nextui-org/select` package to address the issue where the select menu does not close when the selector button is clicked again. Changes include modifying the `Select` component test cases to ensure proper interactions and updating the `useSelect` function to correct the logic for menu closure.

## Changes

| File                                             | Change Summary                                                                                                                  |
|--------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------|
| `.changeset/curvy-students-judge.md`             | Added a patch note for fixing the select closing issue with the selector button (#3276).                                         |
| `packages/components/select/__tests__/select...` | Updated tests for the `Select` component to include default selected keys and test the opening/closing behavior of the listbox. |
| `packages/components/select/src/use-select.ts`   | Revised the logic in `useSelect` function to use `domRef` instead of `triggerRef` and simplified dependencies for `getInnerWrapperProps`. |

## Sequence Diagram(s)

Not applicable as the changes are relatively straightforward, focusing on minor logic updates and test modifications.

## Assessment against linked issues

| Objective                                                                       | Addressed | Explanation                                                        |
|---------------------------------------------------------------------------------|-----------|--------------------------------------------------------------------|
| Ensure the select menu closes when the selector button is clicked again (#3276) | ‚úÖ         |                                                                    |
| Test that the select listbox opens and closes correctly when interacting (#3276)| ‚úÖ         |                                                                    |
| Update the `useSelect` function to correct closing logic based on references (#3276) |‚úÖ        |                                                                    |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

.changeset/curvy-students-judge.md: ## Summary

The new file introduces a patch for the `@nextui-org/select` package to address the select closing issue with the selector button (#3276).

---

packages/components/select/__tests__/select.test.tsx: ### Summary

In the `select.test.tsx` file, the changes focus on the `Select` component and its interactions. The modifications include:
- Adding `defaultSelectedKeys` to the `Select` component.
- Adjusting the click actions on list items.
- Testing the opening and closing of the select listbox by clicking the selector button.

### Alterations to the declarations of exported or public entities

- `Select` component in `select.test.tsx`:
  - Added `defaultSelectedKeys={["foo"]}` to the `Select` component.
  - Added test cases for opening and closing the select listbox by clicking the selector button.

---

packages/components/select/src/use-select.ts: ### Summary

In the `useSelect` function in `use-select.ts`, the logic for determining `shouldCloseOnInteractOutside` has been updated to use `domRef` instead of `triggerRef`. Additionally, the dependency array for `getInnerWrapperProps` has been simplified by removing unnecessary optional chaining.

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

### PR Summary

**Title:** fix(select): close select by pressing selector button  
**User:** wingkwong  
**Number:** 3374  

**Description:**  
This pull request addresses the issue where pressing the select button does not close the select menu if it is already open. The fix involves passing `domRef` to `ariaShouldCloseOnInteractOutside` to prevent incorrect logic from being triggered when the selector button is clicked. This change ensures that clicking the selector button will now close the select menu if it is open.

**Current Behavior:**  
Pressing the select button does not close the select menu if it is open.

**New Behavior:**  
Pressing the select button will close the select menu if it is open.

**Breaking Change:**  
No

### Objectives from Linked Issues

**Issue #3276: [BUG] - Select not able to close when clicked on again**

**NextUI Version:** 2.4.2

**Bug Description:**  
When the select menu is open, it should close when the select box is clicked again. However, the current behavior is inconsistent, affecting the user experience. This issue is present across different instances of the select menu, including on the Next UI website's select example.

**Steps to Reproduce:**
1. Open the select menu by clicking on the select box.
2. Click outside the popup menu to close it (which works correctly).
3. Open the select menu again by clicking on the select box.
4. Click on the select box again while the menu is open (the menu should close, but it does not).

**Expected Behavior:**
- Clicking outside the popup menu should close it (works correctly).
- Clicking on the select box again while the menu is open should also close the menu.

**Impact:**  
The inconsistent behavior can confuse users, leading to frustration and affecting the overall user experience.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated summary of generated summaries

The updates across multiple files in the `@nextui-org/select` package address a select closing issue and enhance testing and logic handling within the `Select` component. Key changes include:

1. **Patch for Select Closing Issue**: A patch has been introduced to fix the issue where the select component closes unexpectedly when interacting with the selector button.

2. **Enhancements in `select.test.tsx`**: 
   - The `Select` component now includes `defaultSelectedKeys` to preset selected options.
   - New test cases have been added to verify the opening and closing of the select listbox through interactions with the selector button.

3. **Logic Update in `use-select.ts`**: 
   - The `useSelect` function's logic for determining `shouldCloseOnInteractOutside` has been revised to utilize `domRef` instead of `triggerRef`.
   - The dependency array for `getInnerWrapperProps` has been optimized by removing unnecessary optional chaining.

These changes collectively improve the reliability and functionality of the `Select` component within the package.

### Alterations to the declarations of exported or public entities

#### `select.test.tsx`

- **Before:**
  ```typescript
  // Example test case (simplified)
  it('should open the select listbox when clicking the selector button', () => {
    // Test logic
  });
  ```

- **After:**
  ```typescript
  // Example test case with defaultSelectedKeys and interaction testing
  it('should open the select listbox when clicking the selector button', () => {
    render(<Select defaultSelectedKeys={["foo"]} />);
    // Test logic
  });

  it('should close the select listbox when clicking the selector button again', () => {
    render(<Select defaultSelectedKeys={["foo"]} />);
    // Test logic for closing
  });
  ```

#### `use-select.ts`

- **Before:**
  ```typescript
  function useSelect(props) {
    const { triggerRef } = props;
    // Logic to determine if it should close on interact outside
  }
  ```

- **After:**
  ```typescript
  function useSelect(props) {
    const { domRef } = props;
    // Updated logic to determine if it should close on interact outside
  }
  ```

These alterations enhance the functionality and testing robustness of the `Select` component by adding new default behaviors and refining interaction logic.

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 727a229f7aab56cf17e7be830400a1194c8e5684 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

> [!TIP]
> <details>
> <summary>Early access features: enabled</summary>
> 
> We are currently testing the following features in early access:
> 
> - **OpenAI `gpt-4o` model for code reviews and chat**: OpenAI claims that this model is better at understanding and generating code than the previous models. We seek your feedback over the next few weeks before making it generally available.
> 
> Note:
> - You can enable or disable early access features from the CodeRabbit UI or by updating the CodeRabbit configuration file.
> - Please join our [Discord Community](https://discord.com/invite/GsXnASn26c) to provide feedback and report issues.
> - OSS projects are always opted into early access features.
> 
> </details>

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/curvy-students-judge.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/select": patch
+---
+
+fixed select closing issue with selector button (#3276)\n- packages/components/select/__tests__/select.test.tsx (modified, 59 changes)\n  Patch: @@ -564,7 +564,12 @@ describe("Select", () => {
           console.log(JSON.stringify(Object.fromEntries(formData)));
         }}
       >
-        <Select data-testid="select" label="test select" name="select" size="sm">
+        <Select
+          data-testid="select"
+          defaultSelectedKeys={["foo"]}
+          label="test select"
+          name="select"
+        >
           <SelectItem key="foo">foo</SelectItem>
           <SelectItem key="bar">bar</SelectItem>
         </Select>
@@ -574,6 +579,14 @@ describe("Select", () => {
       </form>,
     );
 
+    const submitButton = wrapper.getByTestId("submit-button");
+
+    await act(async () => {
+      await user.click(submitButton);
+    });
+
+    expect(logSpy).toHaveBeenCalledWith(JSON.stringify({select: "foo"}));
+
     const select = wrapper.getByTestId("select");
 
     expect(select).not.toBeNull();
@@ -582,39 +595,59 @@ describe("Select", () => {
       await user.click(select);
     });
 
-    let listbox = wrapper.getByRole("listbox");
+    const listbox = wrapper.getByRole("listbox");
 
     expect(listbox).toBeTruthy();
 
-    let listboxItems = wrapper.getAllByRole("option");
+    const listboxItems = wrapper.getAllByRole("option");
 
     expect(listboxItems.length).toBe(2);
 
     await act(async () => {
-      await user.click(listboxItems[1]);
+      await user.click(listboxItems[0]);
     });
 
-    let submitButton = wrapper.getByTestId("submit-button");
-
     await act(async () => {
       await user.click(submitButton);
     });
 
-    expect(logSpy).toHaveBeenCalledWith(JSON.stringify({select: "bar"}));
+    expect(logSpy).toHaveBeenCalledWith(JSON.stringify({select: ""}));
+  });
 
-    await act(async () => {
-      await user.click(select);
-    });
+  it("should close listbox by clicking selector button again", async () => {
+    const wrapper = render(
+      <Select aria-label="Favorite Animal" data-testid="select" label="Favorite Animal">
+        <SelectItem key="penguin" value="penguin">
+          Penguin
+        </SelectItem>
+        <SelectItem key="zebra" value="zebra">
+          Zebra
+        </SelectItem>
+        <SelectItem key="shark" value="shark">
+          Shark
+        </SelectItem>
+      </Select>,
+    );
+
+    const select = wrapper.getByTestId("select");
+
+    expect(select).not.toBeNull();
 
+    // open the select listbox by clicking selector button
     await act(async () => {
-      await user.click(listboxItems[1]);
+      await userEvent.click(select);
     });
 
+    // assert that the select listbox is open
+    expect(select).toHaveAttribute("aria-expanded", "true");
+
+    // open the select listbox by clicking selector button
     await act(async () => {
-      await user.click(submitButton);
+      await userEvent.click(select);
     });
 
-    expect(logSpy).toHaveBeenCalledWith(JSON.stringify({select: ""}));
+    // assert that the select listbox is closed
+    expect(select).toHaveAttribute("aria-expanded", "false");
   });
 });
 \n- packages/components/select/src/use-select.ts (modified, 4 changes)\n  Patch: @@ -524,7 +524,7 @@ export function useSelect<T extends object>(originalProps: UseSelectProps<T>) {
             : slotsProps.popoverProps?.offset,
         shouldCloseOnInteractOutside: popoverProps?.shouldCloseOnInteractOutside
           ? popoverProps.shouldCloseOnInteractOutside
-          : (element: Element) => ariaShouldCloseOnInteractOutside(element, triggerRef, state),
+          : (element: Element) => ariaShouldCloseOnInteractOutside(element, domRef, state),
       } as PopoverProps;
     },
     [
@@ -544,7 +544,7 @@ export function useSelect<T extends object>(originalProps: UseSelectProps<T>) {
       "data-open": dataAttr(state.isOpen),
       className: slots.selectorIcon({class: classNames?.selectorIcon}),
     }),
-    [slots, classNames?.selectorIcon, state?.isOpen],
+    [slots, classNames?.selectorIcon, state.isOpen],
   );
 
   const getInnerWrapperProps: PropGetter = useCallback(\n
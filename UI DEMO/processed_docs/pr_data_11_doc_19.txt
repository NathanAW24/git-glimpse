Pull Request Number: 2929
Title: refactor: add support for disabling the animation globally
Base Branch: canary
Head Branch: feature/disable-animations-globally
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/2929
State: MERGED
Created At: 2024-05-02T02:20:13Z
Merged At: 2024-05-13T02:13:54Z
Participants: jrgarciadev

Description:
Closes # 
üìù Description

Add a brief description

‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Commits:
- refactor: add support for disabling the animation globally\n- Merge branch 'canary' of github.com:nextui-org/nextui into feature/disable-animations-globally\n- chore(docs): disableAnimation removed from global provider\n- feat(docs): nextui provider api updated, storybook preview adjusted\n- chore(root): fix conflicts\n- chore(theme): button is scalable when disabled, tooltip animation improved\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 99635fcca58a8e3fcbc854b3f220fe137d5fa899

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 38 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/accordion    | Patch |
| @nextui-org/autocomplete | Patch |
| @nextui-org/avatar       | Patch |
| @nextui-org/badge        | Patch |
| @nextui-org/breadcrumbs  | Patch |
| @nextui-org/button       | Patch |
| @nextui-org/calendar     | Patch |
| @nextui-org/card         | Patch |
| @nextui-org/checkbox     | Patch |
| @nextui-org/date-input   | Patch |
| @nextui-org/date-picker  | Patch |
| @nextui-org/dropdown     | Patch |
| @nextui-org/image        | Patch |
| @nextui-org/input        | Patch |
| @nextui-org/link         | Patch |
| @nextui-org/listbox      | Patch |
| @nextui-org/menu         | Patch |
| @nextui-org/modal        | Patch |
| @nextui-org/navbar       | Patch |
| @nextui-org/pagination   | Patch |
| @nextui-org/popover      | Patch |
| @nextui-org/progress     | Patch |
| @nextui-org/radio        | Patch |
| @nextui-org/ripple       | Patch |
| @nextui-org/select       | Patch |
| @nextui-org/skeleton     | Patch |
| @nextui-org/slider       | Patch |
| @nextui-org/snippet      | Patch |
| @nextui-org/switch       | Patch |
| @nextui-org/table        | Patch |
| @nextui-org/tabs         | Patch |
| @nextui-org/tooltip      | Patch |
| @nextui-org/react        | Patch |
| @nextui-org/system       | Patch |
| @nextui-org/theme        | Patch |
| @nextui-org/framer-utils | Patch |
| @nextui-org/user         | Patch |
| @nextui-org/aria-utils   | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/feature/disable-animations-globally?filename=.changeset/strange-countries-shake.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Faccordion%22%3A%20patch%0A%22%40nextui-org%2Fautocomplete%22%3A%20patch%0A%22%40nextui-org%2Favatar%22%3A%20patch%0A%22%40nextui-org%2Fbadge%22%3A%20patch%0A%22%40nextui-org%2Fbreadcrumbs%22%3A%20patch%0A%22%40nextui-org%2Fbutton%22%3A%20patch%0A%22%40nextui-org%2Fcalendar%22%3A%20patch%0A%22%40nextui-org%2Fcard%22%3A%20patch%0A%22%40nextui-org%2Fcheckbox%22%3A%20patch%0A%22%40nextui-org%2Fdate-input%22%3A%20patch%0A%22%40nextui-org%2Fdate-picker%22%3A%20patch%0A%22%40nextui-org%2Fdropdown%22%3A%20patch%0A---%0A%0Arefactor%3A%20add%20support%20for%20disabling%20the%20animation%20globally%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: skip review by coderabbit.ai -->

> [!IMPORTANT]
> ## Auto Review Skipped
> 
> More than 25% of the files skipped due to max files limit. The review is being skipped to prevent a low-quality review.
> 
> 51 files out of 105 files are above the max files limit of 50. Please upgrade to Pro plan to get higher limits.
> 
> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.

<!-- end of auto-generated comment: skip review by coderabbit.ai --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- vercel: [vc]: #PgCTYV1abGQ6hz7tgZ7RIR8l7TIbqU7Rbou+KNmumQI=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi84Qno2VFBZbThvVUxwUVdGNTN0a3dhcXVzZ1hWIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1mZWF0dXJlLWRpc2FibGUtYW5pbWF0aW9ucy00ZjEwOTgtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1kb2NzLXYyLWdpdC1mZWF0dXJlLWRpc2FibGUtYW5pbWF0aW9ucy00ZjEwOTgtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19LHsibmFtZSI6Im5leHR1aS1zdG9yeWJvb2stdjIiLCJyb290RGlyZWN0b3J5IjoicGFja2FnZXMvc3Rvcnlib29rIiwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi9IbmFNbTlmejFQQ2dUZFdDVVhGVTdRVG95TDRYIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZlYXR1cmUtZGlzYWJsZS1hbmltYS1jNGY3MzAtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZlYXR1cmUtZGlzYWJsZS1hbmltYS1jNGY3MzAtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/8Bz6TPYm8oULpQWF53tkwaqusgXV)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-feature-disable-animations-4f1098-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-feature-disable-animations-4f1098-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 5, 2024 7:18pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/HnaMm9fz1PCgTdWCUXFU7QToyL4X)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-feature-disable-anima-c4f730-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-feature-disable-anima-c4f730-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 5, 2024 7:18pm |


\n

Files Changed:
- .changeset/seven-bears-vanish.md (added, 40 changes)\n  Patch: @@ -0,0 +1,40 @@
+---
+"@nextui-org/accordion": patch
+"@nextui-org/autocomplete": patch
+"@nextui-org/avatar": patch
+"@nextui-org/badge": patch
+"@nextui-org/breadcrumbs": patch
+"@nextui-org/button": patch
+"@nextui-org/calendar": patch
+"@nextui-org/card": patch
+"@nextui-org/checkbox": patch
+"@nextui-org/date-input": patch
+"@nextui-org/date-picker": patch
+"@nextui-org/dropdown": patch
+"@nextui-org/image": patch
+"@nextui-org/input": patch
+"@nextui-org/link": patch
+"@nextui-org/listbox": patch
+"@nextui-org/menu": patch
+"@nextui-org/modal": patch
+"@nextui-org/navbar": patch
+"@nextui-org/pagination": patch
+"@nextui-org/popover": patch
+"@nextui-org/progress": patch
+"@nextui-org/radio": patch
+"@nextui-org/ripple": patch
+"@nextui-org/select": patch
+"@nextui-org/skeleton": patch
+"@nextui-org/slider": patch
+"@nextui-org/snippet": patch
+"@nextui-org/switch": patch
+"@nextui-org/table": patch
+"@nextui-org/tabs": patch
+"@nextui-org/tooltip": patch
+"@nextui-org/react": patch
+"@nextui-org/system": patch
+"@nextui-org/theme": patch
+"@nextui-org/framer-utils": patch
+---
+
+Add support for disabling the animations globally.\n- apps/docs/config/routes.json (modified, 6 changes)\n  Patch: @@ -154,7 +154,8 @@
           "key": "badge",
           "title": "Badge",
           "keywords": "badge, markers, status indication, count display",
-          "path": "/docs/components/badge.mdx"
+          "path": "/docs/components/badge.mdx",
+          "updated": true
         },
         {
           "key": "button",
@@ -334,7 +335,8 @@
           "key": "skeleton",
           "title": "Skeleton",
           "keywords": "skeleton, loading state, placeholder, content preview",
-          "path": "/docs/components/skeleton.mdx"
+          "path": "/docs/components/skeleton.mdx",
+          "updated": true
         },
         {
           "key": "snippet",\n- apps/docs/content/docs/components/badge.mdx (modified, 2 changes)\n  Patch: @@ -9,7 +9,7 @@ import {badgeContent} from "@/content/components/badge";
 
 Badges are used as a small numerical value or status descriptor for UI elements.
 
-<ComponentLinks component="badge" rscCompatible />
+<ComponentLinks component="badge" />
 
 ---
 \n- apps/docs/content/docs/components/skeleton.mdx (modified, 2 changes)\n  Patch: @@ -9,7 +9,7 @@ import {skeletonContent} from "@/content/components/skeleton";
 
 Skeleton is a placeholder to show a loading state and the expected shape of a component.
 
-<ComponentLinks component="skeleton" rscCompatible />
+<ComponentLinks component="skeleton" />
 
 ---
 \n- packages/components/accordion/package.json (modified, 2 changes)\n  Patch: @@ -42,7 +42,7 @@
   "peerDependencies": {
     "react": ">=18",
     "react-dom": ">=18",
-    "framer-motion": ">=4.0.0",
+    "framer-motion": ">=10.17.0",
     "@nextui-org/theme": ">=2.1.0",
     "@nextui-org/system": ">=2.0.0"
   },\n- packages/components/accordion/src/use-accordion-item.ts (modified, 6 changes)\n  Patch: @@ -1,4 +1,4 @@
-import {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
+import {HTMLNextUIProps, PropGetter, useProviderContext} from "@nextui-org/system";
 import {useFocusRing} from "@react-aria/focus";
 import {accordionItem} from "@nextui-org/theme";
 import {clsx, callAllHandlers, dataAttr, objectToDeps} from "@nextui-org/shared-utils";
@@ -39,6 +39,8 @@ export type UseAccordionItemProps<T extends object = {}> = Props<T> &
   Omit<AccordionItemBaseProps, "onFocusChange">;
 
 export function useAccordionItem<T extends object = {}>(props: UseAccordionItemProps<T>) {
+  const globalContext = useProviderContext();
+
   const {ref, as, item, onFocusChange} = props;
 
   const {
@@ -55,7 +57,7 @@ export function useAccordionItem<T extends object = {}>(props: UseAccordionItemP
     classNames: classNamesProp = {},
     isDisabled: isDisabledProp = false,
     hideIndicator = false,
-    disableAnimation = false,
+    disableAnimation = globalContext?.disableAnimation ?? false,
     keepContentMounted = false,
     disableIndicatorAnimation = false,
     onPress,\n- packages/components/accordion/src/use-accordion.ts (modified, 6 changes)\n  Patch: @@ -1,8 +1,8 @@
-import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 import type {SelectionBehavior, MultipleSelection} from "@react-types/shared";
 import type {AriaAccordionProps} from "@react-types/accordion";
 import type {AccordionGroupVariantProps} from "@nextui-org/theme";
 
+import {useProviderContext, type HTMLNextUIProps, type PropGetter} from "@nextui-org/system";
 import {ReactRef, filterDOMProps} from "@nextui-org/react-utils";
 import React, {Key, useCallback} from "react";
 import {TreeState, useTreeState} from "@react-stately/tree";
@@ -73,6 +73,8 @@ export type ValuesType<T extends object = {}> = {
 };
 
 export function useAccordion<T extends object>(props: UseAccordionProps<T>) {
+  const globalContext = useProviderContext();
+
   const {
     ref,
     as,
@@ -97,7 +99,7 @@ export function useAccordion<T extends object>(props: UseAccordionProps<T>) {
     isDisabled = false,
     showDivider = true,
     hideIndicator = false,
-    disableAnimation = false,
+    disableAnimation = globalContext?.disableAnimation ?? false,
     disableIndicatorAnimation = false,
     itemClasses,
     ...otherProps\n- packages/components/autocomplete/package.json (modified, 2 changes)\n  Patch: @@ -36,7 +36,7 @@
   "peerDependencies": {
     "react": ">=18",
     "react-dom": ">=18",
-    "framer-motion": ">=4.0.0",
+    "framer-motion": ">=10.17.0",
     "@nextui-org/theme": ">=2.1.0",
     "@nextui-org/system": ">=2.0.0"
   },\n- packages/components/autocomplete/src/use-autocomplete.ts (modified, 8 changes)\n  Patch: @@ -1,6 +1,7 @@
 import type {AutocompleteVariantProps, SlotsToClasses, AutocompleteSlots} from "@nextui-org/theme";
+import type {DOMAttributes, HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 
-import {DOMAttributes, HTMLNextUIProps, mapPropsVariants, PropGetter} from "@nextui-org/system";
+import {mapPropsVariants, useProviderContext} from "@nextui-org/system";
 import {useSafeLayoutEffect} from "@nextui-org/use-safe-layout-effect";
 import {autocomplete} from "@nextui-org/theme";
 import {useFilter} from "@react-aria/i18n";
@@ -120,8 +121,11 @@ export type UseAutocompleteProps<T> = Props<T> &
   AutocompleteVariantProps;
 
 export function useAutocomplete<T extends object>(originalProps: UseAutocompleteProps<T>) {
+  const globalContext = useProviderContext();
+
   const [props, variantProps] = mapPropsVariants(originalProps, autocomplete.variantKeys);
-  const disableAnimation = originalProps.disableAnimation ?? false;
+  const disableAnimation =
+    originalProps.disableAnimation ?? globalContext?.disableAnimation ?? false;
 
   // TODO: Remove disableClearable prop in the next minor release.
   const isClearable =\n- packages/components/avatar/src/use-avatar.ts (modified, 24 changes)\n  Patch: @@ -1,7 +1,7 @@
 import type {AvatarSlots, AvatarVariantProps, SlotsToClasses} from "@nextui-org/theme";
 
 import {avatar} from "@nextui-org/theme";
-import {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
+import {HTMLNextUIProps, PropGetter, useProviderContext} from "@nextui-org/system";
 import {mergeProps} from "@react-aria/utils";
 import {useDOMRef} from "@nextui-org/react-utils";
 import {clsx, safeText, dataAttr} from "@nextui-org/shared-utils";
@@ -96,7 +96,8 @@ interface Props extends HTMLNextUIProps<"span"> {
 export type UseAvatarProps = Props &
   Omit<AvatarVariantProps, "children" | "isInGroup" | "isInGridGroup">;
 
-export function useAvatar(props: UseAvatarProps = {}) {
+export function useAvatar(originalProps: UseAvatarProps = {}) {
+  const globalContext = useProviderContext();
   const groupContext = useAvatarGroupContext();
   const isInGroup = !!groupContext;
 
@@ -124,7 +125,7 @@ export function useAvatar(props: UseAvatarProps = {}) {
     className,
     onError,
     ...otherProps
-  } = props;
+  } = originalProps;
 
   const Component = as || "span";
 
@@ -133,6 +134,8 @@ export function useAvatar(props: UseAvatarProps = {}) {
 
   const {isFocusVisible, isFocused, focusProps} = useFocusRing();
   const {isHovered, hoverProps} = useHover({isDisabled});
+  const disableAnimation =
+    originalProps.disableAnimation ?? globalContext?.disableAnimation ?? false;
 
   const imageStatus = useImage({src, onError, ignoreFallback});
 
@@ -156,9 +159,19 @@ export function useAvatar(props: UseAvatarProps = {}) {
         isBordered,
         isDisabled,
         isInGroup,
+        disableAnimation,
         isInGridGroup: groupContext?.isGrid ?? false,
       }),
-    [color, radius, size, isBordered, isDisabled, isInGroup, groupContext?.isGrid],
+    [
+      color,
+      radius,
+      size,
+      isBordered,
+      isDisabled,
+      disableAnimation,
+      isInGroup,
+      groupContext?.isGrid,
+    ],
   );
 
   const baseStyles = clsx(classNames?.base, className);
@@ -186,11 +199,12 @@ export function useAvatar(props: UseAvatarProps = {}) {
     (props = {}) => ({
       ref: imgRef,
       src: src,
+      disableAnimation,
       "data-loaded": dataAttr(isImgLoaded),
       className: slots.img({class: classNames?.img}),
       ...mergeProps(imgProps, props),
     }),
-    [slots, isImgLoaded, imgProps, src, imgRef],
+    [slots, isImgLoaded, imgProps, disableAnimation, src, imgRef],
   );
 
   return {\n- packages/components/badge/package.json (modified, 5 changes)\n  Patch: @@ -36,14 +36,15 @@
   "peerDependencies": {
     "react": ">=18",
     "react-dom": ">=18",
-    "@nextui-org/theme": ">=2.1.0"
+    "@nextui-org/theme": ">=2.1.0",
+    "@nextui-org/system": ">=2.0.0"
   },
   "dependencies": {
-    "@nextui-org/system-rsc": "workspace:*",
     "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/react-utils": "workspace:*"
   },
   "devDependencies": {
+    "@nextui-org/system": "workspace:*",
     "@nextui-org/theme": "workspace:*",
     "@nextui-org/avatar": "workspace:*",
     "@nextui-org/shared-icons": "workspace:*",\n- packages/components/badge/src/badge.tsx (modified, 2 changes)\n  Patch: @@ -1,4 +1,4 @@
-import {forwardRef} from "@nextui-org/system-rsc";
+import {forwardRef} from "@nextui-org/system";
 
 import {UseBadgeProps, useBadge} from "./use-badge";
 \n- packages/components/badge/src/use-badge.ts (modified, 10 changes)\n  Patch: @@ -1,9 +1,9 @@
 import type {BadgeSlots, BadgeVariantProps, SlotsToClasses} from "@nextui-org/theme";
 import type {ReactNode} from "react";
-import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system-rsc";
+import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 
 import {badge} from "@nextui-org/theme";
-import {mapPropsVariants} from "@nextui-org/system-rsc";
+import {mapPropsVariants, useProviderContext} from "@nextui-org/system";
 import {clsx, objectToDeps} from "@nextui-org/shared-utils";
 import {ReactRef} from "@nextui-org/react-utils";
 import {useMemo} from "react";
@@ -45,6 +45,10 @@ interface Props extends HTMLNextUIProps<"span", "content"> {
 export type UseBadgeProps = Props & BadgeVariantProps;
 
 export function useBadge(originalProps: UseBadgeProps) {
+  const globalContext = useProviderContext();
+  const disableAnimation =
+    originalProps?.disableAnimation ?? globalContext?.disableAnimation ?? false;
+
   const [props, variantProps] = mapPropsVariants(originalProps, badge.variantKeys);
 
   const {as, children, className, content, classNames, ...otherProps} = props;
@@ -87,7 +91,7 @@ export function useBadge(originalProps: UseBadgeProps) {
     content,
     slots,
     classNames,
-    disableAnimation: originalProps?.disableAnimation,
+    disableAnimation,
     isInvisible: originalProps?.isInvisible,
     getBadgeProps,
   };\n- packages/components/badge/tsup.config.ts (modified, 1 changes)\n  Patch: @@ -4,4 +4,5 @@ export default defineConfig({
   clean: true,
   target: "es2019",
   format: ["cjs", "esm"],
+  banner: {js: '"use client";'},
 });\n- packages/components/breadcrumbs/src/use-breadcrumbs.ts (modified, 13 changes)\n  Patch: @@ -2,7 +2,12 @@ import type {BreadcrumbsVariantProps, SlotsToClasses, BreadcrumbsSlots} from "@n
 import type {AriaBreadcrumbsProps} from "@react-types/breadcrumbs";
 
 import {Children, ReactNode, Key, ReactElement} from "react";
-import {HTMLNextUIProps, mapPropsVariants, PropGetter} from "@nextui-org/system";
+import {
+  HTMLNextUIProps,
+  mapPropsVariants,
+  PropGetter,
+  useProviderContext,
+} from "@nextui-org/system";
 import {breadcrumbs} from "@nextui-org/theme";
 import {filterDOMProps, pickChildren, ReactRef, useDOMRef} from "@nextui-org/react-utils";
 import {mergeProps} from "@react-aria/utils";
@@ -103,6 +108,11 @@ export type UseBreadcrumbsProps = Props &
   >;
 
 export function useBreadcrumbs(originalProps: UseBreadcrumbsProps) {
+  const globalContext = useProviderContext();
+
+  const disableAnimation =
+    originalProps?.disableAnimation ?? globalContext?.disableAnimation ?? false;
+
   const [props, variantProps] = mapPropsVariants(originalProps, breadcrumbs.variantKeys);
 
   const {
@@ -117,7 +127,6 @@ export function useBreadcrumbs(originalProps: UseBreadcrumbsProps) {
     itemsAfterCollapse = 2,
     maxItems = 8,
     hideSeparator,
-    disableAnimation,
     renderEllipsis,
     className,
     classNames,\n- packages/components/button/package.json (modified, 2 changes)\n  Patch: @@ -36,7 +36,7 @@
   "peerDependencies": {
     "react": ">=18",
     "react-dom": ">=18",
-    "framer-motion": ">=4.0.0",
+    "framer-motion": ">=10.17.0",
     "@nextui-org/theme": ">=2.1.0",
     "@nextui-org/system": ">=2.0.0"
   },\n- packages/components/button/src/use-button-group.ts (modified, 12 changes)\n  Patch: @@ -3,7 +3,12 @@ import type {ReactRef} from "@nextui-org/react-utils";
 import type {ButtonGroupVariantProps} from "@nextui-org/theme";
 
 import {buttonGroup} from "@nextui-org/theme";
-import {HTMLNextUIProps, PropGetter, mapPropsVariants} from "@nextui-org/system";
+import {
+  HTMLNextUIProps,
+  PropGetter,
+  mapPropsVariants,
+  useProviderContext,
+} from "@nextui-org/system";
 import {useDOMRef} from "@nextui-org/react-utils";
 import {useMemo, useCallback} from "react";
 import {objectToDeps} from "@nextui-org/shared-utils";
@@ -40,6 +45,7 @@ export type UseButtonGroupProps = Props &
   >;
 
 export function useButtonGroup(originalProps: UseButtonGroupProps) {
+  const globalContext = useProviderContext();
   const [props, variantProps] = mapPropsVariants(originalProps, buttonGroup.variantKeys);
 
   const {
@@ -51,9 +57,9 @@ export function useButtonGroup(originalProps: UseButtonGroupProps) {
     variant = "solid",
     radius,
     isDisabled = false,
-    disableAnimation = false,
-    disableRipple = false,
     isIconOnly = false,
+    disableRipple = globalContext?.disableRipple ?? false,
+    disableAnimation = globalContext?.disableAnimation ?? false,
     className,
     ...otherProps
   } = props;\n- packages/components/button/src/use-button.ts (modified, 13 changes)\n  Patch: @@ -1,9 +1,9 @@
 import type {ButtonVariantProps} from "@nextui-org/theme";
 import type {AriaButtonProps} from "@nextui-org/use-aria-button";
-import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 import type {ReactNode} from "react";
 import type {RippleProps} from "@nextui-org/ripple";
 
+import {useProviderContext, type HTMLNextUIProps, type PropGetter} from "@nextui-org/system";
 import {dataAttr} from "@nextui-org/shared-utils";
 import {ReactRef} from "@nextui-org/react-utils";
 import {MouseEventHandler, useCallback} from "react";
@@ -65,6 +65,7 @@ export type UseButtonProps = Props &
 
 export function useButton(props: UseButtonProps) {
   const groupContext = useButtonGroupContext();
+  const globalContext = useProviderContext();
   const isInGroup = !!groupContext;
 
   const {
@@ -76,16 +77,16 @@ export function useButton(props: UseButtonProps) {
     autoFocus,
     className,
     spinner,
+    isLoading = false,
+    disableRipple: disableRippleProp = false,
     fullWidth = groupContext?.fullWidth ?? false,
+    radius = groupContext?.radius,
     size = groupContext?.size ?? "md",
     color = groupContext?.color ?? "default",
     variant = groupContext?.variant ?? "solid",
-    disableAnimation = groupContext?.disableAnimation ?? false,
-    radius = groupContext?.radius,
-    disableRipple = groupContext?.disableRipple ?? false,
+    disableAnimation = groupContext?.disableAnimation ?? globalContext?.disableAnimation ?? false,
     isDisabled: isDisabledProp = groupContext?.isDisabled ?? false,
     isIconOnly = groupContext?.isIconOnly ?? false,
-    isLoading = false,
     spinnerPlacement = "start",
     onPress,
     onClick,
@@ -97,6 +98,8 @@ export function useButton(props: UseButtonProps) {
 
   const domRef = useDOMRef(ref);
 
+  const disableRipple = (disableRippleProp || globalContext?.disableRipple) ?? disableAnimation;
+
   const {isFocusVisible, isFocused, focusProps} = useFocusRing({
     autoFocus,
   });\n- packages/components/calendar/src/use-calendar-base.ts (modified, 15 changes)\n  Patch: @@ -10,15 +10,14 @@ import type {CalendarState, RangeCalendarState} from "@react-stately/calendar";
 import type {RefObject, ReactNode} from "react";
 
 import {Calendar, CalendarDate} from "@internationalized/date";
-import {mapPropsVariants} from "@nextui-org/system";
+import {mapPropsVariants, useProviderContext} from "@nextui-org/system";
 import {useCallback, useMemo} from "react";
 import {calendar} from "@nextui-org/theme";
 import {useControlledState} from "@react-stately/utils";
 import {ReactRef, useDOMRef} from "@nextui-org/react-utils";
 import {useLocale} from "@react-aria/i18n";
 import {clamp, dataAttr, objectToDeps} from "@nextui-org/shared-utils";
 import {mergeProps} from "@react-aria/utils";
-import {useProviderContext} from "@nextui-org/system";
 
 type NextUIBaseProps = Omit<HTMLNextUIProps<"div">, keyof AriaCalendarPropsBase | "onChange">;
 
@@ -182,7 +181,7 @@ export type ContextType<T extends CalendarState | RangeCalendarState> = {
 export function useCalendarBase(originalProps: UseCalendarBasePropsComplete) {
   const [props, variantProps] = mapPropsVariants(originalProps, calendar.variantKeys);
 
-  const providerContext = useProviderContext();
+  const globalContext = useProviderContext();
 
   const {
     ref,
@@ -199,9 +198,9 @@ export function useCalendarBase(originalProps: UseCalendarBasePropsComplete) {
     isHeaderExpanded: isHeaderExpandedProp,
     isHeaderDefaultExpanded,
     onHeaderExpandedChange = () => {},
-    minValue = providerContext?.defaultDates?.minDate ?? new CalendarDate(1900, 1, 1),
-    maxValue = providerContext?.defaultDates?.maxDate ?? new CalendarDate(2099, 12, 31),
-    createCalendar: createCalendarProp = providerContext?.createCalendar ?? null,
+    minValue = globalContext?.defaultDates?.minDate ?? new CalendarDate(1900, 1, 1),
+    maxValue = globalContext?.defaultDates?.maxDate ?? new CalendarDate(2099, 12, 31),
+    createCalendar: createCalendarProp = globalContext?.createCalendar ?? null,
     prevButtonProps: prevButtonPropsProp,
     nextButtonProps: nextButtonPropsProp,
     errorMessage,
@@ -254,7 +253,8 @@ export function useCalendarBase(originalProps: UseCalendarBasePropsComplete) {
     [objectToDeps(variantProps), showMonthAndYearPickers, isHeaderExpanded, className],
   );
 
-  const disableAnimation = originalProps.disableAnimation ?? false;
+  const disableAnimation =
+    originalProps.disableAnimation ?? globalContext?.disableAnimation ?? false;
 
   const commonButtonProps: ButtonProps = {
     size: "sm",
@@ -317,6 +317,7 @@ export function useCalendarBase(originalProps: UseCalendarBasePropsComplete) {
     shouldFilterDOMProps,
     isHeaderExpanded,
     showMonthAndYearPickers,
+    disableAnimation,
     createCalendar: createCalendarProp,
     getPrevButtonProps,
     getNextButtonProps,\n- packages/components/calendar/src/use-calendar.ts (modified, 2 changes)\n  Patch: @@ -39,6 +39,7 @@ export function useCalendar<T extends DateValue>({
     weekdayStyle,
     visibleDuration,
     baseProps,
+    disableAnimation,
     shouldFilterDOMProps,
     isHeaderExpanded,
     visibleMonths,
@@ -73,7 +74,6 @@ export function useCalendar<T extends DateValue>({
     useAriaCalendar(originalProps, state);
 
   const baseStyles = clsx(classNames?.base, className);
-  const disableAnimation = originalProps.disableAnimation ?? false;
 
   const buttonPickerProps: ButtonProps = {
     ...buttonPickerPropsProp,\n- packages/components/calendar/src/use-range-calendar.ts (modified, 2 changes)\n  Patch: @@ -39,6 +39,7 @@ export function useRangeCalendar<T extends DateValue>({
     shouldFilterDOMProps,
     isHeaderExpanded,
     visibleMonths,
+    disableAnimation,
     createCalendar: createCalendarProp,
     baseProps,
     getPrevButtonProps,
@@ -70,7 +71,6 @@ export function useRangeCalendar<T extends DateValue>({
     useAriaRangeCalendar(originalProps, state, domRef);
 
   const baseStyles = clsx(classNames?.base, className);
-  const disableAnimation = originalProps.disableAnimation ?? false;
 
   const getBaseCalendarProps = (props = {}): CalendarBaseProps => {
     return {\n- packages/components/card/package.json (modified, 2 changes)\n  Patch: @@ -36,7 +36,7 @@
   "peerDependencies": {
     "react": ">=18",
     "react-dom": ">=18",
-    "framer-motion": ">=4.0.0",
+    "framer-motion": ">=10.17.0",
     "@nextui-org/theme": ">=2.1.0",
     "@nextui-org/system": ">=2.0.0"
   },\n- packages/components/card/src/use-card.ts (modified, 29 changes)\n  Patch: @@ -9,7 +9,12 @@ import {chain, mergeProps} from "@react-aria/utils";
 import {useFocusRing} from "@react-aria/focus";
 import {useHover} from "@react-aria/interactions";
 import {useAriaButton} from "@nextui-org/use-aria-button";
-import {HTMLNextUIProps, mapPropsVariants, PropGetter} from "@nextui-org/system";
+import {
+  HTMLNextUIProps,
+  mapPropsVariants,
+  PropGetter,
+  useProviderContext,
+} from "@nextui-org/system";
 import {clsx, dataAttr, objectToDeps} from "@nextui-org/shared-utils";
 import {ReactRef, filterDOMProps} from "@nextui-org/react-utils";
 import {useDOMRef} from "@nextui-org/react-utils";
@@ -64,13 +69,14 @@ export type ContextType = {
 };
 
 export function useCard(originalProps: UseCardProps) {
+  const globalContext = useProviderContext();
+
   const [props, variantProps] = mapPropsVariants(originalProps, card.variantKeys);
 
   const {
     ref,
     as,
     children,
-    disableRipple = false,
     onClick,
     onPress,
     autoFocus,
@@ -84,12 +90,16 @@ export function useCard(originalProps: UseCardProps) {
   const Component = as || (originalProps.isPressable ? "button" : "div");
   const shouldFilterDOMProps = typeof Component === "string";
 
+  const disableAnimation =
+    originalProps.disableAnimation ?? globalContext?.disableAnimation ?? false;
+  const disableRipple = originalProps.disableRipple ?? globalContext?.disableRipple ?? false;
+
   const baseStyles = clsx(classNames?.base, className);
 
   const {onClick: onRippleClickHandler, onClear: onClearRipple, ripples} = useRipple();
 
   const handleClick = (e: MouseEvent<HTMLDivElement>) => {
-    if (!originalProps.disableAnimation && !disableRipple && domRef.current) {
+    if (!disableAnimation && !disableRipple && domRef.current) {
       onRippleClickHandler(e);
     }
   };
@@ -119,25 +129,26 @@ export function useCard(originalProps: UseCardProps) {
     () =>
       card({
         ...variantProps,
+        disableAnimation,
       }),
-    [objectToDeps(variantProps)],
+    [objectToDeps(variantProps), disableAnimation],
   );
 
   const context = useMemo<ContextType>(
     () => ({
+      slots,
+      classNames,
+      disableAnimation,
       isDisabled: originalProps.isDisabled,
       isFooterBlurred: originalProps.isFooterBlurred,
-      disableAnimation: originalProps.disableAnimation,
       fullWidth: originalProps.fullWidth,
-      slots,
-      classNames,
     }),
     [
       slots,
       classNames,
       originalProps.isDisabled,
       originalProps.isFooterBlurred,
-      originalProps.disableAnimation,
+      disableAnimation,
       originalProps.fullWidth,
     ],
   );
@@ -194,9 +205,9 @@ export function useCard(originalProps: UseCardProps) {
     children,
     isHovered,
     isPressed,
+    disableAnimation,
     isPressable: originalProps.isPressable,
     isHoverable: originalProps.isHoverable,
-    disableAnimation: originalProps.disableAnimation,
     disableRipple,
     handleClick,
     isFocusVisible,\n- packages/components/checkbox/src/use-checkbox-group.ts (modified, 6 changes)\n  Patch: @@ -1,10 +1,10 @@
 import type {CheckboxGroupSlots, SlotsToClasses} from "@nextui-org/theme";
 import type {AriaCheckboxGroupProps} from "@react-types/checkbox";
 import type {Orientation} from "@react-types/shared";
-import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 import type {ReactRef} from "@nextui-org/react-utils";
 import type {CheckboxGroupProps} from "@react-types/checkbox";
 
+import {useProviderContext, type HTMLNextUIProps, type PropGetter} from "@nextui-org/system";
 import {useCallback, useMemo} from "react";
 import {chain, mergeProps} from "@react-aria/utils";
 import {checkboxGroup} from "@nextui-org/theme";
@@ -68,6 +68,8 @@ export type ContextType = {
 };
 
 export function useCheckboxGroup(props: UseCheckboxGroupProps) {
+  const globalContext = useProviderContext();
+
   const {
     as,
     ref,
@@ -85,7 +87,7 @@ export function useCheckboxGroup(props: UseCheckboxGroupProps) {
     orientation = "vertical",
     lineThrough = false,
     isDisabled = false,
-    disableAnimation = false,
+    disableAnimation = globalContext?.disableAnimation ?? false,
     isReadOnly,
     isRequired,
     onValueChange,\n- packages/components/checkbox/src/use-checkbox.ts (modified, 11 changes)\n  Patch: @@ -1,7 +1,7 @@
 import type {CheckboxVariantProps, CheckboxSlots, SlotsToClasses} from "@nextui-org/theme";
 import type {AriaCheckboxProps} from "@react-types/checkbox";
-import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 
+import {useProviderContext, type HTMLNextUIProps, type PropGetter} from "@nextui-org/system";
 import {ReactNode, Ref, useCallback, useId, useState} from "react";
 import {useMemo, useRef} from "react";
 import {useToggleState} from "@react-stately/toggle";
@@ -72,6 +72,7 @@ export type UseCheckboxProps = Omit<Props, "defaultChecked"> &
   CheckboxVariantProps;
 
 export function useCheckbox(props: UseCheckboxProps = {}) {
+  const globalContext = useProviderContext();
   const groupContext = useCheckboxGroupContext();
   const isInGroup = !!groupContext;
 
@@ -92,7 +93,7 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
     radius = groupContext?.radius,
     lineThrough = groupContext?.lineThrough ?? false,
     isDisabled: isDisabledProp = groupContext?.isDisabled ?? false,
-    disableAnimation = groupContext?.disableAnimation ?? false,
+    disableAnimation = groupContext?.disableAnimation ?? globalContext?.disableAnimation ?? false,
     isInvalid = validationState ? validationState === "invalid" : groupContext?.isInvalid ?? false,
     isIndeterminate = false,
     defaultSelected,
@@ -334,9 +335,9 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
   const getIconProps = useCallback(
     () =>
       ({
-        isSelected: isSelected,
-        isIndeterminate: !!isIndeterminate,
-        disableAnimation: !!disableAnimation,
+        isSelected,
+        isIndeterminate,
+        disableAnimation,
         className: slots.icon({class: classNames?.icon}),
       } as CheckboxIconProps),
     [slots, classNames?.icon, isSelected, isIndeterminate, disableAnimation],\n- packages/components/date-input/src/use-date-input.ts (modified, 15 changes)\n  Patch: @@ -112,9 +112,9 @@ export type UseDateInputProps<T extends DateValue> = Props<T> &
   AriaDateFieldProps<T>;
 
 export function useDateInput<T extends DateValue>(originalProps: UseDateInputProps<T>) {
-  const [props, variantProps] = mapPropsVariants(originalProps, dateInput.variantKeys);
+  const globalContext = useProviderContext();
 
-  const providerContext = useProviderContext();
+  const [props, variantProps] = mapPropsVariants(originalProps, dateInput.variantKeys);
 
   const {
     ref,
@@ -134,16 +134,18 @@ export function useDateInput<T extends DateValue>(originalProps: UseDateInputPro
     descriptionProps: descriptionPropsProp,
     validationBehavior,
     shouldForceLeadingZeros = true,
-    minValue = providerContext?.defaultDates?.minDate ?? new CalendarDate(1900, 1, 1),
-    maxValue = providerContext?.defaultDates?.maxDate ?? new CalendarDate(2099, 12, 31),
-    createCalendar: createCalendarProp = providerContext?.createCalendar ?? null,
+    minValue = globalContext?.defaultDates?.minDate ?? new CalendarDate(1900, 1, 1),
+    maxValue = globalContext?.defaultDates?.maxDate ?? new CalendarDate(2099, 12, 31),
+    createCalendar: createCalendarProp = globalContext?.createCalendar ?? null,
     isInvalid: isInvalidProp = validationState ? validationState === "invalid" : false,
     errorMessage,
   } = props;
 
   const domRef = useDOMRef(ref);
   const inputRef = useDOMRef(inputRefProp);
 
+  const disableAnimation = originalProps.disableAnimation ?? globalContext?.disableAnimation;
+
   const {locale} = useLocale();
 
   const state = useDateFieldState({
@@ -193,10 +195,11 @@ export function useDateInput<T extends DateValue>(originalProps: UseDateInputPro
     () =>
       dateInput({
         ...variantProps,
+        disableAnimation,
         labelPlacement,
         className,
       }),
-    [objectToDeps(variantProps), labelPlacement, className],
+    [objectToDeps(variantProps), disableAnimation, labelPlacement, className],
   );
 
   const getLabelProps: PropGetter = (props) => {\n- packages/components/date-input/src/use-time-input.ts (modified, 10 changes)\n  Patch: @@ -6,7 +6,7 @@ import type {DateInputGroupProps} from "./date-input-group";
 
 import {useLocale} from "@react-aria/i18n";
 import {mergeProps} from "@react-aria/utils";
-import {PropGetter} from "@nextui-org/system";
+import {PropGetter, useProviderContext} from "@nextui-org/system";
 import {HTMLNextUIProps, mapPropsVariants} from "@nextui-org/system";
 import {useDOMRef} from "@nextui-org/react-utils";
 import {useTimeField as useAriaTimeField} from "@react-aria/datepicker";
@@ -73,6 +73,8 @@ export type UseTimeInputProps<T extends TimeValue> = Props<T> &
   Omit<AriaTimeFieldProps<T>, "validationBehavior">;
 
 export function useTimeInput<T extends TimeValue>(originalProps: UseTimeInputProps<T>) {
+  const globalContext = useProviderContext();
+
   const [props, variantProps] = mapPropsVariants(originalProps, dateInput.variantKeys);
 
   const {
@@ -104,12 +106,15 @@ export function useTimeInput<T extends TimeValue>(originalProps: UseTimeInputPro
 
   const {locale} = useLocale();
 
+  const disableAnimation = originalProps.disableAnimation ?? globalContext?.disableAnimation;
+
   const state = useTimeFieldState({
     ...originalProps,
     label,
     locale,
     minValue,
     maxValue,
+
     isInvalid: isInvalidProp,
     shouldForceLeadingZeros,
   });
@@ -150,10 +155,11 @@ export function useTimeInput<T extends TimeValue>(originalProps: UseTimeInputPro
     () =>
       dateInput({
         ...variantProps,
+        disableAnimation,
         labelPlacement,
         className,
       }),
-    [objectToDeps(variantProps), labelPlacement, className],
+    [objectToDeps(variantProps), labelPlacement, disableAnimation, className],
   );
 
   const getLabelProps: PropGetter = (props) => {\n- packages/components/date-picker/src/use-date-picker-base.ts (modified, 7 changes)\n  Patch: @@ -9,7 +9,7 @@ import type {ValueBase} from "@react-types/shared";
 
 import {dateInput, DatePickerVariantProps} from "@nextui-org/theme";
 import {useState} from "react";
-import {HTMLNextUIProps, mapPropsVariants} from "@nextui-org/system";
+import {HTMLNextUIProps, mapPropsVariants, useProviderContext} from "@nextui-org/system";
 import {mergeProps} from "@react-aria/utils";
 import {useDOMRef} from "@nextui-org/react-utils";
 import {dataAttr} from "@nextui-org/shared-utils";
@@ -112,6 +112,8 @@ export type UseDatePickerBaseProps<T extends DateValue> = Props<T> &
   Omit<AriaDatePickerBaseProps<T>, keyof ValueBase<T> | "validate" | "validationBehavior">;
 
 export function useDatePickerBase<T extends DateValue>(originalProps: UseDatePickerBaseProps<T>) {
+  const globalContext = useProviderContext();
+
   const [props, variantProps] = mapPropsVariants(originalProps, dateInput.variantKeys);
 
   const [isCalendarHeaderExpanded, setIsCalendarHeaderExpanded] = useState(false);
@@ -145,7 +147,8 @@ export function useDatePickerBase<T extends DateValue>(originalProps: UseDatePic
   } = props;
 
   const domRef = useDOMRef(ref);
-  const disableAnimation = originalProps.disableAnimation ?? false;
+  const disableAnimation =
+    originalProps.disableAnimation ?? globalContext?.disableAnimation ?? false;
 
   let stringFormatter = useLocalizedStringFormatter(intlMessages) as any;
 \n- packages/components/dropdown/package.json (modified, 2 changes)\n  Patch: @@ -36,7 +36,7 @@
   "peerDependencies": {
     "react": ">=18",
     "react-dom": ">=18",
-    "framer-motion": ">=4.0.0",
+    "framer-motion": ">=10.17.0",
     "@nextui-org/theme": ">=2.1.0",
     "@nextui-org/system": ">=2.0.0"
   },\n- packages/components/dropdown/src/use-dropdown.ts (modified, 6 changes)\n  Patch: @@ -1,8 +1,8 @@
-import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 import type {PopoverProps} from "@nextui-org/popover";
 import type {MenuTriggerType} from "@react-types/menu";
 import type {Ref} from "react";
 
+import {useProviderContext, type HTMLNextUIProps, type PropGetter} from "@nextui-org/system";
 import {useMenuTriggerState} from "@react-stately/menu";
 import {useMenuTrigger} from "@react-aria/menu";
 import {dropdown} from "@nextui-org/theme";
@@ -41,6 +41,8 @@ interface Props extends HTMLNextUIProps<"div"> {
 export type UseDropdownProps = Props & Omit<PopoverProps, "children" | "color" | "variant">;
 
 export function useDropdown(props: UseDropdownProps) {
+  const globalContext = useProviderContext();
+
   const {
     as,
     triggerRef: triggerRefProp,
@@ -54,7 +56,7 @@ export function useDropdown(props: UseDropdownProps) {
     closeOnSelect = true,
     shouldBlockScroll = true,
     classNames: classNamesProp,
-    disableAnimation = false,
+    disableAnimation = globalContext?.disableAnimation ?? false,
     onClose,
     className,
     ...otherProps\n
Pull Request Number: 4220
Title: fix(touch): fixing the selection functionality on touch
Base Branch: canary
Head Branch: macci001/eng-1639
Author: macci001
URL: https://github.com/nextui-org/nextui/pull/4220
State: MERGED
Created At: 2024-12-04T07:43:13Z
Merged At: 2024-12-04T10:57:10Z
Participants: macci001, jrgarciadev, wingkwong

Description:
Closes #4210
üìù Description

‚õ≥Ô∏è Current behavior (updates)

üöÄ New behavior

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


Bug Fixes

Resolved interaction issues for checkbox, switch, and radio components.



New Features

Simplified interaction handling for checkbox, switch, and radio components, enhancing user experience.



Refactor

Removed unnecessary complexity related to press state management, streamlining component functionality.

Commits:
- fix(touch): fixing the selection functionality on touch\n- Merge branch 'canary' of github.com:nextui-org/nextui into macci001/eng-1639\n- fix: radio, checkbox & switch interactions\n

Labels:


Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-1639/theme-switch-canary">ENG-1639 Theme switch - Canary</a></p>\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 5d6426890002eaa37b4a39d65878e2228d66bdb3

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 5 packages</summary>

  | Name                 | Type  |
| -------------------- | ----- |
| @nextui-org/checkbox | Patch |
| @nextui-org/switch   | Patch |
| @nextui-org/radio    | Patch |
| @nextui-org/table    | Patch |
| @nextui-org/react    | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/macci001/eng-1639?filename=.changeset/dull-tigers-learn.md&value=---%0A%22%40nextui-org%2Fcheckbox%22%3A%20patch%0A%22%40nextui-org%2Fradio%22%3A%20patch%0A%22%40nextui-org%2Fswitch%22%3A%20patch%0A---%0A%0Afix(touch)%3A%20fixing%20the%20selection%20functionality%20on%20touch%0A)

\n- vercel: [vc]: #+WX3xhQT+RXbY7+7SAGTbIOtzJPM3NrK0X74AvIqvn4=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9EWUtidVBTQjVNVnNaMjZDQWlDTnNiUmlFSjFFIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1tYWNjaTAwMS1lbmctMTYzOS1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LW1hY2NpMDAxLWVuZy0xNjM5LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1tYWNjaTAwMS1lbmctMTYzOS1uZXh0dWktb3JnLnZlcmNlbC5hcHAifSwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi9INzFCekhLTGY3RGMxVXNTOFBBeG91dzVMc21rIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LW1hY2NpMDAxLWVuZy0xNjM5LW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCJ9XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/DYKbuPSB5MVsZ26CAiCNsbRiEJ1E)) | [Visit Preview](https://nextui-docs-v2-git-macci001-eng-1639-nextui-org.vercel.app) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-macci001-eng-1639-nextui-org.vercel.app?via=pr-comment-feedback-link) | Dec 4, 2024 10:58am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/H71BzHKLf7Dc1UsS8PAxouw5Lsmk)) | [Visit Preview](https://nextui-storybook-v2-git-macci001-eng-1639-nextui-org.vercel.app) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-macci001-eng-1639-nextui-org.vercel.app?via=pr-comment-feedback-link) | Dec 4, 2024 10:58am |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: failure by coderabbit.ai -->

> [!CAUTION]
> ## Review failed
> 
> The pull request is closed.

<!-- end of auto-generated comment: failure by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
This pull request introduces a patch for the `@nextui-org/checkbox`, `@nextui-org/switch`, and `@nextui-org/radio` components, addressing an interaction issue reported in issue #4210. The changes involve the removal of the `usePress` hook and associated state management for keyboard interactions in these components, streamlining their functionality and simplifying the interaction logic.

## Changes

| File Path                               | Change Summary                                                                                       |
|-----------------------------------------|-----------------------------------------------------------------------------------------------------|
| `.changeset/happy-guests-warn.md`     | Patch applied to `@nextui-org/checkbox`, `@nextui-org/switch`, and `@nextui-org/radio` components. |
| `packages/components/checkbox/src/use-checkbox.ts` | Removed `usePress` hook and related state management, simplifying interaction handling.               |
| `packages/components/radio/src/use-radio.ts`      | Removed `usePress` hook, simplified state management, and updated `getBaseProps` method.            |
| `packages/components/switch/src/use-switch.ts`    | Removed `usePress` hook, simplified state management, and updated `getBaseProps` method.            |

## Assessment against linked issues

| Objective                                        | Addressed | Explanation                                       |
|--------------------------------------------------|-----------|--------------------------------------------------|
| Should register click (issue #4210)              | ‚úÖ        |                                                  |

## Possibly related PRs
- **#3301**: Related changes in `use-radio.ts` regarding the removal of the `usePress` hook and simplification of state management.
- **#3552**: Addresses a double-click issue in checkbox, switch, and radio components, relevant to the main PR's focus.
- **#3869**: Changes in label placement in input and select components, aligning with usability improvements in the main PR.
- **#3966**: Modifications to the helper wrapper in the input component, related to enhancing user interaction in form elements.

## Suggested labels
`üëÄ Status: In Review`

## Suggested reviewers
- wingkwong

<!-- walkthrough_end -->

<!-- internal state start -->


<!-- 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= -->

<!-- internal state end -->

---

<details>
<summary>üìú Recent review details</summary>

**Configuration used: .coderabbit.yaml**
**Review profile: CHILL**

<details>
<summary>üì• Commits</summary>

Reviewing files that changed from the base of the PR and between d6ae2cb0dd8a8eddf76edac3011a3fb00521673f and 5d6426890002eaa37b4a39d65878e2228d66bdb3.

</details>

<details>
<summary>üìí Files selected for processing (4)</summary>

* `.changeset/happy-guests-warn.md` (1 hunks)
* `packages/components/checkbox/src/use-checkbox.ts` (3 hunks)
* `packages/components/radio/src/use-radio.ts` (4 hunks)
* `packages/components/switch/src/use-switch.ts` (3 hunks)

</details>

</details>
<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- macci001: - [x] Fix the switch in docs
- [x] Fix tests\n

Files Changed:
- .changeset/happy-guests-warn.md (added, 7 changes)\n  Patch: @@ -0,0 +1,7 @@
+---
+"@nextui-org/checkbox": patch
+"@nextui-org/switch": patch
+"@nextui-org/radio": patch
+---
+
+Fix #4210 radio, checkbox & switch interaction\n- packages/components/checkbox/src/use-checkbox.ts (modified, 34 changes)\n  Patch: @@ -3,12 +3,12 @@ import type {AriaCheckboxProps} from "@react-types/checkbox";
 import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 
 import {useProviderContext} from "@nextui-org/system";
-import {ReactNode, Ref, useCallback, useId, useState} from "react";
+import {ReactNode, Ref, useCallback, useId} from "react";
 import {useMemo, useRef} from "react";
 import {useToggleState} from "@react-stately/toggle";
 import {checkbox} from "@nextui-org/theme";
 import {useCallbackRef} from "@nextui-org/use-callback-ref";
-import {useHover, usePress} from "@react-aria/interactions";
+import {useHover} from "@react-aria/interactions";
 import {useFocusRing} from "@react-aria/focus";
 import {mergeProps, chain} from "@react-aria/utils";
 import {__DEV__, warn, clsx, dataAttr, safeAriaLabel} from "@nextui-org/shared-utils";
@@ -182,38 +182,15 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
 
   const toggleState = useToggleState(ariaCheckboxProps);
 
-  const {
-    inputProps,
-    isSelected,
-    isDisabled,
-    isReadOnly,
-    isPressed: isPressedKeyboard,
-  } = isInGroup
+  const {inputProps, isSelected, isDisabled, isReadOnly, isPressed} = isInGroup
     ? // eslint-disable-next-line
       useReactAriaCheckboxGroupItem({...ariaCheckboxProps}, groupContext.groupState, inputRef)
     : // eslint-disable-next-line
       useReactAriaCheckbox({...ariaCheckboxProps}, toggleState, inputRef);
 
   const isInteractionDisabled = isDisabled || isReadOnly;
 
-  // Handle press state for full label. Keyboard press state is returned by useCheckbox
-  // since it is handled on the <input> element itself.
-  const [isPressed, setPressed] = useState(false);
-  const {pressProps} = usePress({
-    isDisabled: isInteractionDisabled,
-    onPressStart(e) {
-      if (e.pointerType !== "keyboard") {
-        setPressed(true);
-      }
-    },
-    onPressEnd(e) {
-      if (e.pointerType !== "keyboard") {
-        setPressed(false);
-      }
-    },
-  });
-
-  const pressed = isInteractionDisabled ? false : isPressed || isPressedKeyboard;
+  const pressed = isInteractionDisabled ? false : isPressed;
 
   const {hoverProps, isHovered} = useHover({
     isDisabled: inputProps.disabled,
@@ -277,7 +254,7 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
       "data-readonly": dataAttr(inputProps.readOnly),
       "data-focus-visible": dataAttr(isFocusVisible),
       "data-indeterminate": dataAttr(isIndeterminate),
-      ...mergeProps(hoverProps, pressProps, otherProps),
+      ...mergeProps(hoverProps, otherProps),
     };
   }, [
     slots,
@@ -292,7 +269,6 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
     inputProps.readOnly,
     isFocusVisible,
     hoverProps,
-    pressProps,
     otherProps,
   ]);
 \n- packages/components/radio/src/use-radio.ts (modified, 33 changes)\n  Patch: @@ -1,10 +1,10 @@
 import type {AriaRadioProps} from "@react-types/radio";
 import type {RadioVariantProps, RadioSlots, SlotsToClasses} from "@nextui-org/theme";
 
-import {Ref, ReactNode, useCallback, useId, useState} from "react";
+import {Ref, ReactNode, useCallback, useId} from "react";
 import {useMemo, useRef} from "react";
 import {useFocusRing} from "@react-aria/focus";
-import {useHover, usePress} from "@react-aria/interactions";
+import {useHover} from "@react-aria/interactions";
 import {radio} from "@nextui-org/theme";
 import {useRadio as useReactAriaRadio} from "@react-aria/radio";
 import {HTMLNextUIProps, PropGetter, useProviderContext} from "@nextui-org/system";
@@ -115,12 +115,7 @@ export function useRadio(props: UseRadioProps) {
     descriptionId,
   ]);
 
-  const {
-    inputProps,
-    isDisabled,
-    isSelected,
-    isPressed: isPressedKeyboard,
-  } = useReactAriaRadio(
+  const {inputProps, isDisabled, isSelected, isPressed} = useReactAriaRadio(
     {
       value,
       children: typeof children === "function" ? true : children,
@@ -135,29 +130,11 @@ export function useRadio(props: UseRadioProps) {
   });
 
   const interactionDisabled = isDisabled || inputProps.readOnly;
-
-  // Handle press state for full label. Keyboard press state is returned by useCheckbox
-  // since it is handled on the <input> element itself.
-  const [isPressed, setPressed] = useState(false);
-  const {pressProps} = usePress({
-    isDisabled: interactionDisabled,
-    onPressStart(e) {
-      if (e.pointerType !== "keyboard") {
-        setPressed(true);
-      }
-    },
-    onPressEnd(e) {
-      if (e.pointerType !== "keyboard") {
-        setPressed(false);
-      }
-    },
-  });
-
   const {hoverProps, isHovered} = useHover({
     isDisabled: interactionDisabled,
   });
 
-  const pressed = interactionDisabled ? false : isPressed || isPressedKeyboard;
+  const pressed = interactionDisabled ? false : isPressed;
 
   const slots = useMemo(
     () =>
@@ -189,7 +166,7 @@ export function useRadio(props: UseRadioProps) {
         "data-hover-unselected": dataAttr(isHovered && !isSelected),
         "data-readonly": dataAttr(inputProps.readOnly),
         "aria-required": dataAttr(isRequired),
-        ...mergeProps(hoverProps, pressProps, otherProps),
+        ...mergeProps(hoverProps, otherProps),
       };
     },
     [\n- packages/components/switch/src/use-switch.ts (modified, 32 changes)\n  Patch: @@ -2,11 +2,11 @@ import type {ToggleVariantProps, ToggleSlots, SlotsToClasses} from "@nextui-org/
 import type {AriaSwitchProps} from "@react-aria/switch";
 import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 
-import {ReactNode, Ref, useCallback, useId, useRef, useState} from "react";
+import {ReactNode, Ref, useCallback, useId, useRef} from "react";
 import {mapPropsVariants, useProviderContext} from "@nextui-org/system";
 import {mergeRefs} from "@nextui-org/react-utils";
 import {useSafeLayoutEffect} from "@nextui-org/use-safe-layout-effect";
-import {useHover, usePress} from "@react-aria/interactions";
+import {useHover} from "@react-aria/interactions";
 import {toggle} from "@nextui-org/theme";
 import {chain, mergeProps} from "@react-aria/utils";
 import {clsx, dataAttr, objectToDeps} from "@nextui-org/shared-utils";
@@ -155,36 +155,14 @@ export function useSwitch(originalProps: UseSwitchProps = {}) {
     state.setSelected(isInputRefChecked);
   }, [inputRef.current]);
 
-  const {
-    inputProps,
-    isPressed: isPressedKeyboard,
-    isReadOnly,
-  } = useReactAriaSwitch(ariaSwitchProps, state, inputRef);
+  const {inputProps, isPressed, isReadOnly} = useReactAriaSwitch(ariaSwitchProps, state, inputRef);
   const {focusProps, isFocused, isFocusVisible} = useFocusRing({autoFocus: inputProps.autoFocus});
   const {hoverProps, isHovered} = useHover({
     isDisabled: inputProps.disabled,
   });
 
   const isInteractionDisabled = ariaSwitchProps.isDisabled || isReadOnly;
-
-  // Handle press state for full label. Keyboard press state is returned by useSwitch
-  // since it is handled on the <input> element itself.
-  const [isPressed, setPressed] = useState(false);
-  const {pressProps} = usePress({
-    isDisabled: isInteractionDisabled,
-    onPressStart(e) {
-      if (e.pointerType !== "keyboard") {
-        setPressed(true);
-      }
-    },
-    onPressEnd(e) {
-      if (e.pointerType !== "keyboard") {
-        setPressed(false);
-      }
-    },
-  });
-
-  const pressed = isInteractionDisabled ? false : isPressed || isPressedKeyboard;
+  const pressed = isInteractionDisabled ? false : isPressed;
 
   const isSelected = inputProps.checked;
   const isDisabled = inputProps.disabled;
@@ -202,7 +180,7 @@ export function useSwitch(originalProps: UseSwitchProps = {}) {
 
   const getBaseProps: PropGetter = (props) => {
     return {
-      ...mergeProps(hoverProps, pressProps, otherProps, props),
+      ...mergeProps(hoverProps, otherProps, props),
       ref: domRef,
       className: slots.base({class: clsx(baseStyles, props?.className)}),
       "data-disabled": dataAttr(isDisabled),\n
Pull Request Number: 2561
Title: Upgrade to new react aria version
Base Branch: v.2.3.0
Head Branch: feat/upgrade-react-aria
Author: ryo-manba
URL: https://github.com/nextui-org/nextui/pull/2561
State: MERGED
Created At: 2024-03-21T14:01:18Z
Merged At: 2024-04-14T19:55:39Z
Participants: ryo-manba, jrgarciadev, wingkwong

Description:
Closes # 
üìù Description
I've updated the version of react-aria to include the latest changes as detailed in the 2024-02-13 release.
This update primarily includes modifications to Validation. For more details on these changes, please refer to the following commits and release notes:

adobe/react-spectrum#5288
November 08, 2023 Release ‚Äì React Spectrum Releases

Currently, we only support validationBehavior: 'native', but we plan to support validationBehavior: 'aria' in the future as well.
‚õ≥Ô∏è Current behavior (updates)
üöÄ New behavior
üí£ Is this a breaking change (Yes/No):

No
üìù Additional Information

Commits:
- chore(root): pkg upgraded\n- Merge branch 'main' into feat/upgrade-react-aria\n- fix: type error\n- fix: build error\n- chore: update packages from a~d\n- chore: update packages from i~r\n- chore: update packages from s~u\n- chore: update core, hooks, and utilities packages\n- feat: add support radio group validationBehavior props\n- fix: validationBehavior default to native\n- chore: add validationBehavior props in RadioGroup Stories\n- fix: handling of errorMessage\n- chore: add support validationBehavior autocomplete\n- chore: partial support for validation of select\n- chore: add support validationBehavior checkbox\n- chore: change validationBehavior default to native\n- Merge branch 'v.2.3.0' into feat/upgrade-react-aria\n- fix: validation logic\n- Merge branch 'v.2.3.0' into feat/upgrade-react-aria\n- fix: add default value for autocomplete\n- chore: add example using error message function\n- chore: fixed error displayed in storybook\n- chore: omit validationBehavior from component props\n- Merge branch 'v.2.3.0' into feat/upgrade-react-aria\n- chore: update docs and storybook on validate\n- Merge branch 'v.2.3.0' into feat/upgrade-react-aria\n- fix: pnpm-lock version\n- Merge branch 'v.2.3.0' into feat/upgrade-react-aria\n

Labels:


Comments:
- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: 11eee3de844a9c279f38e06ac1d442912275c99d

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/ryo-manba/nextui/new/feat/upgrade-react-aria?filename=.changeset/grumpy-owls-matter.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Faccordion%22%3A%20patch%0A%22%40nextui-org%2Fautocomplete%22%3A%20patch%0A%22%40nextui-org%2Favatar%22%3A%20patch%0A%22%40nextui-org%2Fbreadcrumbs%22%3A%20patch%0A%22%40nextui-org%2Fbutton%22%3A%20patch%0A%22%40nextui-org%2Fcard%22%3A%20patch%0A%22%40nextui-org%2Fcheckbox%22%3A%20patch%0A%22%40nextui-org%2Fchip%22%3A%20patch%0A%22%40nextui-org%2Fdivider%22%3A%20patch%0A%22%40nextui-org%2Fdropdown%22%3A%20patch%0A%22%40nextui-org%2Finput%22%3A%20patch%0A---%0A%0AUpgrade%20to%20new%20react%20aria%20version%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: skip review by coderabbit.ai -->

> [!IMPORTANT]
> ## Auto Review Skipped
> 
> Auto reviews are disabled on base/target branches other than the default branch. Please add the base/target branch pattern to the list of additional branches to be reviewed in the settings.
> 
> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository.
> 
> To trigger a single review, invoke the `@coderabbitai review` command.
> 

<!-- end of auto-generated comment: skip review by coderabbit.ai --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- vercel: [vc]: #tVQ9/zOMyjxEnY5kZTxp+ILCPGC5xdV1oATmxvdBSyc=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvQ2E1TFM4RExtRnBtTWJaZlV1Nlhrd1dia0FZRCIsInByZXZpZXdVcmwiOiIiLCJuZXh0Q29tbWl0U3RhdHVzIjoiRkFJTEVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6IiJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚ùå Failed ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/Ca5LS8DLmFpmMbZfUu6XkwWbkAYD)) |  |  | Apr 14, 2024 7:56pm |

\n- vercel: @ryo-manba is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%225b15056c093913179ad18759c3136bdafabe6b0a%22%7D%2C%22id%22%3A%22QmW85gQxwr7mpc2xducFDG3VaSnuNQoMGC5on8i5iU21HX%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A2561%2C%22repo%22%3A%22nextui%22%7D).

\n- jrgarciadev: @ryo-manba could you please fix the conflicts?\n- ryo-manba: @jrgarciadev I've resolved the conflicts. please review it!\n

Files Changed:
- apps/docs/content/docs/components/autocomplete.mdx (modified, 3 changes)\n  Patch: @@ -405,7 +405,8 @@ properties to customize the popover, listbox and input components.
 | selectedKey                 | `React.Key`                                                                                                                           | The currently selected key in the collection (controlled).                                                                                                    | -                        |
 | defaultSelectedKey          | `React.Key`                                                                                                                           | The initial selected key in the collection (uncontrolled).                                                                                                    | -                        |
 | disabledKeys                | `all` \| `React.Key[]`                                                                                                                | The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.                                                       | -                        |
-| errorMessage                | `ReactNode`                                                                                                                           | An error message to display below the field.                                                                                                                  | -                        |
+| errorMessage                | `ReactNode` \| `((v: ValidationResult) => ReactNode)`                                                                                 | An error message to display below the field.                                                                                                                  | -                        |
+| validate                    | `(value: { inputValue: string, selectedKey: React.Key }) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                              | Validate input values when committing (e.g. on blur), and return error messages for invalid values.                                                           | -                        |
 | startContent                | `ReactNode`                                                                                                                           | Element to be rendered in the left side of the Autocomplete.                                                                                                  | -                        |
 | endContent                  | `ReactNode`                                                                                                                           | Element to be rendered in the right side of the Autocomplete.                                                                                                 | -                        |
 | autoFocus                   | `boolean`                                                                                                                             | Whether the Autocomplete should be focused on render.                                                                                                         | `false`                  |\n- apps/docs/content/docs/components/checkbox-group.mdx (modified, 11 changes)\n  Patch: @@ -87,14 +87,15 @@ In case you need to customize the checkbox even further, you can use the `useChe
 | size             | `xs` \| `sm` \| `md` \| `lg` \| `xl`                                        | The size of the checkboxes.                                                                                            | `md`       |
 | radius           | `none` \| `base` \| `xs` \| `sm` \| `md` \| `lg` \| `xl` \| `full`          | The radius of the checkboxes.                                                                                          | `md`       |
 | name             | `string`                                                                    | The name of the CheckboxGroup, used when submitting an HTML form.                                                      | -          |
-| label             | `string`                                                                   | The label of the CheckboxGroup.                                                                                        | -          |
+| label            | `string`                                                                    | The label of the CheckboxGroup.                                                                                        | -          |
 | value            | `string[]`                                                                  | The current selected values. (controlled).                                                                             | -          |
 | lineThrough      | `boolean`                                                                   | Whether the checkboxes label should be crossed out.                                                                    | `false`    |
 | defaultValue     | `string[]`                                                                  | The default selected values. (uncontrolled).                                                                           | -          |
 | isInvalid        | `boolean`                                                                   | Whether the checkbox group is invalid.                                                                                 | `false`    |
 | validationState  | `valid` \| `invalid`                                                        | Whether the inputs should display its "valid" or "invalid" visual styling. (**Deprecated**) use **isInvalid** instead. | -          |
 | description      | `ReactNode`                                                                 | The checkbox group description.                                                                                        | -          |
-| errorMessage     | `ReactNode`                                                                 | The checkbox group error message.                                                                                      | -          |
+| errorMessage     | `ReactNode` \| `((v: ValidationResult) => ReactNode)`                       | The checkbox group error message.                                                                                      | -          |
+| validate         | `(value: string[]) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`          | Validate input values when committing (e.g. on blur), and return error messages for invalid values.                    | -          |
 | isDisabled       | `boolean`                                                                   | Whether the checkbox group is disabled.                                                                                | `false`    |
 | isRequired       | `boolean`                                                                   | Whether user checkboxes are required on the input before form submission.                                              | `false`    |
 | isReadOnly       | `boolean`                                                                   | Whether the checkboxes can be selected but not changed by the user.                                                    | -          |
@@ -103,6 +104,6 @@ In case you need to customize the checkbox even further, you can use the `useChe
 
 ### Checkbox Group Events
 
-| Attribute | Type                          | Description                                    |
-| --------- | ----------------------------- | ---------------------------------------------- |
-| onChange  | `((value: string[]) => void)` | Handler that is called when the value changes. |
+| Attribute | Type                        | Description                                    |
+| --------- | --------------------------- | ---------------------------------------------- |
+| onChange  | `(value: string[]) => void` | Handler that is called when the value changes. |\n- apps/docs/content/docs/components/input.mdx (modified, 3 changes)\n  Patch: @@ -192,7 +192,8 @@ In case you need to customize the input even further, you can use the `useInput`
 | defaultValue     | `string`                                                                                                                                                               | The default value of the input (uncontrolled).                                                                        | -         |
 | placeholder      | `string`                                                                                                                                                               | The placeholder of the input.                                                                                         | -         |
 | description      | `ReactNode`                                                                                                                                                            | A description for the input. Provides a hint such as specific requirements for what to choose.                        | -         |
-| errorMessage     | `ReactNode`                                                                                                                                                            | An error message for the input.                                                                                       | -         |
+| errorMessage     | `ReactNode` \| `((v: ValidationResult) => ReactNode)`                                                                                                                  | An error message for the input.                                                                                       | -         |
+| validate         | `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                                                                                                       | Validate input values when committing (e.g. on blur), and return error messages for invalid values.                   | -         |
 | startContent     | `ReactNode`                                                                                                                                                            | Element to be rendered in the left side of the input.                                                                 | -         |
 | endContent       | `ReactNode`                                                                                                                                                            | Element to be rendered in the right side of the input.                                                                | -         |
 | labelPlacement   | `inside` \| `outside` \| `outside-left`                                                                                                                                | The position of the label.                                                                                            | `inside`  |\n- apps/docs/content/docs/components/radio-group.mdx (modified, 3 changes)\n  Patch: @@ -145,7 +145,8 @@ In case you need to customize the radio group even further, you can use the `use
 | value            | `string[]`                                                                  | The current selected value. (controlled).                                                                                                                         | -          |
 | defaultValue     | `string[]`                                                                  | The default selected value. (uncontrolled).                                                                                                                       | -          |
 | description      | `ReactNode`                                                                 | Radio group description .                                                                                                                                         | -          |
-| errorMessage     | `ReactNode`                                                                 | Radio group error message.                                                                                                                                        | -          |
+| errorMessage     | `ReactNode` \| `((v: ValidationResult) => ReactNode)`                       | Radio group error message.                                                                                                                                        | -          |
+| validate         | `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`            | Validate input values when committing (e.g. on blur), and return error messages for invalid values.                                                               | -          |
 | isDisabled       | `boolean`                                                                   | Whether the radio group is disabled.                                                                                                                              | `false`    |
 | isRequired       | `boolean`                                                                   | Whether user checkboxes are required on the input before form submission.                                                                                         | `false`    |
 | isReadOnly       | `boolean`                                                                   | Whether the checkboxes can be selected but not changed by the user.                                                                                               | -          |\n- apps/docs/content/docs/components/select.mdx (modified, 2 changes)\n  Patch: @@ -349,7 +349,7 @@ the popover and listbox components.
 | labelPlacement              | `inside` \| `outside` \| `outside-left`                                                                                                                                                                                | The position of the label.                                                                                             | `inside`           |
 | label                       | `ReactNode`                                                                                                                                                                                                            | The content to display as the label.                                                                                   | -                  |
 | description                 | `ReactNode`                                                                                                                                                                                                            | A description for the select. Provides a hint such as specific requirements for what to choose.                        | -                  |
-| errorMessage                | `ReactNode`                                                                                                                                                                                                            | An error message for the select.                                                                                       | -                  |
+| errorMessage                | `ReactNode` \| `((v: ValidationResult) => ReactNode)`                                                                                                                                                                  | An error message for the select.                                                                                       | -                  |
 | startContent                | `ReactNode`                                                                                                                                                                                                            | Element to be rendered in the left side of the select.                                                                 | -                  |
 | endContent                  | `ReactNode`                                                                                                                                                                                                            | Element to be rendered in the right side of the select.                                                                | -                  |
 | selectorIcon                | `ReactNode`                                                                                                                                                                                                            | Element to be rendered as the selector icon.                                                                           | -                  |\n- apps/docs/content/docs/components/textarea.mdx (modified, 5 changes)\n  Patch: @@ -142,7 +142,8 @@ You can use the `value` and `onValueChange` properties to control the input valu
 | startContent      | `ReactNode`                                                                                                        | Element to be rendered in the left side of the input.                                                                    | -         |
 | endContent        | `ReactNode`                                                                                                        | Element to be rendered in the right side of the input.                                                                   | -         |
 | description       | `ReactNode`                                                                                                        | A description for the textarea. Provides a hint such as specific requirements for what to choose.                        | -         |
-| errorMessage      | `ReactNode`                                                                                                        | An error message for the textarea.                                                                                       | -         |
+| errorMessage      | `ReactNode` \| `((v: ValidationResult) => ReactNode)`                                                              | An error message for the textarea.                                                                                       | -         |
+| validate          | `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                                                   | Validate input values when committing (e.g. on blur), and return error messages for invalid values.                      | -         |
 | labelPlacement    | `inside` \| `outside` \| `outside-left`                                                                            | The position of the label.                                                                                               | `inside`  |
 | fullWidth         | `boolean`                                                                                                          | Whether the textarea should take up the width of its parent.                                                             | `true`    |
 | isRequired        | `boolean`                                                                                                          | Whether user input is required on the textarea before form submission.                                                   | `false`   |
@@ -152,7 +153,7 @@ You can use the `value` and `onValueChange` properties to control the input valu
 | validationState   | `valid` \| `invalid`                                                                                               | Whether the textarea should display its "valid" or "invalid" visual styling. (**Deprecated**) use **isInvalid** instead. | -         |
 | disableAutosize   | `boolean`                                                                                                          | Whether the textarea auto vertically resize should be disabled.                                                          | `false`   |
 | disableAnimation  | `boolean`                                                                                                          | Whether the textarea should be animated.                                                                                 | `false`   |
-| classNames        | `Record<"base"ÔΩú "label"ÔΩú "inputWrapper"ÔΩú "innerWrapper" ÔΩú "input" ÔΩú "description" ÔΩú "errorMessage", string>` | Allows to set custom class names for the checkbox slots.                                                                 | -         |
+| classNames        | `Record<"base"ÔΩú "label"ÔΩú "inputWrapper"ÔΩú "innerWrapper" ÔΩú "input" ÔΩú "description" ÔΩú "errorMessage", string>`   | Allows to set custom class names for the checkbox slots.                                                                 | -         |
 
 ### Input Events
 \n- apps/docs/package.json (modified, 2 changes)\n  Patch: @@ -101,7 +101,7 @@
     "@docusaurus/utils": "2.0.0-beta.3",
     "@next/bundle-analyzer": "^13.4.6",
     "@next/env": "^13.4.12",
-    "@react-types/shared": "3.21.0",
+    "@react-types/shared": "^3.22.0",
     "@tailwindcss/typography": "^0.5.9",
     "@types/canvas-confetti": "^1.4.2",
     "@types/lodash": "^4.14.194",\n- package.json (modified, 2 changes)\n  Patch: @@ -67,7 +67,7 @@
     "@commitlint/config-conventional": "^17.2.0",
     "@react-bootstrap/babel-preset": "^2.1.0",
     "@react-types/link": "^3.4.4",
-    "@react-types/shared": "3.21.0",
+    "@react-types/shared": "^3.22.0",
     "@swc-node/jest": "^1.5.2",
     "@swc/core": "^1.3.35",
     "@swc/jest": "^0.2.24",\n- packages/components/accordion/package.json (modified, 15 changes)\n  Patch: @@ -54,14 +54,13 @@
     "@nextui-org/framer-utils": "workspace:*",
     "@nextui-org/divider": "workspace:*",
     "@nextui-org/use-aria-accordion": "workspace:*",
-    "@nextui-org/use-aria-press": "workspace:*",
-    "@react-aria/interactions": "^3.19.1",
-    "@react-aria/focus": "^3.14.3",
-    "@react-aria/utils": "^3.21.1",
-    "@react-stately/tree": "^3.7.3",
-    "@react-aria/button": "^3.8.4",
-    "@react-types/accordion": "3.0.0-alpha.17",
-    "@react-types/shared": "3.21.0"
+    "@react-aria/interactions": "^3.21.1",
+    "@react-aria/focus": "^3.16.2",
+    "@react-aria/utils": "^3.23.2",
+    "@react-stately/tree": "^3.7.6",
+    "@react-aria/button": "^3.9.3",
+    "@react-types/accordion": "3.0.0-alpha.19",
+    "@react-types/shared": "^3.22.1"
   },
   "devDependencies": {
     "@nextui-org/theme": "workspace:*",\n- packages/components/accordion/src/use-accordion-item.ts (modified, 3 changes)\n  Patch: @@ -7,8 +7,7 @@ import {NodeWithProps} from "@nextui-org/aria-utils";
 import {useReactAriaAccordionItem} from "@nextui-org/use-aria-accordion";
 import {useCallback, useMemo} from "react";
 import {chain, mergeProps} from "@react-aria/utils";
-import {useHover} from "@react-aria/interactions";
-import {usePress} from "@nextui-org/use-aria-press";
+import {useHover, usePress} from "@react-aria/interactions";
 import {TreeState} from "@react-stately/tree";
 
 import {AccordionItemBaseProps} from "./base/accordion-item-base";\n- packages/components/autocomplete/package.json (modified, 20 changes)\n  Patch: @@ -52,15 +52,15 @@
     "@nextui-org/button": "workspace:*",
     "@nextui-org/use-aria-button": "workspace:*",
     "@nextui-org/shared-icons": "workspace:*",
-    "@react-aria/combobox": "^3.7.1",
-    "@react-aria/focus": "^3.14.3",
-    "@react-aria/i18n": "^3.8.4",
-    "@react-aria/interactions": "^3.19.1",
-    "@react-aria/utils": "^3.21.1",
-    "@react-aria/visually-hidden": "^3.8.6",
-    "@react-stately/combobox": "^3.7.1",
-    "@react-types/combobox": "^3.8.1",
-    "@react-types/shared": "3.21.0"
+    "@react-aria/combobox": "^3.8.4",
+    "@react-aria/focus": "^3.16.2",
+    "@react-aria/i18n": "^3.10.2",
+    "@react-aria/interactions": "^3.21.1",
+    "@react-aria/utils": "^3.23.2",
+    "@react-aria/visually-hidden": "^3.8.10",
+    "@react-stately/combobox": "^3.8.2",
+    "@react-types/combobox": "^3.10.1",
+    "@react-types/shared": "^3.22.1"
   },
   "devDependencies": {
     "@nextui-org/theme": "workspace:*",
@@ -69,7 +69,7 @@
     "@nextui-org/chip": "workspace:*",
     "@nextui-org/stories-utils": "workspace:*",
     "@nextui-org/use-infinite-scroll": "workspace:*",
-    "@react-stately/data": "^3.10.3",
+    "@react-stately/data": "^3.11.0",
     "framer-motion": "^10.16.4",
     "clean-package": "2.2.0",
     "react": "^18.0.0",\n- packages/components/autocomplete/src/use-autocomplete.ts (modified, 54 changes)\n  Patch: @@ -3,7 +3,6 @@ import type {AutocompleteVariantProps, SlotsToClasses, AutocompleteSlots} from "
 import {DOMAttributes, HTMLNextUIProps, mapPropsVariants, PropGetter} from "@nextui-org/system";
 import {autocomplete} from "@nextui-org/theme";
 import {useFilter} from "@react-aria/i18n";
-import {useComboBox} from "@react-aria/combobox";
 import {FilterFn, useComboBoxState} from "@react-stately/combobox";
 import {ReactRef, useDOMRef} from "@nextui-org/react-utils";
 import {ReactNode, useCallback, useEffect, useMemo, useRef} from "react";
@@ -16,6 +15,7 @@ import {ScrollShadowProps} from "@nextui-org/scroll-shadow";
 import {chain, mergeProps} from "@react-aria/utils";
 import {ButtonProps} from "@nextui-org/button";
 import {AsyncLoadable, PressEvent} from "@react-types/shared";
+import {useComboBox} from "@react-aria/combobox";
 
 interface Props<T> extends Omit<HTMLNextUIProps<"input">, keyof ComboBoxProps<T>> {
   /**
@@ -110,8 +110,11 @@ interface Props<T> extends Omit<HTMLNextUIProps<"input">, keyof ComboBoxProps<T>
 }
 
 export type UseAutocompleteProps<T> = Props<T> &
-  Omit<InputProps, "children" | "value" | "isClearable" | "defaultValue" | "classNames"> &
-  ComboBoxProps<T> &
+  Omit<
+    InputProps,
+    "children" | "value" | "isClearable" | "defaultValue" | "classNames" | "validationBehavior"
+  > &
+  Omit<ComboBoxProps<T>, "validationBehavior"> &
   AsyncLoadable &
   AutocompleteVariantProps;
 
@@ -154,6 +157,7 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
     allowsCustomValue = false,
     className,
     classNames,
+    errorMessage,
     onOpenChange,
     onClose,
     isReadOnly = false,
@@ -167,6 +171,7 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
     ...originalProps,
     children,
     menuTrigger,
+    validationBehavior: "native",
     shouldCloseOnBlur,
     allowsEmptyCollection,
     defaultFilter: defaultFilter && typeof defaultFilter === "function" ? defaultFilter : contains,
@@ -193,6 +198,27 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
   const inputRef = useDOMRef<HTMLInputElement>(ref);
   const scrollShadowRef = useDOMRef<HTMLElement>(scrollRefProp);
 
+  const {
+    buttonProps,
+    inputProps,
+    listBoxProps,
+    isInvalid: isAriaInvalid,
+    validationDetails,
+    validationErrors,
+  } = useComboBox(
+    {
+      validationBehavior: "native",
+      ...originalProps,
+      inputRef,
+      buttonRef,
+      listBoxRef,
+      popoverRef,
+    },
+    state,
+  );
+
+  const isInvalid = originalProps.isInvalid || isAriaInvalid;
+
   const slotsProps: {
     inputProps: InputProps;
     popoverProps: UseAutocompleteProps<T>["popoverProps"];
@@ -248,7 +274,7 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
         size: "sm",
         variant: "light",
         radius: "full",
-        color: originalProps?.isInvalid ? "danger" : originalProps?.color,
+        color: isInvalid ? "danger" : originalProps?.color,
         isIconOnly: true,
         disableAnimation,
       },
@@ -259,7 +285,7 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
         size: "sm",
         variant: "light",
         radius: "full",
-        color: originalProps?.isInvalid ? "danger" : originalProps?.color,
+        color: isInvalid ? "danger" : originalProps?.color,
         isIconOnly: true,
         disableAnimation,
       },
@@ -290,17 +316,6 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
     }
   }, [isOpen, allowsCustomValue]);
 
-  const {buttonProps, inputProps, listBoxProps} = useComboBox(
-    {
-      ...originalProps,
-      inputRef,
-      buttonRef,
-      listBoxRef,
-      popoverRef,
-    },
-    state,
-  );
-
   const Component = as || "div";
 
   const slots = useMemo(
@@ -328,7 +343,7 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
   );
 
   const getBaseProps: PropGetter = () => ({
-    "data-invalid": dataAttr(originalProps?.isInvalid),
+    "data-invalid": dataAttr(isInvalid),
     "data-open": dataAttr(state.isOpen),
     className: slots.base({class: baseStyles}),
   });
@@ -369,6 +384,11 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
       ...otherProps,
       ...inputProps,
       ...slotsProps.inputProps,
+      isInvalid,
+      errorMessage:
+        typeof errorMessage === "function"
+          ? errorMessage({isInvalid, validationErrors, validationDetails})
+          : errorMessage || validationErrors.join(" "),
       onClick: chain(slotsProps.inputProps.onClick, otherProps.onClick),
     } as unknown as InputProps);
 \n- packages/components/autocomplete/stories/autocomplete.stories.tsx (modified, 37 changes)\n  Patch: @@ -1,3 +1,5 @@
+import type {ValidationResult} from "@react-types/shared";
+
 import React, {Key} from "react";
 import {Meta} from "@storybook/react";
 import {autocomplete, input, button} from "@nextui-org/theme";
@@ -127,7 +129,7 @@ const DynamicTemplate = ({color, variant, ...args}: AutocompleteProps<Animal>) =
   </Autocomplete>
 );
 
-const RequiredTemplate = ({color, variant, ...args}: AutocompleteProps) => {
+const FormTemplate = ({color, variant, ...args}: AutocompleteProps) => {
   return (
     <form
       className="w-full max-w-xs items-start flex flex-col gap-4"
@@ -137,7 +139,6 @@ const RequiredTemplate = ({color, variant, ...args}: AutocompleteProps) => {
       }}
     >
       <Autocomplete
-        isRequired
         color={color}
         label="Favorite Animal"
         name="favorite-animal"
@@ -694,10 +695,11 @@ export const Default = {
 };
 
 export const Required = {
-  render: RequiredTemplate,
+  render: FormTemplate,
 
   args: {
     ...defaultProps,
+    isRequired: true,
   },
 };
 
@@ -812,10 +814,39 @@ export const WithErrorMessage = {
 
   args: {
     ...defaultProps,
+    isInvalid: true,
     errorMessage: "Please select an animal",
   },
 };
 
+export const WithErrorMessageFunction = {
+  render: FormTemplate,
+
+  args: {
+    ...defaultProps,
+    isRequired: true,
+    errorMessage: (value: ValidationResult) => {
+      if (value.validationDetails.valueMissing) {
+        return "Value is required";
+      }
+    },
+  },
+};
+
+export const WithValidation = {
+  render: FormTemplate,
+
+  args: {
+    ...defaultProps,
+    isRequired: true,
+    validate: (value) => {
+      if (value.inputValue === "Cat" || value.selectedKey === "dog") {
+        return "Please select a valid animal";
+      }
+    },
+  },
+};
+
 export const IsInvalid = {
   render: Template,
 \n- packages/components/avatar/package.json (modified, 6 changes)\n  Patch: @@ -43,9 +43,9 @@
     "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/react-utils": "workspace:*",
     "@nextui-org/use-image": "workspace:*",
-    "@react-aria/interactions": "^3.19.1",
-    "@react-aria/focus": "^3.14.3",
-    "@react-aria/utils": "^3.21.1"
+    "@react-aria/interactions": "^3.21.1",
+    "@react-aria/focus": "^3.16.2",
+    "@react-aria/utils": "^3.23.2"
   },
   "devDependencies": {
     "@nextui-org/theme": "workspace:*",\n- packages/components/breadcrumbs/package.json (modified, 10 changes)\n  Patch: @@ -43,11 +43,11 @@
     "@nextui-org/react-utils": "workspace:*",
     "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/shared-icons": "workspace:*",
-    "@react-aria/focus": "^3.14.3",
-    "@react-aria/breadcrumbs": "^3.5.7",
-    "@react-aria/utils": "^3.21.1",
-    "@react-types/breadcrumbs": "^3.7.1",
-    "@react-types/shared": "3.21.0"
+    "@react-aria/focus": "^3.16.2",
+    "@react-aria/breadcrumbs": "^3.5.11",
+    "@react-aria/utils": "^3.23.2",
+    "@react-types/breadcrumbs": "^3.7.3",
+    "@react-types/shared": "^3.22.1"
   },
   "devDependencies": {
     "@nextui-org/theme": "workspace:*",\n- packages/components/button/package.json (modified, 12 changes)\n  Patch: @@ -46,12 +46,12 @@
     "@nextui-org/use-aria-button": "workspace:*",
     "@nextui-org/ripple": "workspace:*",
     "@nextui-org/spinner": "workspace:*",
-    "@react-aria/button": "^3.8.4",
-    "@react-aria/interactions": "^3.19.1",
-    "@react-aria/utils": "^3.21.1",
-    "@react-aria/focus": "^3.14.3",
-    "@react-types/shared": "3.21.0",
-    "@react-types/button": "^3.9.0"
+    "@react-aria/button": "^3.9.3",
+    "@react-aria/interactions": "^3.21.1",
+    "@react-aria/utils": "^3.23.2",
+    "@react-aria/focus": "^3.16.2",
+    "@react-types/shared": "^3.22.1",
+    "@react-types/button": "^3.9.2"
   },
   "devDependencies": {
     "@nextui-org/theme": "workspace:*",\n- packages/components/card/package.json (modified, 10 changes)\n  Patch: @@ -45,11 +45,11 @@
     "@nextui-org/react-utils": "workspace:*",
     "@nextui-org/use-aria-button": "workspace:*",
     "@nextui-org/ripple": "workspace:*",
-    "@react-aria/focus": "^3.14.3",
-    "@react-aria/utils": "^3.21.1",
-    "@react-aria/interactions": "^3.19.1",
-    "@react-aria/button": "^3.8.4",
-    "@react-types/shared": "3.21.0"
+    "@react-aria/focus": "^3.16.2",
+    "@react-aria/utils": "^3.23.2",
+    "@react-aria/interactions": "^3.21.1",
+    "@react-aria/button": "^3.9.3",
+    "@react-types/shared": "^3.22.1"
   },
   "devDependencies": {
     "@nextui-org/theme": "workspace:*",\n- packages/components/checkbox/__tests__/checkbox-group.test.tsx (modified, 53 changes)\n  Patch: @@ -54,7 +54,7 @@ describe("Checkbox.Group", () => {
       <CheckboxGroup
         defaultValue={["sydney"]}
         label="Select cities"
-        onChange={(val) => act(() => (value = val))}
+        onChange={(val) => act(() => (value = val as string[]))}
       >
         <Checkbox data-testid="first-checkbox" value="sydney">
           Sydney
@@ -132,4 +132,55 @@ describe("Checkbox.Group", () => {
     expect(onChange).toHaveBeenCalledTimes(1);
     expect(checked).toEqual(["sydney", "buenos-aires"]);
   });
+
+  describe("validation", () => {
+    let user = userEvent.setup();
+
+    beforeAll(() => {
+      user = userEvent.setup();
+    });
+    describe("validationBehavior=native (default)", () => {
+      it("supports group level isRequired", async () => {
+        let {getAllByRole, getByRole, getByTestId} = render(
+          <form data-testid="form">
+            <CheckboxGroup isRequired label="Agree to the following">
+              <Checkbox value="terms">Terms and conditions</Checkbox>
+              <Checkbox value="cookies">Cookies</Checkbox>
+              <Checkbox value="privacy">Privacy policy</Checkbox>
+            </CheckboxGroup>
+          </form>,
+        );
+
+        let group = getByRole("group");
+
+        expect(group).not.toHaveAttribute("aria-describedby");
+
+        let checkboxes = getAllByRole("checkbox") as HTMLInputElement[];
+
+        for (let input of checkboxes) {
+          expect(input).toHaveAttribute("required");
+          expect(input).not.toHaveAttribute("aria-required");
+          expect(input.validity.valid).toBe(false);
+        }
+
+        act(() => {
+          (getByTestId("form") as HTMLFormElement).checkValidity();
+        });
+
+        expect(group).toHaveAttribute("aria-describedby");
+        expect(document.getElementById(group.getAttribute("aria-describedby")!)).toHaveTextContent(
+          "Constraints not satisfied",
+        );
+
+        await user.click(checkboxes[0]);
+        for (let input of checkboxes) {
+          expect(input).not.toHaveAttribute("required");
+          expect(input).not.toHaveAttribute("aria-required");
+          expect(input.validity.valid).toBe(true);
+        }
+
+        expect(group).not.toHaveAttribute("aria-describedby");
+      });
+    });
+  });
 });\n- packages/components/checkbox/package.json (modified, 19 changes)\n  Patch: @@ -42,16 +42,15 @@
   "dependencies": {
     "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/react-utils": "workspace:*",
-    "@nextui-org/use-aria-press": "workspace:*",
-    "@react-aria/checkbox": "^3.11.2",
-    "@react-aria/focus": "^3.14.3",
-    "@react-aria/interactions": "^3.19.1",
-    "@react-aria/visually-hidden": "^3.8.6",
-    "@react-stately/checkbox": "^3.5.1",
-    "@react-stately/toggle": "^3.6.3",
-    "@react-aria/utils": "^3.21.1",
-    "@react-types/checkbox": "^3.5.2",
-    "@react-types/shared": "3.21.0"
+    "@react-aria/checkbox": "^3.14.1",
+    "@react-aria/focus": "^3.16.2",
+    "@react-aria/interactions": "^3.21.1",
+    "@react-aria/visually-hidden": "^3.8.10",
+    "@react-stately/checkbox": "^3.6.3",
+    "@react-stately/toggle": "^3.7.2",
+    "@react-aria/utils": "^3.23.2",
+    "@react-types/checkbox": "^3.7.1",
+    "@react-types/shared": "^3.22.1"
   },
   "devDependencies": {
     "@nextui-org/theme": "workspace:*",\n- packages/components/checkbox/src/checkbox-group.tsx (modified, 8 changes)\n  Patch: @@ -1,4 +1,5 @@
 import {forwardRef} from "@nextui-org/system";
+import {useMemo} from "react";
 
 import {CheckboxGroupProvider} from "./checkbox-group-context";
 import {UseCheckboxGroupProps, useCheckboxGroup} from "./use-checkbox-group";
@@ -11,6 +12,7 @@ const CheckboxGroup = forwardRef<"div", CheckboxGroupProps>((props, ref) => {
     context,
     label,
     description,
+    isInvalid,
     errorMessage,
     getGroupProps,
     getLabelProps,
@@ -19,14 +21,16 @@ const CheckboxGroup = forwardRef<"div", CheckboxGroupProps>((props, ref) => {
     getErrorMessageProps,
   } = useCheckboxGroup({...props, ref});
 
+  const errorMessageContent = useMemo(() => errorMessage, [isInvalid]);
+
   return (
     <div {...getGroupProps()}>
       {label && <span {...getLabelProps()}>{label}</span>}
       <div {...getWrapperProps()}>
         <CheckboxGroupProvider value={context}>{children}</CheckboxGroupProvider>
       </div>
-      {errorMessage ? (
-        <div {...getErrorMessageProps()}>{errorMessage}</div>
+      {isInvalid && errorMessageContent ? (
+        <div {...getErrorMessageProps()}>{errorMessageContent}</div>
       ) : description ? (
         <div {...getDescriptionProps()}>{description}</div>
       ) : null}\n- packages/components/checkbox/src/checkbox.tsx (modified, 5 changes)\n  Patch: @@ -17,10 +17,7 @@ const Checkbox = forwardRef<"input", CheckboxProps>((props, ref) => {
     getInputProps,
     getIconProps,
     getLabelProps,
-  } = useCheckbox({
-    ...props,
-    ref,
-  });
+  } = useCheckbox({...props, ref});
 
   const clonedIcon =
     typeof icon === "function"\n- packages/components/checkbox/src/use-checkbox-group.ts (modified, 69 changes)\n  Patch: @@ -3,9 +3,10 @@ import type {AriaCheckboxGroupProps} from "@react-types/checkbox";
 import type {Orientation} from "@react-types/shared";
 import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 import type {ReactRef} from "@nextui-org/react-utils";
+import type {CheckboxGroupProps} from "@react-types/checkbox";
 
 import {useCallback, useMemo} from "react";
-import {mergeProps} from "@react-aria/utils";
+import {chain, mergeProps} from "@react-aria/utils";
 import {checkboxGroup} from "@nextui-org/theme";
 import {useCheckboxGroup as useReactAriaCheckboxGroup} from "@react-aria/checkbox";
 import {CheckboxGroupState, useCheckboxGroupState} from "@react-stately/checkbox";
@@ -47,7 +48,7 @@ interface Props extends HTMLNextUIProps<"div"> {
 }
 
 export type UseCheckboxGroupProps = Omit<Props, "onChange"> &
-  AriaCheckboxGroupProps &
+  Omit<AriaCheckboxGroupProps, "validationBehavior"> &
   Partial<
     Pick<
       CheckboxProps,
@@ -83,8 +84,6 @@ export function useCheckboxGroup(props: UseCheckboxGroupProps) {
     lineThrough = false,
     isDisabled = false,
     disableAnimation = false,
-    validationState,
-    isInvalid = validationState === "invalid",
     isReadOnly,
     isRequired,
     onValueChange,
@@ -98,40 +97,48 @@ export function useCheckboxGroup(props: UseCheckboxGroupProps) {
 
   const domRef = useDOMRef(ref);
 
-  const checkboxGroupProps = useMemo(
-    () => ({
-      value,
-      name,
-      "aria-label": safeAriaLabel(otherProps["aria-label"], label),
-      defaultValue,
-      isRequired,
-      isInvalid,
-      isReadOnly,
-      orientation,
-      onChange: onValueChange,
+  const checkboxGroupProps = useMemo<CheckboxGroupProps>(() => {
+    return {
       ...otherProps,
-    }),
-    [
       value,
       name,
-      label,
+      "aria-label": safeAriaLabel(otherProps["aria-label"], label),
       defaultValue,
       isRequired,
       isReadOnly,
-      isInvalid,
       orientation,
-      onValueChange,
-      otherProps["aria-label"],
-      otherProps,
-    ],
-  );
+      validationBehavior: "native",
+      isInvalid: props.isInvalid || props.validationState === "invalid",
+      onChange: chain(props.onChange, onValueChange),
+    };
+  }, [
+    value,
+    name,
+    label,
+    defaultValue,
+    isRequired,
+    isReadOnly,
+    orientation,
+    onValueChange,
+    props.isInvalid,
+    props.validationState,
+    otherProps["aria-label"],
+    otherProps,
+  ]);
 
   const groupState = useCheckboxGroupState(checkboxGroupProps);
 
-  const {labelProps, groupProps, descriptionProps, errorMessageProps} = useReactAriaCheckboxGroup(
-    checkboxGroupProps,
-    groupState,
-  );
+  const {
+    labelProps,
+    groupProps,
+    descriptionProps,
+    errorMessageProps,
+    isInvalid: isAriaInvalid,
+    validationErrors,
+    validationDetails,
+  } = useReactAriaCheckboxGroup(checkboxGroupProps, groupState);
+
+  let isInvalid = props.isInvalid || props.validationState === "invalid" || isAriaInvalid;
 
   const context = useMemo<ContextType>(
     () => ({
@@ -218,7 +225,11 @@ export function useCheckboxGroup(props: UseCheckboxGroupProps) {
     label,
     context,
     description,
-    errorMessage,
+    isInvalid,
+    errorMessage:
+      typeof errorMessage === "function"
+        ? errorMessage({isInvalid, validationErrors, validationDetails})
+        : errorMessage || validationErrors.join(" "),
     getGroupProps,
     getLabelProps,
     getWrapperProps,\n- packages/components/checkbox/src/use-checkbox.ts (modified, 25 changes)\n  Patch: @@ -6,8 +6,7 @@ import {ReactNode, Ref, useCallback, useId, useState} from "react";
 import {useMemo, useRef} from "react";
 import {useToggleState} from "@react-stately/toggle";
 import {checkbox} from "@nextui-org/theme";
-import {useHover} from "@react-aria/interactions";
-import {usePress} from "@nextui-org/use-aria-press";
+import {useHover, usePress} from "@react-aria/interactions";
 import {useFocusRing} from "@react-aria/focus";
 import {chain, mergeProps} from "@react-aria/utils";
 import {useFocusableRef} from "@nextui-org/react-utils";
@@ -68,7 +67,7 @@ interface Props extends Omit<HTMLNextUIProps<"input">, keyof CheckboxVariantProp
 }
 
 export type UseCheckboxProps = Omit<Props, "defaultChecked"> &
-  Omit<AriaCheckboxProps, keyof CheckboxVariantProps | "onChange"> &
+  Omit<AriaCheckboxProps, keyof CheckboxVariantProps | "onChange" | "validationBehavior"> &
   CheckboxVariantProps;
 
 export function useCheckbox(props: UseCheckboxProps = {}) {
@@ -82,7 +81,7 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
     children,
     icon,
     name,
-    isRequired = false,
+    isRequired,
     isReadOnly: isReadOnlyProp = false,
     autoFocus = false,
     isSelected: isSelectedProp,
@@ -97,7 +96,6 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
     isIndeterminate = false,
     defaultSelected,
     classNames,
-    onChange,
     className,
     onValueChange,
     ...otherProps
@@ -120,9 +118,21 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
 
   const Component = as || "label";
 
-  const inputRef = useRef(null);
+  const inputRef = useRef<HTMLInputElement>(null);
   const domRef = useFocusableRef(ref as FocusableRef<HTMLLabelElement>, inputRef);
 
+  // This workaround might become unnecessary once the following issue is resolved
+  // https://github.com/adobe/react-spectrum/issues/5693
+  let onChange = props.onChange;
+
+  if (isInGroup) {
+    const dispatch = () => {
+      groupContext.groupState.resetValidation();
+    };
+
+    onChange = chain(dispatch, onChange);
+  }
+
   const labelId = useId();
 
   const ariaCheckboxProps = useMemo(() => {
@@ -171,11 +181,12 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
         {
           ...ariaCheckboxProps,
           isInvalid,
+          validationBehavior: "native",
         },
         groupContext.groupState,
         inputRef,
       )
-    : useReactAriaCheckbox(ariaCheckboxProps, useToggleState(ariaCheckboxProps), inputRef); // eslint-disable-line
+    : useReactAriaCheckbox({...ariaCheckboxProps, validationBehavior: "native",}, useToggleState(ariaCheckboxProps), inputRef); // eslint-disable-line
 
   const isInteractionDisabled = isDisabled || isReadOnly;
 \n- packages/components/checkbox/stories/checkbox-group.stories.tsx (modified, 69 changes)\n  Patch: @@ -1,6 +1,9 @@
+import type {ValidationResult} from "@react-types/shared";
+
 import React from "react";
 import {Meta} from "@storybook/react";
 import {checkbox} from "@nextui-org/theme";
+import {button} from "@nextui-org/theme";
 
 import {CheckboxGroup, Checkbox, CheckboxGroupProps} from "../src";
 
@@ -78,6 +81,32 @@ const InvalidTemplate = (args: CheckboxGroupProps) => {
   );
 };
 
+const FormTemplate = (args: CheckboxGroupProps) => {
+  return (
+    <form
+      className="flex flex-col items-start gap-4"
+      onSubmit={(e) => {
+        const formData = new FormData(e.currentTarget);
+        const selectedCities = formData.getAll("favorite-cities");
+
+        alert(`Submitted values: ${selectedCities.join(", ")}`);
+        e.preventDefault();
+      }}
+    >
+      <CheckboxGroup {...args} label="Select cities" name="favorite-cities">
+        <Checkbox value="buenos-aires">Buenos Aires</Checkbox>
+        <Checkbox value="sydney">Sydney</Checkbox>
+        <Checkbox value="san-francisco">San Francisco</Checkbox>
+        <Checkbox value="london">London</Checkbox>
+        <Checkbox value="tokyo">Tokyo</Checkbox>
+      </CheckboxGroup>
+      <button className={button({color: "primary"})} type="submit">
+        Submit
+      </button>
+    </form>
+  );
+};
+
 export const Default = {
   render: Template,
 
@@ -153,10 +182,41 @@ export const WithErrorMessage = {
 
   args: {
     ...defaultProps,
+    isInvalid: true,
     errorMessage: "The selected cities cannot be visited at the same time",
   },
 };
 
+export const WithErrorMessageFunction = {
+  render: FormTemplate,
+
+  args: {
+    ...defaultProps,
+    isRequired: true,
+    errorMessage: (value: ValidationResult) => {
+      if (value.validationDetails.valueMissing) {
+        return "At least one option must be selected";
+      }
+    },
+  },
+};
+
+export const WithValidation = {
+  render: FormTemplate,
+
+  args: {
+    ...defaultProps,
+    description: "Please select at least 2 options",
+    validate: (value: string[]) => {
+      if (value.length < 2) {
+        return "You must select at least 2 options";
+      }
+
+      return null;
+    },
+  },
+};
+
 export const DisableAnimation = {
   render: Template,
 
@@ -165,3 +225,12 @@ export const DisableAnimation = {
     disableAnimation: true,
   },
 };
+
+export const IsRequired = {
+  render: FormTemplate,
+
+  args: {
+    ...defaultProps,
+    isRequired: true,
+  },
+};\n- packages/components/checkbox/stories/checkbox.stories.tsx (modified, 29 changes)\n  Patch: @@ -2,6 +2,7 @@ import React from "react";
 import {Meta} from "@storybook/react";
 import {checkbox} from "@nextui-org/theme";
 import {CloseIcon} from "@nextui-org/shared-icons";
+import {button} from "@nextui-org/theme";
 
 import {Checkbox, CheckboxIconProps, CheckboxProps} from "../src";
 
@@ -63,6 +64,25 @@ const ControlledTemplate = (args: CheckboxProps) => {
   );
 };
 
+const FormTemplate = (args: CheckboxProps) => {
+  return (
+    <form
+      className="flex flex-col items-start gap-4"
+      onSubmit={(e) => {
+        alert(`Submitted value: ${e.target["check"].value}`);
+        e.preventDefault();
+      }}
+    >
+      <Checkbox name="check" value="checked" {...args}>
+        Check
+      </Checkbox>
+      <button className={button({color: "primary"})} type="submit">
+        Submit
+      </button>
+    </form>
+  );
+};
+
 export const Default = {
   args: {
     ...defaultProps,
@@ -133,3 +153,12 @@ export const Controlled = {
     ...defaultProps,
   },
 };
+
+export const Required = {
+  render: FormTemplate,
+
+  args: {
+    ...defaultProps,
+    isRequired: true,
+  },
+};\n- packages/components/chip/package.json (modified, 9 changes)\n  Patch: @@ -43,11 +43,10 @@
     "@nextui-org/shared-icons": "workspace:*",
     "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/react-utils": "workspace:*",
-    "@nextui-org/use-aria-press": "workspace:*",
-    "@react-aria/focus": "^3.14.3",
-    "@react-aria/interactions": "^3.19.1",
-    "@react-aria/utils": "^3.21.1",
-    "@react-types/checkbox": "^3.5.2"
+    "@react-aria/focus": "^3.16.2",
+    "@react-aria/interactions": "^3.21.1",
+    "@react-aria/utils": "^3.23.2",
+    "@react-types/checkbox": "^3.7.1"
   },
   "devDependencies": {
     "@nextui-org/theme": "workspace:*",\n- packages/components/chip/src/use-chip.ts (modified, 2 changes)\n  Patch: @@ -3,7 +3,7 @@ import type {ReactNode} from "react";
 
 import {HTMLNextUIProps, mapPropsVariants, PropGetter} from "@nextui-org/system";
 import {mergeProps} from "@react-aria/utils";
-import {usePress} from "@nextui-org/use-aria-press";
+import {usePress} from "@react-aria/interactions";
 import {useFocusRing} from "@react-aria/focus";
 import {chip} from "@nextui-org/theme";
 import {useDOMRef} from "@nextui-org/react-utils";\n- packages/components/divider/package.json (modified, 2 changes)\n  Patch: @@ -42,7 +42,7 @@
     "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/react-rsc-utils": "workspace:*",
     "@nextui-org/system-rsc": "workspace:*",
-    "@react-types/shared": "3.21.0"
+    "@react-types/shared": "^3.22.1"
   },
   "devDependencies": {
     "@nextui-org/theme": "workspace:*",\n- packages/components/dropdown/package.json (modified, 10 changes)\n  Patch: @@ -45,11 +45,11 @@
     "@nextui-org/popover": "workspace:*",
     "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/react-utils": "workspace:*",
-    "@react-aria/menu": "^3.11.1",
-    "@react-aria/utils": "^3.21.1",
-    "@react-stately/menu": "^3.5.6",
-    "@react-aria/focus": "^3.14.3",
-    "@react-types/menu": "^3.9.5"
+    "@react-aria/menu": "^3.13.1",
+    "@react-aria/utils": "^3.23.2",
+    "@react-stately/menu": "^3.6.1",
+    "@react-aria/focus": "^3.16.2",
+    "@react-types/menu": "^3.9.7"
   },
   "devDependencies": {
     "@nextui-org/theme": "workspace:*",\n- packages/components/input/__tests__/input.test.tsx (modified, 2 changes)\n  Patch: @@ -49,7 +49,7 @@ describe("Input", () => {
   });
 
   it("should have aria-describedby when errorMessage is provided", () => {
-    const {container} = render(<Input errorMessage="error text" label="test input" />);
+    const {container} = render(<Input isInvalid errorMessage="error text" label="test input" />);
 
     expect(container.querySelector("input")).toHaveAttribute("aria-describedby");
   });\n
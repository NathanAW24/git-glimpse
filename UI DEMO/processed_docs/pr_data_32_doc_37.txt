Pull Request Number: 14
Title: Feat/button
Base Branch: main
Head Branch: feat/button
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/14
State: MERGED
Created At: 2021-05-08T00:34:37Z
Merged At: 2021-05-08T00:38:48Z
Participants: jrgarciadev, codecov-commenter

Description:
New component added

Commits:
- chore: button improved\n- feat: new button version (flattened)\n- feat: rounded button added\n- chore: add default button color\n- feat: button group added\n- feat: button group improvements\n- chore: test improvement\n- feat: button completed\n

Labels:


Comments:
- vercel: This pull request is being automatically deployed with Vercel ([learn more](https://vercel.link/github-learn-more)).  
To see the status of your deployment, click below or on the icon next to each commit.

🔍 Inspect: [https://vercel.com/jrgarciadev/nextui-storybook/zQTM9GjiS9LpybkD882JJqDEFBjT](https://vercel.com/jrgarciadev/nextui-storybook/zQTM9GjiS9LpybkD882JJqDEFBjT)  
✅ Preview: [https://nextui-storybook-git-feat-button-jrgarciadev.vercel.app](https://nextui-storybook-git-feat-button-jrgarciadev.vercel.app)

\n- codecov-commenter: # [Codecov](https://codecov.io/gh/jrgarciadev/nextui/pull/14?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia) Report
> Merging [#14](https://codecov.io/gh/jrgarciadev/nextui/pull/14?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia) (5b69c3b) into [main](https://codecov.io/gh/jrgarciadev/nextui/commit/1eda85f5083ad28650aa0510c5e51ee21dfedb59?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia) (1eda85f) will **increase** coverage by `1.17%`.
> The diff coverage is `97.56%`.

[![Impacted file tree graph](https://codecov.io/gh/jrgarciadev/nextui/pull/14/graphs/tree.svg?width=650&height=150&src=pr&token=QJF2QKR5N4&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia)](https://codecov.io/gh/jrgarciadev/nextui/pull/14?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia)

```diff
@@            Coverage Diff             @@
##             main      #14      +/-   ##
==========================================
+ Coverage   97.74%   98.92%   +1.17%     
==========================================
  Files          24       32       +8     
  Lines         311      465     +154     
  Branches      101      157      +56     
==========================================
+ Hits          304      460     +156     
- Misses          2        5       +3     
+ Partials        5        0       -5     
```


| [Impacted Files](https://codecov.io/gh/jrgarciadev/nextui/pull/14?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia) | Coverage Δ | |
|---|---|---|
| [...extui/src/components/css-baseline/css-baseline.tsx](https://codecov.io/gh/jrgarciadev/nextui/pull/14/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2Nzcy1iYXNlbGluZS9jc3MtYmFzZWxpbmUudHN4) | `60.00% <ø> (ø)` | |
| [packages/nextui/src/components/user/user-link.tsx](https://codecov.io/gh/jrgarciadev/nextui/pull/14/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL3VzZXIvdXNlci1saW5rLnRzeA==) | `100.00% <ø> (ø)` | |
| [packages/nextui/src/components/button/button.tsx](https://codecov.io/gh/jrgarciadev/nextui/pull/14/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2J1dHRvbi9idXR0b24udHN4) | `94.23% <94.23%> (ø)` | |
| [...xtui/src/components/button/button-group-context.ts](https://codecov.io/gh/jrgarciadev/nextui/pull/14/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2J1dHRvbi9idXR0b24tZ3JvdXAtY29udGV4dC50cw==) | `100.00% <100.00%> (ø)` | |
| [...ages/nextui/src/components/button/button-group.tsx](https://codecov.io/gh/jrgarciadev/nextui/pull/14/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2J1dHRvbi9idXR0b24tZ3JvdXAudHN4) | `100.00% <100.00%> (ø)` | |
| [...kages/nextui/src/components/button/button-icon.tsx](https://codecov.io/gh/jrgarciadev/nextui/pull/14/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2J1dHRvbi9idXR0b24taWNvbi50c3g=) | `100.00% <100.00%> (ø)` | |
| [...es/nextui/src/components/button/button-loading.tsx](https://codecov.io/gh/jrgarciadev/nextui/pull/14/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2J1dHRvbi9idXR0b24tbG9hZGluZy50c3g=) | `100.00% <100.00%> (ø)` | |
| [...kages/nextui/src/components/button/button.drip.tsx](https://codecov.io/gh/jrgarciadev/nextui/pull/14/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2J1dHRvbi9idXR0b24uZHJpcC50c3g=) | `100.00% <100.00%> (ø)` | |
| [packages/nextui/src/components/button/index.ts](https://codecov.io/gh/jrgarciadev/nextui/pull/14/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2J1dHRvbi9pbmRleC50cw==) | `100.00% <100.00%> (ø)` | |
| [packages/nextui/src/components/button/utils.tsx](https://codecov.io/gh/jrgarciadev/nextui/pull/14/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2J1dHRvbi91dGlscy50c3g=) | `100.00% <100.00%> (ø)` | |
| ... and [23 more](https://codecov.io/gh/jrgarciadev/nextui/pull/14/diff?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/jrgarciadev/nextui/pull/14?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/jrgarciadev/nextui/pull/14?src=pr&el=footer&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia). Last update [483fe61...5b69c3b](https://codecov.io/gh/jrgarciadev/nextui/pull/14?src=pr&el=lastupdated&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=Junior+Garcia).
\n

Files Changed:
- package.json (modified, 7 changes)\n  Patch: @@ -14,10 +14,13 @@
         "nextui:test": "yarn workspace @nextui/react test",
         "nextui:test-update": "yarn workspace @nextui/react test-update",
         "test": "yarn nextui:test",
-        "test-update": "yarn nextui:test-update",
+        "test:update": "yarn nextui:test-update",
+        "test:up": "yarn nextui:test-update",
         "coverage": "yarn workspace @nextui/react coverage",
-        "coverage-update": "yarn workspace @nextui/react coverage-update",
+        "coverage:update": "yarn workspace @nextui/react coverage-update",
         "coverage:codecov": "yarn workspace @nextui/react coverage:codecov",
+        "cov:co": "yarn coverage:codecov",
+        "cov:up": "yarn workspace @nextui/react coverage-update",
         "sb": "yarn workspace @nextui/react storybook",
         "build:sb": "yarn workspace @nextui/react build-storybook",
         "start:sb": "yarn workspace @nextui/react start-storybook"\n- packages/nextui/src/components/button/__tests__/__snapshots__/group.test.tsx.snap (added, 32 changes)\n  Patch: @@ -0,0 +1,32 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`ButtonGroup buttons should be displayed vertically 1`] = `"<div class=\\"jsx-3719752608 button-group vertical \\"><button type=\\"button\\" color=\\"default\\" class=\\"jsx-1775237536 button \\"><div class=\\"text\\">action1</div></button><button type=\\"button\\" color=\\"default\\" class=\\"jsx-1775237536 button \\"><div class=\\"text\\">action2</div></button></div>"`;
+
+exports[`ButtonGroup props should be passed to each button 1`] = `"<div class=\\"jsx-3291777475 button-group horizontal \\"><button type=\\"button\\" color=\\"success\\" class=\\"jsx-4001641336 button \\"><div class=\\"text\\">action</div></button></div>"`;
+
+exports[`ButtonGroup props should be passed to each button 2`] = `"<div class=\\"jsx-3291777475 button-group horizontal \\"><button type=\\"button\\" color=\\"success\\" class=\\"jsx-727615426 button \\"><div class=\\"text\\">action</div></button></div>"`;
+
+exports[`ButtonGroup should render correctly 1`] = `"<div class=\\"jsx-3719752608 button-group horizontal \\"><button type=\\"button\\" color=\\"default\\" class=\\"jsx-1775237536 button \\"><div class=\\"text\\">action</div></button></div>"`;
+
+exports[`ButtonGroup should render different variants 1`] = `ReactWrapper {}`;
+
+exports[`ButtonGroup should render different variants 2`] = `
+<NextUI - Button
+  animated={true}
+  auto={false}
+  bordered={false}
+  className=""
+  color="default"
+  disabled={false}
+  flattened={false}
+  htmlType="button"
+  light={false}
+  loaderType="default"
+  loading={true}
+  rounded={false}
+  shadow={false}
+  size="medium"
+>
+  button
+</NextUI - Button>
+`;\n- packages/nextui/src/components/button/__tests__/__snapshots__/icon.test.tsx.snap (added, 7 changes)\n  Patch: @@ -0,0 +1,7 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`ButtonIcon should render correctly 1`] = `"<button type=\\"button\\" color=\\"default\\" class=\\"jsx-2555106444 button \\"><span class=\\"jsx-682278566 icon   \\"><svg></svg></span><div class=\\"jsx-1854098254 text left\\">action</div></button>"`;
+
+exports[`ButtonIcon should work with right 1`] = `"<button type=\\"button\\" color=\\"default\\" class=\\"jsx-2555106444 button \\"><span class=\\"jsx-682278566 icon right  \\"><svg></svg></span><div class=\\"jsx-1854098254 text right\\">action</div></button>"`;
+
+exports[`ButtonIcon should work without text 1`] = `"<button type=\\"button\\" color=\\"default\\" class=\\"jsx-2555106444 button \\"><span class=\\"jsx-682278566 icon right single \\"><svg></svg></span></button>"`;\n- packages/nextui/src/components/button/__tests__/__snapshots__/index.test.tsx.snap (added, 43 changes)\n  Patch: @@ -0,0 +1,43 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`Button should render different variants 1`] = `ReactWrapper {}`;
+
+exports[`Button should render different variants 2`] = `
+<NextUI - Button
+  animated={true}
+  auto={false}
+  bordered={false}
+  className=""
+  color="default"
+  disabled={false}
+  flattened={false}
+  htmlType="button"
+  light={false}
+  loaderType="default"
+  loading={true}
+  rounded={false}
+  shadow={false}
+  size="medium"
+>
+  button
+</NextUI - Button>
+`;
+
+exports[`Button should render empty button correctly 1`] = `
+<NextUI - Button
+  animated={true}
+  auto={false}
+  bordered={false}
+  className=""
+  color="default"
+  disabled={false}
+  flattened={false}
+  htmlType="button"
+  light={false}
+  loaderType="default"
+  loading={false}
+  rounded={false}
+  shadow={false}
+  size="medium"
+/>
+`;\n- packages/nextui/src/components/button/__tests__/group.test.tsx (added, 81 changes)\n  Patch: @@ -0,0 +1,81 @@
+import React from 'react';
+import { mount } from 'enzyme';
+import { Button } from '@components';
+import { nativeEvent } from '@tests/utils';
+
+describe('ButtonGroup', () => {
+  it('should render correctly', () => {
+    const wrapper = mount(
+      <Button.Group>
+        <Button>action</Button>
+      </Button.Group>
+    );
+    expect(wrapper.html()).toMatchSnapshot();
+    expect(() => wrapper.unmount()).not.toThrow();
+  });
+
+  it('props should be passed to each button', () => {
+    const wrapper = mount(
+      <Button.Group size="mini" color="success">
+        <Button>action</Button>
+      </Button.Group>
+    );
+    expect(wrapper.html()).toMatchSnapshot();
+    wrapper.setProps({ flattened: true });
+    expect(wrapper.html()).toMatchSnapshot();
+    expect(() => wrapper.unmount()).not.toThrow();
+  });
+
+  it('should ignore events when group disabled', () => {
+    const handler = jest.fn();
+    const wrapper = mount(
+      <Button.Group>
+        <Button onClick={handler}>action</Button>
+      </Button.Group>
+    );
+    wrapper.find('button').simulate('click', nativeEvent);
+    expect(handler).toHaveBeenCalledTimes(1);
+    wrapper.setProps({ disabled: true });
+    wrapper.find('button').simulate('click', nativeEvent);
+    expect(handler).toHaveBeenCalledTimes(1);
+  });
+
+  it('buttons should be displayed vertically', () => {
+    const wrapper = mount(
+      <Button.Group vertical>
+        <Button>action1</Button>
+        <Button>action2</Button>
+      </Button.Group>
+    );
+    expect(wrapper.html()).toMatchSnapshot();
+    expect(() => wrapper.unmount()).not.toThrow();
+  });
+
+  it('should render different variants', () => {
+    const wrapper = mount(
+      <Button.Group>
+        <Button flattened>button</Button>
+        <Button light color="warning">
+          light
+        </Button>
+        <Button flattened color="success">
+          button
+        </Button>
+        <Button flattened color="warning">
+          button
+        </Button>
+        <Button rounded loading>
+          button
+        </Button>
+        <Button flattened loading>
+          button
+        </Button>
+        <Button shadow>button</Button>
+        <Button auto>button</Button>
+        <Button animated={false}>button</Button>
+      </Button.Group>
+    );
+    expect(wrapper).toMatchSnapshot();
+    expect(<Button loading>button</Button>).toMatchSnapshot();
+  });
+});\n- packages/nextui/src/components/button/__tests__/icon.test.tsx (added, 49 changes)\n  Patch: @@ -0,0 +1,49 @@
+import React from 'react';
+import { mount } from 'enzyme';
+import { Button } from '@components';
+
+const Icon: React.FC<unknown> = () => <svg />;
+
+describe('ButtonIcon', () => {
+  it('should render correctly', () => {
+    const wrapper = mount(<Button icon={<Icon />}>action</Button>);
+    expect(wrapper.html()).toMatchSnapshot();
+    expect(() => wrapper.unmount()).not.toThrow();
+  });
+
+  it('should work with right', () => {
+    const wrapper = mount(<Button iconRight={<Icon />}>action</Button>);
+    expect(wrapper.html()).toMatchSnapshot();
+    expect(() => wrapper.unmount()).not.toThrow();
+  });
+
+  it('should work without text', () => {
+    const wrapper = mount(<Button iconRight={<Icon />} />);
+    const text = wrapper.find('.text');
+    expect(wrapper.html()).toMatchSnapshot();
+    expect(text.length).toBe(0);
+  });
+
+  it('the width of the text should be filled', () => {
+    const autoWrapper = mount(
+      <Button auto icon={<Icon />}>
+        action
+      </Button>
+    );
+    const wrapper = mount(<Button icon={<Icon />}>action</Button>);
+
+    const autoHtml = autoWrapper.find('.text').html();
+    const html = wrapper.find('.text').html();
+    expect(html).not.toEqual(autoHtml);
+
+    const mini = mount(<Button size="mini">action</Button>);
+    const miniIcon = mount(
+      <Button size="mini" icon={<Icon />}>
+        action
+      </Button>
+    );
+    const miniHtml = mini.find('.text').html();
+    const miniIconHtml = miniIcon.find('.text').html();
+    expect(miniHtml).not.toEqual(miniIconHtml);
+  });
+});\n- packages/nextui/src/components/button/__tests__/index.test.tsx (added, 145 changes)\n  Patch: @@ -0,0 +1,145 @@
+import React from 'react';
+import { mount } from 'enzyme';
+import { Button } from '@components';
+import { sleep } from '@tests/utils';
+
+describe('Button', () => {
+  it('should render correctly', () => {
+    const wrapper = mount(<Button>Button</Button>);
+    expect(() => wrapper.unmount()).not.toThrow();
+  });
+
+  it('should support all colors', () => {
+    const wrapper = mount(
+      <div>
+        <Button color="primary" />
+        <Button color="secondary" />
+        <Button color="success" />
+        <Button color="warning" />
+        <Button color="error" />
+        <Button color="gradient" />
+      </div>
+    );
+    expect(() => wrapper.unmount()).not.toThrow();
+  });
+
+  it('should support all sizes', () => {
+    const wrapper = mount(
+      <div>
+        <Button size="mini" />
+        <Button size="small" />
+        <Button size="medium" />
+        <Button size="large" />
+        <Button size="xlarge" />
+      </div>
+    );
+    expect(() => wrapper.unmount()).not.toThrow();
+  });
+
+  it('should render different text', () => {
+    const wrapper = mount(<Button>button</Button>);
+    expect(wrapper.text()).toContain('button');
+
+    wrapper.setProps({
+      children: <span>Hello</span>,
+    });
+    expect(wrapper.text()).toContain('Hello');
+  });
+
+  it('should render empty button correctly', () => {
+    expect(<Button />).toMatchSnapshot();
+  });
+
+  it('should trigger callback function', () => {
+    const WrapperButton = () => {
+      const [state, setState] = React.useState<string>('state1');
+      return <Button onClick={() => setState('state2')}>{state}</Button>;
+    };
+    const wrapper = mount(<WrapperButton />);
+    expect(wrapper.text()).toContain('state1');
+
+    wrapper.simulate('click');
+    expect(wrapper.text()).toContain('state2');
+  });
+
+  it('should ignore events when disabled', () => {
+    const WrapperButton = () => {
+      const [state, setState] = React.useState<string>('state1');
+      return (
+        <Button disabled onClick={() => setState('state2')}>
+          {state}
+        </Button>
+      );
+    };
+    const wrapper = mount(<WrapperButton />);
+    expect(wrapper.text()).toContain('state1');
+
+    wrapper.simulate('click');
+    expect(wrapper.text()).toContain('state1');
+    expect(wrapper.text()).not.toContain('state2');
+  });
+
+  it('should ignore events when loading', () => {
+    const WrapperButton = () => {
+      const [state, setState] = React.useState<string>('state1');
+      return (
+        <Button loading onClick={() => setState('state2')}>
+          {state}
+        </Button>
+      );
+    };
+    const wrapper = mount(<WrapperButton />);
+    wrapper.simulate('click');
+    expect(wrapper.text()).not.toContain('state2');
+  });
+
+  it('should render different variants', () => {
+    const wrapper = mount(
+      <div>
+        <Button flattened>button</Button>
+        <Button light color="warning">
+          light
+        </Button>
+        <Button flattened color="success">
+          button
+        </Button>
+        <Button flattened color="warning">
+          button
+        </Button>
+        <Button rounded loading>
+          button
+        </Button>
+        <Button flattened loading>
+          button
+        </Button>
+        <Button shadow>button</Button>
+        <Button auto>button</Button>
+        <Button animated={false}>button</Button>
+      </div>
+    );
+    expect(wrapper).toMatchSnapshot();
+    expect(<Button loading>button</Button>).toMatchSnapshot();
+  });
+
+  it('should remove expired events', () => {
+    const wrapper = mount(<Button>button</Button>);
+    wrapper.simulate('click');
+    expect(() => wrapper.unmount()).not.toThrow();
+  });
+
+  it('should support loading change with deply', async () => {
+    const wrapper = mount(<Button>button</Button>);
+    wrapper.simulate('click');
+    await sleep(500);
+    wrapper.setProps({ loading: true });
+    await sleep(500);
+    expect(wrapper.find('.loading-container').length).not.toBe(0);
+  });
+
+  it('ref should be forwarded', () => {
+    const ref = React.createRef<HTMLButtonElement>();
+    const wrapper = mount(<Button ref={ref}>action</Button>);
+    expect(wrapper.find('button').getDOMNode()).toEqual(ref.current);
+    expect(() => wrapper.unmount()).not.toThrow();
+  });
+});\n- packages/nextui/src/components/button/button-group-context.ts (added, 29 changes)\n  Patch: @@ -0,0 +1,29 @@
+import React from 'react';
+import { NormalSizes, NormalColors } from '@utils/prop-types';
+
+export interface ButtonGroupConfig {
+  size?: NormalSizes;
+  color?: NormalColors;
+  bordered?: boolean;
+  disabled?: boolean;
+  light?: boolean;
+  flattened?: boolean;
+  loading?: boolean;
+  shadow?: boolean;
+  auto?: boolean;
+  animated?: boolean;
+  rounded?: boolean;
+  isButtonGroup: boolean;
+}
+
+const defaultContext = {
+  isButtonGroup: false,
+  disabled: false,
+};
+
+export const ButtonGroupContext = React.createContext<ButtonGroupConfig>(
+  defaultContext
+);
+
+export const useButtonGroupContext = (): ButtonGroupConfig =>
+  React.useContext<ButtonGroupConfig>(ButtonGroupContext);\n- packages/nextui/src/components/button/button-group.stories.tsx (added, 124 changes)\n  Patch: @@ -0,0 +1,124 @@
+import React from 'react';
+import { Meta } from '@storybook/react';
+import Button from './index';
+
+export default {
+  title: 'General/ButtonGroup',
+  component: Button,
+  decorators: [
+    (Story) => (
+      <div
+        style={{
+          display: 'flex',
+          flexDirection: 'row',
+          flexWrap: 'wrap',
+          maxWidth: '45%',
+        }}
+      >
+        <Story />
+      </div>
+    ),
+  ],
+} as Meta;
+
+export const Default = () => (
+  <Button.Group>
+    <Button>One</Button>
+    <Button>Two</Button>
+    <Button>Three</Button>
+  </Button.Group>
+);
+
+export const Loading = () => (
+  <Button.Group>
+    <Button loading>One</Button>
+    <Button loading loaderType="points">
+      Two
+    </Button>
+    <Button loading loaderType="points-opacity">
+      Three
+    </Button>
+  </Button.Group>
+);
+
+export const Variants = () => (
+  <>
+    <Button.Group color="success">
+      <Button>One</Button>
+      <Button>Two</Button>
+      <Button>Three</Button>
+    </Button.Group>
+    <Button.Group color="error" rounded>
+      <Button>One</Button>
+      <Button>Two</Button>
+      <Button>Three</Button>
+    </Button.Group>
+    <Button.Group bordered>
+      <Button>Action1</Button>
+      <Button>Action2</Button>
+    </Button.Group>
+    <Button.Group color="warning" flattened>
+      <Button>Action1</Button>
+      <Button>Action2</Button>
+    </Button.Group>
+    <Button.Group color="secondary" size="small">
+      <Button>One</Button>
+      <Button>Two</Button>
+      <Button>Three</Button>
+    </Button.Group>
+    <Button.Group color="secondary" light>
+      <Button>One</Button>
+      <Button>Two</Button>
+    </Button.Group>
+  </>
+);
+
+export const Sizes = () => (
+  <>
+    <Button.Group size="mini">
+      <Button>One</Button>
+      <Button>Two</Button>
+    </Button.Group>
+    <Button.Group size="small">
+      <Button>One</Button>
+      <Button>Two</Button>
+      <Button>Three</Button>
+    </Button.Group>
+    <Button.Group size="medium">
+      <Button>One</Button>
+      <Button>Two</Button>
+      <Button>Three</Button>
+    </Button.Group>
+    <Button.Group size="large">
+      <Button>One</Button>
+      <Button>Two</Button>
+      <Button>Three</Button>
+    </Button.Group>
+    <Button.Group size="xlarge">
+      <Button>One</Button>
+      <Button>Two</Button>
+      <Button>Three</Button>
+    </Button.Group>
+  </>
+);
+
+export const Vertical = () => (
+  <>
+    <Button.Group size="small" vertical>
+      <Button>One</Button>
+      <Button>Two</Button>
+      <Button>Three</Button>
+      <Button>Four</Button>
+    </Button.Group>
+  </>
+);
+
+export const Disabled = () => (
+  <>
+    <Button.Group size="small" disabled>
+      <Button>One</Button>
+      <Button>Two</Button>
+      <Button>Three</Button>
+    </Button.Group>
+  </>
+);\n- packages/nextui/src/components/button/button-group.tsx (added, 142 changes)\n  Patch: @@ -0,0 +1,142 @@
+import React, { useMemo } from 'react';
+import useTheme from '@hooks/use-theme';
+import withDefaults from '@utils/with-defaults';
+import { NormalSizes, NormalColors } from '@utils/prop-types';
+import { ButtonGroupContext, ButtonGroupConfig } from './button-group-context';
+import { getButtonRadius, getGroupBorder } from './styles';
+
+interface Props {
+  disabled?: boolean;
+  vertical?: boolean;
+  bordered?: boolean;
+  light?: boolean;
+  flattened?: boolean;
+  loading?: boolean;
+  shadow?: boolean;
+  auto?: boolean;
+  animated?: boolean;
+  rounded?: boolean;
+  size?: NormalSizes;
+  color?: NormalColors;
+  className?: string;
+}
+
+const defaultProps = {
+  disabled: false,
+  vertical: false,
+  bordered: false,
+  light: false,
+  flattened: false,
+  loading: false,
+  shadow: false,
+  auto: false,
+  animated: false,
+  rounded: false,
+  size: 'medium' as NormalSizes,
+  color: 'default' as NormalColors,
+  className: '',
+};
+
+type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props>;
+export type ButtonGroupProps = Props & typeof defaultProps & NativeAttrs;
+
+const ButtonGroup: React.FC<React.PropsWithChildren<ButtonGroupProps>> = (
+  groupProps
+) => {
+  const theme = useTheme();
+  const {
+    disabled,
+    size,
+    color,
+    bordered,
+    light,
+    flattened,
+    loading,
+    shadow,
+    auto,
+    animated,
+    rounded,
+    vertical,
+    children,
+    className,
+    ...props
+  } = groupProps;
+  const initialValue = useMemo<ButtonGroupConfig>(
+    () => ({
+      disabled,
+      size,
+      color,
+      bordered,
+      light,
+      flattened,
+      loading,
+      shadow,
+      auto,
+      animated,
+      rounded,
+      isButtonGroup: true,
+    }),
+    [disabled, size, color, bordered, light, flattened]
+  );
+
+  const { color: borderColor, weight } = useMemo(() => {
+    return getGroupBorder(theme.palette, groupProps);
+  }, [theme, disabled, bordered]);
+
+  const radius = useMemo(() => getButtonRadius(size, rounded), [size, rounded]);
+
+  return (
+    <ButtonGroupContext.Provider value={initialValue}>
+      <div
+        className={`button-group ${
+          vertical ? 'vertical' : 'horizontal'
+        } ${className}`}
+        {...props}
+      >
+        {children}
+        <style jsx>{`
+          .button-group {
+            display: inline-flex;
+            border-radius: ${radius};
+            margin: ${theme.layout.gapQuarter};
+            border: ${weight} solid ${borderColor};
+            background-color: transparent;
+            overflow: hidden;
+            height: min-content;
+          }
+          .vertical {
+            flex-direction: column;
+          }
+          .button-group :global(.button) {
+            border: none;
+          }
+          .button-group :global(.button .text) {
+            top: 0;
+          }
+          .horizontal :global(.button:not(:first-child)) {
+            border-top-left-radius: 0;
+            border-bottom-left-radius: 0;
+            border-left: ${weight} solid ${borderColor};
+          }
+          .horizontal :global(.button:not(:last-child)) {
+            border-top-right-radius: 0;
+            border-bottom-right-radius: 0;
+          }
+          .vertical :global(.button:not(:first-child)) {
+            border-top-left-radius: 0;
+            border-top-right-radius: 0;
+            border-top: ${weight} solid ${borderColor};
+          }
+          .vertical :global(.button:not(:last-child)) {
+            border-bottom-left-radius: 0;
+            border-bottom-right-radius: 0;
+          }
+        `}</style>
+      </div>
+    </ButtonGroupContext.Provider>
+  );
+};
+
+const MemoButtonGroup = React.memo(ButtonGroup);
+
+export default withDefaults(MemoButtonGroup, defaultProps);\n- packages/nextui/src/components/button/button-icon.tsx (added, 66 changes)\n  Patch: @@ -0,0 +1,66 @@
+import React from 'react';
+import withDefaults from '@utils/with-defaults';
+
+interface Props {
+  isRight?: boolean;
+  isSingle?: boolean;
+  className?: string;
+}
+
+const defaultProps = {
+  isRight: false,
+  className: '',
+};
+
+type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props>;
+export type ButtonIconProps = Props & typeof defaultProps & NativeAttrs;
+
+const ButtonIcon: React.FC<React.PropsWithChildren<ButtonIconProps>> = ({
+  isRight,
+  isSingle,
+  children,
+  className,
+  ...props
+}) => {
+  return (
+    <span
+      className={`icon ${isRight ? 'right' : ''} ${
+        isSingle ? 'single' : ''
+      } ${className}`}
+      {...props}
+    >
+      {children}
+      <style jsx>{`
+        .icon {
+          position: absolute;
+          left: var(--geist-ui-button-padding);
+          right: auto;
+          top: 50%;
+          transform: translateY(-50%);
+          display: flex;
+          justify-content: center;
+          align-items: center;
+          color: var(--geist-ui-button-color);
+          z-index: 1;
+        }
+        .right {
+          right: var(--geist-ui-button-padding);
+          left: auto;
+        }
+        .icon :global(svg) {
+          background: transparent;
+          height: calc(var(--geist-ui-button-height) / 2.35);
+          width: calc(var(--geist-ui-button-height) / 2.35);
+        }
+        .single {
+          position: static;
+          transform: none;
+        }
+      `}</style>
+    </span>
+  );
+};
+
+const MemoButtonIcon = React.memo(ButtonIcon);
+
+export default withDefaults(MemoButtonIcon, defaultProps);\n- packages/nextui/src/components/button/button-loading.tsx (added, 54 changes)\n  Patch: @@ -0,0 +1,54 @@
+import React from 'react';
+import withDefaults from '@utils/with-defaults';
+import { NormalSizes, NormalLoaders, NormalColors } from '@utils/prop-types';
+import { Loading } from '@components';
+
+interface Props {
+  color?: NormalColors | string;
+  background?: string | null;
+  size?: NormalSizes;
+  type?: NormalLoaders;
+}
+
+const defaultProps = {
+  size: 'small' as NormalSizes,
+  type: 'default' as NormalLoaders,
+};
+
+export type ButtonLoadingProps = Props & typeof defaultProps;
+
+const ButtonLoading: React.FC<React.PropsWithChildren<ButtonLoadingProps>> = ({
+  color,
+  size,
+  type,
+  background,
+  ...props
+}) => {
+  return (
+    <div className="button-loading" {...props}>
+      <Loading
+        size={size}
+        color={color}
+        gradientBackground={background}
+        type={type}
+      />
+      <style jsx>{`
+        .button-loading {
+          top: 0;
+          left: 0;
+          right: 0;
+          bottom: 0;
+          z-index: 2;
+          position: absolute;
+          display: flex;
+          justify-content: center;
+          align-items: center;
+          background-color: var(--next-ui-button-bg);
+        }
+      `}</style>
+    </div>
+  );
+};
+const MemoButtonLoading = React.memo(ButtonLoading);
+
+export default withDefaults(MemoButtonLoading, defaultProps);\n- packages/nextui/src/components/button/button.drip.tsx (added, 86 changes)\n  Patch: @@ -0,0 +1,86 @@
+import React, { useEffect, useRef } from 'react';
+import withDefaults from '@utils/with-defaults';
+
+interface Props {
+  x: number;
+  y: number;
+  onCompleted: () => void;
+  color: string;
+}
+
+const defaultProps = {
+  x: 0,
+  y: 0,
+};
+
+export type ButtonDripProps = Props & typeof defaultProps;
+
+const ButtonDrip: React.FC<ButtonDripProps> = ({
+  x,
+  y,
+  color,
+  onCompleted,
+  ...props
+}) => {
+  const dripRef = useRef<HTMLDivElement>(null);
+  const top = Number.isNaN(+y) ? 0 : y - 10;
+  const left = Number.isNaN(+x) ? 0 : x - 10;
+
+  useEffect(() => {
+    if (!dripRef.current) return;
+    dripRef.current.addEventListener('animationend', onCompleted);
+    return () => {
+      if (!dripRef.current) return;
+      dripRef.current.removeEventListener('animationend', onCompleted);
+    };
+  });
+
+  return (
+    <div ref={dripRef} className="drip" {...props}>
+      <svg width="20" height="20" viewBox="0 0 20 20" style={{ top, left }}>
+        <g stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
+          <g fill={color}>
+            <rect width="100%" height="100%" rx="10" />
+          </g>
+        </g>
+      </svg>
+
+      <style jsx>{`
+        .drip {
+          position: absolute;
+          left: 0;
+          right: 0;
+          top: 0;
+          bottom: 0;
+        }
+        svg {
+          position: absolute;
+          animation: 300ms ease-in expand;
+          animation-fill-mode: forwards;
+          width: 1rem;
+          height: 1rem;
+        }
+        @keyframes expand {
+          0% {
+            opacity: 0;
+            transform: scale(1);
+          }
+          30% {
+            opacity: 1;
+          }
+          80% {
+            opacity: 0.5;
+          }
+          100% {
+            transform: scale(28);
+            opacity: 0;
+          }
+        }
+      `}</style>
+    </div>
+  );
+};
+
+const MemoButtonDrip = React.memo<ButtonDripProps>(ButtonDrip);
+
+export default withDefaults(MemoButtonDrip, defaultProps);\n- packages/nextui/src/components/button/button.stories.tsx (added, 228 changes)\n  Patch: @@ -0,0 +1,228 @@
+import React from 'react';
+import { Meta } from '@storybook/react';
+import Button from './index';
+import { Spacer } from '@components';
+import { Lock, Notification, User, Camera, Activity } from '@utils/icons';
+import useTheme from '@hooks/use-theme';
+
+export default {
+  title: 'General/Button',
+  component: Button,
+  decorators: [
+    (Story) => (
+      <div
+        style={{
+          display: 'flex',
+          flexDirection: 'column',
+        }}
+      >
+        <Story />
+      </div>
+    ),
+  ],
+} as Meta;
+
+export const Default = () => <Button>Action</Button>;
+
+export const Colors = () => (
+  <>
+    <Button color="primary">Primary</Button>
+    <Spacer y={0.5} />
+    <Button color="secondary">Secondary</Button>
+    <Spacer y={0.5} />
+    <Button color="success">Success</Button>
+    <Spacer y={0.5} />
+    <Button color="warning">Warning</Button>
+    <Spacer y={0.5} />
+    <Button color="error">Error</Button>
+    <Spacer y={0.5} />
+    <Button color="gradient">Gradient</Button>
+  </>
+);
+
+export const Loading = () => (
+  <>
+    <Button loading loaderType="default">
+      Action
+    </Button>
+    <Spacer y={0.5} />
+    <Button loading loaderType="spinner">
+      Action
+    </Button>
+    <Spacer y={0.5} />
+    <Button loading loaderType="points">
+      Action
+    </Button>
+    <Spacer y={0.5} />
+    <Button loading loaderType="points-opacity">
+      Action
+    </Button>
+    <Spacer y={0.5} />
+    <Button loading loaderType="gradient">
+      Action
+    </Button>
+  </>
+);
+
+export const Disabled = () => <Button disabled>Action</Button>;
+
+export const Shadow = () => (
+  <Button shadow color="secondary">
+    Shadow
+  </Button>
+);
+
+export const Bordered = () => (
+  <>
+    <Button color="primary" bordered>
+      Primary
+    </Button>
+    <Spacer y={0.5} />
+    <Button color="secondary" bordered>
+      Secondary
+    </Button>
+    <Spacer y={0.5} />
+    <Button color="success" bordered>
+      Success
+    </Button>
+    <Spacer y={0.5} />
+    <Button color="warning" bordered>
+      Warning
+    </Button>
+    <Spacer y={0.5} />
+    <Button color="error" bordered>
+      Error
+    </Button>
+  </>
+);
+
+export const Flattened = () => (
+  <>
+    <Button color="primary" flattened>
+      Primary
+    </Button>
+    <Spacer y={0.5} />
+    <Button color="secondary" flattened>
+      Secondary
+    </Button>
+    <Spacer y={0.5} />
+    <Button color="success" flattened>
+      Success
+    </Button>
+    <Spacer y={0.5} />
+    <Button color="warning" flattened>
+      Warning
+    </Button>
+    <Spacer y={0.5} />
+    <Button color="error" flattened>
+      Error
+    </Button>
+  </>
+);
+
+export const Rounded = () => (
+  <>
+    <Button color="primary" rounded>
+      Primary
+    </Button>
+    <Spacer y={0.5} />
+    <Button color="secondary" rounded>
+      Secondary
+    </Button>
+    <Spacer y={0.5} />
+    <Button color="success" rounded>
+      Success
+    </Button>
+    <Spacer y={0.5} />
+    <Button color="warning" rounded>
+      Warning
+    </Button>
+    <Spacer y={0.5} />
+    <Button color="error" rounded>
+      Error
+    </Button>
+    <Spacer y={0.5} />
+    <Button color="gradient" rounded>
+      Action
+    </Button>
+  </>
+);
+
+export const Light = () => (
+  <>
+    <Button light>Default</Button>
+    <Spacer y={0.5} />
+    <Button color="primary" light>
+      Primary
+    </Button>
+    <Spacer y={0.5} />
+    <Button color="secondary" light>
+      Secondary
+    </Button>
+    <Spacer y={0.5} />
+    <Button color="success" light>
+      Success
+    </Button>
+    <Spacer y={0.5} />
+    <Button color="warning" light>
+      Warning
+    </Button>
+    <Spacer y={0.5} />
+    <Button color="error" light>
+      Error
+    </Button>
+  </>
+);
+
+export const Sizes = () => (
+  <>
+    <Button size="mini">mini</Button>
+    <Spacer y={0.5} />
+    <Button size="small">small</Button>
+    <Spacer y={0.5} />
+    <Button>medium</Button>
+    <Spacer y={0.5} />
+    <Button size="large">large</Button>
+    <Spacer y={0.5} />
+    <Button size="xlarge">xlarge</Button>
+    <Spacer y={0.5} />
+    <Button auto>auto width</Button>
+  </>
+);
+
+export const Icons = () => {
+  const theme = useTheme();
+  return (
+    <>
+      <Button auto iconRight={<Activity theme={theme} fill="white" />} />
+      <Spacer y={0.5} />
+      <Button icon={<Camera theme={theme} fill="white" />}>Action</Button>
+      <Spacer y={0.5} />
+      <Button icon={<Lock theme={theme} fill="white" />} color="success">
+        Lock
+      </Button>
+      <Spacer y={0.5} />
+      <Button
+        icon={<Notification theme={theme} fill="white" />}
+        color="secondary"
+      >
+        Notifications
+      </Button>
+      <Spacer y={0.5} />
+      <Button
+        icon={<User theme={theme} fill={theme.palette.error} />}
+        color="error"
+        flattened
+      >
+        Delete User
+      </Button>
+      <Spacer y={0.5} />
+      <Button
+        icon={<User theme={theme} fill={theme.palette.accents_4} />}
+        disabled
+      >
+        Delete User
+      </Button>
+    </>
+  );
+};\n- packages/nextui/src/components/button/button.tsx (added, 261 changes)\n  Patch: @@ -0,0 +1,261 @@
+import React, {
+  useRef,
+  useState,
+  MouseEvent,
+  useMemo,
+  useImperativeHandle,
+  PropsWithoutRef,
+  RefAttributes,
+} from 'react';
+import useTheme from '@hooks/use-theme';
+import ButtonDrip from './button.drip';
+import ButtonLoading from './button-loading';
+import { NormalColors, NormalLoaders, NormalSizes } from '@utils/prop-types';
+import { filterPropsWithGroup, getButtonChildrenWithIcon } from './utils';
+import { useButtonGroupContext } from './button-group-context';
+import ButtonGroup from './button-group';
+import {
+  getButtonColors,
+  getButtonCursor,
+  getButtonRadius,
+  getButtonDripColor,
+  getButtonSize,
+} from './styles';
+
+interface Props {
+  color?: NormalColors;
+  size?: NormalSizes;
+  light?: boolean;
+  bordered?: boolean;
+  flattened?: boolean;
+  loading?: boolean;
+  shadow?: boolean;
+  auto?: boolean;
+  animated?: boolean;
+  rounded?: boolean;
+  disabled?: boolean;
+  loaderType?: NormalLoaders;
+  htmlType?: React.ButtonHTMLAttributes<unknown>['type'];
+  icon?: React.ReactNode;
+  iconRight?: React.ReactNode;
+  onClick?: React.MouseEventHandler<HTMLButtonElement>;
+  className?: string;
+}
+
+const defaultProps = {
+  color: 'default' as NormalColors,
+  size: 'medium' as NormalSizes,
+  htmlType: 'button' as React.ButtonHTMLAttributes<unknown>['type'],
+  loaderType: 'default' as NormalLoaders,
+  bordered: false,
+  flattened: false,
+  light: false,
+  loading: false,
+  rounded: false,
+  shadow: false,
+  auto: false,
+  animated: true,
+  disabled: false,
+  className: '',
+};
+
+type NativeAttrs = Omit<React.ButtonHTMLAttributes<unknown>, keyof Props>;
+export type ButtonProps = Props & typeof defaultProps & NativeAttrs;
+
+const Button = React.forwardRef<
+  HTMLButtonElement,
+  React.PropsWithChildren<ButtonProps>
+>(({ ...btnProps }, ref: React.Ref<HTMLButtonElement | null>) => {
+  const theme = useTheme();
+  const buttonRef = useRef<HTMLButtonElement>(null);
+  useImperativeHandle(ref, () => buttonRef.current);
+
+  const [dripShow, setDripShow] = useState<boolean>(false);
+  const [dripX, setDripX] = useState<number>(0);
+  const [dripY, setDripY] = useState<number>(0);
+  const groupConfig = useButtonGroupContext();
+  const filteredProps = filterPropsWithGroup(btnProps, groupConfig);
+  /* eslint-disable @typescript-eslint/no-unused-vars */
+  const {
+    children,
+    disabled,
+    loading,
+    bordered,
+    shadow,
+    animated,
+    light,
+    flattened,
+    rounded,
+    onClick,
+    auto,
+    size,
+    icon,
+    htmlType,
+    iconRight,
+    className,
+    loaderType,
+    ...props
+  } = filteredProps;
+  /* eslint-enable @typescript-eslint/no-unused-vars */
+
+  const { bg, color, loaderBg, border } = useMemo(
+    () => getButtonColors(theme.palette, filteredProps),
+    [theme.palette, filteredProps]
+  );
+
+  const radius = useMemo(() => getButtonRadius(size, rounded), [size, rounded]);
+
+  const { cursor, events } = useMemo(() => getButtonCursor(disabled, loading), [
+    disabled,
+    loading,
+  ]);
+  const {
+    height,
+    minWidth,
+    padding,
+    width,
+    fontSize,
+    loaderSize,
+  } = useMemo(() => getButtonSize(size, auto), [size, auto]);
+
+  const dripColor = useMemo(
+    () => getButtonDripColor(theme.palette, filteredProps),
+    [theme.palette, filteredProps]
+  );
+
+  const background =
+    filteredProps.color === 'gradient' && !bordered
+      ? `background-image: ${bg}`
+      : `background-color: ${bg}`;
+
+  const dripCompletedHandle = () => {
+    setDripShow(false);
+    setDripX(0);
+    setDripY(0);
+  };
+
+  const clickHandler = (event: MouseEvent<HTMLButtonElement>) => {
+    if (disabled || loading) return;
+    if (animated && buttonRef.current) {
+      const rect = buttonRef.current.getBoundingClientRect();
+      setDripShow(true);
+      setDripX(event.clientX - rect.left);
+      setDripY(event.clientY - rect.top);
+    }
+    onClick && onClick(event);
+  };
+
+  const childrenWithIcon = useMemo(
+    () =>
+      getButtonChildrenWithIcon(auto, size, children, {
+        icon,
+        iconRight,
+      }),
+    [auto, size, children, icon, iconRight]
+  );
+
+  return (
+    <button
+      ref={buttonRef}
+      type={htmlType}
+      className={`button ${className}`}
+      disabled={disabled}
+      onClick={clickHandler}
+      {...props}
+    >
+      {loading && (
+        <ButtonLoading
+          size={loaderSize}
+          type={loaderType}
+          color={color}
+          background={loaderBg}
+        />
+      )}
+      {childrenWithIcon}
+      {dripShow && (
+        <ButtonDrip
+          x={dripX}
+          y={dripY}
+          color={dripColor}
+          onCompleted={dripCompletedHandle}
+        />
+      )}
+      <style jsx>{`
+        .button {
+          ${background};
+          box-sizing: border-box;
+          display: inline-block;
+          padding: 0 ${padding};
+          height: ${height};
+          line-height: ${height};
+          min-width: ${minWidth};
+          width: ${width};
+          border-radius: ${radius};
+          border: ${border?.weight || '2px'} solid
+            ${border?.color || 'transparent'};
+          font-weight: 500;
+          font-size: ${fontSize};
+          user-select: none;
+          outline: none;
+          text-transform: capitalize;
+          justify-content: center;
+          text-align: center;
+          white-space: nowrap;
+          transition: background-color 250ms ease 0ms, box-shadow 250ms ease 0ms,
+            border 250ms ease 0ms, color 250ms ease 0ms,
+            transform 250ms ease 0ms;
+          position: relative;
+          overflow: hidden;
+          color: ${color};
+          cursor: ${cursor};
+          pointer-events: ${events};
+          box-shadow: ${shadow ? theme.expressiveness.shadowSmall : 'none'};
+          --next-ui-button-padding: ${padding};
+          --next-ui-button-height: ${height};
+          --next-ui-button-color: ${color};
+          --next-ui-button-bg: ${bg};
+        }
+        .button:hover {
+          cursor: ${cursor};
+          pointer-events: ${events};
+          box-shadow: ${shadow
+            ? theme.expressiveness.shadowMedium
+            : !disabled && !bordered && !flattened && !light
+            ? 'inset 0 0 40px 0 rgb(0 0 0 / 14%)'
+            : 'none'};
+          transform: translate3d(0px, ${shadow ? '-1.5px' : '0px'}, 0px);
+        }
+        .button :global(.text) {
+          position: relative;
+          z-index: 1;
+          display: inline-flex;
+          justify-content: center;
+          align-items: center;
+          text-align: center;
+          line-height: inherit;
+          top: -1px;
+        }
+        .button :global(.text p),
+        .button :global(.text pre),
+        .button :global(.text div) {
+          margin: 0;
+        }
+      `}</style>
+    </button>
+  );
+});
+
+type ButtonComponent<T, P = {}> = React.ForwardRefExoticComponent<
+  PropsWithoutRef<P> & RefAttributes<T>
+> & {
+  Group: typeof ButtonGroup;
+};
+
+type ComponentProps = Partial<typeof defaultProps> &
+  Omit<Props, keyof typeof defaultProps> &
+  NativeAttrs;
+
+Button.displayName = 'NextUI - Button';
+Button.defaultProps = defaultProps;
+
+export default Button as ButtonComponent<HTMLButtonElement, ComponentProps>;\n- packages/nextui/src/components/button/index.ts (added, 6 changes)\n  Patch: @@ -0,0 +1,6 @@
+import Button from './button';
+import ButtonGroup from './button-group';
+
+Button.Group = ButtonGroup;
+
+export default Button;\n- packages/nextui/src/components/button/styles.ts (added, 313 changes)\n  Patch: @@ -0,0 +1,313 @@
+import { NextUIThemesPalette } from '@theme/index';
+import { NormalSizes, NormalColors } from '@utils/prop-types';
+import { ButtonProps } from './button';
+import { ButtonGroupProps } from './button-group';
+import { addColorAlpha } from '@utils/color';
+
+export interface ButtonBorder {
+  weight?: string;
+  color?: string;
+}
+
+export interface ButtonColorGroup {
+  bg?: string;
+  color?: string;
+  loaderBg?: string;
+  border?: ButtonBorder;
+}
+
+export interface ButtonCursorGroup {
+  cursor: string;
+  events: string;
+}
+
+export type ButtonSizeGroup = {
+  height: string;
+  width: string;
+  loaderSize?: NormalSizes;
+  padding: string;
+  minWidth: string;
+  fontSize: string;
+};
+
+export const getGroupBorder = (
+  palette: NextUIThemesPalette,
+  props: ButtonGroupProps
+): ButtonBorder => {
+  const { bordered, color } = props;
+  const common = {
+    color: palette.background,
+    weight: bordered ? '2px' : '0px',
+  };
+  if (!bordered && color !== 'primary') return common;
+
+  const colors: { [key in NormalColors]?: ButtonColorGroup } = {
+    default: {
+      ...common,
+      color: palette.primary,
+    },
+    primary: {
+      ...common,
+      color: palette.primary,
+    },
+    success: {
+      ...common,
+      color: palette.success,
+    },
+    secondary: {
+      ...common,
+      color: palette.secondary,
+    },
+    error: {
+      ...common,
+      color: palette.error,
+    },
+    warning: {
+      ...common,
+      color: palette.warning,
+    },
+  };
+  return (
+    colors[color as NormalColors] || {
+      ...common,
+      color: palette.primary,
+    }
+  );
+};
+
+export const getButtonColors = (
+  palette: NextUIThemesPalette,
+  props: ButtonProps
+): ButtonColorGroup => {
+  const { color, disabled, bordered, flattened, light } = props;
+  const common = {
+    color: palette.white,
+    border: {
+      weight: '0px',
+    },
+  };
+  const colors: { [key in NormalColors]?: ButtonColorGroup } = {
+    default: {
+      ...common,
+      bg: palette.primary,
+      loaderBg: palette.primary,
+    },
+    primary: {
+      ...common,
+      bg: palette.primary,
+      loaderBg: palette.primary,
+    },
+    secondary: {
+      ...common,
+      bg: palette.secondary,
+      loaderBg: palette.primary,
+    },
+    success: {
+      ...common,
+      bg: palette.success,
+      loaderBg: palette.success,
+    },
+    warning: {
+      ...common,
+      bg: palette.warning,
+      loaderBg: palette.warning,
+    },
+    gradient: {
+      ...common,
+      bg: palette.gradient,
+
+      loaderBg: palette.warning,
+    },
+    error: {
+      ...common,
+      bg: palette.error,
+
+      loaderBg: palette.error,
+    },
+  };
+  if (disabled)
+    return {
+      bg: palette.accents_2,
+      color: palette.accents_3,
+      loaderBg: palette.accents_1,
+    };
+
+  const defaultColor = colors.default as ButtonColorGroup;
+  const selectedColor = colors[color] || defaultColor;
+  const baseColor = color === 'default' ? palette.accents_2 : palette[color];
+  const highlightColor = color === 'default' ? palette.primary : baseColor;
+
+  if (bordered)
+    return {
+      ...selectedColor,
+      bg: palette.background,
+      color: highlightColor,
+      border: {
+        weight: '2px',
+        color: highlightColor,
+      },
+    };
+  if (light)
+    return {
+      ...selectedColor,
+      bg: palette.background,
+      color: color === 'default' ? palette.foreground : baseColor,
+    };
+  if (flattened)
+    return {
+      ...selectedColor,
+      bg: addColorAlpha(selectedColor?.bg || palette.foreground, 0.15),
+      color: highlightColor,
+    };
+  return selectedColor;
+};
+
+export const getLoadingSize = (size: NormalSizes): NormalSizes => {
+  const loaderSizes: { [key in NormalSizes]?: NormalSizes } = {
+    mini: 'mini',
+    small: 'small',
+    medium: 'small',
+    large: 'medium',
+    xlarge: 'medium',
+  };
+  return loaderSizes[size] || 'small';
+};
+
+export const getLoadingBackground = (
+  palette: NextUIThemesPalette,
+  color: NormalColors | string
+): string | null => {
+  const colors: { [key in NormalColors]?: string } = {
+    primary: palette.primary,
+    secondary: palette.secondary,
+    success: palette.success,
+    warning: palette.warning,
+    error: palette.error,
+  };
+  return colors[color as NormalColors] || color || null;
+};
+
+export const getButtonCursor = (
+  disabled: boolean,
+  loading: boolean
+): ButtonCursorGroup => {
+  if (disabled)
+    return {
+      cursor: 'not-allowed',
+      events: 'auto',
+    };
+  if (loading)
+    return {
+      cursor: 'default',
+      events: 'none',
+    };
+
+  return {
+    cursor: 'pointer',
+    events: 'auto',
+  };
+};
+
+export const getButtonRadius = (
+  size: NormalSizes,
+  rounded?: boolean
+): string => {
+  const radius: { [key in NormalSizes]: string } = {
+    mini: '0.4375rem',
+    small: '0.5625rem',
+    medium: '0.7375rem',
+    large: '0.8rem',
+    xlarge: '0.9rem',
+  };
+  const baseRadius = radius[size];
+  return rounded ? `calc(${baseRadius} + 10rem)` : baseRadius;
+};
+
+export const getButtonSize = (
+  size: NormalSizes = 'medium',
+  auto: boolean
+): ButtonSizeGroup => {
+  const loaderSize = getLoadingSize(size);
+  const defaultLayout: ButtonSizeGroup = {
+    loaderSize,
+    height: '2.5rem',
+    width: 'auto',
+    padding: '1.375rem',
+    fontSize: '.875rem',
+    minWidth: '12.5rem',
+  };
+  const autoPaddings: { [key in NormalSizes]: string } = {
+    mini: '0.625rem',
+    small: '0.9375rem',
+    medium: '1.25rem',
+    large: '1.5625rem',
+    xlarge: '1.875rem',
+  };
+  const layouts: { [key in NormalSizes]: ButtonSizeGroup } = {
+    mini: {
+      loaderSize,
+      height: '1.5rem',
+      width: 'initial',
+      padding: '1.375rem',
+      fontSize: '.75rem',
+      minWidth: '5.25rem',
+    },
+    small: {
+      loaderSize,
+      height: '2rem',
+      width: 'initial',
+      padding: '1.25rem',
+      fontSize: '.875rem',
+      minWidth: '9.375rem',
+    },
+    medium: defaultLayout,
+    large: {
+      loaderSize,
+      height: '2.75rem',
+      width: 'initial',
+      padding: '1.875rem',
+      fontSize: '1rem',
+      minWidth: '15.625rem',
+    },
+    xlarge: {
+      loaderSize,
+      height: '3.5rem',
+      width: 'initial',
+      padding: '2.875rem',
+      fontSize: '1.2rem',
+      minWidth: '18.625rem',
+    },
+  };
+
+  if (auto)
+    return {
+      ...(layouts[size] || defaultLayout),
+      padding: autoPaddings[size] || autoPaddings.medium,
+      minWidth: 'min-content',
+      width: 'auto',
+    };
+
+  return layouts[size] || defaultLayout;
+};
+
+export const getButtonDripColor = (
+  palette: NextUIThemesPalette,
+  props: ButtonProps
+) => {
+  const { color, bordered, flattened, light } = props;
+  const colors: { [key in NormalColors]?: string } = {
+    default: palette.accents_2,
+    primary: palette.primary,
+    secondary: palette.secondary,
+    success: palette.success,
+    warning: palette.warning,
+    error: palette.error,
+    gradient: palette.warning,
+  };
+  const baseColor = color === 'default' ? palette.primary : colors[color];
+  if (light) return addColorAlpha(palette.accents_2, 0.8);
+  if (flattened) return addColorAlpha(baseColor || palette.accents_2, 0.4);
+  const selectedColor = bordered ? baseColor : palette.accents_2;
+  if (selectedColor) return addColorAlpha(selectedColor, 0.25);
+  return palette.accents_2;
+};\n- packages/nextui/src/components/button/utils.tsx (added, 67 changes)\n  Patch: @@ -0,0 +1,67 @@
+import React, { ReactNode } from 'react';
+import { NormalSizes } from '@utils/prop-types';
+import ButtonIcon from './button-icon';
+import { ButtonProps } from '@components/button/button';
+import { ButtonGroupConfig } from '@components/button/button-group-context';
+
+export const getButtonChildrenWithIcon = (
+  auto: boolean,
+  size: NormalSizes,
+  children: ReactNode,
+  icons: {
+    icon?: React.ReactNode;
+    iconRight?: React.ReactNode;
+  }
+) => {
+  const { icon, iconRight } = icons;
+  const hasIcon = icon || iconRight;
+  const isRight = Boolean(iconRight);
+  const paddingForAutoMode =
+    auto || size === 'mini'
+      ? `calc(var(--next-ui-button-height) / 2 + var(--next-ui-button-padding) * .5)`
+      : 0;
+  if (!hasIcon) return <div className="text">{children}</div>;
+  if (React.Children.count(children) === 0) {
+    return (
+      <ButtonIcon isRight={isRight} isSingle>
+        {hasIcon}
+      </ButtonIcon>
+    );
+  }
+  return (
+    <>
+      <ButtonIcon isRight={isRight}>{hasIcon}</ButtonIcon>
+      <div className={`text ${isRight ? 'right' : 'left'}`}>
+        {children}
+        <style jsx>{`
+          .left {
+            padding-left: ${paddingForAutoMode};
+          }
+          .right {
+            padding-right: ${paddingForAutoMode};
+          }
+        `}</style>
+      </div>
+    </>
+  );
+};
+
+export const filterPropsWithGroup = (
+  props: React.PropsWithChildren<ButtonProps>,
+  config: ButtonGroupConfig
+): ButtonProps => {
+  if (!config.isButtonGroup) return props;
+  return {
+    ...props,
+    auto: true,
+    shadow: false,
+    bordered: config.bordered || props.bordered,
+    flattened: config.flattened || props.flattened,
+    animated: config.animated || props.animated,
+    rounded: config.rounded || props.rounded,
+    light: config.light || props.light,
+    size: config.size || props.size,
+    color: config.color || props.color,
+    disabled: config.disabled || props.disabled,
+  };
+};\n- packages/nextui/src/components/css-baseline/css-baseline.tsx (modified, 2 changes)\n  Patch: @@ -17,7 +17,7 @@ const CssBaseline: React.FC<React.PropsWithChildren<{}>> = ({ children }) => {
 
         html {
           font-size: 16px;
-          --geist-icons-background: ${theme.palette.background};
+          --nextui-icons-background: ${theme.palette.background};
         }
 
         body {\n- packages/nextui/src/components/index.ts (modified, 1 changes)\n  Patch: @@ -8,3 +8,4 @@ export { default as Spacer } from './spacer';
 export { default as User } from './user';
 export { default as Link } from './link';
 export { default as Loading } from './loading';
+export { default as Button } from './button';\n- packages/nextui/src/components/link/__tests__/__snapshots__/index.test.tsx.snap (modified, 2 changes)\n  Patch: @@ -1,3 +1,3 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`Link should render correctly 1`] = `"<div><a href=\\"https://nextui.org\\" class=\\"jsx-1468451685 link \\">link</a><a href=\\"https://nextui.org\\" class=\\"jsx-605584638 link \\">link</a><a href=\\"https://nextui.org\\" class=\\"jsx-1468451685 link \\">link<svg viewBox=\\"0 0 24 24\\" width=\\"1em\\" height=\\"1em\\" stroke=\\"currentColor\\" stroke-width=\\"1.5\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" fill=\\"none\\" shape-rendering=\\"geometricPrecision\\" class=\\"jsx-2691738060 icon\\"><path d=\\"M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6\\" class=\\"jsx-2691738060\\"></path><path d=\\"M15 3h6v6\\" class=\\"jsx-2691738060\\"></path><path d=\\"M10 14L21 3\\" class=\\"jsx-2691738060\\"></path></svg></a><a href=\\"https://nextui.org\\" class=\\"jsx-3003007369 link \\">link</a><a href=\\"https://nextui.org\\" class=\\"jsx-3716520090 link \\">link</a></div>"`;
+exports[`Link should render correctly 1`] = `"<div><a href=\\"https://nextui.org\\" class=\\"jsx-1468451685 link \\">link</a><a href=\\"https://nextui.org\\" class=\\"jsx-1727356190 link \\">link</a><a href=\\"https://nextui.org\\" class=\\"jsx-1468451685 link \\">link<svg viewBox=\\"0 0 24 24\\" width=\\"1em\\" height=\\"1em\\" stroke=\\"currentColor\\" stroke-width=\\"1.5\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" fill=\\"none\\" shape-rendering=\\"geometricPrecision\\" class=\\"jsx-2691738060 icon\\"><path d=\\"M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6\\" class=\\"jsx-2691738060\\"></path><path d=\\"M15 3h6v6\\" class=\\"jsx-2691738060\\"></path><path d=\\"M10 14L21 3\\" class=\\"jsx-2691738060\\"></path></svg></a><a href=\\"https://nextui.org\\" class=\\"jsx-3003007369 link \\">link</a><a href=\\"https://nextui.org\\" class=\\"jsx-1327471642 link \\">link</a></div>"`;\n- packages/nextui/src/components/loading/__tests__/__snapshots__/index.test.tsx.snap (modified, 10 changes)\n  Patch: @@ -1,21 +1,21 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`Loading should render correctly 1`] = `"<div class=\\"jsx-3558214665 loading-container\\"><span class=\\"jsx-3558214665 loading default\\"><i class=\\"jsx-3558214665 _1\\"></i><i class=\\"jsx-3558214665 _2\\"></i><i class=\\"jsx-3558214665 _3\\"></i></span></div>"`;
+exports[`Loading should render correctly 1`] = `"<div class=\\"jsx-4135452632 loading-container\\"><span class=\\"jsx-4135452632 loading default\\"><i class=\\"jsx-4135452632 _1\\"></i><i class=\\"jsx-4135452632 _2\\"></i><i class=\\"jsx-4135452632 _3\\"></i></span></div>"`;
 
 exports[`Loading should render correctly 2`] = `[Function]`;
 
-exports[`Loading should work with different colors 1`] = `"<div><div class=\\"jsx-1671089511 loading-container\\"><span class=\\"jsx-1671089511 loading default\\"><i class=\\"jsx-1671089511 _1\\"></i><i class=\\"jsx-1671089511 _2\\"></i><i class=\\"jsx-1671089511 _3\\"></i></span></div><div class=\\"jsx-3558214665 loading-container\\"><span class=\\"jsx-3558214665 loading default\\"><i class=\\"jsx-3558214665 _1\\"></i><i class=\\"jsx-3558214665 _2\\"></i><i class=\\"jsx-3558214665 _3\\"></i></span></div><div class=\\"jsx-3575907109 loading-container\\"><span class=\\"jsx-3575907109 loading default\\"><i class=\\"jsx-3575907109 _1\\"></i><i class=\\"jsx-3575907109 _2\\"></i><i class=\\"jsx-3575907109 _3\\"></i></span></div><div class=\\"jsx-595468733 loading-container\\"><span class=\\"jsx-595468733 loading default\\"><i class=\\"jsx-595468733 _1\\"></i><i class=\\"jsx-595468733 _2\\"></i><i class=\\"jsx-595468733 _3\\"></i></span></div><div class=\\"jsx-1178811742 loading-container\\"><span class=\\"jsx-1178811742 loading default\\"><i class=\\"jsx-1178811742 _1\\"></i><i class=\\"jsx-1178811742 _2\\"></i><i class=\\"jsx-1178811742 _3\\"></i></span></div><div class=\\"jsx-3648489290 loading-container\\"><span class=\\"jsx-3648489290 loading default\\"><i class=\\"jsx-3648489290 _1\\"></i><i class=\\"jsx-3648489290 _2\\"></i><i class=\\"jsx-3648489290 _3\\"></i></span></div></div>"`;
+exports[`Loading should work with different colors 1`] = `"<div><div class=\\"jsx-554218038 loading-container\\"><span class=\\"jsx-554218038 loading default\\"><i class=\\"jsx-554218038 _1\\"></i><i class=\\"jsx-554218038 _2\\"></i><i class=\\"jsx-554218038 _3\\"></i></span></div><div class=\\"jsx-4135452632 loading-container\\"><span class=\\"jsx-4135452632 loading default\\"><i class=\\"jsx-4135452632 _1\\"></i><i class=\\"jsx-4135452632 _2\\"></i><i class=\\"jsx-4135452632 _3\\"></i></span></div><div class=\\"jsx-1326559732 loading-container\\"><span class=\\"jsx-1326559732 loading default\\"><i class=\\"jsx-1326559732 _1\\"></i><i class=\\"jsx-1326559732 _2\\"></i><i class=\\"jsx-1326559732 _3\\"></i></span></div><div class=\\"jsx-4078408556 loading-container\\"><span class=\\"jsx-4078408556 loading default\\"><i class=\\"jsx-4078408556 _1\\"></i><i class=\\"jsx-4078408556 _2\\"></i><i class=\\"jsx-4078408556 _3\\"></i></span></div><div class=\\"jsx-3194062095 loading-container\\"><span class=\\"jsx-3194062095 loading default\\"><i class=\\"jsx-3194062095 _1\\"></i><i class=\\"jsx-3194062095 _2\\"></i><i class=\\"jsx-3194062095 _3\\"></i></span></div><div class=\\"jsx-163580699 loading-container\\"><span class=\\"jsx-163580699 loading default\\"><i class=\\"jsx-163580699 _1\\"></i><i class=\\"jsx-163580699 _2\\"></i><i class=\\"jsx-163580699 _3\\"></i></span></div></div>"`;
 
 exports[`Loading should work with different colors 2`] = `[Function]`;
 
-exports[`Loading should work with different sizes 1`] = `"<div><div class=\\"jsx-2744369386 loading-container\\"><span class=\\"jsx-2744369386 loading default\\"><i class=\\"jsx-2744369386 _1\\"></i><i class=\\"jsx-2744369386 _2\\"></i><i class=\\"jsx-2744369386 _3\\"></i></span></div><div class=\\"jsx-1400813777 loading-container\\"><span class=\\"jsx-1400813777 loading default\\"><i class=\\"jsx-1400813777 _1\\"></i><i class=\\"jsx-1400813777 _2\\"></i><i class=\\"jsx-1400813777 _3\\"></i></span></div><div class=\\"jsx-3558214665 loading-container\\"><span class=\\"jsx-3558214665 loading default\\"><i class=\\"jsx-3558214665 _1\\"></i><i class=\\"jsx-3558214665 _2\\"></i><i class=\\"jsx-3558214665 _3\\"></i></span></div><div class=\\"jsx-881925919 loading-container\\"><span class=\\"jsx-881925919 loading default\\"><i class=\\"jsx-881925919 _1\\"></i><i class=\\"jsx-881925919 _2\\"></i><i class=\\"jsx-881925919 _3\\"></i></span></div><div class=\\"jsx-3467406415 loading-container\\"><span class=\\"jsx-3467406415 loading default\\"><i class=\\"jsx-3467406415 _1\\"></i><i class=\\"jsx-3467406415 _2\\"></i><i class=\\"jsx-3467406415 _3\\"></i></span></div></div>"`;
+exports[`Loading should work with different sizes 1`] = `"<div><div class=\\"jsx-1876078264 loading-container\\"><span class=\\"jsx-1876078264 loading default\\"><i class=\\"jsx-1876078264 _1\\"></i><i class=\\"jsx-1876078264 _2\\"></i><i class=\\"jsx-1876078264 _3\\"></i></span></div><div class=\\"jsx-396611800 loading-container\\"><span class=\\"jsx-396611800 loading default\\"><i class=\\"jsx-396611800 _1\\"></i><i class=\\"jsx-396611800 _2\\"></i><i class=\\"jsx-396611800 _3\\"></i></span></div><div class=\\"jsx-4135452632 loading-container\\"><span class=\\"jsx-4135452632 loading default\\"><i class=\\"jsx-4135452632 _1\\"></i><i class=\\"jsx-4135452632 _2\\"></i><i class=\\"jsx-4135452632 _3\\"></i></span></div><div class=\\"jsx-778487832 loading-container\\"><span class=\\"jsx-778487832 loading default\\"><i class=\\"jsx-778487832 _1\\"></i><i class=\\"jsx-778487832 _2\\"></i><i class=\\"jsx-778487832 _3\\"></i></span></div><div class=\\"jsx-818086936 loading-container\\"><span class=\\"jsx-818086936 loading default\\"><i class=\\"jsx-818086936 _1\\"></i><i class=\\"jsx-818086936 _2\\"></i><i class=\\"jsx-818086936 _3\\"></i></span></div></div>"`;
 
 exports[`Loading should work with different sizes 2`] = `[Function]`;
 
-exports[`Loading should work with different text colors 1`] = `"<div><div class=\\"jsx-3558214665 loading-container\\"><span class=\\"jsx-3558214665 loading default\\"><i class=\\"jsx-3558214665 _1\\"></i><i class=\\"jsx-3558214665 _2\\"></i><i class=\\"jsx-3558214665 _3\\"></i></span></div><div class=\\"jsx-3558214665 loading-container\\"><span class=\\"jsx-3558214665 loading default\\"><i class=\\"jsx-3558214665 _1\\"></i><i class=\\"jsx-3558214665 _2\\"></i><i class=\\"jsx-3558214665 _3\\"></i></span></div><div class=\\"jsx-3558214665 loading-container\\"><span class=\\"jsx-3558214665 loading default\\"><i class=\\"jsx-3558214665 _1\\"></i><i class=\\"jsx-3558214665 _2\\"></i><i class=\\"jsx-3558214665 _3\\"></i></span></div><div class=\\"jsx-3558214665 loading-container\\"><span class=\\"jsx-3558214665 loading default\\"><i class=\\"jsx-3558214665 _1\\"></i><i class=\\"jsx-3558214665 _2\\"></i><i class=\\"jsx-3558214665 _3\\"></i></span></div><div class=\\"jsx-3558214665 loading-container\\"><span class=\\"jsx-3558214665 loading default\\"><i class=\\"jsx-3558214665 _1\\"></i><i class=\\"jsx-3558214665 _2\\"></i><i class=\\"jsx-3558214665 _3\\"></i></span></div><div class=\\"jsx-3558214665 loading-container\\"><span class=\\"jsx-3558214665 loading default\\"><i class=\\"jsx-3558214665 _1\\"></i><i class=\\"jsx-3558214665 _2\\"></i><i class=\\"jsx-3558214665 _3\\"></i></span></div></div>"`;
+exports[`Loading should work with different text colors 1`] = `"<div><div class=\\"jsx-4135452632 loading-container\\"><span class=\\"jsx-4135452632 loading default\\"><i class=\\"jsx-4135452632 _1\\"></i><i class=\\"jsx-4135452632 _2\\"></i><i class=\\"jsx-4135452632 _3\\"></i></span></div><div class=\\"jsx-4135452632 loading-container\\"><span class=\\"jsx-4135452632 loading default\\"><i class=\\"jsx-4135452632 _1\\"></i><i class=\\"jsx-4135452632 _2\\"></i><i class=\\"jsx-4135452632 _3\\"></i></span></div><div class=\\"jsx-4135452632 loading-container\\"><span class=\\"jsx-4135452632 loading default\\"><i class=\\"jsx-4135452632 _1\\"></i><i class=\\"jsx-4135452632 _2\\"></i><i class=\\"jsx-4135452632 _3\\"></i></span></div><div class=\\"jsx-4135452632 loading-container\\"><span class=\\"jsx-4135452632 loading default\\"><i class=\\"jsx-4135452632 _1\\"></i><i class=\\"jsx-4135452632 _2\\"></i><i class=\\"jsx-4135452632 _3\\"></i></span></div><div class=\\"jsx-4135452632 loading-container\\"><span class=\\"jsx-4135452632 loading default\\"><i class=\\"jsx-4135452632 _1\\"></i><i class=\\"jsx-4135452632 _2\\"></i><i class=\\"jsx-4135452632 _3\\"></i></span></div><div class=\\"jsx-4135452632 loading-container\\"><span class=\\"jsx-4135452632 loading default\\"><i class=\\"jsx-4135452632 _1\\"></i><i class=\\"jsx-4135452632 _2\\"></i><i class=\\"jsx-4135452632 _3\\"></i></span></div></div>"`;
 
 exports[`Loading should work with different text colors 2`] = `[Function]`;
 
-exports[`Loading should work with different types 1`] = `"<div><div class=\\"jsx-3558214665 loading-container\\"><span class=\\"jsx-3558214665 loading default\\"><i class=\\"jsx-3558214665 _1\\"></i><i class=\\"jsx-3558214665 _2\\"></i><i class=\\"jsx-3558214665 _3\\"></i></span></div><div class=\\"jsx-3656874626 spinner \\"><div class=\\"jsx-3656874626 container\\"><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span></div></div><div class=\\"jsx-4281211135 loading-container\\"><span class=\\"jsx-4281211135 loading points\\"><i class=\\"jsx-4281211135 _1\\"></i><i class=\\"jsx-4281211135 _2\\"></i><i class=\\"jsx-4281211135 _3\\"></i></span></div><div class=\\"jsx-4281211135 loading-container\\"><span class=\\"jsx-4281211135 loading points-opacity\\"><i class=\\"jsx-4281211135 _1\\"></i><i class=\\"jsx-4281211135 _2\\"></i><i class=\\"jsx-4281211135 _3\\"></i></span></div><div class=\\"jsx-3558214665 loading-container\\"><span class=\\"jsx-3558214665 loading gradient\\"><i class=\\"jsx-3558214665 _1\\"></i><i class=\\"jsx-3558214665 _2\\"></i><i class=\\"jsx-3558214665 _3\\"></i></span></div></div>"`;
+exports[`Loading should work with different types 1`] = `"<div><div class=\\"jsx-4135452632 loading-container\\"><span class=\\"jsx-4135452632 loading default\\"><i class=\\"jsx-4135452632 _1\\"></i><i class=\\"jsx-4135452632 _2\\"></i><i class=\\"jsx-4135452632 _3\\"></i></span></div><div class=\\"jsx-3656874626 spinner \\"><div class=\\"jsx-3656874626 container\\"><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span><span class=\\"jsx-161766714\\"></span></div></div><div class=\\"jsx-2436760888 loading-container\\"><span class=\\"jsx-2436760888 loading points\\"><i class=\\"jsx-2436760888 _1\\"></i><i class=\\"jsx-2436760888 _2\\"></i><i class=\\"jsx-2436760888 _3\\"></i></span></div><div class=\\"jsx-2436760888 loading-container\\"><span class=\\"jsx-2436760888 loading points-opacity\\"><i class=\\"jsx-2436760888 _1\\"></i><i class=\\"jsx-2436760888 _2\\"></i><i class=\\"jsx-2436760888 _3\\"></i></span></div><div class=\\"jsx-4135452632 loading-container\\"><span class=\\"jsx-4135452632 loading gradient\\"><i class=\\"jsx-4135452632 _1\\"></i><i class=\\"jsx-4135452632 _2\\"></i><i class=\\"jsx-4135452632 _3\\"></i></span></div></div>"`;
 
 exports[`Loading should work with different types 2`] = `[Function]`;\n- packages/nextui/src/components/loading/loading.tsx (modified, 29 changes)\n  Patch: @@ -3,12 +3,13 @@ import useTheme from '@hooks/use-theme';
 import withDefaults from '@utils/with-defaults';
 import { NormalSizes, NormalColors, NormalLoaders } from '@utils/prop-types';
 import { getNormalColor, addColorAlpha } from '@utils/color';
-import { getLoaderSize, getLabelStyle } from './styles';
+import { getLoaderSize, getLoaderBorder, getLabelStyle } from './styles';
 import Spinner from './spinner';
 
 interface Props {
   size?: NormalSizes;
   color?: NormalColors | string;
+  gradientBackground?: string | null;
   textColor?: NormalColors | string;
   type?: NormalLoaders;
 }
@@ -26,12 +27,14 @@ const Loading: React.FC<React.PropsWithChildren<LoadingProps>> = ({
   children,
   size,
   color,
+  gradientBackground,
   textColor,
   type,
   ...props
 }) => {
   const theme = useTheme();
   const width = useMemo(() => getLoaderSize(type)[size], [size, type]);
+  const border = useMemo(() => getLoaderBorder(size), [size]);
   const labelColor = useMemo(() => getNormalColor(textColor, theme.palette), [
     color,
     theme.palette,
@@ -96,11 +99,13 @@ const Loading: React.FC<React.PropsWithChildren<LoadingProps>> = ({
         }
         .loading.gradient {
           display: flex;
-          align-items: center;
-          justify-content: center;
+          position: relative;
           width: ${width};
           height: ${width};
         }
+        .loading.points {
+          transform: translate(0, calc(${width} * 0.6));
+        }
         .loading.default i {
           top: 0px;
           width: 100%;
@@ -109,17 +114,17 @@ const Loading: React.FC<React.PropsWithChildren<LoadingProps>> = ({
           border-radius: inherit;
         }
         .loading.default ._1 {
-          border: 3px solid ${bgColor};
-          border-top: 3px solid transparent;
-          border-left: 3px solid transparent;
-          border-right: 3px solid transparent;
+          border: ${border} solid ${bgColor};
+          border-top: ${border} solid transparent;
+          border-left: ${border} solid transparent;
+          border-right: ${border} solid transparent;
           animation: rotate 0.8s ease infinite;
         }
         .loading.default ._2 {
-          border: 3px dotted ${bgColor};
-          border-top: 3px solid transparent;
-          border-left: 3px solid transparent;
-          border-right: 3px solid transparent;
+          border: ${border} dotted ${bgColor};
+          border-top: ${border} solid transparent;
+          border-left: ${border} solid transparent;
+          border-right: ${border} solid transparent;
           animation: rotate 0.8s linear infinite;
           opacity: 0.5;
         }
@@ -181,7 +186,7 @@ const Loading: React.FC<React.PropsWithChildren<LoadingProps>> = ({
           height: calc(100% - 4px);
           border: 0px;
           border-radius: inherit;
-          background: ${theme.palette.background};
+          background: ${gradientBackground || theme.palette.background};
           border-radius: 50%;
         }
         .loading.gradient ._3 {\n- packages/nextui/src/components/loading/styles.ts (modified, 12 changes)\n  Patch: @@ -43,6 +43,18 @@ export const getLoaderSize = (type: NormalLoaders) => {
   return sizes[type];
 };
 
+export const getLoaderBorder = (size: NormalSizes): string => {
+  const defaultBorder = '3px';
+  const sizes: { [key in NormalSizes]: string } = {
+    mini: '2px',
+    small: '2px',
+    medium: '3px',
+    large: '3px',
+    xlarge: '3px',
+  };
+  return sizes[size] || defaultBorder;
+};
+
 export const getLabelStyle = (
   type: NormalLoaders,
   theme: NextUIThemes,\n- packages/nextui/src/components/user/user-link.tsx (modified, 2 changes)\n  Patch: @@ -1,5 +1,5 @@
 import React from 'react';
-import Link from '../link';
+import { Link } from '@components';
 import withDefaults from '@utils/with-defaults';
 
 interface Props {\n- packages/nextui/src/utils/color.ts (modified, 7 changes)\n  Patch: @@ -93,15 +93,18 @@ export const colorToRgbValues = (color: string) => {
 
   const regArray = safeColor.match(/\((.+)\)/);
   if (!colorType.startsWith('rgb') || !regArray) {
-    console.log(color);
     throw new Error(`Next UI: Only support ["RGB", "RGBA", "HEX"] color.`);
   }
 
   return regArray[1].split(',').map((str) => Number.parseFloat(str));
 };
 
 export const addColorAlpha = (color: string, alpha: number) => {
-  if (!/^#|rgb|RGB/.test(color)) return color;
+  if (isHex(color)) {
+    return hexToRGBA(color, alpha);
+  } else if (!/^#|rgb|RGB/.test(color)) {
+    return color;
+  }
   const [r, g, b] = colorToRgbValues(color);
   const safeAlpha = alpha > 1 ? 1 : alpha < 0 ? 0 : alpha;
   return `rgba(${r}, ${g}, ${b}, ${safeAlpha})`;\n- packages/nextui/src/utils/prop-types.ts (modified, 16 changes)\n  Patch: @@ -1,19 +1,5 @@
 export const tuple = <T extends string[]>(...args: T) => args;
 
-const buttonTypes = tuple(
-  'default',
-  'primary',
-  'secondary',
-  'success',
-  'warning',
-  'error',
-  'abort',
-  'secondary-light',
-  'success-light',
-  'warning-light',
-  'error-light'
-);
-
 const normalSizes = tuple('mini', 'small', 'medium', 'large', 'xlarge');
 
 export const normalColors = tuple(
@@ -83,8 +69,6 @@ const placement = tuple(
 
 const dividerAlign = tuple('start', 'center', 'end', 'left', 'right');
 
-export type ButtonTypes = typeof buttonTypes[number];
-
 export type NormalSizes = typeof normalSizes[number];
 
 export type NormalColors = typeof normalColors[number];\n- packages/nextui/storybook-static/0.7e6b930b.iframe.bundle.js (renamed)\n  Previous Filename: packages/nextui/storybook-static/0.143c7adb.iframe.bundle.js\n- packages/nextui/storybook-static/4.2a6811ab.iframe.bundle.js (renamed)\n  Previous Filename: packages/nextui/storybook-static/4.9d862935.iframe.bundle.js\n- packages/nextui/storybook-static/4.2a6811ab.iframe.bundle.js.LICENSE.txt (renamed)\n  Previous Filename: packages/nextui/storybook-static/4.9d862935.iframe.bundle.js.LICENSE.txt\n
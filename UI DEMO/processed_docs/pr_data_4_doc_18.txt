Pull Request Number: 3922
Title: refactor(docs): revise code block
Base Branch: refactor/overall-dx
Head Branch: refactor/dx
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/3922
State: MERGED
Created At: 2024-10-20T07:50:58Z
Merged At: 2024-11-05T19:23:37Z
Participants: wingkwong, jrgarciadev, ryo-manba

Description:
Closes # 
üìù Description

apply fold logic for the upcoming dx change (js will be merged into the main tsx / jsx so by default they should be folded)

‚õ≥Ô∏è Current behavior (updates)

üöÄ New behavior

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit
Release Notes


New Features

Enhanced Codeblock component with improved code highlighting and rendering for different languages, including support for "diff" languages.
Introduced a new helper function for transforming tokens into a structured folder format.
Added new CSS classes to improve styling and layout for code components.



Bug Fixes

Fixed issues with line number rendering and token display for copyable elements.



Style

Updated global styles for <pre> elements and added new styles for interactive elements to enhance user experience.
Improved styles for the .sp-editor and related classes to ensure better layout and responsiveness.

Commits:
- refactor(docs): revise code block\n- chore(docs): resolve pr comments\n

Labels:


Comments:
- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: 86ec1fcbba3880b8f182ae2d5b6fe22fbd1cc497

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/nextui-org/nextui/new/refactor/dx?filename=.changeset/curvy-dingos-scream.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A---%0A%0Arefactor(docs)%3A%20revise%20code%20block%0A)

\n- vercel: [vc]: #/S+ny8YEKAx1aDmkKzOo76Yhksigmmjq5tz/rFWNj/Y=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi83d0dUcDZ4Yk43c3ZqcFYyS0xFdE1LTHJQbnB3IiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1yZWZhY3Rvci1keC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LXJlZmFjdG9yLWR4LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvNkw0bm5MZ0pEcDhkTDlBM3VrUkNpa1dNRXBXUyIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1yZWZhY3Rvci1keC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtcmVmYWN0b3ItZHgtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/7wGTp6xbN7svjpV2KLEtMKLrPnpw)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-refactor-dx-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-refactor-dx-nextui-org.vercel.app?via=pr-comment-feedback-link) | Oct 20, 2024 10:12am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/6L4nnLgJDp8dL9A3ukRCikWMEpWS)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-refactor-dx-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-refactor-dx-nextui-org.vercel.app?via=pr-comment-feedback-link) | Oct 20, 2024 10:12am |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
The pull request introduces significant updates to the `Codeblock` component, enhancing type safety and internal logic. It includes the addition of a new helper file for transforming tokens into a structured format, modifications to the `MDXComponents` for styling, and updates to global and Sandpack CSS files for improved presentation and interaction. Key changes involve refining the rendering logic and token handling, as well as adding new CSS classes for better layout and user experience.

## Changes

| File Path                                         | Change Summary                                                                                                      |
|---------------------------------------------------|--------------------------------------------------------------------------------------------------------------------|
| `apps/docs/components/docs/components/codeblock.tsx` | - Added type imports for `Language`, `PrismTheme`, `TransformTokensTypes`.<br>- Modified `BaseHighlight` logic and rendering.<br>- Streamlined `calculateLinesToHighlight` function.<br>- Enhanced token rendering with a new `renderFolderTokens` function. |
| `apps/docs/components/docs/components/helper.ts`    | - Introduced `helper.ts` with `TransformTokens` and `TransformTokensTypes` types.<br>- Added `transformTokens` function for token processing. |
| `apps/docs/components/mdx-components.tsx`           | - Updated `Code` component to include a `className` prop for `Codeblock`.                                        |
| `apps/docs/styles/globals.css`                       | - Enhanced styling for `<pre>` elements and summary elements within details tags.<br>- Added transformations and visibility rules for various tokens. |
| `apps/docs/styles/sandpack.css`                      | - Added new CSS classes `.sp-editor`, `.sp-editor-viewer`, and `.sp-code-viewer`.<br>- Modified existing styles for better layout and interaction. |

## Possibly related PRs
- **#3878**: This PR modifies the `Codeblock` component by adding a `translate` attribute to the `<pre>` element, which directly relates to the changes made in the main PR that also focuses on the `Codeblock` component.

## Suggested labels
`üìã Scope : Docs`

## Suggested reviewers
- winchesHe
- ryo-manba

<!-- walkthrough_end --><!-- internal state start -->

<!--

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

-->

<!-- internal state end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- wingkwong: Some examples may import other code such as data.js, logo.tsx and etc. Currently it displays in different tabs. For example, `data.js` in https://nextui.org/docs/components/autocomplete#label-placements. With the new raw approach, you cannot import that in raw (from users perspective, the code should be ready to use by copying and pasting). Hence I put all the code together in the one single file App.jsx. In this case, users can just copy one file instead of setting up one by one. This is also a future plan for NextUI Pro as well. Since putting all the code together would make the code block longer, hence this PR introduces a collapsible code block, similar to nextui pro one, so that users can only focus on the main logic and expand other code if necessary.\n- jrgarciadev: @wingkwong would be great to refactor the examples code to have everything in a single tab

e.g. move `animals` array to the main `App` file

![CleanShot 2024-11-04 at 18 28 42](https://github.com/user-attachments/assets/e3b34b9a-ea1d-446f-a841-664c034b8c42)
![CleanShot 2024-11-04 at 18 28 39](https://github.com/user-attachments/assets/69ba85fd-63dd-4a62-86e2-ad62d7740fa5)

\n- wingkwong: @jrgarciadev yes. actually it's already done in another PRs (See PR3934, 3951, 3960 ..etc). I made it separately for easy review. And this will merge to `refactor/overall-dx` first.\n- jrgarciadev: @wingkwong merged, please change other PRs (ready) from draft to ready to review \n

Files Changed:
- apps/docs/components/docs/components/codeblock.tsx (modified, 108 changes)\n  Patch: @@ -1,7 +1,13 @@
+import type {Language, PrismTheme} from "prism-react-renderer";
+import type {TransformTokensTypes} from "./helper";
+
 import React, {forwardRef, useEffect} from "react";
 import {clsx, dataAttr, getUniqueID} from "@nextui-org/shared-utils";
-import BaseHighlight, {Language, PrismTheme, defaultProps} from "prism-react-renderer";
 import {debounce, omit} from "lodash";
+import BaseHighlight, {defaultProps} from "prism-react-renderer";
+import {cn} from "@nextui-org/react";
+
+import {transformTokens} from "./helper";
 
 import defaultTheme from "@/libs/prism-theme";
 
@@ -142,21 +148,36 @@ const Codeblock = forwardRef<HTMLPreElement, CodeblockProps>(
         {...props}
       >
         {({className, style, tokens, getLineProps, getTokenProps}) => (
-          <div className="w-full" data-language={language}>
-            <pre
-              ref={ref}
-              className={clsx(className, classNameProp, "flex max-w-full", {
+          <pre
+            ref={ref}
+            className={clsx(
+              className,
+              classNameProp,
+              `language-${codeLang}`,
+              "max-w-full contents",
+              {
                 "flex-col": isMultiLine,
-                "scrollbar-hide overflow-x-scroll": hideScrollBar,
-              })}
-              style={style}
-              translate="no"
-            >
-              {tokens.map((line, i) => {
+                "overflow-x-scroll scrollbar-hide": hideScrollBar,
+              },
+            )}
+            data-language={language}
+            style={style}
+          >
+            {transformTokens(tokens).map((line) => {
+              const folderLine = line[0] as TransformTokensTypes;
+
+              const isFolder = folderLine.types?.includes("folderStart");
+
+              const renderLine = (
+                line: TransformTokensTypes[],
+                i: number,
+                as: "div" | "span" = "div",
+              ) => {
+                const Tag = as;
                 const lineProps = getLineProps({line, key: i});
 
                 return (
-                  <div
+                  <Tag
                     {...omit(lineProps, ["key"])}
                     key={`${i}-${getUniqueID("line-wrapper")}`}
                     className={clsx(
@@ -167,25 +188,48 @@ const Codeblock = forwardRef<HTMLPreElement, CodeblockProps>(
                         "px-2": showLines,
                       },
                       {
-                        "before:content-[''] before:w-full before:h-full before:absolute before:z-0 before:left-0 before:bg-gradient-to-r before:from-white/10 before:to-code-background":
-                          shouldHighlightLine(i),
+                        "before:to-code-background before:absolute before:left-0 before:z-0 before:h-full before:w-full before:bg-gradient-to-r before:from-white/10 before:content-['']":
+                          isFolder ? false : shouldHighlightLine(i),
                       },
                     )}
                     data-deleted={dataAttr(highlightStyle?.[i] === "deleted")}
                     data-inserted={dataAttr(highlightStyle?.[i] === "inserted")}
                   >
                     {showLines && (
-                      <span className="select-none text-xs mr-6 opacity-30">{i + 1}</span>
+                      <span
+                        className={cn(
+                          "mr-6 select-none text-xs opacity-30",
+                          i + 1 >= 10 ? "mr-4" : "",
+                          i + 1 >= 100 ? "mr-2" : "",
+                          i + 1 >= 1000 ? "mr-0" : "",
+                        )}
+                      >
+                        {i + 1}
+                      </span>
                     )}
+
                     {line.map((token, key) => {
-                      // Bun has no color style by default in the code block, so hack add in here
                       const props = getTokenProps({token, key}) || {};
-
-                      return (
+                      const isCopy = token.types.includes("copy");
+
+                      return isCopy ? (
+                        <span key={key} className="copy-token" style={{whiteSpace: "inherit"}}>
+                          {token.folderContent?.map((folderTokens) => {
+                            return folderTokens.map((token, index) => {
+                              // Hack for wrap line
+                              return token.content === "" ? (
+                                <div key={`${index}-${getUniqueID("line")}`} />
+                              ) : (
+                                <span key={`${index}-${getUniqueID("line")}`}>{token.content}</span>
+                              );
+                            });
+                          })}
+                        </span>
+                      ) : (
                         <span
                           {...omit(props, ["key"])}
                           key={`${key}-${getUniqueID("line")}`}
-                          className={className}
+                          className={cn(className, token.class)}
                           style={{
                             ...props.style,
                             ...(highlightStyleToken.some((t) => {
@@ -201,11 +245,29 @@ const Codeblock = forwardRef<HTMLPreElement, CodeblockProps>(
                         />
                       );
                     })}
-                  </div>
+                  </Tag>
                 );
-              })}
-            </pre>
-          </div>
+              };
+              const renderFolderTokens = (tokens: TransformTokensTypes[][]) => {
+                return tokens.map((token, key) => {
+                  const index = key + folderLine.index! + 1;
+
+                  return renderLine(token, index);
+                });
+              };
+
+              return isFolder ? (
+                <details key={`${folderLine.index}`} open={folderLine.open ? true : undefined}>
+                  <summary className="cursor-pointer">
+                    {renderLine(folderLine.summaryContent as any, folderLine.index!, "span")}
+                  </summary>
+                  {renderFolderTokens(folderLine.folderContent as any)}
+                </details>
+              ) : (
+                renderLine(line, folderLine.index!)
+              );
+            })}
+          </pre>
         )}
       </BaseHighlight>
     );\n- apps/docs/components/docs/components/helper.ts (added, 189 changes)\n  Patch: @@ -0,0 +1,189 @@
+import type Highlight from "prism-react-renderer";
+
+export type TransformTokens = Parameters<Highlight["props"]["children"]>[0]["tokens"];
+
+export type TransformTokensTypes = TransformTokens[0][0] & {
+  folderContent?: TransformTokens;
+  summaryContent?: TransformTokens[0];
+  class?: string;
+  index?: number;
+  open?: boolean;
+};
+
+const startFlag = ["{", "["];
+const endFlag = ["}", "]"];
+const specialStartFlag = ["("];
+const specialEndFlag = [")"];
+const defaultFoldFlagList = ["cn", "HTMLAttributes"];
+const defaultShowFlagList = ["Component", "forwardRef", "App"];
+
+/**
+ * Transform tokens from `prism-react-renderer` to wrap them in folder structure
+ *
+ * @example
+ * transformTokens(tokens) -> wrap tokens in folder structure
+ */
+export function transformTokens(tokens: TransformTokens, folderLine = 10) {
+  const result: TransformTokens = [];
+  let lastIndex = 0;
+  let isShowFolder = false;
+  let fold = false;
+
+  tokens.forEach((token, index) => {
+    if (index < lastIndex) {
+      return;
+    }
+
+    let startToken: TransformTokens[0][0] = null as any;
+    let mergedStartFlagList = [...startFlag];
+
+    token.forEach((t) => {
+      if (defaultFoldFlagList.some((text) => t.content.includes(text))) {
+        // If cn then need to judge whether it is import token
+        if (t.content.includes("cn") && token.some((t) => t.content === "import")) {
+          return;
+        }
+
+        // If HTMLAttributes then need to judge whether it have start flag
+        if (
+          t.content.includes("HTMLAttributes") &&
+          !token.some((t) => startFlag.includes(t.content))
+        ) {
+          return;
+        }
+
+        fold = true;
+        mergedStartFlagList.push(...specialStartFlag);
+      }
+
+      if (mergedStartFlagList.includes(t.content)) {
+        startToken = t;
+      }
+
+      if (defaultShowFlagList.some((text) => t.content.includes(text))) {
+        isShowFolder = true;
+      }
+    });
+
+    const mergedOptions = fold
+      ? {
+          specialEndFlag,
+          specialStartFlag,
+        }
+      : undefined;
+    const isFolder = checkIsFolder(token, mergedOptions);
+
+    if (isFolder && startToken) {
+      const endIndex = findEndIndex(tokens, index + 1, mergedOptions);
+
+      // Greater than or equal to folderLine then will folder otherwise it will show directly
+      if (endIndex !== -1 && (endIndex - index >= folderLine || isShowFolder || fold)) {
+        lastIndex = endIndex;
+        const folder = tokens.slice(index + 1, endIndex);
+        const endToken = tokens[endIndex];
+        const ellipsisToken: TransformTokensTypes = {
+          types: ["ellipsis"],
+          content: "",
+          class: "custom-folder ellipsis-token",
+        };
+        const copyContent: TransformTokensTypes = {
+          types: ["copy"],
+          content: "",
+          folderContent: folder,
+          class: "custom-folder copy-token",
+        };
+
+        endToken.forEach((t, _, arr) => {
+          let className = "";
+
+          className += "custom-folder";
+          if (t.content.trim() === "" && (arr.length === 3 || arr.length === 4)) {
+            // Add length check to sure it's added to } token
+            className += " empty-token";
+          }
+          (t as TransformTokensTypes).class = className;
+        });
+
+        startToken.types = ["folderStart"];
+        (startToken as TransformTokensTypes).folderContent = folder;
+        (startToken as TransformTokensTypes).summaryContent = [
+          ...token,
+          ellipsisToken,
+          copyContent,
+          ...endToken,
+        ];
+        (startToken as TransformTokensTypes).index = index;
+        if (isShowFolder && !fold) {
+          (startToken as TransformTokensTypes).open = true;
+        }
+
+        result.push([startToken]);
+
+        isShowFolder = false;
+        fold = false;
+
+        return;
+      }
+    }
+    token.forEach((t) => {
+      (t as TransformTokensTypes).index = index;
+    });
+    result.push(token);
+  });
+
+  return result;
+}
+
+interface SpecialOptions {
+  specialStartFlag?: string[];
+  specialEndFlag?: string[];
+}
+
+function checkIsFolder(
+  token: TransformTokens[0],
+  {specialStartFlag, specialEndFlag}: SpecialOptions = {},
+) {
+  const stack: string[] = [];
+  const mergedStartFlagList = specialStartFlag ? [...startFlag, ...specialStartFlag] : startFlag;
+  const mergedEndFlagList = specialEndFlag ? [...endFlag, ...specialEndFlag] : endFlag;
+
+  for (const t of token) {
+    if (mergedStartFlagList.includes(t.content)) {
+      stack.push(t.content);
+    } else if (mergedEndFlagList.includes(t.content)) {
+      stack.pop();
+    }
+  }
+
+  return stack.length !== 0;
+}
+
+function findEndIndex(
+  tokens: TransformTokens,
+  startIndex: number,
+  {specialStartFlag, specialEndFlag}: SpecialOptions = {},
+) {
+  const stack: string[] = ["flag"];
+  const mergedStartFlagList = specialStartFlag ? [...startFlag, ...specialStartFlag] : startFlag;
+  const mergedEndFlagList = specialEndFlag ? [...endFlag, ...specialEndFlag] : endFlag;
+
+  for (let i = startIndex; i < tokens.length; i++) {
+    const token = tokens[i];
+
+    for (const line of token) {
+      const transformLine = line.content.replace(/\$/g, "");
+
+      if (mergedStartFlagList.includes(transformLine)) {
+        stack.push("flag");
+      } else if (mergedEndFlagList.includes(transformLine)) {
+        stack.pop();
+      }
+
+      if (stack.length === 0) {
+        return i;
+      }
+    }
+  }
+
+  return -1;
+}\n- apps/docs/components/mdx-components.tsx (modified, 7 changes)\n  Patch: @@ -152,7 +152,12 @@ const Code = ({
         });
       }}
     >
-      <Codeblock codeString={codeString} language={language} metastring={meta} />
+      <Codeblock
+        className="sp-editor"
+        codeString={codeString}
+        language={language}
+        metastring={meta}
+      />
     </Components.Snippet>
   );
 };\n- apps/docs/styles/globals.css (modified, 60 changes)\n  Patch: @@ -96,3 +96,63 @@ z-index: 0;
     content: counter(step);
   }
 }
+
+pre details[open]>summary>span:first-child::before {
+  transform: rotate(90deg);
+}
+
+pre details[open]>summary span.custom-folder {
+  display: none;
+}
+
+pre details:not([open])>summary span.ellipsis-token::after {
+  content: '...';
+}
+
+pre details:not([open])>summary span.copy-token {
+  position: absolute;
+  width: 1px;
+  height: 1px;
+  padding: 0;
+  margin: -1px;
+  overflow: hidden;
+  clip: rect(0, 0, 0, 0);
+  white-space: nowrap;
+  border-width: 0;
+}
+
+pre details[open]>summary span.copy-token {
+  display: none;
+}
+
+pre details:not([open]) {
+  display: inline;
+}
+
+pre details:not([open])>summary span.empty-token {
+  display: none;
+}
+
+pre details:not([open])+div.token-line {
+  display: none;
+}
+
+pre summary {
+  display: inline;
+  position: relative;
+  list-style: none;
+}
+
+pre summary>span:first-child::before {
+  position: absolute;
+  display: inline-flex;
+  align-items: center;
+  height: 21px;
+  margin-left: -16px;
+  margin-top: 1px;
+  content: "‚ñ∂";
+  font-size: 12px;
+  font-style: normal;
+  transition: transform 100ms;
+  color: #999;
+}
\ No newline at end of file\n- apps/docs/styles/sandpack.css (modified, 16 changes)\n  Patch: @@ -26,6 +26,22 @@
   max-height: 100%;
   overflow: hidden;
 }
+
+.sp-editor,
+.sp-editor-viewer {
+  height: auto !important;
+}
+
+.sp-editor {
+  & .token-line {
+    padding: 0px 24px;
+  }
+}
+
+.sp-code-viewer {
+  padding: 6px;
+}
+
 .cm-scroller {
   overflow: hidden;
   max-height: 600px;\n
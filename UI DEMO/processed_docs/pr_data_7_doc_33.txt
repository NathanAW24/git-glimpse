Pull Request Number: 3467
Title: refactor(overlays): improve stability, and complexity
Base Branch: canary
Head Branch: refactor/overlays
Author: chirokas
URL: https://github.com/nextui-org/nextui/pull/3467
State: MERGED
Created At: 2024-07-13T13:58:31Z
Merged At: 2024-09-05T14:06:32Z
Participants: chirokas, wingkwong

Description:
Closes # 
üìù Description
This is a significant refactor to overlays (such as popovers , modals, etc.) to reduce its complexity, while improving stability.
This PR introduced the following changes:


Re-introduce a proper solution to fix the issue instead of the old patch we used to have.
See adobe/react-spectrum#1155 (comment)
See adobe/react-spectrum#2061 (comment)


Fixes #3276, see https://github.com/adobe/react-spectrum/blob/f56a78746d0fd804267cb5ab17e2675f33f13e5e/packages/%40react-aria/menu/src/useMenuTrigger.ts#L112-L119


Removed onClose: state.close. It didn't seem necessary. useInteractOutside will handle it for us.


Removed duplicate ariaHideOutside in Popover. See here


Fixes #3619


Once that was done, all of the dependent packages needed updated accordingly.
‚õ≥Ô∏è Current behavior (updates)

  
    
    

    20240812215744.mp4
    
  

  

  


üöÄ New behavior
üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit
Summary by CodeRabbit


New Features

Introduced @nextui-org/use-aria-overlay for managing ARIA overlays.



Enhancements

Updated dependencies and peer dependencies across multiple components (autocomplete, dropdown, popover).



Bug Fixes

Adjusted the closing behavior of the dropdown and autocomplete components when interacting outside their boundaries.



Refactor

Simplified control flow in use-autocomplete and use-dropdown regarding outside interactions.
Removed reliance on useEffect in use-popover for managing side effects.

Commits:
- feat(hooks): new `use-aria-overlay` package\n- refactor(overlays): use custom `useAriaOverlay`\n- chore(modal): remove unnecessary `onClose: state.close`\n- chore(popover): remove duplicate `ariaHideOutside`\n- test(modal): only hide the top-most modal\n- chore: add changeset\n- Merge branch 'canary' of https://github.com/nextui-org/nextui into refactor/overlays\n- refactor(hooks): useAriaOverlay tweaks\n- Merge branch 'canary' into pr/3467\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 0f4aca002a127d484c9488dc76653e89a16dc428

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 18 packages</summary>

  | Name                               | Type  |
| ---------------------------------- | ----- |
| @nextui-org/autocomplete           | Patch |
| @nextui-org/date-picker            | Patch |
| @nextui-org/dropdown               | Patch |
| @nextui-org/modal                  | Patch |
| @nextui-org/popover                | Patch |
| @nextui-org/select                 | Patch |
| @nextui-org/use-aria-modal-overlay | Patch |
| @nextui-org/use-aria-multiselect   | Patch |
| @nextui-org/use-aria-overlay       | Patch |
| @nextui-org/aria-utils             | Patch |
| @nextui-org/react                  | Patch |
| @nextui-org/accordion              | Patch |
| @nextui-org/listbox                | Patch |
| @nextui-org/menu                   | Patch |
| @nextui-org/tabs                   | Patch |
| @nextui-org/tooltip                | Patch |
| @nextui-org/slider                 | Patch |
| @nextui-org/snippet                | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/chirokas/nextui/new/refactor/overlays?filename=.changeset/hot-mice-switch.md&value=---%0A%22%40nextui-org%2Fautocomplete%22%3A%20patch%0A%22%40nextui-org%2Fdate-picker%22%3A%20patch%0A%22%40nextui-org%2Fdropdown%22%3A%20patch%0A%22%40nextui-org%2Fmodal%22%3A%20patch%0A%22%40nextui-org%2Fpopover%22%3A%20patch%0A%22%40nextui-org%2Fselect%22%3A%20patch%0A%22%40nextui-org%2Fuse-aria-modal-overlay%22%3A%20patch%0A%22%40nextui-org%2Fuse-aria-multiselect%22%3A%20patch%0A%22%40nextui-org%2Fuse-aria-overlay%22%3A%20patch%0A%22%40nextui-org%2Faria-utils%22%3A%20patch%0A---%0A%0Arefactor(overlays)%3A%20improve%20stability%2C%20and%20complexity%0A)

\n- vercel: [vc]: #okQBJ+KGlr4YtgUa3D2oRLBeSxaChSW3TCnZ78+CWUI=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvM29aWXhnVmhadmNDeEJYRGhtbnljck5FTUJUNSIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWNoaXJva2FzLXJlZmFjdG8tZjI3Njc4LW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWNoaXJva2FzLXJlZmFjdG8tZjI3Njc4LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/3oZYxgVhZvcCxBXDhmnycrNEMBT5)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-chirokas-refacto-f27678-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-chirokas-refacto-f27678-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jul 13, 2024 2:01pm |

\n- vercel: @chirokas is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%22a5732b721a863a8fc768d7ea2d2759a8aca4c6d4%22%7D%2C%22id%22%3A%22QmTu1VgoTMY3p7dMaMmev4sw7Csh753yDp9amUtDAbq6Hj%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A3467%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

This update refines ARIA overlay management and dependencies across multiple components. It reorganizes peer and dev dependencies, adding packages like `@nextui-org/button` and `@nextui-org/input`. Significant behavioral changes include eliminating the `ariaShouldCloseOnInteractOutside` function, enhancing modal and dropdown closing logic, and introducing the `useAriaOverlay` hook to streamline overlay functionalities. These modifications aim to improve user experience and modernize the codebase.

## Changes

| File(s)                                                                 | Change Summary                                                                                                   |
|-------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|
| packages/components/autocomplete/src/use-autocomplete.ts                | Removed `ariaShouldCloseOnInteractOutside` import and modified handling of `shouldCloseOnInteractOutside`.     |
| packages/components/dropdown/src/use-dropdown.ts                        | Removed import for `ariaShouldCloseOnInteractOutside` and adjusted handling of outside interactions.             |
| packages/components/popover/package.json                                | Updated peer dependencies, versions, and added new dependencies, including `@nextui-org/use-aria-overlay`.    |
| packages/components/popover/src/use-popover.ts                          | Removed `useEffect` and altered handling of `aria-haspopup` attributes.                                        |
| packages/hooks/use-aria-overlay/src/index.ts                            | Introduced `useAriaOverlay` for managing overlays and replaced `useOverlay` from `@react-aria/overlays`.       |
| packages/utilities/aria-utils/src/index.ts                              | Removed export of `ariaShouldCloseOnInteractOutside`.                                                           |

## Assessment against linked issues

| Objective                                                                      | Addressed | Explanation                                   |
|-------------------------------------------------------------------------------|-----------|-----------------------------------------------|
| Ensure select menu closes when clicked again (#[3276])                         | ‚úÖ        |                                               |
| Remove reliance on `ariaShouldCloseOnInteractOutside`                         | ‚úÖ        |                                               |
| Improve overall ARIA overlay management                                          | ‚úÖ        |                                               |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

```markdown
packages/components/autocomplete/src/use-autocomplete.ts: ## Summary
The `ariaShouldCloseOnInteractOutside` function import from `@nextui-org/aria-utils` has been removed in `use-autocomplete.ts`. Additionally, the handling of the `shouldCloseOnInteractOutside` property has been modified, simplifying the control flow by eliminating the conditional check and the associated function call. As a result, the `shouldCloseOnInteractOutside` property is no longer set based on the `popoverProps`, which may affect the behavior of the autocomplete component regarding how it responds to outside interactions.

## Alterations to the declarations of exported or public entities
- `export function useAutocomplete<T extends object>(originalProps: UseAutocompleteProps<T>)` in `packages/components/autocomplete/src/use-autocomplete.ts` ‚Üí No changes in the function signature.

---

packages/components/dropdown/src/use-dropdown.ts: ## Summary
The import for `ariaShouldCloseOnInteractOutside` has been removed in `use-dropdown.ts`. The assignment of the `shouldCloseOnInteractOutside` property from the `popoverProps` object has also been removed, indicating a change in how the dropdown component handles interactions outside of its boundaries, potentially altering its closing behavior when interacting with elements outside the dropdown.

## Alterations to the declarations of exported or public entities
- No changes to the declarations of exported or public entities were made in `packages/components/dropdown/src/use-dropdown.ts`.

---

packages/components/popover/package.json: ## Summary
The `popover` component's `package.json` has been updated with changes in peer dependencies, versions, and new dependencies, including the addition of `@nextui-org/use-aria-overlay` with a version specification of `workspace:*`. This change enhances the functionality of the popover component by potentially allowing it to utilize overlay features provided by the newly included package.

## Alterations to the declarations of exported or public entities
- `@nextui-org/use-aria-overlay` added as a dependency in `packages/components/popover/package.json`.

---

packages/components/popover/src/use-popover.ts: ## Summary
The import of `useEffect` from React has been removed in `use-popover.ts`, indicating that the component no longer relies on side effects managed by this hook. The handling of the `aria-haspopup` attribute has been altered, merging it with `triggerProps` and `otherProps` using the `mergeProps` function. Additionally, the entire `useEffect` block that was responsible for calling `ariaHideOutside` when the popover was open has been removed, indicating a significant change in the control flow.

## Alterations to the declarations of exported or public entities
- No changes to the declarations of exported or public entities were made in `packages/components/popover/src/use-popover.ts`.
```

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR summary

**Title**: refactor(overlays): improve stability, and complexity  
**User**: chirokas  
**Number**: 3467  
**URL**: [https://github.com/nextui-org/nextui/pull/3467](https://github.com/nextui-org/nextui/pull/3467)  

**Description**:  
This pull request involves a significant refactor of overlay components, such as popovers and modals, aimed at reducing complexity and enhancing stability. Key changes introduced in this PR include:

- A proper solution to address issue [#3060](https://github.com/nextui-org/nextui/issues/3060), replacing an outdated patch.
- Fixing the behavior where the select menu does not close when clicked again while open, as noted in linked issue #3276.
- Removal of `onClose: state.close`, as the `useInteractOutside` hook will manage this functionality.
- Elimination of duplicate `ariaHideOutside` in the Popover component.

Following these modifications, all dependent packages have been updated to ensure compatibility.

## Objectives from linked issues

The linked issue #3276 describes a bug in the select menu functionality within the NextUI framework. The objectives outlined in this issue are as follows:

- Ensure that the select menu closes when the select box is clicked again while the menu is open, addressing the current inconsistent behavior.
- Maintain the expected functionality where clicking outside the popup menu successfully closes it.
- Improve the overall user experience by aligning the select menu behavior with user expectations, thereby reducing potential confusion and frustration.

The issue highlights the importance of consistent interaction patterns in UI components, particularly in the context of dropdowns and select menus.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- a5732b721a863a8fc768d7ea2d2759a8aca4c6d4 -->
<!-- 48dca624f94dffff99e84c59752ae81a4e80e929 -->
<!-- 0f4aca002a127d484c9488dc76653e89a16dc428 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>



<!-- tips_end -->\n

Files Changed:
- .changeset/happy-socks-hug.md (added, 14 changes)\n  Patch: @@ -0,0 +1,14 @@
+---
+"@nextui-org/autocomplete": patch
+"@nextui-org/date-picker": patch
+"@nextui-org/dropdown": patch
+"@nextui-org/modal": patch
+"@nextui-org/popover": patch
+"@nextui-org/select": patch
+"@nextui-org/use-aria-modal-overlay": patch
+"@nextui-org/use-aria-multiselect": patch
+"@nextui-org/use-aria-overlay": patch
+"@nextui-org/aria-utils": patch
+---
+
+Refactor overlays to reduce its complexity, while improving stability.\n- packages/components/autocomplete/package.json (modified, 21 changes)\n  Patch: @@ -34,24 +34,23 @@
     "postpack": "clean-package restore"
   },
   "peerDependencies": {
-    "react": ">=18",
-    "react-dom": ">=18",
-    "framer-motion": ">=10.17.0",
+    "@nextui-org/system": ">=2.0.0",
     "@nextui-org/theme": ">=2.1.0",
-    "@nextui-org/system": ">=2.0.0"
+    "framer-motion": ">=10.17.0",
+    "react": ">=18",
+    "react-dom": ">=18"
   },
   "dependencies": {
-    "@nextui-org/aria-utils": "workspace:*",
+    "@nextui-org/button": "workspace:*",
+    "@nextui-org/input": "workspace:*",
     "@nextui-org/listbox": "workspace:*",
     "@nextui-org/popover": "workspace:*",
     "@nextui-org/react-utils": "workspace:*",
     "@nextui-org/scroll-shadow": "workspace:*",
+    "@nextui-org/shared-icons": "workspace:*",
     "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/spinner": "workspace:*",
-    "@nextui-org/input": "workspace:*",
-    "@nextui-org/button": "workspace:*",
     "@nextui-org/use-aria-button": "workspace:*",
-    "@nextui-org/shared-icons": "workspace:*",
     "@nextui-org/use-safe-layout-effect": "workspace:*",
     "@react-aria/combobox": "3.9.1",
     "@react-aria/focus": "3.17.1",
@@ -64,15 +63,15 @@
     "@react-types/shared": "3.23.1"
   },
   "devDependencies": {
-    "@nextui-org/theme": "workspace:*",
-    "@nextui-org/system": "workspace:*",
     "@nextui-org/avatar": "workspace:*",
     "@nextui-org/chip": "workspace:*",
     "@nextui-org/stories-utils": "workspace:*",
+    "@nextui-org/system": "workspace:*",
+    "@nextui-org/theme": "workspace:*",
     "@nextui-org/use-infinite-scroll": "workspace:*",
     "@react-stately/data": "3.11.4",
-    "framer-motion": "^11.0.28",
     "clean-package": "2.2.0",
+    "framer-motion": "^11.0.28",
     "react": "^18.0.0",
     "react-dom": "^18.0.0",
     "react-hook-form": "^7.51.3"\n- packages/components/autocomplete/src/use-autocomplete.ts (modified, 4 changes)\n  Patch: @@ -18,7 +18,6 @@ import {chain, mergeProps} from "@react-aria/utils";
 import {ButtonProps} from "@nextui-org/button";
 import {AsyncLoadable, PressEvent} from "@react-types/shared";
 import {useComboBox} from "@react-aria/combobox";
-import {ariaShouldCloseOnInteractOutside} from "@nextui-org/aria-utils";
 
 interface Props<T> extends Omit<HTMLNextUIProps<"input">, keyof ComboBoxProps<T>> {
   /**
@@ -444,9 +443,6 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
           ),
         }),
       },
-      shouldCloseOnInteractOutside: popoverProps?.shouldCloseOnInteractOutside
-        ? popoverProps.shouldCloseOnInteractOutside
-        : (element: Element) => ariaShouldCloseOnInteractOutside(element, inputWrapperRef, state),
       // when the popover is open, the focus should be on input instead of dialog
       // therefore, we skip dialog focus here
       disableDialogFocus: true,\n- packages/components/date-picker/package.json (modified, 23 changes)\n  Patch: @@ -40,29 +40,28 @@
     "react-dom": ">=18"
   },
   "dependencies": {
-    "@nextui-org/react-utils": "workspace:*",
-    "@nextui-org/shared-utils": "workspace:*",
-    "@nextui-org/popover": "workspace:*",
-    "@nextui-org/calendar": "workspace:*",
+    "@internationalized/date": "^3.5.4",
     "@nextui-org/button": "workspace:*",
+    "@nextui-org/calendar": "workspace:*",
     "@nextui-org/date-input": "workspace:*",
+    "@nextui-org/popover": "workspace:*",
+    "@nextui-org/react-utils": "workspace:*",
     "@nextui-org/shared-icons": "workspace:*",
-    "@nextui-org/aria-utils": "workspace:*",
-    "@react-stately/overlays": "3.6.7",
-    "@react-stately/utils": "3.10.1",
-    "@internationalized/date": "^3.5.4",
+    "@nextui-org/shared-utils": "workspace:*",
     "@react-aria/datepicker": "3.10.1",
     "@react-aria/i18n": "3.11.1",
+    "@react-aria/utils": "3.24.1",
     "@react-stately/datepicker": "3.9.4",
+    "@react-stately/overlays": "3.6.7",
+    "@react-stately/utils": "3.10.1",
     "@react-types/datepicker": "3.7.4",
-    "@react-types/shared": "3.23.1",
-    "@react-aria/utils": "3.24.1"
+    "@react-types/shared": "3.23.1"
   },
   "devDependencies": {
-    "@nextui-org/system": "workspace:*",
-    "@nextui-org/theme": "workspace:*",
     "@nextui-org/radio": "workspace:*",
+    "@nextui-org/system": "workspace:*",
     "@nextui-org/test-utils": "workspace:*",
+    "@nextui-org/theme": "workspace:*",
     "clean-package": "2.2.0",
     "react": "^18.0.0",
     "react-dom": "^18.0.0"\n- packages/components/date-picker/src/use-date-picker.ts (modified, 4 changes)\n  Patch: @@ -15,7 +15,6 @@ import {useDatePickerState} from "@react-stately/datepicker";
 import {AriaDatePickerProps, useDatePicker as useAriaDatePicker} from "@react-aria/datepicker";
 import {clsx, dataAttr, objectToDeps} from "@nextui-org/shared-utils";
 import {mergeProps} from "@react-aria/utils";
-import {ariaShouldCloseOnInteractOutside} from "@nextui-org/aria-utils";
 
 import {useDatePickerBase} from "./use-date-picker-base";
 
@@ -193,9 +192,6 @@ export function useDatePicker<T extends DateValue>({
           ),
         }),
       },
-      shouldCloseOnInteractOutside: popoverProps?.shouldCloseOnInteractOutside
-        ? popoverProps.shouldCloseOnInteractOutside
-        : (element: Element) => ariaShouldCloseOnInteractOutside(element, popoverTriggerRef, state),
     };
   };
 \n- packages/components/date-picker/src/use-date-range-picker.ts (modified, 4 changes)\n  Patch: @@ -21,7 +21,6 @@ import {useDateRangePicker as useAriaDateRangePicker} from "@react-aria/datepick
 import {clsx, dataAttr, objectToDeps} from "@nextui-org/shared-utils";
 import {mergeProps} from "@react-aria/utils";
 import {dateRangePicker, dateInput, cn} from "@nextui-org/theme";
-import {ariaShouldCloseOnInteractOutside} from "@nextui-org/aria-utils";
 
 import {useDatePickerBase} from "./use-date-picker-base";
 interface Props<T extends DateValue>
@@ -216,9 +215,6 @@ export function useDateRangePicker<T extends DateValue>({
           ),
         }),
       },
-      shouldCloseOnInteractOutside: popoverProps?.shouldCloseOnInteractOutside
-        ? popoverProps.shouldCloseOnInteractOutside
-        : (element: Element) => ariaShouldCloseOnInteractOutside(element, popoverTriggerRef, state),
     } as PopoverProps;
   };
 \n- packages/components/dropdown/package.json (modified, 23 changes)\n  Patch: @@ -34,35 +34,34 @@
     "postpack": "clean-package restore"
   },
   "peerDependencies": {
-    "react": ">=18",
-    "react-dom": ">=18",
-    "framer-motion": ">=10.17.0",
+    "@nextui-org/system": ">=2.0.0",
     "@nextui-org/theme": ">=2.1.0",
-    "@nextui-org/system": ">=2.0.0"
+    "framer-motion": ">=10.17.0",
+    "react": ">=18",
+    "react-dom": ">=18"
   },
   "dependencies": {
     "@nextui-org/menu": "workspace:*",
     "@nextui-org/popover": "workspace:*",
-    "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/react-utils": "workspace:*",
-    "@nextui-org/aria-utils": "workspace:*",
+    "@nextui-org/shared-utils": "workspace:*",
+    "@react-aria/focus": "3.17.1",
     "@react-aria/menu": "3.14.1",
     "@react-aria/utils": "3.24.1",
     "@react-stately/menu": "3.7.1",
-    "@react-aria/focus": "3.17.1",
     "@react-types/menu": "3.9.9"
   },
   "devDependencies": {
-    "@nextui-org/theme": "workspace:*",
-    "@nextui-org/system": "workspace:*",
-    "@nextui-org/button": "workspace:*",
     "@nextui-org/avatar": "workspace:*",
-    "@nextui-org/user": "workspace:*",
+    "@nextui-org/button": "workspace:*",
     "@nextui-org/image": "workspace:*",
     "@nextui-org/shared-icons": "workspace:*",
+    "@nextui-org/system": "workspace:*",
     "@nextui-org/test-utils": "workspace:*",
-    "framer-motion": "^11.0.22",
+    "@nextui-org/theme": "workspace:*",
+    "@nextui-org/user": "workspace:*",
     "clean-package": "2.2.0",
+    "framer-motion": "^11.0.22",
     "react": "^18.0.0",
     "react-dom": "^18.0.0"
   },\n- packages/components/dropdown/src/use-dropdown.ts (modified, 4 changes)\n  Patch: @@ -9,7 +9,6 @@ import {useMenuTrigger} from "@react-aria/menu";
 import {dropdown} from "@nextui-org/theme";
 import {clsx} from "@nextui-org/shared-utils";
 import {ReactRef, mergeRefs} from "@nextui-org/react-utils";
-import {ariaShouldCloseOnInteractOutside} from "@nextui-org/aria-utils";
 import {useMemo, useRef} from "react";
 import {mergeProps} from "@react-aria/utils";
 import {MenuProps} from "@nextui-org/menu";
@@ -123,9 +122,6 @@ export function useDropdown(props: UseDropdownProps) {
         ...props.classNames,
         content: clsx(classNames, classNamesProp?.content, props.className),
       },
-      shouldCloseOnInteractOutside: popoverProps?.shouldCloseOnInteractOutside
-        ? popoverProps.shouldCloseOnInteractOutside
-        : (element: Element) => ariaShouldCloseOnInteractOutside(element, triggerRef, state),
     };
   };
 \n- packages/components/modal/__tests__/modal.test.tsx (modified, 35 changes)\n  Patch: @@ -1,5 +1,6 @@
 import * as React from "react";
 import {act, render, fireEvent} from "@testing-library/react";
+import userEvent from "@testing-library/user-event";
 
 import {Modal, ModalContent, ModalBody, ModalHeader, ModalFooter} from "../src";
 
@@ -108,4 +109,38 @@ describe("Modal", () => {
     fireEvent.keyDown(modal, {key: "Escape"});
     expect(onClose).toHaveBeenCalledTimes(1);
   });
+
+  it("should only hide the top-most modal", async () => {
+    const onClose1 = jest.fn();
+    const onClose2 = jest.fn();
+
+    render(
+      <Modal isOpen onClose={onClose1}>
+        <ModalContent>
+          <ModalHeader>Modal header</ModalHeader>
+          <ModalBody>Modal body</ModalBody>
+          <ModalFooter>Modal footer</ModalFooter>
+        </ModalContent>
+      </Modal>,
+    );
+
+    const wrapper2 = render(
+      <Modal isOpen onClose={onClose2}>
+        <ModalContent>
+          <ModalHeader>Modal header</ModalHeader>
+          <ModalBody>Modal body</ModalBody>
+          <ModalFooter>Modal footer</ModalFooter>
+        </ModalContent>
+      </Modal>,
+    );
+
+    await userEvent.click(document.body);
+    expect(onClose1).not.toHaveBeenCalled();
+    expect(onClose2).toHaveBeenCalledTimes(1);
+
+    wrapper2.unmount();
+
+    await userEvent.click(document.body);
+    expect(onClose1).toHaveBeenCalledTimes(1);
+  });
 });\n- packages/components/modal/src/use-modal.ts (modified, 1 changes)\n  Patch: @@ -169,7 +169,6 @@ export function useModal(originalProps: UseModalProps) {
   const getBackdropProps = useCallback<PropGetter>(
     (props = {}) => ({
       className: slots.backdrop({class: classNames?.backdrop}),
-      onClick: () => state.close(),
       ...underlayProps,
       ...props,
     }),\n- packages/components/popover/package.json (modified, 1 changes)\n  Patch: @@ -47,6 +47,7 @@
     "@nextui-org/react-utils": "workspace:*",
     "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/use-aria-button": "workspace:*",
+    "@nextui-org/use-aria-overlay": "workspace:*",
     "@nextui-org/use-safe-layout-effect": "workspace:*",
     "@react-aria/dialog": "3.5.14",
     "@react-aria/focus": "3.17.1",\n- packages/components/popover/src/use-aria-popover.ts (modified, 17 changes)\n  Patch: @@ -1,20 +1,15 @@
 import {RefObject, useEffect} from "react";
 import {
   AriaPopoverProps,
-  useOverlay,
   PopoverAria,
   useOverlayPosition,
   AriaOverlayProps,
 } from "@react-aria/overlays";
-import {
-  OverlayPlacement,
-  ariaHideOutside,
-  toReactAriaPlacement,
-  ariaShouldCloseOnInteractOutside,
-} from "@nextui-org/aria-utils";
+import {OverlayPlacement, ariaHideOutside, toReactAriaPlacement} from "@nextui-org/aria-utils";
 import {OverlayTriggerState} from "@react-stately/overlays";
 import {mergeProps} from "@react-aria/utils";
 import {useSafeLayoutEffect} from "@nextui-org/use-safe-layout-effect";
+import {useAriaOverlay} from "@nextui-org/use-aria-overlay";
 
 export interface Props {
   /**
@@ -71,16 +66,16 @@ export function useReactAriaPopover(
 
   const isNonModal = isNonModalProp ?? true;
 
-  const {overlayProps, underlayProps} = useOverlay(
+  const {overlayProps, underlayProps} = useAriaOverlay(
     {
       isOpen: state.isOpen,
       onClose: state.close,
       shouldCloseOnBlur,
       isDismissable,
       isKeyboardDismissDisabled,
-      shouldCloseOnInteractOutside: shouldCloseOnInteractOutside
-        ? shouldCloseOnInteractOutside
-        : (element: Element) => ariaShouldCloseOnInteractOutside(element, triggerRef, state),
+      shouldCloseOnInteractOutside:
+        shouldCloseOnInteractOutside || ((el) => !triggerRef.current?.contains(el)),
+      disableOutsideEvents: !isNonModal,
     },
     popoverRef,
   );\n- packages/components/popover/src/use-popover.ts (modified, 13 changes)\n  Patch: @@ -2,11 +2,11 @@ import type {PopoverVariantProps, SlotsToClasses, PopoverSlots} from "@nextui-or
 import type {HTMLMotionProps} from "framer-motion";
 import type {PressEvent} from "@react-types/shared";
 
-import {RefObject, Ref, useEffect} from "react";
+import {RefObject, Ref} from "react";
 import {ReactRef, useDOMRef} from "@nextui-org/react-utils";
 import {OverlayTriggerState, useOverlayTriggerState} from "@react-stately/overlays";
 import {useFocusRing} from "@react-aria/focus";
-import {ariaHideOutside, useOverlayTrigger, usePreventScroll} from "@react-aria/overlays";
+import {useOverlayTrigger, usePreventScroll} from "@react-aria/overlays";
 import {OverlayTriggerProps} from "@react-types/overlays";
 import {
   HTMLNextUIProps,
@@ -263,8 +263,7 @@ export function usePopover(originalProps: UsePopoverProps) {
 
       return {
         "data-slot": "trigger",
-        "aria-haspopup": "dialog",
-        ...mergeProps(triggerProps, otherProps),
+        ...mergeProps({"aria-haspopup": "dialog"}, triggerProps, otherProps),
         onPress,
         isDisabled,
         className: slots.trigger({
@@ -299,12 +298,6 @@ export function usePopover(originalProps: UsePopoverProps) {
     [slots, state.isOpen, classNames, underlayProps],
   );
 
-  useEffect(() => {
-    if (state.isOpen && domRef?.current) {
-      return ariaHideOutside([domRef?.current]);
-    }
-  }, [state.isOpen, domRef]);
-
   usePreventScroll({
     isDisabled: !(shouldBlockScroll && state.isOpen),
   });\n- packages/components/select/package.json (modified, 21 changes)\n  Patch: @@ -34,21 +34,20 @@
     "postpack": "clean-package restore"
   },
   "peerDependencies": {
-    "react": ">=18",
-    "react-dom": ">=18",
-    "framer-motion": ">=10.17.0",
+    "@nextui-org/system": ">=2.0.0",
     "@nextui-org/theme": ">=2.1.0",
-    "@nextui-org/system": ">=2.0.0"
+    "framer-motion": ">=10.17.0",
+    "react": ">=18",
+    "react-dom": ">=18"
   },
   "dependencies": {
-    "@nextui-org/aria-utils": "workspace:*",
     "@nextui-org/listbox": "workspace:*",
     "@nextui-org/popover": "workspace:*",
-    "@nextui-org/spinner": "workspace:*",
     "@nextui-org/react-utils": "workspace:*",
     "@nextui-org/scroll-shadow": "workspace:*",
     "@nextui-org/shared-icons": "workspace:*",
     "@nextui-org/shared-utils": "workspace:*",
+    "@nextui-org/spinner": "workspace:*",
     "@nextui-org/use-aria-button": "workspace:*",
     "@nextui-org/use-aria-multiselect": "workspace:*",
     "@nextui-org/use-safe-layout-effect": "workspace:*",
@@ -60,18 +59,18 @@
     "@react-types/shared": "3.23.1"
   },
   "devDependencies": {
-    "@nextui-org/theme": "workspace:*",
-    "@nextui-org/system": "workspace:*",
-    "@nextui-org/button": "workspace:*",
     "@nextui-org/avatar": "workspace:*",
-    "@nextui-org/input": "workspace:*",
+    "@nextui-org/button": "workspace:*",
     "@nextui-org/chip": "workspace:*",
+    "@nextui-org/input": "workspace:*",
     "@nextui-org/stories-utils": "workspace:*",
+    "@nextui-org/system": "workspace:*",
+    "@nextui-org/theme": "workspace:*",
     "@nextui-org/use-infinite-scroll": "workspace:*",
-    "framer-motion": "^11.0.28",
     "@react-aria/i18n": "3.11.1",
     "@react-stately/data": "3.11.4",
     "clean-package": "2.2.0",
+    "framer-motion": "^11.0.28",
     "react": "^18.0.0",
     "react-dom": "^18.0.0",
     "react-hook-form": "^7.51.3"\n- packages/components/select/src/use-select.ts (modified, 4 changes)\n  Patch: @@ -28,7 +28,6 @@ import {
 } from "@nextui-org/use-aria-multiselect";
 import {SpinnerProps} from "@nextui-org/spinner";
 import {useSafeLayoutEffect} from "@nextui-org/use-safe-layout-effect";
-import {ariaShouldCloseOnInteractOutside} from "@nextui-org/aria-utils";
 import {CollectionChildren} from "@react-types/shared";
 
 export type SelectedItemProps<T = object> = {
@@ -530,9 +529,6 @@ export function useSelect<T extends object>(originalProps: UseSelectProps<T>) {
             ? // forces the popover to update its position when the selected items change
               state.selectedItems.length * 0.00000001 + (slotsProps.popoverProps?.offset || 0)
             : slotsProps.popoverProps?.offset,
-        shouldCloseOnInteractOutside: popoverProps?.shouldCloseOnInteractOutside
-          ? popoverProps.shouldCloseOnInteractOutside
-          : (element: Element) => ariaShouldCloseOnInteractOutside(element, domRef, state),
       } as PopoverProps;
     },
     [\n- packages/hooks/use-aria-modal-overlay/package.json (modified, 1 changes)\n  Patch: @@ -34,6 +34,7 @@
     "postpack": "clean-package restore"
   },
   "dependencies": {
+    "@nextui-org/use-aria-overlay": "workspace:*",
     "@react-aria/overlays": "3.22.1",
     "@react-aria/utils": "3.24.1",
     "@react-stately/overlays": "3.6.7",\n- packages/hooks/use-aria-modal-overlay/src/index.ts (modified, 4 changes)\n  Patch: @@ -1,8 +1,8 @@
+import {useAriaOverlay} from "@nextui-org/use-aria-overlay";
 import {
   ariaHideOutside,
   AriaModalOverlayProps,
   ModalOverlayAria,
-  useOverlay,
   usePreventScroll,
   useOverlayFocusContain,
 } from "@react-aria/overlays";
@@ -21,7 +21,7 @@ export function useAriaModalOverlay(
   state: OverlayTriggerState,
   ref: RefObject<HTMLElement>,
 ): ModalOverlayAria {
-  let {overlayProps, underlayProps} = useOverlay(
+  let {overlayProps, underlayProps} = useAriaOverlay(
     {
       ...props,
       isOpen: state.isOpen,\n- packages/hooks/use-aria-multiselect/src/use-multiselect.ts (modified, 6 changes)\n  Patch: @@ -112,6 +112,12 @@ export function useMultiSelect<T>(
   typeSelectProps.onKeyDown = typeSelectProps.onKeyDownCapture;
   delete typeSelectProps.onKeyDownCapture;
 
+  menuTriggerProps.onPressStart = (e) => {
+    if (e.pointerType !== "touch" && e.pointerType !== "keyboard" && !isDisabled) {
+      state.toggle(e.pointerType === "virtual" ? "first" : null);
+    }
+  };
+
   const domProps = filterDOMProps(props, {labelable: true});
   const triggerProps = mergeProps(typeSelectProps, menuTriggerProps, fieldProps);
 \n- packages/hooks/use-aria-overlay/README.md (added, 24 changes)\n  Patch: @@ -0,0 +1,24 @@
+# @nextui-org/use-aria-overlay
+
+A Quick description of the component
+
+> This is an internal utility, not intended for public usage.
+
+## Installation
+
+```sh
+yarn add @nextui-org/use-aria-overlay
+# or
+npm i @nextui-org/use-aria-overlay
+```
+
+## Contribution
+
+Yes please! See the
+[contributing guidelines](https://github.com/nextui-org/nextui/blob/master/CONTRIBUTING.md)
+for details.
+
+## License
+
+This project is licensed under the terms of the
+[MIT license](https://github.com/nextui-org/nextui/blob/master/LICENSE).\n- packages/hooks/use-aria-overlay/package.json (added, 60 changes)\n  Patch: @@ -0,0 +1,60 @@
+{
+  "name": "@nextui-org/use-aria-overlay",
+  "version": "2.0.0",
+  "description": "A custom implementation of react aria overlay",
+  "keywords": [
+    "use-aria-overlay"
+  ],
+  "author": "Junior Garcia <jrgarciadev@gmail.com>",
+  "homepage": "https://nextui.org",
+  "license": "MIT",
+  "main": "src/index.ts",
+  "sideEffects": false,
+  "files": [
+    "dist"
+  ],
+  "publishConfig": {
+    "access": "public"
+  },
+  "repository": {
+    "type": "git",
+    "url": "git+https://github.com/nextui-org/nextui.git",
+    "directory": "packages/hooks/use-aria-overlay"
+  },
+  "bugs": {
+    "url": "https://github.com/nextui-org/nextui/issues"
+  },
+  "scripts": {
+    "build": "tsup src --dts",
+    "build:fast": "tsup src",
+    "dev": "pnpm build:fast --watch",
+    "clean": "rimraf dist .turbo",
+    "typecheck": "tsc --noEmit",
+    "prepack": "clean-package",
+    "postpack": "clean-package restore"
+  },
+  "dependencies": {
+    "@react-aria/focus": "3.17.1",
+    "@react-aria/interactions": "3.21.3",
+    "@react-aria/overlays": "3.22.1",
+    "@react-types/shared": "3.23.1"
+  },
+  "peerDependencies": {
+    "react": ">=18",
+    "react-dom": ">=18"
+  },
+  "devDependencies": {
+    "clean-package": "2.2.0",
+    "react": "^18.0.0",
+    "react-dom": "^18.0.0"
+  },
+  "clean-package": "../../../clean-package.config.json",
+  "tsup": {
+    "clean": true,
+    "target": "es2019",
+    "format": [
+      "cjs",
+      "esm"
+    ]
+  }
+}\n- packages/hooks/use-aria-overlay/src/index.ts (added, 151 changes)\n  Patch: @@ -0,0 +1,151 @@
+import type {AriaOverlayProps, OverlayAria} from "@react-aria/overlays";
+import type {RefObject} from "react";
+import type React from "react";
+
+import {isElementInChildOfActiveScope} from "@react-aria/focus";
+import {useFocusWithin, useInteractOutside} from "@react-aria/interactions";
+import {useEffect} from "react";
+
+export interface UseAriaOverlayProps extends AriaOverlayProps {
+  /**
+   * When `true`, `click/focus` interactions will be disabled on elements outside
+   * the `Overlay`. Users need to click twice on outside elements to interact with them:
+   * once to close the overlay, and again to trigger the element.
+   *
+   * @default true
+   */
+  disableOutsideEvents?: boolean;
+}
+
+const visibleOverlays: RefObject<Element | null>[] = [];
+
+/**
+ * Provides the behavior for overlays such as dialogs, popovers, and menus.
+ * Hides the overlay when the user interacts outside it, when the Escape key is pressed,
+ * or optionally, on blur. Only the top-most overlay will close at once.
+ */
+export function useAriaOverlay(props: UseAriaOverlayProps, ref: RefObject<Element>): OverlayAria {
+  const {
+    disableOutsideEvents = true,
+    isDismissable = false,
+    isKeyboardDismissDisabled = false,
+    isOpen,
+    onClose,
+    shouldCloseOnBlur,
+    shouldCloseOnInteractOutside,
+  } = props;
+
+  // Add the overlay ref to the stack of visible overlays on mount, and remove on unmount.
+  useEffect(() => {
+    if (isOpen) {
+      visibleOverlays.push(ref);
+    }
+
+    return () => {
+      const index = visibleOverlays.indexOf(ref);
+
+      if (index >= 0) {
+        visibleOverlays.splice(index, 1);
+      }
+    };
+  }, [isOpen, ref]);
+
+  // Only hide the overlay when it is the topmost visible overlay in the stack
+  const onHide = () => {
+    if (visibleOverlays[visibleOverlays.length - 1] === ref && onClose) {
+      onClose();
+    }
+  };
+
+  const onInteractOutsideStart = (e: PointerEvent) => {
+    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target as Element)) {
+      if (visibleOverlays[visibleOverlays.length - 1] === ref) {
+        if (disableOutsideEvents) {
+          e.stopPropagation();
+          e.preventDefault();
+        }
+      }
+
+      // For consistency with React Aria, toggle the combobox/menu on mouse down, but touch up.
+      if (e.pointerType !== "touch") {
+        onHide();
+      }
+    }
+  };
+
+  const onInteractOutside = (e: PointerEvent) => {
+    if (e.pointerType !== "touch") {
+      return;
+    }
+
+    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target as Element)) {
+      if (visibleOverlays[visibleOverlays.length - 1] === ref) {
+        if (disableOutsideEvents) {
+          e.stopPropagation();
+          e.preventDefault();
+        }
+      }
+
+      onHide();
+    }
+  };
+
+  // Handle the escape key
+  const onKeyDown = (e: React.KeyboardEvent) => {
+    if (e.key === "Escape" && !isKeyboardDismissDisabled && !e.nativeEvent.isComposing) {
+      e.stopPropagation();
+      e.preventDefault();
+      onHide();
+    }
+  };
+
+  // Handle clicking outside the overlay to close it
+  useInteractOutside({
+    isDisabled: !(isDismissable && isOpen),
+    onInteractOutside,
+    onInteractOutsideStart,
+    ref,
+  });
+
+  const {focusWithinProps} = useFocusWithin({
+    isDisabled: !shouldCloseOnBlur,
+    onBlurWithin: (e) => {
+      // Do not close if relatedTarget is null, which means focus is lost to the body.
+      // That can happen when switching tabs, or due to a VoiceOver/Chrome bug with Control+Option+Arrow navigation.
+      // Clicking on the body to close the overlay should already be handled by useInteractOutside.
+      // https://github.com/adobe/react-spectrum/issues/4130
+      // https://github.com/adobe/react-spectrum/issues/4922
+      //
+      // If focus is moving into a child focus scope (e.g. menu inside a dialog),
+      // do not close the outer overlay. At this point, the active scope should
+      // still be the outer overlay, since blur events run before focus.
+      if (!e.relatedTarget || isElementInChildOfActiveScope(e.relatedTarget)) {
+        return;
+      }
+
+      if (
+        !shouldCloseOnInteractOutside ||
+        shouldCloseOnInteractOutside(e.relatedTarget as Element)
+      ) {
+        onHide();
+      }
+    },
+  });
+
+  const onPointerDownUnderlay = (e: React.PointerEvent) => {
+    // fixes a firefox issue that starts text selection https://bugzilla.mozilla.org/show_bug.cgi?id=1675846
+    if (e.target === e.currentTarget) {
+      e.preventDefault();
+    }
+  };
+
+  return {
+    overlayProps: {
+      onKeyDown,
+      ...focusWithinProps,
+    },
+    underlayProps: {
+      onPointerDown: onPointerDownUnderlay,
+    },
+  };
+}\n- packages/hooks/use-aria-overlay/tsconfig.json (added, 4 changes)\n  Patch: @@ -0,0 +1,4 @@
+{
+  "extends": "../../../tsconfig.json",
+  "include": ["src", "index.ts"]
+}\n- packages/utilities/aria-utils/src/index.ts (modified, 1 changes)\n  Patch: @@ -7,7 +7,6 @@ export {isNonContiguousSelectionModifier, isCtrlKeyPressed} from "./utils";
 
 export {
   ariaHideOutside,
-  ariaShouldCloseOnInteractOutside,
   getTransformOrigins,
   toReactAriaPlacement,
   toOverlayPlacement,\n- packages/utilities/aria-utils/src/overlays/ariaShouldCloseOnInteractOutside.ts (removed, 45 changes)\n  Patch: @@ -1,45 +0,0 @@
-import {RefObject} from "react";
-
-/**
- * Used to handle the outside interaction for popover-based components
- * e.g. dropdown, datepicker, date-range-picker, popover, select, autocomplete etc
- * @param element - the element outside of the popover ref, originally from `shouldCloseOnInteractOutside`
- * @param triggerRef - The trigger ref object
- * @param state - The state from the popover component
- * @returns - a boolean value which is same as shouldCloseOnInteractOutside
- */
-export const ariaShouldCloseOnInteractOutside = (
-  element: Element,
-  triggerRef: RefObject<Element>,
-  state: any,
-) => {
-  const trigger = triggerRef?.current;
-
-  if (!trigger || !trigger.contains(element)) {
-    // if there is focus scope block, there will be a pair of span[data-focus-scope-start] and span[data-focus-scope-end]
-    // the element with focus trap resides inbetween these two blocks
-    // we push all the elements in focus scope to `focusScopeElements`
-    const startElements = document.querySelectorAll("body > span[data-focus-scope-start]");
-    let focusScopeElements: Element[] = [];
-
-    startElements.forEach((startElement) => {
-      focusScopeElements.push(startElement.nextElementSibling!);
-    });
-
-    // if there is just one focusScopeElement, we close the state
-    // e.g. open a popover A -> click popover B
-    // then popover A should be closed and popover B should be open
-    // TODO: handle cases like modal > popover A -> click modal > popover B
-    // we should close the popover when it is the last opened
-    // however, currently ariaShouldCloseOnInteractOutside is called recursively
-    // and we need a way to check if there is something closed before that (i.e. nested elements)
-    // if so, popover shouldn't be closed in this case
-    if (focusScopeElements.length === 1) {
-      state.close();
-
-      return false;
-    }
-  }
-
-  return !trigger || !trigger.contains(element);
-};\n- packages/utilities/aria-utils/src/overlays/index.ts (modified, 1 changes)\n  Patch: @@ -9,4 +9,3 @@ export {
 } from "./utils";
 
 export {ariaHideOutside} from "./ariaHideOutside";
-export {ariaShouldCloseOnInteractOutside} from "./ariaShouldCloseOnInteractOutside";\n- pnpm-lock.yaml (modified, 51 changes)\n  Patch: @@ -686,9 +686,6 @@ importers:
 
   packages/components/autocomplete:
     dependencies:
-      '@nextui-org/aria-utils':
-        specifier: workspace:*
-        version: link:../../utilities/aria-utils
       '@nextui-org/button':
         specifier: workspace:*
         version: link:../button
@@ -1327,9 +1324,6 @@ importers:
       '@internationalized/date':
         specifier: ^3.5.4
         version: 3.5.4
-      '@nextui-org/aria-utils':
-        specifier: workspace:*
-        version: link:../../utilities/aria-utils
       '@nextui-org/button':
         specifier: workspace:*
         version: link:../button
@@ -1428,9 +1422,6 @@ importers:
 
   packages/components/dropdown:
     dependencies:
-      '@nextui-org/aria-utils':
-        specifier: workspace:*
-        version: link:../../utilities/aria-utils
       '@nextui-org/menu':
         specifier: workspace:*
         version: link:../menu
@@ -2014,6 +2005,9 @@ importers:
       '@nextui-org/use-aria-button':
         specifier: workspace:*
         version: link:../../hooks/use-aria-button
+      '@nextui-org/use-aria-overlay':
+        specifier: workspace:*
+        version: link:../../hooks/use-aria-overlay
       '@nextui-org/use-safe-layout-effect':
         specifier: workspace:*
         version: link:../../hooks/use-safe-layout-effect
@@ -2226,9 +2220,6 @@ importers:
 
   packages/components/select:
     dependencies:
-      '@nextui-org/aria-utils':
-        specifier: workspace:*
-        version: link:../../utilities/aria-utils
       '@nextui-org/listbox':
         specifier: workspace:*
         version: link:../listbox
@@ -3254,6 +3245,9 @@ importers:
 
   packages/hooks/use-aria-modal-overlay:
     dependencies:
+      '@nextui-org/use-aria-overlay':
+        specifier: workspace:*
+        version: link:../use-aria-overlay
       '@react-aria/overlays':
         specifier: 3.22.1
         version: 3.22.1(react-dom@18.2.0(react@18.2.0))(react@18.2.0)
@@ -3332,6 +3326,31 @@ importers:
         specifier: ^18.2.0
         version: 18.2.0(react@18.2.0)
 
+  packages/hooks/use-aria-overlay:
+    dependencies:
+      '@react-aria/focus':
+        specifier: 3.17.1
+        version: 3.17.1(react@18.2.0)
+      '@react-aria/interactions':
+        specifier: 3.21.3
+        version: 3.21.3(react@18.2.0)
+      '@react-aria/overlays':
+        specifier: 3.22.1
+        version: 3.22.1(react-dom@18.2.0(react@18.2.0))(react@18.2.0)
+      '@react-types/shared':
+        specifier: 3.23.1
+        version: 3.23.1(react@18.2.0)
+    devDependencies:
+      clean-package:
+        specifier: 2.2.0
+        version: 2.2.0
+      react:
+        specifier: ^18.2.0
+        version: 18.2.0
+      react-dom:
+        specifier: ^18.2.0
+        version: 18.2.0(react@18.2.0)
+
   packages/hooks/use-aria-toggle-button:
     dependencies:
       '@nextui-org/use-aria-button':
@@ -18068,13 +18087,15 @@ snapshots:
     transitivePeerDependencies:
       - '@parcel/core'
 
-  '@parcel/cache@2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))':
+  '@parcel/cache@2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))(@swc/helpers@0.5.9)':
     dependencies:
       '@parcel/core': 2.12.0(@swc/helpers@0.5.9)
       '@parcel/fs': 2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))(@swc/helpers@0.5.9)
       '@parcel/logger': 2.12.0
       '@parcel/utils': 2.12.0
       lmdb: 2.8.5
+    transitivePeerDependencies:
+      - '@swc/helpers'
 
   '@parcel/codeframe@2.12.0':
     dependencies:
@@ -18134,7 +18155,7 @@ snapshots:
   '@parcel/core@2.12.0(@swc/helpers@0.5.9)':
     dependencies:
       '@mischnic/json-sourcemap': 0.1.1
-      '@parcel/cache': 2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))
+      '@parcel/cache': 2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))(@swc/helpers@0.5.9)
       '@parcel/diagnostic': 2.12.0
       '@parcel/events': 2.12.0
       '@parcel/fs': 2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))(@swc/helpers@0.5.9)
@@ -18549,7 +18570,7 @@ snapshots:
 
   '@parcel/types@2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))(@swc/helpers@0.5.9)':
     dependencies:
-      '@parcel/cache': 2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))
+      '@parcel/cache': 2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))(@swc/helpers@0.5.9)
       '@parcel/diagnostic': 2.12.0
       '@parcel/fs': 2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))(@swc/helpers@0.5.9)
       '@parcel/package-manager': 2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))(@swc/helpers@0.5.9)\n
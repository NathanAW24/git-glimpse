Pull Request Number: 465
Title: v1.0.0-beta.7
Base Branch: main
Head Branch: next
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/465
State: MERGED
Created At: 2022-05-09T23:55:38Z
Merged At: 2022-05-10T00:09:26Z
Participants: jrgarciadev, tianenpang, HenryZhang-ZHY

Description:
Closes
#291  PR: #434
#453 PR: #434
#439 PR: #440
#426 PR: #447
#431 PR: #448
#391 PR: #451
#458 PR: #459
#456 PR: #460
ðŸš€ New behavior

Accessible base theme palette with the right contrast and better scales starting at 50 and ending at 900, based on the radix-ui colors package https://www.radix-ui.com/colors
@react-aria packages have been upgraded
Refactor Checkbox, the properties are now integrated with @react-aria/checkbox via mapping, which usually results in missing or unstructured props.

ðŸ’£ Is this a breaking change (Yes/No): Yes
Checkbox



OLD APIs
NEW APIs




checked
isSelected


initialChecked
defaultSelected


disabled
isDisabled


indeterminate
isIndeterminate


readOnly
isReadOnly


required
isRequired


animated
disableAnimation


rounded
isRounded


line
lineThrough



Checkbox.Group



OLD APIs
NEW APIs




row
isRow

Commits:
- fix: remove initialChecked from label props\n- feat(react-theme): theme palette improved and meets accesibility standards\n- fix: add rowsPerPage to initialValues\n- feat(react-theme): colors created, docs have been modified to contrast with the new palette\n- feat(react-theme): documentation and components have been updated to fit with the new palette\n- feat(react-theme): content new palette fit\n- feat(react-theme): components refinements according to the new palatte\n- Merge pull request #443 from nextui-org/refactor/theme-palette

Refactor/theme palette\n- Merge pull request #440 from tianenpang/fix/pagination-table-ssr

fix: #439 server side rendering of table with pagination\n- chore(docs): customization section descrription improved\n- fix(react-card):  :first-child/:last-child margin was removed\n- Merge pull request #444 from nextui-org/fix/remove-first-last-child-card-margin-styles

fix(react-card):  :first-child/:last-child margin was removed\n- fix: ghost button fixed on mobile\n- Merge pull request #445 from nextui-org/fix/mobile-ghost-button

fix: ghost button fixed on mobile\n- fix(react-link): wrap it into a single child\n- Merge pull request #446 from nextui-org/fix/link-children

fix(react-link): wrap it into a single child\n- fix(react-button): onClick function is now beign dispatched\n- Merge pull request #447 from nextui-org/fix_426/button-onclick-keyboard

Fix 426/button onclick keyboard\n- fix(react-checkbox): initialChecked taken out from the props\n- Merge pull request #448 from nextui-org/fix_431/checkbox-initial-checked

Fix 431/checkbox initial checked\n- fix(react-link): opacity with a text-gradient link on Chrome becomes black\n- Merge branch 'main' of github.com:nextui-org/nextui into next\n- chore(react-root): react aria package have been upgraded\n- Merge pull request #457 from nextui-org/refactor/upgrade-react-aria-packages

chore(react-root): react aria package have been upgraded\n- refactor: checkbox\n- fix(react-popover): The content of the popover appears blurred Closes: #458\n- Merge pull request #459 from nextui-org/fix_458/blurred-popover-content

fix(react-popover): The content of the popover appears blurred Closesâ€¦\n- fix: rename use-checkbox-group\n- refactor: update apis owned by nextui and fix table integration\n- fix(docs): blurred parts were replaced by solid colors on firefox\n- fix(react-modal): blurred modal background has been replaced by solid color on firefox\n- Merge pull request #460 from nextui-org/fix_456/unblurred-menu-bar-firefox

Fix 456/unblurred menu bar firefox\n- chore(docs): styles prop changed to an array form\n- Merge pull request #451 from imentu/main

fix #391\n- Merge branch 'next' into fix/checkbox-initialchecked\n- Merge pull request #435 from tianenpang/fix/checkbox-initialchecked

refactor: use react-aria/checkbox prop types instead for better integration\n- feat(checkbox): checkbox has been succesfully migrated to react-aria, badge styles updated\n- Merge branch 'main' of github.com:nextui-org/nextui into next\n- chore(docs): badge changes\n

Labels:


Comments:
No comments.

Files Changed:
- apps/docs/content/components/checkbox/color.ts (modified, 13 changes)\n  Patch: @@ -1,28 +1,29 @@
 const App = `import { Checkbox, Spacer } from "@nextui-org/react";
+
 export default function App() {
   return (
     <>
-      <Checkbox color="primary" initialChecked={true}>
+      <Checkbox color="primary" defaultSelected={true}>
         Primary
       </Checkbox>
       <Spacer />
-      <Checkbox color="secondary" initialChecked={true}>
+      <Checkbox color="secondary" defaultSelected={true}>
         Secondary
       </Checkbox>
       <Spacer />
-      <Checkbox color="success" initialChecked={true}>
+      <Checkbox color="success" defaultSelected={true}>
         Success
       </Checkbox>
       <Spacer />
-      <Checkbox color="warning" initialChecked={true}>
+      <Checkbox color="warning" defaultSelected={true}>
         Warning
       </Checkbox>
       <Spacer />
-      <Checkbox color="error" initialChecked={true}>
+      <Checkbox color="error" defaultSelected={true}>
         Error
       </Checkbox>
       <Spacer />
-      <Checkbox color="gradient" initialChecked={true}>
+      <Checkbox color="gradient" defaultSelected={true}>
         Gradient
       </Checkbox>
     </>\n- apps/docs/content/components/checkbox/controlled-vs-uncontrolled.ts (modified, 4 changes)\n  Patch: @@ -6,9 +6,9 @@ export default function App() {
 
   return (
     <>
-      <Checkbox initialChecked color="success">Subscribe (uncontrolled)</Checkbox>
+      <Checkbox defaultSelected={true} color="success">Subscribe (uncontrolled)</Checkbox>
       <Spacer x={1} />
-      <Checkbox checked={selected} color="success" onChange={setSelected} >
+      <Checkbox isSelected={selected} color="success" onChange={setSelected} >
         Subscribe (controlled)
       </Checkbox>
     </>\n- apps/docs/content/components/checkbox/default.ts (modified, 2 changes)\n  Patch: @@ -1,7 +1,7 @@
 const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
-  return <Checkbox initialChecked={true}>Option</Checkbox>;
+  return <Checkbox defaultSelected={true}>Option</Checkbox>;
 }`;
 
 const react = {\n- apps/docs/content/components/checkbox/disabled.ts (modified, 2 changes)\n  Patch: @@ -2,7 +2,7 @@ const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Checkbox disabled initialChecked={true}>
+    <Checkbox isDisabled={true} defaultSelected={true}>
       Default
     </Checkbox>
   );\n- apps/docs/content/components/checkbox/interminate.ts (modified, 2 changes)\n  Patch: @@ -2,7 +2,7 @@ const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Checkbox indeterminate initialChecked={true}>
+    <Checkbox isIndeterminate={true} defaultSelected={true}>
       Option
     </Checkbox>
   );\n- apps/docs/content/components/checkbox/label-color.ts (modified, 10 changes)\n  Patch: @@ -3,23 +3,23 @@ const App = `import { Checkbox, Spacer } from "@nextui-org/react";
 export default function App() {
   return (
     <>
-      <Checkbox color="primary" labelColor="primary" initialChecked={true}>
+      <Checkbox color="primary" labelColor="primary" defaultSelected={true}>
         Primary
       </Checkbox>
       <Spacer />
-      <Checkbox color="secondary" labelColor="secondary" initialChecked={true}>
+      <Checkbox color="secondary" labelColor="secondary" defaultSelected={true}>
         Secondary
       </Checkbox>
       <Spacer />
-      <Checkbox color="success" labelColor="success" initialChecked={true}>
+      <Checkbox color="success" labelColor="success" defaultSelected={true}>
         Success
       </Checkbox>
       <Spacer />
-      <Checkbox color="warning" labelColor="warning" initialChecked={true}>
+      <Checkbox color="warning" labelColor="warning" defaultSelected={true}>
         Warning
       </Checkbox>
       <Spacer />
-      <Checkbox color="error" labelColor="error" initialChecked={true}>
+      <Checkbox color="error" labelColor="error" defaultSelected={true}>
         Error
       </Checkbox>
     </>\n- apps/docs/content/components/checkbox/line-through.ts (modified, 2 changes)\n  Patch: @@ -2,7 +2,7 @@ const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Checkbox line initialChecked={true}>
+    <Checkbox lineThrough={true} defaultSelected={true}>
       Option
     </Checkbox>
   );\n- apps/docs/content/components/checkbox/no-animated.ts (modified, 2 changes)\n  Patch: @@ -2,7 +2,7 @@ const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Checkbox line animated={false} initialChecked={true}>
+    <Checkbox disableAnimation={true} defaultSelected={true} lineThrough={true}>
       Option
     </Checkbox>
   );\n- apps/docs/content/components/checkbox/rounded.ts (modified, 2 changes)\n  Patch: @@ -2,7 +2,7 @@ const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Checkbox rounded color="primary" initialChecked={true}>
+    <Checkbox isRounded={true} defaultSelected={true} color="primary">
       Rounded option
     </Checkbox>
   );\n- apps/docs/content/components/checkbox/size.ts (modified, 10 changes)\n  Patch: @@ -3,23 +3,23 @@ const App = `import { Checkbox, Spacer } from "@nextui-org/react";
 export default function App() {
   return (
     <>
-      <Checkbox initialChecked={true} size="xs">
+      <Checkbox defaultSelected={true} size="xs">
         mini
       </Checkbox>
       <Spacer />
-      <Checkbox initialChecked={true} size="sm">
+      <Checkbox defaultSelected={true} size="sm">
         small
       </Checkbox>
       <Spacer />
-      <Checkbox initialChecked={true} size="md">
+      <Checkbox defaultSelected={true} size="md">
         medium
       </Checkbox>
       <Spacer />
-      <Checkbox initialChecked={true} size="lg">
+      <Checkbox defaultSelected={true} size="lg">
         large
       </Checkbox>
       <Spacer />
-      <Checkbox initialChecked={true} size="xl">
+      <Checkbox defaultSelected={true} size="xl">
         xlarge
       </Checkbox>
     </>\n- apps/docs/content/components/table/custom-cells.ts (modified, 10 changes)\n  Patch: @@ -18,15 +18,15 @@ export const StyledBadge = styled('span', {
     type: {
       active: {
         bg: '$successLight',
-        color: '$success'
+        color: '$successLightContrast'
       },
       paused: {
         bg: '$errorLight',
-        color: '$error'
+        color: '$errorLightContrast'
       },
       vacation: {
         bg: '$warningLight',
-        color: '$warning'
+        color: '$warningLightContrast'
       }
     }
   },
@@ -431,7 +431,7 @@ export default function App() {
               </Text>
             </Row>
             <Row>
-              <Text b size={13} css={{ tt: "capitalize", color: "$accents3" }}>
+              <Text b size={13} css={{ tt: "capitalize", color: "$accents7" }}>
                 {user.team}
               </Text>
             </Row>
@@ -602,7 +602,7 @@ export default function App() {
               </Text>
             </Row>
             <Row>
-              <Text b size={13} css={{ tt: "capitalize", color: "$accents3" }}>
+              <Text b size={13} css={{ tt: "capitalize", color: "$accents7" }}>
                 {user?.team}
               </Text>
             </Row>\n- apps/docs/content/components/text/gradient.ts (modified, 6 changes)\n  Patch: @@ -7,7 +7,7 @@ export default function App() {
         h1
         size={60}
         css={{
-          textGradient: "45deg, $blue500 -20%, $pink500 50%",
+          textGradient: "45deg, $blue600 -20%, $pink600 50%",
         }}
         weight="bold"
       >
@@ -17,7 +17,7 @@ export default function App() {
         h1
         size={60}
         css={{
-          textGradient: "45deg, $purple500 -20%, $pink500 100%",
+          textGradient: "45deg, $purple600 -20%, $pink600 100%",
         }}
         weight="bold"
       >
@@ -27,7 +27,7 @@ export default function App() {
         h1
         size={60}
         css={{
-          textGradient: "45deg, $yellow500 -20%, $red500 100%",
+          textGradient: "45deg, $yellow600 -20%, $red600 100%",
         }}
         weight="bold"
       >\n- apps/docs/content/components/tooltip/customContent.ts (modified, 20 changes)\n  Patch: @@ -1,4 +1,3 @@
-
 const DeleteUser = `import React from "react";
 import { useTheme, Text, Button, Grid, Row } from "@nextui-org/react";
 
@@ -32,8 +31,8 @@ export const DeleteUser = () => {
   );
 };`;
 
-const UserTwitterCard = `import React from "react";
-import {Avatar,Row,Col,Text,Button,Spacer,Grid} from "@nextui-org/react";
+const UserTwitterCard = `import React from "react"; 
+import { Avatar, Row, Col, Text, Button, Spacer, Grid } from "@nextui-org/react";
 
 export const UserTwitterCard = ({
   avatarUrl,
@@ -51,7 +50,7 @@ export const UserTwitterCard = ({
         mw: "250px",
         borderRadius: "$lg",
         padding: "$sm",
-        ...css
+        ...css,
       }}
       onClick={onClick}
       {...props}
@@ -91,7 +90,7 @@ export const UserTwitterCard = ({
                 fs: "$tiny",
                 fontWeight: "$semibold",
                 borderColor: following ? "$foreground" : "$primary",
-                color: following ? "$foreground" : "$white"
+                color: following ? "$foreground" : "$white",
               }}
               color="primary"
               bordered={following}
@@ -125,10 +124,11 @@ export const UserTwitterCard = ({
             color="foreground"
             className="user-twitter-card__text"
             size={14}
+            css={{ mr: "$1" }}
           >
             4
           </Text>
-          &nbsp;Following
+          Following
         </Text>
         <Spacer inline x={0.5} />
         <Text className="user-twitter-card__text" size={14} color="#888888">
@@ -137,18 +137,17 @@ export const UserTwitterCard = ({
             color="foreground"
             className="user-twitter-card__text"
             size={14}
+            css={{ mr: "$1" }}
           >
             97.1K
           </Text>
-          &nbsp;Followers
+          Followers
         </Text>
       </Grid.Container>
     </Grid.Container>
   );
 };`;
 
-
-
 const AppJs = `import { Tooltip, Button, Grid, Avatar } from "@nextui-org/react";
 import { UserTwitterCard } from "./UserTwitterCard";
 import { DeleteUser } from "./DeleteUser";
@@ -185,7 +184,6 @@ const react = {
   '/App.js': AppJs
 };
 
-
 export default {
-  ...react,
+  ...react
 };\n- apps/docs/content/docs/components/button.mdx (modified, 4 changes)\n  Patch: @@ -74,15 +74,15 @@ import { Button } from '@nextui-org/react';
   title="Flat"
   desc="You can change the full style to a flat button with the `flat` property.
                                         
-**_Note: `gradient` variant is not supported with the `flat` mode._**"
+_Note: `gradient` variant is not supported with the `flat` mode._"
   files={buttonContent.flat}
 />
 
 <Playground
   title="Light"
   desc="You can change the full style to a light button with the `light` property. 
   
-  ***_Note: `gradient` variant is not supported with the `light` mode._***"
+  _Note: `gradient` variant is not supported with the `light` mode._"
   files={buttonContent.light}
 />
 \n- apps/docs/content/docs/components/checkbox-group.mdx (modified, 9 changes)\n  Patch: @@ -25,7 +25,7 @@ import { Checkbox } from '@nextui-org/react';
 
 <Playground
   title="Row Group"
-  desc="You can change the `Checkbox.Group` direction with the `row` prop."
+  desc="You can change the `Checkbox.Group` direction with the `isRow` prop."
   files={checkboxGroupContent.row}
 />
 
@@ -60,15 +60,14 @@ import { Checkbox } from '@nextui-org/react';
 | **value**        | `string[]`                                        | The current value (controlled).                                    | -         |
 | **defaultValue** | `string[]`                                        | The current value (uncontrolled).                                  | -         |
 | **name**         | `string`                                          | The name of the checkbox group, used when submitting an HTML form. | -         |
-| **row**          | `boolean`                                         | Whether the checkbox group is horizontal                           | `false`   |
+| **isRow**        | `boolean`                                         | Whether the checkbox group is horizontal                           | `false`   |
 | **size**         | [NormalSizes](#normal-sizes)                      | The size of the component                                          | `medium`  |
 | **color**        | [NormalColors](#normal-colors)                    | The color of the component                                         | `default` |
 | **labelColor**   | [SimpleColors](#simple-colors)                    | The color of the label                                             | `default` |
-| **disabled**     | `boolean`                                         | Whether the checkbox group is disabled                             | `false`   |
-| **readOnly**     | `boolean`                                         | Whether the input can be selected but not changed by the user.     | `false`   |
+| **isDisabled**   | `boolean`                                         | Whether the checkbox group is disabled                             | `false`   |
+| **isReadOnly**   | `boolean`                                         | Whether the input can be selected but not changed by the user.     | `false`   |
 | **css**          | `Stitches.CSS`                                    | Override Default CSS style                                         | -         |
 | **as**           | `keyof JSX.IntrinsicElements`                     | Changes which tag component outputs                                | `div`     |
-| ...              | `HTMLDivAttributes`                               | Native element props                                               | -         |
 
 <Spacer y={1} />
 \n- apps/docs/content/docs/components/checkbox.mdx (modified, 53 changes)\n  Patch: @@ -49,33 +49,33 @@ import { Checkbox } from '@nextui-org/react';
 
 <Playground
   title="Rounded"
-  desc="You can change the full style to a rounded `Checkbox` with the `rounded` property."
+  desc="You can change the full style to a rounded `Checkbox` with the `isRounded` property."
   files={checkboxContent.rounded}
 />
 
 <Playground
   title="Indeterminate"
-  desc="A `Checkbox` can be in an indeterminate state, controlled using the `interminate` prop."
+  desc="A `Checkbox` can be in an indeterminate state, controlled using the `isIndeterminate` prop."
   files={checkboxContent.interminate}
 />
 
 <Playground
   title="Line Through"
-  desc="Add a line in the middle of the label when the `Checkbox` is checked with the property `line`"
+  desc="Add a line in the middle of the label when the `Checkbox` is checked with the property `lineThrough`"
   files={checkboxContent.lineThrough}
 />
 
 <Playground
   title="Controlled vs Uncontrolled"
-  desc="Checkboxes are not selected by default. The `initialChecked` prop can be used to set the default state (uncontrolled). Alternatively, the `checked` prop can be used to make the selected state controlled."
+  desc="Checkboxes are not selected by default. The `defaultSelected` prop can be used to set the default state (uncontrolled). Alternatively, the `isSelected` prop can be used to make the selected state controlled."
   files={checkboxContent.controlledVsUncontrolled}
 />
 
 > Note: See React's documentation on [uncontrolled components](https://reactjs.org/docs/uncontrolled-components.html) for more info.
 
 <Playground
   title="No Animated"
-  desc="You can disable the animation of the entire `Checkbox` with the property `animated={false}`."
+  desc="You can disable the animation of the entire `Checkbox` with the property `disableAnimation={true}`."
   files={checkboxContent.noAnimation}
 />
 
@@ -87,28 +87,27 @@ import { Checkbox } from '@nextui-org/react';
 
 #### Checkbox Props
 
-| Attribute          | Type                           | Description                                                                                                                                                    | Default   |
-| ------------------ | ------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- |
-| **children**       | `ReactNode`                    | The label for the element                                                                                                                                      | -         |
-| **value**          | `string`                       | The value of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefvalue) | -         |
-| **label**          | `string`                       | The label for the element                                                                                                                                      | -         |
-| **name**           | `string`                       | The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname)   | -         |
-| **color**          | [NormalColors](#normal-colors) | The color of the component                                                                                                                                     | `default` |
-| **labelColor**     | [SimpleColors](#simple-colors) | The color of the label                                                                                                                                         | `default` |
-| **size**           | [NormalSizes](#normal-sizes)   | The size of the component                                                                                                                                      | `md`      |
-| **checked**        | `boolean`                      | Whether the element should be checked (controlled)                                                                                                             | `false`   |
-| **initialChecked** | `boolean`                      | Whether the element should be checked (uncontrolled)                                                                                                           | `false`   |
-| **animated**       | `boolean`                      | Whether the checkbox has animations                                                                                                                            | `true`    |
-| **disabled**       | `boolean`                      | Whether the input is disabled                                                                                                                                  | `false`   |
-| **indeterminate**  | `boolean`                      | Indeterminism is presentational only. The indeterminate visual representation remains regardless of user interaction.                                          | `false`   |
-| **rounded**        | `boolean`                      | Whether the checkbox is rounded                                                                                                                                | `false`   |
-| **line**           | `boolean`                      | Line in the middle of the label when the `Checkbox` is checked                                                                                                 | -         |
-| **readOnly**       | `boolean`                      | Whether the input can be selected but not changed by the user.                                                                                                 | `false`   |
-| **required**       | `boolean`                      | Whether user input is required on the input before form submission.                                                                                            | `false`   |
-| **autoFocus**      | `boolean`                      | Whether the element should receive focus on render                                                                                                             |
-| **css**            | `Stitches.CSS`                 | Override Default CSS style                                                                                                                                     | -         |
-| **as**             | `keyof JSX.IntrinsicElements`  | Changes which tag component outputs                                                                                                                            | `label`   |
-| ...                | `HTMLLabelElement`             | Native element props                                                                                                                                           | -         |
+| Attribute            | Type                           | Description                                                                                                                                                    | Default   |
+| -------------------- | ------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- |
+| **children**         | `ReactNode`                    | The label for the element                                                                                                                                      | -         |
+| **value**            | `string`                       | The value of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefvalue) | -         |
+| **label**            | `string`                       | The label for the element                                                                                                                                      | -         |
+| **name**             | `string`                       | The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname)   | -         |
+| **color**            | [NormalColors](#normal-colors) | The color of the component                                                                                                                                     | `default` |
+| **labelColor**       | [SimpleColors](#simple-colors) | The color of the label                                                                                                                                         | `default` |
+| **size**             | [NormalSizes](#normal-sizes)   | The size of the component                                                                                                                                      | `md`      |
+| **isSelected**       | `boolean`                      | Whether the element should be selected (controlled)                                                                                                            | `false`   |
+| **defaultSelected**  | `boolean`                      | Whether the element should be selected (uncontrolled)                                                                                                          | `false`   |
+| **disableAnimation** | `boolean`                      | Whether the checkbox has animations                                                                                                                            | `false`   |
+| **isDisabled**       | `boolean`                      | Whether the input is disabled                                                                                                                                  | `false`   |
+| **isIndeterminate**  | `boolean`                      | Indeterminism is presentational only. The indeterminate visual representation remains regardless of user interaction.                                          | `false`   |
+| **isRounded**        | `boolean`                      | Whether the checkbox is rounded                                                                                                                                | `false`   |
+| **lineThrough**      | `boolean`                      | Line in the middle of the label when the `Checkbox` is checked                                                                                                 | -         |
+| **isReadOnly**       | `boolean`                      | Whether the input can be selected but not changed by the user.                                                                                                 | `false`   |
+| **isRequired**       | `boolean`                      | Whether user input is required on the input before form submission.                                                                                            | `false`   |
+| **autoFocus**        | `boolean`                      | Whether the element should receive focus on render                                                                                                             |
+| **css**              | `Stitches.CSS`                 | Override Default CSS style                                                                                                                                     | -         |
+| **as**               | `keyof JSX.IntrinsicElements`  | Changes which tag component outputs                                                                                                                            | `label`   |
 
 <Spacer y={1} />
 \n- apps/docs/content/docs/manifest.json (modified, 8 changes)\n  Patch: @@ -143,13 +143,15 @@
                         },
                         {
                             "title": "Checkbox",
+                            "updated": true,
                             "keywords": "check, radio, selectable, checkbox, box",
                             "path": "/docs/components/checkbox.mdx"
                         },
                         {
-                          "title": "Checkbox Group",
-                          "keywords": "check, radio, selectable, checkbox, box, group, items",
-                          "path": "/docs/components/checkbox-group.mdx"
+                            "title": "Checkbox Group",
+                            "updated": true,
+                            "keywords": "check, radio, selectable, checkbox, box, group, items",
+                            "path": "/docs/components/checkbox-group.mdx"
                         },
                         {
                             "title": "Radio",\n- apps/docs/content/docs/theme/customize-theme.mdx (modified, 11 changes)\n  Patch: @@ -26,13 +26,20 @@ import { createTheme, NextUIProvider, Text } from "@nextui-org/react"
 
 // 2. Call `createTheme` and pass your custom values
 const theme = createTheme({
-  type: "dark",
+  type: "dark", // it could be "light" or "dark"
   theme: {
     colors: {
       // brand colors
       primaryLight: '$green200',
+      primaryLightHover: '$green300',
+      primaryLightActive: '$green400',
+      primaryLightContrast: '$green600',
       primary: '#4ADE7B',
-      primaryDark: '$green600',
+      primaryBorder: '$green500',
+      primaryBorderHover: '$green600',
+      primarySolidHover: '$green700',
+      primarySolidContrast: '$white',
+      primaryShadow: '$green500',
 
       gradient: 'linear-gradient(112deg, $blue100 -25%, $pink500 -10%, $purple500 80%)',
       link: '#5E1DAD',\n- apps/docs/content/docs/theme/default-theme.mdx (modified, 79 changes)\n  Patch: @@ -58,39 +58,25 @@ export default {
     // generic colors
     white: '#ffffff',
     black: '#000000',
-    //semantic colors
-    blue100: '#CBECFE',
+    //semantic colors (light)
+    blue50: '#EDF5FF',
     // ...
-    blue900: '#002074',
+    blue900: '#00254D',
     // ...
 
     // brand colors
-    primaryLight: '$blue200', //  $blue600 on dark mode
-    primary: '$blue500',
-    primaryDark: '$blue600',
-    primaryShadow: '$blue100', // $blue600 on dark mode
-
-    secondaryLight: '$purple200', // $purple600 on dark mode
-    secondary: '$purple500',
-    secondaryDark: '$purple600',
-    secondaryShadow: '$purple100', // $purple600 on dark mode
-
-    successLight: '$green200', // $green600 on dark mode
-    success: '$green500',
-    successDark: '$green600',
-    successShadow: '$green100', // $green600 on dark mode
-
-    warningLight: '$yellow200', // $yellow600 on dark mode
-    warning: '$yellow500',
-    warningDark: '$yellow600',
-    warningShadow: '$yellow100', // $yellow600 on dark mode
-
-    errorLight: '$red200', // $red600 on dark mode
-    error: '$red500',
-    errorDark: '$red600',
-    errorShadow: '$red100' // $red600 on dark mode
-
-    // ... rest of colors
+    primaryLight: '$blue200',
+    primaryLightHover: '$blue300', // commonly used on hover state
+    primaryLightActive: '$blue400', // commonly used on pressed state
+    primaryLightContrast: '$blue600', // commonly used for text inside the component
+    primary: '$blue600',
+    primaryBorder: '$blue500',
+    primaryBorderHover: '$blue600',
+    primarySolidHover: '$blue700',
+    primarySolidContrast: '$white', // commonly used for text inside the component
+    primaryShadow: '$blue500'
+
+    // ... rest of colors (secondary, success, warning, error, etc)
   }
 };
 ```
@@ -99,7 +85,6 @@ export default {
 
 <Playground
   title="Brand"
-  desc="The default theme has a brand color palette, each brand color has its light, dark and shadow variants like `primaryLight`, `primaryDark` and `primaryShadow`."
   showEditor={false}
   code={`
     <Palette colors={[
@@ -113,6 +98,29 @@ export default {
  `}
 />
 
+#### Understanding the Base scale
+
+There are 10 steps in each scale from 50 to 900. Each step was designed for at least one specific use case.
+
+This table is a simple overview of the most common use case for each step. However, there are many exceptions and caveats to factor in, which are covered in further detail below.
+
+| Step    | Use Case                                |
+| ------- | --------------------------------------- |
+| **50**  | UI element background                   |
+| **100** | Hovered UI element background           |
+| **200** | Active / Selected UI element background |
+| **300** | Subtle borders and separators           |
+| **400** | UI element border and focus rings       |
+| **500** | Hovered UI element border               |
+| **600** | Solid backgrounds                       |
+| **700** | Hovered solid backgrounds               |
+| **800** | Low-contrast text                       |
+| **900** | High-contrast text                      |
+
+> **Note**: NextUI uses different colors for each theme type (light, dark). You can check it out by toggling the docs theme on the navbar.
+
+<Spacer y={2} />
+
 <Playground
   title="Base"
   desc="We recommend adding a palette that ranges from 100 to 900. You can use tools like [Eva Design System](https://colors.eva.design/) or [RadixUI Colors](https://www.radix-ui.com/colors) to generate a palette."
@@ -121,6 +129,7 @@ export default {
     <Palette 
       colors={[
         [
+          "blue50",
           "blue100",
           "blue200",
           "blue300",
@@ -132,6 +141,7 @@ export default {
           "blue900",
         ],
         [
+          "purple50",
           "purple100",
           "purple200",
           "purple300",
@@ -143,6 +153,7 @@ export default {
           "purple900",
         ],
         [
+          "green50",
           "green100",
           "green200",
           "green300",
@@ -154,6 +165,7 @@ export default {
           "green900",
         ],
         [
+          "yellow50",
           "yellow100",
           "yellow200",
           "yellow300",
@@ -165,6 +177,7 @@ export default {
           "yellow900",
         ],
         [
+          "red50",
           "red100",
           "red200",
           "red300",
@@ -176,6 +189,7 @@ export default {
           "red900",
         ],
         [
+          "cyan50",
           "cyan100",
           "cyan200",
           "cyan300",
@@ -187,6 +201,7 @@ export default {
           "cyan900",
         ],
         [
+          "pink50",
           "pink100",
           "pink200",
           "pink300",
@@ -198,6 +213,7 @@ export default {
           "pink900",
         ],
         [
+          "gray50",
           "gray100",
           "gray200",
           "gray300",
@@ -218,6 +234,7 @@ export default {
   showEditor={false}
   code={`
     <Palette inverted colors={[
+        "accents0", 
         "accents1", 
         "accents2", 
         "accents3",
@@ -605,5 +622,3 @@ export const darkTheme = {
   ...
 };
 ```
-
-<Spacer y={2} />\n- apps/docs/content/landing/index.tsx (modified, 2 changes)\n  Patch: @@ -334,7 +334,7 @@ const CustomButton = () => {
         boxShadow: '$md',
         position: 'relative',
         overflow: 'visible',
-        color: '$green800',
+        color: '#0F9549',
         px: '$18',
         '&:after': {
           content: '""',\n- apps/docs/src/components/anchor/index.tsx (modified, 2 changes)\n  Patch: @@ -63,7 +63,7 @@ const VirtualAnchor: React.FC<React.PropsWithChildren<Props>> = ({
           font-size: inherit;
           width: 1em;
           height: 1em;
-          color: ${theme?.colors?.accents5?.value};
+          color: ${theme?.colors?.accents7?.value};
           transition: all 0.25s ease;
         }
         .parent:hover > .icon {\n- apps/docs/src/components/badge/badge.styles.ts (modified, 87 changes)\n  Patch: @@ -1,5 +1,4 @@
 import { styled, VariantProps } from '@nextui-org/react';
-import { lightTheme } from '@theme/shared';
 
 export const StyledBadge = styled('span', {
   display: 'inline-block',
@@ -19,36 +18,98 @@ export const StyledBadge = styled('span', {
   variants: {
     type: {
       default: {
-        bg: '$primary'
+        bg: '$primaryLight',
+        color: '$primary'
       },
       primary: {
-        bg: '$primary'
+        bg: '$primaryLight',
+        color: '$primary'
       },
       secondary: {
-        bg: '$secondary'
+        bg: '$secondaryLight',
+        color: '$secondary'
       },
       warning: {
-        bg: '$warning'
+        bg: '$warningLight',
+        color: '$warning'
       },
       success: {
-        bg: '$success'
+        bg: '$successLight',
+        color: '$success'
       },
       error: {
-        bg: '$error'
+        bg: '$errorLight',
+        color: '$error'
       },
       disabled: {
         fontSize: '9px',
-        color: '$accents6',
-        bg: 'rgba(255, 255, 255, 0.1)',
-        [`.${lightTheme} &`]: {
-          bg: '$accents1'
-        }
+        color: '$accents8',
+        bg: '$accents0'
       }
+    },
+    solid: {
+      true: {}
     }
   },
   defaultVariants: {
     type: 'default'
-  }
+  },
+  compoundVariants: [
+    // solid: true && type: 'default'
+    {
+      type: 'default',
+      solid: true,
+      css: {
+        bg: '$primary',
+        color: '$white'
+      }
+    },
+    // solid: true && type: 'primary'
+    {
+      type: 'primary',
+      solid: true,
+      css: {
+        bg: '$primary',
+        color: '$white'
+      }
+    },
+    // solid: true && type: 'secondary'
+    {
+      type: 'secondary',
+      solid: true,
+      css: {
+        bg: '$secondary',
+        color: '$white'
+      }
+    },
+    // solid: true && type: 'warning'
+    {
+      type: 'warning',
+      solid: true,
+      css: {
+        bg: '$warning',
+        color: '$white'
+      }
+    },
+    // solid: true && type: 'success'
+    {
+      type: 'success',
+      solid: true,
+      css: {
+        bg: '$success',
+        color: '$white'
+      }
+    },
+    // solid: true && type: 'error'
+    {
+      type: 'error',
+      solid: true,
+      css: {
+        bg: '$error',
+        color: '$white'
+      }
+    }
+  ]
 });
 
 export type BadgeVariantsProps = VariantProps<typeof StyledBadge>;\n- apps/docs/src/components/code-demo/code-block.tsx (modified, 6 changes)\n  Patch: @@ -29,13 +29,13 @@ const WindowIcon = styled(Box, {
   variants: {
     color: {
       red: {
-        bg: '$red500'
+        bg: '$red600'
       },
       green: {
-        bg: '$green500'
+        bg: '$green600'
       },
       yellow: {
-        bg: '$yellow500'
+        bg: '$yellow600'
       }
     }
   }\n- apps/docs/src/components/code-demo/pre.tsx (modified, 2 changes)\n  Patch: @@ -19,7 +19,7 @@ export const Pre = styled('pre', {
   $$syntax3: primitiveColor?.style.color,
   $$syntax4: '$colors$yellow600',
   $$syntax5: classnameColor?.style.color,
-  $$syntax6: '$colors$yellow400',
+  $$syntax6: '$colors$yellow600',
   $$comment: punctuationColor?.style.color,
   $$removed: '$colors$red300',
   $$added: '$colors$green300',\n- apps/docs/src/components/community/community.tsx (modified, 6 changes)\n  Patch: @@ -48,7 +48,7 @@ const Community: React.FC<CommunityProps> = ({ twitter, github, discord }) => {
           </Row>
           <Spacer y={0.5} />
           <Row justify="flex-start" align="center">
-            <Text css={{ color: '$accents6', textAlign: 'left' }}>
+            <Text css={{ color: '$accents8', textAlign: 'left' }}>
               For announcements, tips and general information.
             </Text>
           </Row>
@@ -67,7 +67,7 @@ const Community: React.FC<CommunityProps> = ({ twitter, github, discord }) => {
           </Row>
           <Spacer y={0.5} />
           <Row justify="flex-start" align="center">
-            <Text css={{ color: '$accents6' }}>
+            <Text css={{ color: '$accents8' }}>
               To get involved in the community, ask questions and share tips.
             </Text>
           </Row>
@@ -86,7 +86,7 @@ const Community: React.FC<CommunityProps> = ({ twitter, github, discord }) => {
           </Row>
           <Spacer y={0.5} />
           <Row justify="flex-start" align="center">
-            <Text css={{ color: '$accents6' }}>
+            <Text css={{ color: '$accents8' }}>
               For issues, feature requests and contribute.
             </Text>
           </Row>\n- apps/docs/src/components/features-grid/features-grid.tsx (modified, 2 changes)\n  Patch: @@ -68,7 +68,7 @@ const FeaturesGrid: React.FC<FeaturesGridProps> = ({
             <Row align="center" css={{ px: '$2', pt: '$4', pb: '$2' }}>
               <Text
                 className="feature-description"
-                css={{ color: '$accents7' }}
+                css={{ color: '$accents8' }}
               >
                 {feat.description}
               </Text>\n- apps/docs/src/components/hero/components.tsx (modified, 14 changes)\n  Patch: @@ -17,6 +17,7 @@ import { useRouter } from 'next/router';
 import { levitating } from '@utils/animations';
 import { Logo, UserTwitterCard, ThemeSwitch } from '@components';
 import { useIsMobile } from '@hooks/use-media-query';
+import { darkTheme } from '@theme/shared';
 
 const StyledContainer = styled('div', {
   dflex: 'center',
@@ -301,9 +302,11 @@ const HeroComponents = () => {
           <Row align="center">
             <Col>
               <Text
-                color="#fff"
                 size={12}
-                css={{ textShadow: '0 2px 2px rgba(0,0,0,0.3)' }}
+                css={{
+                  textShadow: '0 2px 2px rgba(0,0,0,0.3)',
+                  color: '$white'
+                }}
               >
                 Available soon.
               </Text>
@@ -312,14 +315,17 @@ const HeroComponents = () => {
               <Row justify="flex-end" align="center">
                 <Button
                   auto
-                  flat
                   rounded
                   color="secondary"
                   css={{
                     px: '$4',
                     height: '$space$10',
                     fontSize: '$tiny',
-                    color: '$white'
+                    color: '$white',
+                    [`.${darkTheme} &`]: {
+                      bg: '$purple900',
+                      color: '$purple300'
+                    }
                   }}
                 >
                   Notify Me\n- apps/docs/src/components/hero/index.tsx (modified, 8 changes)\n  Patch: @@ -123,8 +123,12 @@ const Hero: React.FC = () => {
                   transition: 'opacity 0.3s ease-in-out',
                   dflex: 'center',
                   boxShadow: '$sm',
-                  bf: 'saturate(180%) blur(10px)',
-                  bg: '$backgroundBlur',
+                  bg: '$backgroundContrast',
+                  '@supports ((-webkit-backdrop-filter: none) or (backdrop-filter: none))':
+                    {
+                      bf: 'saturate(180%) blur(10px)',
+                      bg: '$backgroundBlur'
+                    },
                   '@xsMax': {
                     width: '100%'
                   }\n- apps/docs/src/components/hero/styles.ts (modified, 2 changes)\n  Patch: @@ -27,5 +27,5 @@ export const StyledSubtitle = styled('p', {
   width: '100%',
   display: 'inline-flex',
   fontWeight: '$medium',
-  color: '$accents6'
+  color: '$accents7'
 });\n- apps/docs/src/components/home/built-in-stitches.tsx (modified, 2 changes)\n  Patch: @@ -128,7 +128,7 @@ const BuiltInStitchesSection = () => {
                       },
                       '&:hover': {
                         '&:not(.active) .nextui-collapse-title': {
-                          color: '$accents5'
+                          color: '$accents7'
                         }
                       }
                     }}\n
Pull Request Number: 3598
Title: fix(select): missing onChange when there are more than 300 items
Base Branch: canary
Head Branch: fix/eng-1130
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/3598
State: MERGED
Created At: 2024-08-03T13:42:33Z
Merged At: 2024-09-11T03:23:48Z
Participants: wingkwong, winchesHe, jrgarciadev, tianenpang

Description:
Closes #3455
üìù Description
currently onChange only triggered when where are less than 300 items because we trigger it only when domRef is here.
‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit
Summary by CodeRabbit


Tests

Improved test coverage for the Select component with two new test cases for handling the onChange event with fewer than and more than 300 options.



Bug Fixes

Enhanced the logic for the onChange event handling in the Select component to ensure correct functionality with large datasets, improving reliability and user experience.

Commits:
- fix(select): missing onChange when there are more than 300 items\n- feat(select): add tests for onChange\n- Merge branch 'canary' into fix/eng-1130\n- chore(changeset): add changeset\n

Labels:


Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-1130/[bug]-select-component-onchange-not-triggered-when-there-are-more-than">ENG-1130 [BUG] - Select component onChange not triggered when there are more than 300 SelectItems</a></p>\n- vercel: [vc]: #WOlFqvdzQdtOUu2Tg3j7L9QJ+0iRI9jFCYhpcPysMWw=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi84S2l5VlFaN1hVamFIdXJaWFhyNmU1U0NEWnlGIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtZW5nLTExMzAtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtZW5nLTExMzAtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19LHsibmFtZSI6Im5leHR1aS1zdG9yeWJvb2stdjIiLCJyb290RGlyZWN0b3J5IjoicGFja2FnZXMvc3Rvcnlib29rIiwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi9FdW9WRW1zZnV2NUJteHZNS2JEU3Zyb1FlM3RMIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZpeC1lbmctMTEzMC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LWVuZy0xMTMwLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/8KiyVQZ7XUjaHurZXXr6e5SCDZyF)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-1130-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-1130-nextui-org.vercel.app?via=pr-comment-feedback-link) | Aug 16, 2024 9:22am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/EuoVEmsfuv5BmxvMKbDSvroQe3tL)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-1130-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-1130-nextui-org.vercel.app?via=pr-comment-feedback-link) | Aug 16, 2024 9:22am |


\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: cb2b30186f92b1b1ccf7f5b650a9a78d4e62bdfb

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name               | Type  |
| ------------------ | ----- |
| @nextui-org/select | Patch |
| @nextui-org/react  | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/eng-1130?filename=.changeset/mighty-wasps-sleep.md&value=---%0A%22%40nextui-org%2Fselect%22%3A%20patch%0A---%0A%0Afix(select)%3A%20missing%20onChange%20when%20there%20are%20more%20than%20300%20items%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

This update enhances the `Select` component's functionality by addressing an issue where the `onChange` event was not triggered when there were more than 300 options. Two new tests were introduced to validate the component's behavior with varied item counts. Additionally, the logic in the `useSelect` function was improved to handle potential null references, ensuring a more robust event handling mechanism.

## Changes

| File                                          | Change Summary                                                                                          |
|-----------------------------------------------|---------------------------------------------------------------------------------------------------------|
| `packages/components/select/__tests__/select.test.tsx` | Added two tests for `Select` component focusing on `onChange` behavior with fewer than 300 and 300 or more items.      |
| `packages/components/select/src/use-select.ts`         | Refined `onChange` event handling to safely construct the event object, preventing null reference issues. |

## Assessment against linked issues

| Objective                                                          | Addressed | Explanation                                          |
|--------------------------------------------------------------------|-----------|-----------------------------------------------------|
| Should work with onChange (>= 300 SelectItems) (#3455)            | ‚úÖ        |                                                     |
| Should work with onChange (< 300 SelectItems) (#3455)             | ‚úÖ        |                                                     |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

# Existing changesets

```
packages/components/select/__tests__/select.test.tsx: ## AI-generated summary of changes

The diff introduces two new test cases for the `Select` component in `select.test.tsx`, enhancing its test coverage. The first test, "should work with onChange (< 300 select items)", verifies that the component correctly handles the `onChange` event when fewer than 300 options are provided. It creates an array of 10 options, renders the `Select` component with these options, and checks that the listbox and its items are rendered correctly. It also ensures that the `onChange` callback is called once when an option is selected.

The second test, "should work with onChange (>= 300 select items)", similarly tests the `Select` component but with 300 options. This test follows the same structure as the first, confirming that the component renders correctly and that the `onChange` callback is triggered appropriately upon selection. Both tests utilize the `jest` testing framework and the `user` event library to simulate user interactions.

These additions improve the robustness of the testing suite by confirming the component's functionality with varying numbers of options, ensuring it behaves as expected under different scenarios.

## Alterations to the declarations of exported or public entities

- No changes to the declarations of exported or public entities were made in this diff.

---

packages/components/select/src/use-select.ts: ## AI-generated summary of changes

The changes made to the `useSelect` function in `use-select.ts` primarily focus on refining the logic surrounding the `onChange` event handling. The original implementation constructed an event object that included properties from `domRef.current`, but it did so unconditionally, which could lead to potential issues if `domRef.current` were null. The updated code introduces a conditional spread operator that only includes properties from `domRef.current` if it is truthy, thereby preventing possible runtime errors. Additionally, the name property is now explicitly included in the spread, ensuring it is always present in the constructed event. This change enhances the robustness of the event handling logic and improves the clarity of the `onChange` callback's invocation.

Overall, the modifications streamline the handling of the `onChange` event by ensuring that the event object is constructed safely, thus improving the reliability of the component's behavior.

## Alterations to the declarations of exported or public entities

- `export function useSelect<T extends object>(originalProps: UseSelectProps<T>)` in `packages/components/select/src/use-select.ts` ‚Üí No changes in the function signature.
```


# New changesets

.changeset/few-roses-sniff.md: ## AI-generated summary of changes

This update introduces a patch for the `@nextui-org/select` package, specifically addressing an issue related to the `onChange` event handler. The modification ensures that the `onChange` event is triggered correctly when the number of selectable items exceeds 300. This enhancement improves the component's functionality by ensuring that user interactions are captured even in scenarios with a large dataset, thereby enhancing the user experience and reliability of the selection component.

The control flow is adjusted to accommodate the increased item count, ensuring that the event handling mechanism is robust and responsive. This change is particularly important for applications that rely on dynamic data sets, as it prevents potential user interface issues and ensures that changes in selection are consistently processed.



## Alterations to the declarations of exported or public entities

- No changes to exported or public entity declarations were made.

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR Summary

The pull request titled "fix(select): missing onChange when there are more than 300 items" addresses a bug in the Select component of the NextUI library. The issue occurs when the Select component is populated with more than 300 items; specifically, when there are 301 or more SelectItems, the `onChange` event is not triggered upon selecting an item. The PR aims to resolve this issue, ensuring that the `onChange` event functions correctly regardless of the number of SelectItems present. This pull request is linked to issue #3455, which details the problem and provides reproduction steps. The author has not included additional information or described any breaking changes associated with this fix.

## Objectives from Linked Issues

The linked issue #3455 outlines a specific bug related to the Select component in NextUI version 2.1.8. The main objective is to fix the malfunction of the `onChange` event when the Select component contains more than 300 items. Users have reported that while the `onChange` event works correctly with 300 items, it fails to trigger when the number of items exceeds this threshold. The expected behavior is that the Select component should function properly with any number of options, without documented limitations. The issue was observed on a Linux operating system using the Firefox browser. The objective of the pull request is to ensure that the Select component operates as intended, maintaining functionality regardless of the number of SelectItems.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 7785e9ae125abe8e1950e7cd8e250caadc61b9a2 -->
<!-- cb2b30186f92b1b1ccf7f5b650a9a78d4e62bdfb -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configuration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/few-roses-sniff.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/select": patch
+---
+
+added missing onChange when there are more than 300 items (#3455)\n- packages/components/select/__tests__/select.test.tsx (modified, 68 changes)\n  Patch: @@ -652,6 +652,74 @@ describe("Select", () => {
     // assert that the select listbox is closed
     expect(select).toHaveAttribute("aria-expanded", "false");
   });
+
+  it("should work with onChange (< 300 select items)", async () => {
+    const onChange = jest.fn();
+
+    let options = new Array(10).fill("");
+
+    options = options.map((_, i) => {
+      return `option ${i}`;
+    });
+
+    const wrapper = render(
+      <Select isOpen aria-label="Favorite Animal" label="Favorite Animal" onChange={onChange}>
+        {options.map((o) => (
+          <SelectItem key={o} value={o}>
+            {o}
+          </SelectItem>
+        ))}
+      </Select>,
+    );
+
+    let listbox = wrapper.getByRole("listbox");
+
+    expect(listbox).toBeTruthy();
+
+    let listboxItems = wrapper.getAllByRole("option");
+
+    expect(listboxItems.length).toBe(10);
+
+    await act(async () => {
+      await user.click(listboxItems[1]);
+
+      expect(onChange).toBeCalledTimes(1);
+    });
+  });
+
+  it("should work with onChange (>= 300 select items)", async () => {
+    let onChange = jest.fn();
+
+    let options = new Array(300).fill("");
+
+    options = options.map((_, i) => {
+      return `option ${i}`;
+    });
+
+    const wrapper = render(
+      <Select isOpen aria-label="Favorite Animal" label="Favorite Animal" onChange={onChange}>
+        {options.map((o) => (
+          <SelectItem key={o} value={o}>
+            {o}
+          </SelectItem>
+        ))}
+      </Select>,
+    );
+
+    let listbox = wrapper.getByRole("listbox");
+
+    expect(listbox).toBeTruthy();
+
+    let listboxItems = wrapper.getAllByRole("option");
+
+    expect(listboxItems.length).toBe(300);
+
+    await act(async () => {
+      await user.click(listboxItems[1]);
+
+      expect(onChange).toBeCalledTimes(1);
+    });
+  });
 });
 
 describe("Select with React Hook Form", () => {\n- packages/components/select/src/use-select.ts (modified, 14 changes)\n  Patch: @@ -250,16 +250,16 @@ export function useSelect<T extends object>(originalProps: UseSelectProps<T>) {
     },
     onSelectionChange: (keys) => {
       onSelectionChange?.(keys);
-      if (onChange && typeof onChange === "function" && domRef.current) {
-        const event = {
+      if (onChange && typeof onChange === "function") {
+        onChange({
           target: {
-            ...domRef.current,
+            ...(domRef.current && {
+              ...domRef.current,
+              name: domRef.current.name,
+            }),
             value: Array.from(keys).join(","),
-            name: domRef.current.name,
           },
-        } as React.ChangeEvent<HTMLSelectElement>;
-
-        onChange(event);
+        } as React.ChangeEvent<HTMLSelectElement>);
       }
     },
   });\n
Pull Request Number: 3371
Title: fix(user): avatar icon not shown in user
Base Branch: canary
Head Branch: fix/avatar-icon-not-shown-in-user
Author: awesome-pro
URL: https://github.com/nextui-org/nextui/pull/3371
State: CLOSED
Created At: 2024-06-30T08:38:19Z
Merged At: None
Participants: awesome-pro, wingkwong

Description:
Closes #3369
üìù Description
Fixed the bug to show the default avatar icon, when no name(prop) is passed inside avatarProps
‚õ≥Ô∏è Current behavior (updates)

üöÄ New behavior


üí£ Is this a breaking change (Yes/No):
No

üìù Additional Information
removed the code passing name(of user) to avatarProps

Summary by CodeRabbit


Bug Fixes

Updated user avatar handling to ensure the correct name is passed only when no avatar icon is provided.



Tests

Improved existing tests for avatar component and added a new test to verify the default icon is rendered when no name is provided.

Commits:
- fix(user): avatar icon not shown in user component\n- fix(user): avatar icon not shown in user component\n- fix(user): avatar icon not shown in user component\n- fix(user): avatar icon not shown in user component\n- Delete .changeset/few-stingrays-lay.md\n- fix(user): avatar icon not shown in user component\n- fix(user): avatar icon not shown in user component\n- fix(user): avatar icon not shown in user component\n

Labels:
üöß Status: Changes Requested

Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 90c4bdcefd7f89850463c21859b1fb06d76cd0ef

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name              | Type  |
| ----------------- | ----- |
| @nextui-org/user  | Patch |
| @nextui-org/react | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/abhinandan-verma/nextui/new/fix/avatar-icon-not-shown-in-user?filename=.changeset/rare-steaks-play.md&value=---%0A%22%40nextui-org%2Fuser%22%3A%20patch%0A---%0A%0Afix(user)%3A%20avatar%20icon%20not%20shown%20in%20user%0A)

\n- vercel: [vc]: #MqHNspA1GugKIjCVo8dik8XFBy3cy3qqtd2vz2n8Oko=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvMzNyVEVCQmhBcE5MWU1RTVU2UmJUOXVIZ3AyYSIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWFiaGluYW5kYW4tdmVybWEtN2NlNTI0LW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWFiaGluYW5kYW4tdmVybWEtN2NlNTI0LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/33rTEBBhApNLYMQMU6RbT9uHgp2a)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-abhinandan-verma-7ce524-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-abhinandan-verma-7ce524-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jul 1, 2024 8:31am |

\n- vercel: @abhinandan-verma is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%22e6ea208067dd093eb90e1e45c412aebfead67dd9%22%7D%2C%22id%22%3A%22QmV6eZLfDF78R5qd7E9GJMgxkPJZhNRce9FpbTKBwgxv1t%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A3371%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The changes resolve a bug where the `User` component incorrectly rendered the avatar initial even when an avatar icon was provided. The fix involves updating the `useUser` function to stop passing the `name` property to the `avatarProps` when an avatar icon is used. Additionally, new tests are added to ensure the correct behavior by importing `AvatarIcon` and using it in the test cases.

## Changes

| Files                                 | Change Summary                                                                 |
|---------------------------------------|-------------------------------------------------------------------------------|
| `packages/components/user/src/...`    | Removed `name` property from `avatarProps` if the type is not a string.       |
| `packages/components/user/__tests__/...` | Added import statement for `AvatarIcon`; modified test case; added new test.  |

## Sequence Diagram(s)

*Not applicable as the changes are mainly bug fixes and internal adjustments rather than new features or significant modifications to control flow.*

## Assessment against linked issues

| Objective (Issue #)                             | Addressed | Explanation                                        |
|-------------------------------------------------|-----------|----------------------------------------------------|
| Update `useUser` to stop passing `name` to `avatarProps` when `avatar icon` is provided (#3369) | ‚úÖ         |                                                    |
| Ensure default avatar icon renders correctly (#3369)      | ‚úÖ         |                                                    |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

packages/components/user/src/use-user.ts: ## Short Summary
In the `useUser` function in `use-user.ts`, the `name` property assignment based on its type has been removed from the `avatarProps` object to only pass the name of the avatarProps when no avatar icon source is provided.

## Alterations to the declarations of exported or public entities
- `export function useUser(props: UseUserProps)` in `packages/components/user/src/use-user.ts`
    - Removed `name: typeof name === "string" ? name : undefined,` from the `avatarProps` object.

---

packages/components/user/__tests__/user.test.tsx: ## Short Summary

- Added import statement for `AvatarIcon` from `@nextui-org/avatar`.
- Modified test case to use `getByText` instead of querying for an element.
- Added a new test to check if the default icon is rendered when no name is passed to the avatar component.

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

### PR Summary

**Title**: fix(user): avatar icon not shown in user

**User**: abhinandan-verma

**Number**: 3371

**Description**:
- This pull request addresses a bug where the default avatar icon is not displayed when no name is passed inside `avatarProps`.
- The issue is fixed by removing the code that passes the user's name to `avatarProps`.
- The current behavior shows the initial of the user's name instead of the specified icon.
- The new behavior correctly displays the avatar icon as intended.

**Screenshots**:
- Current behavior: ![Current Behavior](https://github.com/nextui-org/nextui/assets/147910430/3ce5b281-3454-498f-85bc-c65f57e2d0be)
- New behavior: ![New Behavior 1](https://github.com/nextui-org/nextui/assets/147910430/a8887380-faad-41b8-94b9-b24c2f31360e), ![New Behavior 2](https://github.com/nextui-org/nextui/assets/147910430/5edd12ad-8c0d-47f9-baa1-fec718c9540f)

**Breaking Change**: No

### Objectives from Linked Issues

**Issue #3369**: [BUG] - avatar icon not shown in User component

**Description**:
- The bug occurs in the User component where the `icon` can be passed to `avatarProps`.
- The issue arises because the `name` defined in `User` is passed to `Avatar`, causing the initial to be shown instead of the icon.
- The objective is to ensure that if `name` is not passed to `avatarProps`, the initial should not be shown, and the specified icon should be displayed.

**Example**:
- Given code snippet to reproduce the issue:
  ```tsx
  <User
      avatarProps={{
          radius: "full",
          size: "sm",
          icon: <AvatarIcon />,
          classNames: {
              base: "bg-gradient-to-br from-[#FFB457] to-[#FF705B]",
              icon: "text-black/80",
          }
      }}
      name="test"
  />
  ```
- Expected behavior: The initial should not be shown if `name` is not passed to `avatarProps`.

**Environment**:
- NextUI Version: 2.4.2
- Operating System: macOS
- Browser: Chrome

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated summary of generated summaries

In the `useUser` function within `use-user.ts`, the assignment of the `name` property to the `avatarProps` object was removed to ensure the `name` is only included when no avatar icon source is provided. This change simplifies the handling of the `avatarProps` object by eliminating conditional logic based on the type of `name`.

In the user component tests (`user.test.tsx`), an import statement for `AvatarIcon` from `@nextui-org/avatar` was added. The test cases were updated to use `getByText` for querying elements. Additionally, a new test was introduced to verify that the default icon is rendered when no name is passed to the avatar component.

### Alterations to the declarations of exported or public entities

#### `packages/components/user/src/use-user.ts`

- **Before:**
  ```typescript
  export function useUser(props: UseUserProps) {
      // ... other code
      const avatarProps = {
          // ... other properties
          name: typeof name === "string" ? name : undefined,
      };
      // ... other code
  }
  ```

- **After:**
  ```typescript
  export function useUser(props: UseUserProps) {
      // ... other code
      const avatarProps = {
          // ... other properties
      };
      // ... other code
  }
  ```

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- e6ea208067dd093eb90e1e45c412aebfead67dd9 -->
<!-- ac5d9b6c29414880cf2650c785d548d14e8a5fc6 -->
<!-- 7824fd73b6cf7094a1025a6ce5de8904ceb82297 -->
<!-- 90c4bdcefd7f89850463c21859b1fb06d76cd0ef -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

> [!TIP]
> <details>
> <summary>Early access features: enabled</summary>
> 
> We are currently testing the following features in early access:
> 
> - **OpenAI `gpt-4o` model for code reviews and chat**: OpenAI claims that this model is better at understanding and generating code than the previous models. We seek your feedback over the next few weeks before making it generally available.
> 
> Note:
> - You can enable or disable early access features from the CodeRabbit UI or by updating the CodeRabbit configuration file.
> - Please join our [Discord Community](https://discord.com/invite/GsXnASn26c) to provide feedback and report issues.
> - OSS projects are currently opted into early access features by default.
> 
> </details>

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/fair-zebras-fetch.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/user": patch
+---
+
+Removed `name` from `avatarProps` in `use-user.ts` (#3369)\n- packages/components/user/__tests__/user.test.tsx (modified, 6 changes)\n  Patch: @@ -19,10 +19,10 @@ describe("User", () => {
   });
 
   it("should have the passed name", () => {
-    const {container} = render(<User name="Test" />);
-    const name = container.querySelector("span");
+    const {getByText} = render(<User name="Test" />);
+    const nameElement = getByText("Test");
 
-    expect(name).toHaveTextContent("Test");
+    expect(nameElement).toBeInTheDocument();
   });
 
   it("should have the passed description", () => {\n- packages/components/user/src/use-user.ts (modified, 1 changes)\n  Patch: @@ -66,7 +66,6 @@ export function useUser(props: UseUserProps) {
 
   const avatarProps = {
     isFocusable: false,
-    name: typeof name === "string" ? name : undefined,
     ...userAvatarProps,
   };
 \n
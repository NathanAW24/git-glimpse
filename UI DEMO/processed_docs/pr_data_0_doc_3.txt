Pull Request Number: 4286
Title: fix: reverting pr4168
Base Branch: canary
Head Branch: macci001/revert-4168
Author: macci001
URL: https://github.com/nextui-org/nextui/pull/4286
State: OPEN
Created At: 2024-12-09T06:09:57Z
Merged At: None
Participants: macci001, wingkwong

Description:
Closes #4256
Closes #4246
Closes #4244

üìù Description
This reverts #4168
‚õ≥Ô∏è Current behavior (updates)

Links work fine now:


  
    
    

    Screen.Recording.2024-12-09.at.11.45.21.AM.mov
    
  

  

  



StartContent alignment and end content alignment looks good as well:

There would be an issue if polymorphic component is used.

üöÄ New behavior

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit
Summary by CodeRabbit


Bug Fixes

Removed tests for anchor tag rendering in ListboxItem, MenuItem, and PaginationItem components based on the href prop.



New Features

Simplified rendering logic in ListboxItem, MenuItem, and PaginationItem components by removing unnecessary wrappers, enhancing readability and maintainability.



Refactor

Streamlined component structures and logic in useListboxItem, useMenuItem, and usePaginationItem to improve clarity and reduce complexity.



Chores

Patched packages: @nextui-org/pagination, @nextui-org/listbox, and @nextui-org/menu.
Reverted changes from PR-4168 related to issues #4256, #4246, and #4244.

Commits:
- Revert "chore: adding the tests"

This reverts commit bd28852a484fb9f6a7dd18b8fc75fe1dae6d2779.\n- Revert "fix(items): items in list should wrapped in li in case of a"

This reverts commit 57fb87abb0c3775bf408aef80f0afc8fb1ca9265.\n- chore: adding the changeset\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: cdbd5f8ceba0eeed59e2c1b235a734b60d75caf3

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 7 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/pagination   | Patch |
| @nextui-org/listbox      | Patch |
| @nextui-org/menu         | Patch |
| @nextui-org/react        | Patch |
| @nextui-org/autocomplete | Patch |
| @nextui-org/select       | Patch |
| @nextui-org/dropdown     | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/macci001/revert-4168?filename=.changeset/bright-nails-behave.md&value=---%0A%22%40nextui-org%2Flistbox%22%3A%20patch%0A%22%40nextui-org%2Fmenu%22%3A%20patch%0A%22%40nextui-org%2Fpagination%22%3A%20patch%0A---%0A%0Afix%3A%20reverting%20pr4168%0A)

\n- vercel: [vc]: #2bDXxD5S2Bv4lSbqgGhJMN89DuOo0jDB39tqnc12PzI=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi8zVUdBNzRiV2hvdm5wMm5QRDFyQ1Nwc1RaeWh6IiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1tYWNjaTAwMS1yZXZlcnQtNDE2OC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LW1hY2NpMDAxLXJldmVydC00MTY4LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvSjdhRDNqZU00MlluQkE0d2p1Vm9TY1lKb1VqVSIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1tYWNjaTAwMS1yZXZlcnQtNDE2OC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtbWFjY2kwMDEtcmV2ZXJ0LTQxNjgtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/3UGA74bWhovnp2nPD1rCSpsTZyhz)) | [Visit Preview](https://nextui-docs-v2-git-macci001-revert-4168-nextui-org.vercel.app) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-macci001-revert-4168-nextui-org.vercel.app?via=pr-comment-feedback-link) | Dec 9, 2024 7:06am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/J7aD3jeM42YnBA4wjuVoScYJoUjU)) | [Visit Preview](https://nextui-storybook-v2-git-macci001-revert-4168-nextui-org.vercel.app) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-macci001-revert-4168-nextui-org.vercel.app?via=pr-comment-feedback-link) | Dec 9, 2024 7:06am |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->




<!-- walkthrough_start -->

## Walkthrough
The changes in this pull request primarily involve the removal of test cases related to the rendering of anchor tags in the `ListboxItem`, `MenuItem`, and `PaginationItem` components. Additionally, the `FragmentWrapper` has been eliminated from several components, which simplifies their structure and rendering process. The handling of the `href` prop has been updated to conditionally render either an anchor or a list item based on its presence, enhancing the clarity and maintainability of the code.

## Changes

| File Path                                           | Change Summary                                                                                  |
|-----------------------------------------------------|------------------------------------------------------------------------------------------------|
| `packages/components/listbox/__tests__/listbox.test.tsx` | Removed tests for anchor tag rendering based on `href` prop.                                   |
| `packages/components/listbox/src/listbox-item.tsx` | Removed `FragmentWrapper`, simplified rendering logic for `description`, `startContent`, and `endContent`. |
| `packages/components/listbox/src/use-listbox-item.ts` | Updated logic to conditionally render anchor or list item based on `href`, removed `FragmentWrapper`. |
| `packages/components/menu/__tests__/menu.test.tsx` | Removed tests for anchor tag rendering based on `href` prop.                                   |
| `packages/components/menu/src/menu-item.tsx`      | Removed `FragmentWrapper`, simplified rendering logic for `description` and child components.   |
| `packages/components/menu/src/use-menu-item.ts`    | Updated logic to conditionally render anchor or list item based on `href`, removed `FragmentWrapper`. |
| `packages/components/pagination/__tests__/pagination.test.tsx` | Removed tests for anchor tag rendering based on `href` prop.                                   |
| `packages/components/pagination/src/pagination-item.tsx` | Removed `FragmentWrapper`, simplified rendering logic.                                         |
| `packages/components/pagination/src/use-pagination-item.ts` | Updated logic to conditionally render anchor or list item based on `href`, removed `FragmentWrapper`. |

## Assessment against linked issues

| Objective                                             | Addressed | Explanation                                      |
|------------------------------------------------------|-----------|--------------------------------------------------|
| Ensure `<a>` tags do not nest within each other (#4256) | ‚úÖ         |                                                  |
| Ensure DropdownItem links function correctly (#4246) | ‚ùå         | The changes do not address the navigation issue with DropdownItems. |
| Ensure titles in DropdownMenu do not move to a new line (#4244) | ‚ùì         | It is unclear if the changes resolve the layout issue with startContent. |

## Possibly related PRs
- **#4168**: Fixes the missing `<li>` wrapper when the `href` prop is specified in `ListboxItem`, directly relating to the changes made.
- **#3756**: Undoes changes from a previous PR that may have affected dropdown and menu components, which could relate to the changes in this PR.
- **#4156**: Fixes class name issues in the `MenuItem` component, which may relate to the overall structure and rendering of menu items.
- **#4198**: Addresses issues with `forwardRef` render functions in various components, relevant to the changes in `ListboxItem`.
- **#4222**: Addresses cursor positioning in the pagination component, which may relate to user interactions similar to those in the `ListboxItem`.

## Suggested labels
`üëÄ Status: In Review`

## Suggested reviewers
- jrgarciadev
- wingkwong

<!-- walkthrough_end -->

---

<details>
<summary>üìú Recent review details</summary>

**Configuration used: .coderabbit.yaml**
**Review profile: CHILL**

<details>
<summary>üì• Commits</summary>

Reviewing files that changed from the base of the PR and between 2870b31bf4e11f8f5709362d3926b798c1ce191a and cdbd5f8ceba0eeed59e2c1b235a734b60d75caf3.

</details>

<details>
<summary>üìí Files selected for processing (1)</summary>

* `.changeset/breezy-bobcats-destroy.md` (1 hunks)

</details>

<details>
<summary>‚úÖ Files skipped from review due to trivial changes (1)</summary>

* .changeset/breezy-bobcats-destroy.md

</details>

</details>
<!-- internal state start -->


<!-- = -->

<!-- internal state end -->
<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/breezy-bobcats-destroy.md (added, 7 changes)\n  Patch: @@ -0,0 +1,7 @@
+---
+"@nextui-org/pagination": patch
+"@nextui-org/listbox": patch
+"@nextui-org/menu": patch
+---
+
+Reverts the PR-4168 (#4256, #4246, #4244)\n- packages/components/listbox/__tests__/listbox.test.tsx (modified, 34 changes)\n  Patch: @@ -124,40 +124,6 @@ describe("Listbox", () => {
     expect(() => wrapper.unmount()).not.toThrow();
   });
 
-  it("should not have anchor tag when href prop is not passed", () => {
-    render(
-      <Listbox disallowEmptySelection aria-label="Actions" selectionMode="multiple">
-        <ListboxItem key="new">New file</ListboxItem>
-        <ListboxItem key="copy">Copy link</ListboxItem>
-        <ListboxItem key="edit">Edit file</ListboxItem>
-      </Listbox>,
-    );
-
-    let anchorTag = document.getElementsByTagName("a")[0];
-
-    expect(anchorTag).toBeFalsy();
-  });
-
-  it("should have anchor tag when href prop is passed", () => {
-    const href = "http://www.nextui.org/";
-
-    render(
-      <Listbox disallowEmptySelection aria-label="Actions" selectionMode="multiple">
-        <ListboxItem key="new" href={href}>
-          New file
-        </ListboxItem>
-        <ListboxItem key="copy">Copy link</ListboxItem>
-        <ListboxItem key="edit">Edit file</ListboxItem>
-      </Listbox>,
-    );
-
-    let anchorTag = document.getElementsByTagName("a")[0];
-
-    expect(anchorTag).toBeTruthy();
-
-    expect(anchorTag).toHaveProperty("href", href);
-  });
-
   it("should work with single selection (controlled)", async () => {
     let onSelectionChange = jest.fn();
 \n- packages/components/listbox/src/listbox-item.tsx (modified, 28 changes)\n  Patch: @@ -12,7 +12,6 @@ export interface ListboxItemProps<T extends object = object>
 const ListboxItem = (props: ListboxItemProps) => {
   const {
     Component,
-    FragmentWrapper,
     rendered,
     description,
     isSelectable,
@@ -23,7 +22,6 @@ const ListboxItem = (props: ListboxItemProps) => {
     endContent,
     hideSelectedIcon,
     disableAnimation,
-    fragmentWrapperProps,
     getItemProps,
     getLabelProps,
     getWrapperProps,
@@ -47,21 +45,19 @@ const ListboxItem = (props: ListboxItemProps) => {
 
   return (
     <Component {...getItemProps()}>
-      <FragmentWrapper {...fragmentWrapperProps}>
-        {startContent}
-        {description ? (
-          <div {...getWrapperProps()}>
-            <span {...getLabelProps()}>{rendered}</span>
-            <span {...getDescriptionProps()}>{description}</span>
-          </div>
-        ) : (
+      {startContent}
+      {description ? (
+        <div {...getWrapperProps()}>
           <span {...getLabelProps()}>{rendered}</span>
-        )}
-        {isSelectable && !hideSelectedIcon && (
-          <span {...getSelectedIconProps()}>{selectedContent}</span>
-        )}
-        {endContent}
-      </FragmentWrapper>
+          <span {...getDescriptionProps()}>{description}</span>
+        </div>
+      ) : (
+        <span {...getLabelProps()}>{rendered}</span>
+      )}
+      {isSelectable && !hideSelectedIcon && (
+        <span {...getSelectedIconProps()}>{selectedContent}</span>
+      )}
+      {endContent}
     </Component>
   );
 };\n- packages/components/listbox/src/use-listbox-item.ts (modified, 10 changes)\n  Patch: @@ -1,7 +1,7 @@
 import type {ListboxItemBaseProps} from "./base/listbox-item-base";
 import type {MenuItemVariantProps} from "@nextui-org/theme";
 
-import {useMemo, useRef, useCallback, Fragment} from "react";
+import {useMemo, useRef, useCallback} from "react";
 import {listboxItem} from "@nextui-org/theme";
 import {
   HTMLNextUIProps,
@@ -50,7 +50,6 @@ export function useListboxItem<T extends object>(originalProps: UseListboxItemPr
     shouldHighlightOnFocus,
     hideSelectedIcon = false,
     isReadOnly = false,
-    href,
     ...otherProps
   } = props;
 
@@ -59,12 +58,9 @@ export function useListboxItem<T extends object>(originalProps: UseListboxItemPr
 
   const domRef = useRef<HTMLLIElement>(null);
 
-  const Component = as || "li";
+  const Component = as || (originalProps.href ? "a" : "li");
   const shouldFilterDOMProps = typeof Component === "string";
 
-  const FragmentWrapper = href ? "a" : Fragment;
-  const fragmentWrapperProps = href ? {href} : {};
-
   const {rendered, key} = item;
 
   const isDisabled = state.disabledKeys.has(key) || originalProps.isDisabled;
@@ -173,7 +169,6 @@ export function useListboxItem<T extends object>(originalProps: UseListboxItemPr
 
   return {
     Component,
-    FragmentWrapper,
     domRef,
     slots,
     classNames,
@@ -187,7 +182,6 @@ export function useListboxItem<T extends object>(originalProps: UseListboxItemPr
     selectedIcon,
     hideSelectedIcon,
     disableAnimation,
-    fragmentWrapperProps,
     getItemProps,
     getLabelProps,
     getWrapperProps,\n- packages/components/menu/__tests__/menu.test.tsx (modified, 40 changes)\n  Patch: @@ -125,46 +125,6 @@ describe("Menu", () => {
     expect(() => wrapper.unmount()).not.toThrow();
   });
 
-  it("should not have anchor tag when href prop is not passed", () => {
-    render(
-      <Menu disallowEmptySelection aria-label="Actions" selectionMode="multiple">
-        <MenuItem key="new">New file</MenuItem>
-        <MenuItem key="copy">Copy link</MenuItem>
-        <MenuItem key="edit">Edit file</MenuItem>
-        <MenuItem key="delete" color="danger">
-          Delete file
-        </MenuItem>
-      </Menu>,
-    );
-
-    let anchorTag = document.getElementsByTagName("a")[0];
-
-    expect(anchorTag).toBeFalsy();
-  });
-
-  it("should have anchor tag when href prop is passed", () => {
-    const href = "http://www.nextui.org/";
-
-    render(
-      <Menu disallowEmptySelection aria-label="Actions" selectionMode="multiple">
-        <MenuItem key="new" href={href}>
-          New file
-        </MenuItem>
-        <MenuItem key="copy">Copy link</MenuItem>
-        <MenuItem key="edit">Edit file</MenuItem>
-        <MenuItem key="delete" color="danger">
-          Delete file
-        </MenuItem>
-      </Menu>,
-    );
-
-    let anchorTag = document.getElementsByTagName("a")[0];
-
-    expect(anchorTag).toBeTruthy();
-
-    expect(anchorTag).toHaveProperty("href", href);
-  });
-
   it("should work with single selection (controlled)", async () => {
     let onSelectionChange = jest.fn();
 \n- packages/components/menu/src/menu-item.tsx (modified, 30 changes)\n  Patch: @@ -12,7 +12,6 @@ export interface MenuItemProps<T extends object = object>
 const MenuItem = (props: MenuItemProps) => {
   const {
     Component,
-    FragmentWrapper,
     slots,
     classNames,
     rendered,
@@ -26,7 +25,6 @@ const MenuItem = (props: MenuItemProps) => {
     endContent,
     disableAnimation,
     hideSelectedIcon,
-    fragmentWrapperProps,
     getItemProps,
     getLabelProps,
     getDescriptionProps,
@@ -50,22 +48,20 @@ const MenuItem = (props: MenuItemProps) => {
 
   return (
     <Component {...getItemProps()}>
-      <FragmentWrapper {...fragmentWrapperProps}>
-        {startContent}
-        {description ? (
-          <div className={slots.wrapper({class: classNames?.wrapper})}>
-            <span {...getLabelProps()}>{rendered}</span>
-            <span {...getDescriptionProps()}>{description}</span>
-          </div>
-        ) : (
+      {startContent}
+      {description ? (
+        <div className={slots.wrapper({class: classNames?.wrapper})}>
           <span {...getLabelProps()}>{rendered}</span>
-        )}
-        {shortcut && <kbd {...getKeyboardShortcutProps()}>{shortcut}</kbd>}
-        {isSelectable && !hideSelectedIcon && (
-          <span {...getSelectedIconProps()}>{selectedContent}</span>
-        )}
-        {endContent}
-      </FragmentWrapper>
+          <span {...getDescriptionProps()}>{description}</span>
+        </div>
+      ) : (
+        <span {...getLabelProps()}>{rendered}</span>
+      )}
+      {shortcut && <kbd {...getKeyboardShortcutProps()}>{shortcut}</kbd>}
+      {isSelectable && !hideSelectedIcon && (
+        <span {...getSelectedIconProps()}>{selectedContent}</span>
+      )}
+      {endContent}
     </Component>
   );
 };\n- packages/components/menu/src/use-menu-item.ts (modified, 10 changes)\n  Patch: @@ -2,7 +2,7 @@ import type {MenuItemBaseProps} from "./base/menu-item-base";
 import type {MenuItemVariantProps} from "@nextui-org/theme";
 import type {Node} from "@react-types/shared";
 
-import {useMemo, useRef, useCallback, Fragment} from "react";
+import {useMemo, useRef, useCallback} from "react";
 import {menuItem} from "@nextui-org/theme";
 import {
   HTMLNextUIProps,
@@ -59,7 +59,6 @@ export function useMenuItem<T extends object>(originalProps: UseMenuItemProps<T>
     isReadOnly = false,
     closeOnSelect,
     onClose,
-    href,
     ...otherProps
   } = props;
 
@@ -68,12 +67,9 @@ export function useMenuItem<T extends object>(originalProps: UseMenuItemProps<T>
 
   const domRef = useRef<HTMLLIElement>(null);
 
-  const Component = as || "li";
+  const Component = as || (otherProps?.href ? "a" : "li");
   const shouldFilterDOMProps = typeof Component === "string";
 
-  const FragmentWrapper = href ? "a" : Fragment;
-  const fragmentWrapperProps = href ? {href} : {};
-
   const {rendered, key} = item;
 
   const isDisabledProp = state.disabledKeys.has(key) || originalProps.isDisabled;
@@ -198,7 +194,6 @@ export function useMenuItem<T extends object>(originalProps: UseMenuItemProps<T>
 
   return {
     Component,
-    FragmentWrapper,
     domRef,
     slots,
     classNames,
@@ -212,7 +207,6 @@ export function useMenuItem<T extends object>(originalProps: UseMenuItemProps<T>
     endContent,
     selectedIcon,
     disableAnimation,
-    fragmentWrapperProps,
     getItemProps,
     getLabelProps,
     hideSelectedIcon,\n- packages/components/pagination/__tests__/pagination.test.tsx (modified, 21 changes)\n  Patch: @@ -1,7 +1,7 @@
 import * as React from "react";
 import {render} from "@testing-library/react";
 
-import {Pagination, PaginationItem} from "../src";
+import {Pagination} from "../src";
 
 describe("Pagination", () => {
   it("should render correctly", () => {
@@ -37,25 +37,6 @@ describe("Pagination", () => {
     expect(prevButton).toBeNull();
   });
 
-  it("should not have anchor tag when href prop is not passed", () => {
-    render(<PaginationItem />);
-    let anchorTag = document.getElementsByTagName("a")[0];
-
-    expect(anchorTag).toBeFalsy();
-  });
-
-  it("should have anchor tag when href prop is passed", () => {
-    const href = "http://www.nextui.org/";
-
-    render(<PaginationItem href={href} />);
-
-    let anchorTag = document.getElementsByTagName("a")[0];
-
-    expect(anchorTag).toBeTruthy();
-
-    expect(anchorTag).toHaveProperty("href", href);
-  });
-
   it("should show dots when total is greater than 10", () => {
     const wrapper = render(<Pagination total={10} />);
 \n- packages/components/pagination/src/pagination-item.tsx (modified, 9 changes)\n  Patch: @@ -5,14 +5,9 @@ import {usePaginationItem, UsePaginationItemProps} from "./use-pagination-item";
 export interface PaginationItemProps extends UsePaginationItemProps {}
 
 const PaginationItem = forwardRef<"li", PaginationItemProps>((props, ref) => {
-  const {Component, FragmentWrapper, fragmentWrapperProps, children, getItemProps} =
-    usePaginationItem({...props, ref});
+  const {Component, children, getItemProps} = usePaginationItem({...props, ref});
 
-  return (
-    <Component {...getItemProps()}>
-      <FragmentWrapper {...fragmentWrapperProps}>{children}</FragmentWrapper>
-    </Component>
-  );
+  return <Component {...getItemProps()}>{children}</Component>;
 });
 
 PaginationItem.displayName = "NextUI.PaginationItem";\n- packages/components/pagination/src/use-pagination-item.ts (modified, 11 changes)\n  Patch: @@ -2,7 +2,7 @@ import type {Ref} from "react";
 import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 import type {LinkDOMProps, PressEvent} from "@react-types/shared";
 
-import {Fragment, useMemo} from "react";
+import {useMemo} from "react";
 import {PaginationItemValue} from "@nextui-org/use-pagination";
 import {clsx, dataAttr} from "@nextui-org/shared-utils";
 import {chain, mergeProps, shouldClientNavigate, useRouter} from "@react-aria/utils";
@@ -64,13 +64,10 @@ export function usePaginationItem(props: UsePaginationItemProps) {
   } = props;
 
   const isLink = !!props?.href;
-  const Component = as || "li";
+  const Component = as || isLink ? "a" : "li";
   const shouldFilterDOMProps = typeof Component === "string";
-
-  const FragmentWrapper = isLink ? "a" : Fragment;
-  const fragmentWrapperProps = isLink ? {href: props.href} : {};
-
   const domRef = useDOMRef(ref);
+
   const router = useRouter();
 
   const ariaLabel = useMemo(
@@ -132,8 +129,6 @@ export function usePaginationItem(props: UsePaginationItemProps) {
 
   return {
     Component,
-    FragmentWrapper,
-    fragmentWrapperProps,
     children,
     ariaLabel,
     isFocused,\n
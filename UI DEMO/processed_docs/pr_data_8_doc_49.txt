Pull Request Number: 3309
Title: fix(table): correct bg color for selected striped rows
Base Branch: canary
Head Branch: canary
Author: bipulk69
URL: https://github.com/nextui-org/nextui/pull/3309
State: CLOSED
Created At: 2024-06-23T18:12:19Z
Merged At: None
Participants: bipulk69, wingkwong

Description:
Closes # 
üìù Description

Add a brief description

‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit

Enhancements

Improved table row customization with additional class properties, including striped and selected row styles.

Commits:
- fix(table): correct bg color for selected striped rows\n

Labels:


Comments:
- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: 4bc888ad0fe4635003b90c2621c537fee0e7e946

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/bipulk69/nextui/new/canary?filename=.changeset/silly-horses-design.md&value=---%0A%22%40nextui-org%2Ftable%22%3A%20patch%0A---%0A%0Afix(table)%3A%20correct%20bg%20color%20for%20selected%20striped%20rows%0A)

\n- vercel: [vc]: #WOdliuTiT2HmcFusK9A+eBM04lpuusK6C+joAeLAHrs=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvRGhhQ2p3NWRiOXBaTVpKVW9EYUJiSk41YjdCeSIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWJpcHVsazY5LWNhbmFyeS1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZm9yay1iaXB1bGs2OS1jYW5hcnktbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/DhaCjw5db9pZMZJUoDaBbJN5b7By)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-bipulk69-canary-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-bipulk69-canary-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 23, 2024 6:15pm |

\n- vercel: @bipulk69 is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%224bc888ad0fe4635003b90c2621c537fee0e7e946%22%7D%2C%22id%22%3A%22QmQSjYT3JrV8m5huD5nWwr8z47dF31UEnm19AEjbjU6m2o%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A3309%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The recent changes to the `table-row.tsx` file focus on enhancing the `TableRowProps` interface by adding new class properties: `trStriped`, `trSelected`, and `trStripedSelected`. These properties are used to refine the styling of table rows. Additionally, the `trStyles` variable handling has been streamlined by integrating its logic directly into the JSX using the `slots.tr` function, resulting in more concise and maintainable code.

## Changes

| File                                          | Summary                                                                                           |
|-----------------------------------------------|---------------------------------------------------------------------------------------------------|
| `packages/components/table/src/table-row.tsx`  | Expanded `classNames` in `TableRowProps` to include `trStriped`, `trSelected`, and `trStripedSelected`. Removed `trStyles` variable and integrated its logic directly into JSX. |



<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

packages/components/table/src/table-row.tsx: ### Summary

In the `packages/components/table/src/table-row.tsx` file:
- The `classNames` property in the `TableRowProps` interface has been expanded to include additional properties like `trStriped`, `trSelected`, and `trStripedSelected`.
- The `trStyles` variable assignment has been removed, and its functionality has been integrated into the JSX directly using the `slots.tr` function.

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

### PR Summary

**Title:** fix(table): correct bg color for selected striped rows  
**User:** bipulk69  
**Number:** 3309  

**Description:**

This pull request addresses an issue with the background color of selected striped rows in a table. The aim is to correct the background color to ensure proper visual distinction and consistency. The PR does not specify if it closes any existing GitHub issue. The description includes placeholders for the current behavior, new behavior, and whether the change is breaking or not, but these sections are not filled out.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated summary of generated summaries

In the `packages/components/table/src/table-row.tsx` file, the `TableRowProps` interface has been updated to include new properties `trStriped`, `trSelected`, and `trStripedSelected` in its `classNames` property. Additionally, the `trStyles` variable has been removed, and its functionality has been directly integrated into the JSX using the `slots.tr` function.

### Alterations to the declarations of exported or public entities

#### Before Changes

```typescript
interface TableRowProps {
  classNames: {
    tr: string;
  };
  // Other properties...
}
```

#### After Changes

```typescript
interface TableRowProps {
  classNames: {
    tr: string;
    trStriped?: string;
    trSelected?: string;
    trStripedSelected?: string;
  };
  // Other properties...
}
```

#### Before Changes

```typescript
const trStyles = someFunction();
const tableRow = (
  <tr className={trStyles}>
    // JSX content...
  </tr>
);
```

#### After Changes

```typescript
const tableRow = (
  <tr className={slots.tr}>
    // JSX content...
  </tr>
);
```

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 4bc888ad0fe4635003b90c2621c537fee0e7e946 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- wingkwong: No longer applicable.\n

Files Changed:
- packages/components/table/src/table-row.tsx (modified, 23 changes)\n  Patch: @@ -12,16 +12,16 @@ import {useMemo} from "react";
 
 import {ValuesType} from "./use-table";
 
-// @internal
 export interface TableRowProps<T = object> extends Omit<BaseTableRowProps, "children"> {
-  /**
-   * The table row.
-   */
   node: GridNode<T>;
   slots: ValuesType["slots"];
   state: ValuesType["state"];
   isSelectable?: ValuesType["isSelectable"];
-  classNames?: ValuesType["classNames"];
+  classNames?: ValuesType["classNames"] & {
+    trStriped?: string;
+    trSelected?: string;
+    trStripedSelected?: string;
+  };
 }
 
 const TableRow = forwardRef<"tr", TableRowProps>((props, ref) => {
@@ -34,9 +34,6 @@ const TableRow = forwardRef<"tr", TableRowProps>((props, ref) => {
   const domRef = useDOMRef(ref);
 
   const {rowProps} = useTableRow({node}, state, domRef);
-
-  const trStyles = clsx(classNames?.tr, className, node.props?.className);
-
   const {isFocusVisible, focusProps} = useFocusRing();
 
   const isDisabled = state.disabledKeys.has(node.key);
@@ -58,6 +55,14 @@ const TableRow = forwardRef<"tr", TableRowProps>((props, ref) => {
     };
   }, [node, state.collection]);
 
+  const trStyles = slots.tr?.({
+    class: clsx(classNames?.tr, className, node.props?.className, {
+      [classNames?.trStriped ?? ""]: isOdd,
+      [classNames?.trSelected ?? ""]: isSelected,
+      [classNames?.trStripedSelected ?? ""]: isOdd && isSelected,
+    }),
+  });
+
   return (
     <Component
       ref={domRef}
@@ -78,7 +83,7 @@ const TableRow = forwardRef<"tr", TableRowProps>((props, ref) => {
         }),
         otherProps,
       )}
-      className={slots.tr?.({class: trStyles})}
+      className={trStyles}
     >
       {children}
     </Component>\n- pnpm-lock.yaml (modified, 26212 changes)\n  Patch: No patch available\n
Pull Request Number: 3226
Title: fix(docs): updated docs for all the components that had issue on `classNames` prop type
Base Branch: canary
Head Branch: docs/classNames-type-issue
Author: aayush-goyal
URL: https://github.com/nextui-org/nextui/pull/3226
State: CLOSED
Created At: 2024-06-09T22:21:53Z
Merged At: None
Participants: aayush-goyal, wingkwong, jrgarciadev

Description:
Closes #3216
üìù Description
Components that classNames props had the wrong type specified on their documentation page. This fixes for all those components.
‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):
No
üìù Additional Information
There are a lot of files but all have similar kind of change. Changed Record<UnionType, string> to Partial<Record<UnionType, string>> for each component classNames type.

Summary by CodeRabbit

Documentation

Updated the classNames property across multiple component documentation files to use Partial<Record<...>> type, allowing for partial custom class names for various component slots. This change provides more flexibility in customizing the appearance of components such as Autocomplete, Avatar, Badge, Breadcrumbs, Calendar, Card, Checkbox, Chip, CircularProgress, DateInput, DatePicker, Dropdown, Image, Input, Listbox, Modal, Navbar, Pagination, Popover, Progress, RadioGroup, Skeleton, Slider, Snippet, Spinner, Switch, Table, Tabs, Textarea, TimeInput, Tooltip, and User.

Commits:
- fix(docs): updated docs for autocomplete to show correct type on `classNames` prop\n- fix(docs): updated docs for Avatar to show correct type on `classNames` prop\n- fix(docs): updated docs for Badge to show correct type on `classNames` prop\n- fix(docs): updated docs for Breadcrumbs to show correct type on `classNames` prop\n- fix(docs): updated docs for Calendar component to show correct type on `classNames` prop\n- fix(docs): updated docs for Card component to show correct type on `classNames` prop\n- fix(docs): updated docs for Checkbox Group component to show correct type on `classNames` prop\n- fix(docs): updated docs for Checkbox component to show correct type on `classNames` prop\n- fix(docs): updated docs for Chip component to show correct type on `classNames` prop\n- fix(docs): updated docs for Circular Progress component to show correct type on `classNames` prop\n- fix(docs): updated docs for Date Input component to show correct type on `classNames` prop\n- fix(docs): updated docs for Date Picker component to show correct type on `classNames` prop\n- fix(docs): updated docs for Date Range Picker component to show correct type on `classNames` prop\n- fix(docs): updated docs for Dropdown component to show correct type on `classNames` prop\n- fix(docs): updated docs for Image component to show correct type on `classNames` prop\n- fix(docs): updated docs for Input component to show correct type on `classNames` prop\n- fix(docs): updated docs for Kbd component to show correct type on `classNames` prop\n- fix(docs): updated docs for ListBox component to show correct type on `classNames` prop\n- fix(docs): updated docs for Modal component to show correct type on `classNames` prop\n- fix(docs): updated docs for NavBar component to show correct type on `classNames` prop\n- fix(docs): updated docs for Pagination component to show correct type on `classNames` prop\n- fix(docs): updated docs for Popover component to show correct type on `classNames` prop\n- fix(docs): updated docs for Progress component to show correct type on `classNames` prop\n- fix(docs): updated docs for Radio Group component to show correct type on `classNames` prop\n- fix(docs): updated docs for Range Calendar component to show correct type on `classNames` prop\n- fix(docs): updated docs for Select component to show correct type on `classNames` prop\n- fix(docs): updated docs for Skeleton component to show correct type on `classNames` prop\n- fix(docs): updated docs for Slider component to show correct type on `classNames` prop\n- fix(docs): updated docs for Snippet component to show correct type on `classNames` prop\n- fix(docs): updated docs for Spinner component to show correct type on `classNames` prop\n- fix(docs): updated docs for Switch component to show correct type on `classNames` prop\n- fix(docs): updated docs for Table component to show correct type on `classNames` prop\n- fix(docs): updated docs for Tabs component to show correct type on `classNames` prop\n- fix(docs): updated docs for TextArea component to show correct type on `classNames` prop\n- fix(docs): updated docs for TimeInput component to show correct type on `classNames` prop\n- fix(docs): updated docs for Tooltip component to show correct type on `classNames` prop\n- fix(docs): updated docs for User component to show correct type on `classNames` prop\n

Labels:
üö• Status: On Hold

Comments:
- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: 20c2f3b6b4965f73fb0994b7f08e1e7d572d481e

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/aayush-goyal/nextui/new/docs/classNames-type-issue?filename=.changeset/spotty-zebras-walk.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A---%0A%0Afix(docs)%3A%20updated%20docs%20for%20all%20the%20components%20that%20had%20issue%20on%20%60classNames%60%20prop%20type%0A)

\n- vercel: [vc]: #K6l0ull4ZYh/lHuePb0iUhvfsGO9H5dZylwrxETLXBk=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvSFE5b1lxTVhpTnhSWnNITXNjeVVMSFNSeXR4YiIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWFheXVzaC1nb3lhbC1kb2MtM2RmN2M2LW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWFheXVzaC1nb3lhbC1kb2MtM2RmN2M2LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/HQ9oYqMXiNxRZsHMscyULHSRytxb)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-aayush-goyal-doc-3df7c6-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-aayush-goyal-doc-3df7c6-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 9, 2024 10:24pm |

\n- vercel: @aayush-goyal is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%2220c2f3b6b4965f73fb0994b7f08e1e7d572d481e%22%7D%2C%22id%22%3A%22QmWh8NkTEGHUy65ANSV2ssdjkxzdE2Rd5bTjoEQDsFXUGS%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A3226%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The overall change involves updating the type declarations for the `classNames` property across multiple components in the NextUI documentation. The type has been modified from `Record<...>` to `Partial<Record<...>>`, allowing for more flexible and partial assignment of custom class names to different component slots. This change ensures that users are not required to define all possible class names, addressing a bug reported in the documentation.

## Changes

| Files                                                                                                           | Change Summary                                                                                                                                                                                                                                                                                                                                                              |
|-----------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `apps/docs/content/docs/components/autocomplete.mdx`                                                            | Updated `classNames` property to use `Partial<Record<...>>` for Autocomplete slots.                                                                                                                                                                                                                                                                                         |
| `apps/docs/content/docs/components/avatar.mdx`                                                                  | Updated `classNames` prop to `Partial<Record<...>>` for Avatar and Avatar Group components.                                                                                                                                                                                                                                                                                |
| `apps/docs/content/docs/components/badge.mdx`                                                                   | Modified `classNames` type to `Partial<Record<...>>` for Badge slots.                                                                                                                                                                                                                                                                                                      |
| `apps/docs/content/docs/components/breadcrumbs.mdx`                                                             | Changed `itemClasses` and `classNames` props to use `Partial<Record<...>>` for Breadcrumbs and BreadcrumbItem components.                                                                                                                                                                                                                                                   |
| `apps/docs/content/docs/components/calendar.mdx`, `apps/docs/content/docs/components/card.mdx`                  | Updated `classNames` to `Partial<Record<...>>` for Calendar and Card slots.                                                                                                                                                                                                                                                                                                |
| `apps/docs/content/docs/components/checkbox-group.mdx`, `apps/docs/content/docs/components/checkbox.mdx`        | Changed `classNames` property to use `Partial<Record<...>>` for CheckboxGroup and Checkbox components.                                                                                                                                                                                                                                                                     |
| `apps/docs/content/docs/components/chip.mdx`, `apps/docs/content/docs/components/circular-progress.mdx`         | Modified `classNames` prop to `Partial<Record<...>>` for Chip and CircularProgress components.                                                                                                                                                                                                                                                                             |
| `apps/docs/content/docs/components/date-input.mdx`, `apps/docs/content/docs/components/date-picker.mdx`         | Updated `classNames` to `Partial<Record<...>>` for DateInput and DatePicker components.                                                                                                                                                                                                                                                                                    |
| `apps/docs/content/docs/components/date-range-picker.mdx`, `apps/docs/content/docs/components/dropdown.mdx`     | Changed `classNames` and `itemClasses` props to `Partial<Record<...>>` for DateRangePicker and Dropdown components.                                                                                                                                                                                                                                                         |
| `apps/docs/content/docs/components/image.mdx`, `apps/docs/content/docs/components/input.mdx`                    | Modified `classNames` property to `Partial<Record<...>>` for Image and Input components.                                                                                                                                                                                                                                                                                    |
| `apps/docs/content/docs/components/kbd.mdx`, `apps/docs/content/docs/components/listbox.mdx`                    | Updated `classNames` and `itemClasses` to `Partial<Record<...>>` for Kbd and Listbox components.                                                                                                                                                                                                                                                                            |
| `apps/docs/content/docs/components/modal.mdx`, `apps/docs/content/docs/components/navbar.mdx`                   | Changed `classNames` declaration to `Partial<Record<...>>` for Modal and Navbar components.                                                                                                                                                                                                                                                                                |
| `apps/docs/content/docs/components/pagination.mdx`, `apps/docs/content/docs/components/popover.mdx`             | Modified `classNames` property to `Partial<Record<...>>` for Pagination and Popover components.                                                                                                                                                                                                                                                                            |
| `apps/docs/content/docs/components/progress.mdx`, `apps/docs/content/docs/components/radio-group.mdx`           | Updated `classNames` to `Partial<Record<...>>` for Progress and RadioGroup components.                                                                                                                                                                                                                                                                                      |
| `apps/docs/content/docs/components/range-calendar.mdx`, `apps/docs/content/docs/components/skeleton.mdx`        | Changed `classNames` property to `Partial<Record<...>>` for RangeCalendar and Skeleton components.                                                                                                                                                                                                                                                                          |
| `apps/docs/content/docs/components/slider.mdx`, `apps/docs/content/docs/components/snippet.mdx`                 | Modified `classNames` prop to `Partial<Record<...>>` for Slider and Snippet components.                                                                                                                                                                                                                                                                                     |
| `apps/docs/content/docs/components/spinner.mdx`, `apps/docs/content/docs/components/switch.mdx`                 | Updated `classNames` to `Partial<Record<...>>` for Spinner and Switch components.                                                                                                                                                                                                                                                                                          |
| `apps/docs/content/docs/components/table.mdx`, `apps/docs/content/docs/components/tabs.mdx`                     | Changed `classNames` property to `Partial<Record<...>>` for Table and Tabs components.                                                                                                                                                                                                                                                                                      |
| `apps/docs/content/docs/components/textarea.mdx`, `apps/docs/content/docs/components/time-input.mdx`            | Modified `classNames` prop to `Partial<Record<...>>` for Textarea and TimeInput components.                                                                                                                                                                                                                                                                                |
| `apps/docs/content/docs/components/tooltip.mdx`, `apps/docs/content/docs/components/user.mdx`                   | Updated `classNames` to `Partial<Record<...>>` for Tooltip and User components.                                                                                                                                                                                                                                                                                             |

## Assessment against linked issues

| Objective                                                                                 | Addressed | Explanation |
|-------------------------------------------------------------------------------------------|-----------|-------------|
| Update `classNames` type descriptions to use `Partial<Record<...>>` for flexibility (#3216) | ‚úÖ         |             |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

```
apps/docs/content/docs/components/autocomplete.mdx: ### Summary

In the `autocomplete.mdx` file, the change involves modifying the `classNames` property in the Autocomplete component. The type of `classNames` has been updated to `Partial<Record<"base"ÔΩú "listboxWrapper"ÔΩú "listbox"ÔΩú "popoverContent" ÔΩú "endContentWrapper"ÔΩú "clearButton" ÔΩú "selectorButton", string>>` to allow setting custom class names for the Autocomplete slots.

---

apps/docs/content/docs/components/avatar.mdx: ### Summary

The diff in `avatar.mdx` involves changes to the `classNames` prop in both the Avatar and Avatar Group components. The type of `classNames` has been updated to `Partial<Record<"base" | "img" | "fallback" | "name" | "icon", string>>` for Avatar and `Partial<Record<"base" | "count", string>>` for Avatar Group, allowing custom class names for specific slots.

---

apps/docs/content/docs/components/badge.mdx: ## Short summary

The change in functionality for the `badge.mdx` component involves modifying the type declaration for the `classNames` property from `Record<"base"ÔΩú"badge", string>` to `Partial<Record<"base"ÔΩú"badge", string>>`. This change allows setting custom class names for the badge slots with a partial type definition.

---

apps/docs/content/docs/components/breadcrumbs.mdx: ## Short Summary

The changes in the `breadcrumbs.mdx` file involve modifying the types of the `itemClasses` and `classNames` props in the `Breadcrumbs` and `BreadcrumbItem` components to use `Partial` for the `Record` type, allowing custom class names for specific slots.

---

apps/docs/content/docs/components/calendar.mdx: ### Summary

In the `calendar.mdx` file, the `classNames` declaration has been modified to use `Partial<Record<...>>` instead of `Record<...>`, allowing for partial custom class names for calendar slots.

---

apps/docs/content/docs/components/card.mdx: ### Summary

In the `card.mdx` file, the `classNames` declaration has been updated from `Record<"base"ÔΩú "header"ÔΩú "body"ÔΩú "footer", string>` to `Partial<Record<"base"ÔΩú "header"ÔΩú "body"ÔΩú "footer", string>>`. This change allows setting custom class names for the card slots with a `Partial` type.

---

apps/docs/content/docs/components/checkbox-group.mdx: ## Short Summary

The change in functionality for the `classNames` property in the `CheckboxGroup` component now uses `Partial` in the type declaration, allowing for partial assignment of custom class names for the checkbox group slots.

---

apps/docs/content/docs/components/checkbox.mdx: ### Summary

The change in functionality for the `classNames` property in the `Checkbox` component involves updating its type declaration from `Record<"base"ÔΩú "wrapper"ÔΩú "icon"ÔΩú "label", string>` to `Partial<Record<"base"ÔΩú "wrapper"ÔΩú "icon"ÔΩú "label", string>>`. This modification allows for setting custom class names for the checkbox slots with more flexibility by making the `classNames` property optional.

---

apps/docs/content/docs/components/chip.mdx: ## Short Summary

The change in functionality for the `Chip` component involves modifying the `classNames` prop declaration to accept a `Partial` type of the class names record, allowing for more flexibility in setting custom class names for the chip slots.

---

apps/docs/content/docs/components/circular-progress.mdx: ## Short Summary

The change in functionality for the `CircularProgress` component involves updating the `classNames` prop to accept a `Partial` type for custom class names, providing more flexibility in setting class names for different slots of the circular progress.

---

apps/docs/content/docs/components/date-input.mdx: ### Summary

In the `date-input.mdx` file, the `classNames` declaration has been modified to use `Partial<Record<...>>` instead of `Record<...>` for setting custom class names for date input slots.

---

apps/docs/content/docs/components/date-picker.mdx: ## Short Summary

The change in functionality for the `date-picker` component involves modifying the `classNames` property to accept a `Partial` type for custom class names in the date-picker slots.

---

apps/docs/content/docs/components/date-range-picker.mdx: ## Short Summary

The change in functionality for `date-range-picker.mdx` involves modifying the `classNames` declaration to accept a `Partial` type for custom class names in the date-range-picker slots.

---

apps/docs/content/docs/components/dropdown.mdx: ### Summary

The diff in `dropdown.mdx` involves changes to the type declarations of `classNames` and `itemClasses` for different sections within the dropdown component. The modifications include changing the types to `Partial<Record<...>>` for both `classNames` and `itemClasses` to allow setting custom class names for specific slots within the dropdown component.

---

apps/docs/content/docs/components/image.mdx: ### Summary

In the `image.mdx` file, the `classNames` property's type declaration has been changed from `Record<"img"ÔΩú "wrapper"ÔΩú "zoomedWrapper"ÔΩú "blurredImg", string>` to `Partial<Record<"img"ÔΩú "wrapper"ÔΩú "zoomedWrapper"ÔΩú "blurredImg", string>>`.

---

apps/docs/content/docs/components/input.mdx: ### Summary

The change in functionality for `apps/docs/content/docs/components/input.mdx` involves modifying the `classNames` property to accept a `Partial` type instead of a full `Record` type for setting custom class names for Input slots.

---

apps/docs/content/docs/components/kbd.mdx: ### Summary

The diff in `kbd.mdx` involves a change in the `classNames` property declaration within the API section. The type definition for `classNames` has been updated from `Record<"base"ÔΩú"abbr"ÔΩú"content",string>` to `Partial<Record<"base"ÔΩú"abbr"ÔΩú"content",string>>`.

---

apps/docs/content/docs/components/listbox.mdx: ### Summary

In the `listbox.mdx` file, the changes focus on modifying the type declarations for `classNames` and `itemClasses` props in the `Listbox` component. The alterations involve changing the types from `Record` to `Partial<Record>`, allowing for more flexibility in setting custom class names for different slots within the listbox.

---

apps/docs/content/docs/components/modal.mdx: ## Short Summary

The diff in `modal.mdx` involves changes to the import statements for modal-related components in NextUI, adjustments to default modal behavior, and modifications to the `classNames` property for custom class names in the `Modal` component.

---

apps/docs/content/docs/components/navbar.mdx: ## Short Summary

The diff in `navbar.mdx` involves changes to the import statements for navbar-related components in NextUI. Additionally, there is a modification to the `classNames` declaration, changing it to accept a `Partial` type for custom class names in the navbar slots.

---

apps/docs/content/docs/components/pagination.mdx: ### Summary

The change in functionality involves modifying the `classNames` property in the `Pagination` component to accept a `Partial` type for custom class names, providing more flexibility in styling the pagination slots.

---

apps/docs/content/docs/components/popover.mdx: ## Short Summary

The change in functionality for the `Popover` component involves modifying the `classNames` property to accept a `Partial` type for custom class names for popover slots.

---

apps/docs/content/docs/components/progress.mdx: ## Short Summary

The change in functionality for the `Progress` component involves modifying the `classNames` property to accept a `Partial` type of custom class names, providing more flexibility in setting class names for the progress slots.

---

apps/docs/content/docs/components/radio-group.mdx: ### Summary

The change in functionality for the `radio-group` component involves updating the `classNames` property from `Record<"base"ÔΩú "wrapper"ÔΩú "label", string>` to `Partial<Record<"base"ÔΩú "wrapper"ÔΩú "label", string>>`. This modification allows for setting custom class names for the radio group slots.

---

apps/docs/content/docs/components/range-calendar.mdx: ### Summary

The change in functionality for the `range-calendar` component involves modifying the `classNames` property to accept a `Partial` type instead of a full `Record` type, allowing for more flexibility in setting custom class names for various calendar slots.

---

apps/docs/content/docs/components/skeleton.mdx: ### Summary

The diff in `skeleton.mdx` involves a change in the `classNames` prop type declaration from `Record<"base"ÔΩú"content", string>` to `Partial<Record<"base"ÔΩú"content", string>>`. This modification allows setting custom class names for the skeleton slots with a partial type definition.

---

apps/docs/content/docs/components/slider.mdx: ### Summary

In the `Slider` component, the `classNames` property's type declaration has been changed from `Record<"base"ÔΩú"labelWrapper"ÔΩú"label"ÔΩú "value" ÔΩú "step" ÔΩú "mark" ÔΩú "trackWrapper" ÔΩú "track"ÔΩú "output" ÔΩú "filler" ÔΩú "thumb" ÔΩú "startContent" ÔΩú "endContent", string>` to `Partial<Record<"base"ÔΩú"labelWrapper"ÔΩú"label"ÔΩú "value" ÔΩú "step" ÔΩú "mark" ÔΩú "trackWrapper" ÔΩú "track"ÔΩú "output" ÔΩú "filler" ÔΩú "thumb" ÔΩú "startContent" ÔΩú "endContent", string>>`.

---

apps/docs/content/docs/components/snippet.mdx: ### Summary

In the `snippet.mdx` file, the `classNames` declaration has been modified from `Record<"base"ÔΩú"content"ÔΩú"pre"ÔΩú"symbol"ÔΩú"copyButton"ÔΩú"checkIcon", string>` to `Partial<Record<"base"ÔΩú"content"ÔΩú"pre"ÔΩú"symbol"ÔΩú"copyButton"ÔΩú"copyIcon"ÔΩú"checkIcon", string>>`.

---

apps/docs/content/docs/components/spinner.mdx: ## Short Summary

The change in functionality for the `Spinner` component involves updating the type definition for the `classNames` prop to allow partial customization of class names for spinner slots.

---

apps/docs/content/docs/components/switch.mdx: ## Short Summary

The change in functionality for the `switch` component involves altering the `classNames` property declaration to accept a `Partial` type in the `useSwitch` hook, allowing custom class names for switch slots.

---

apps/docs/content/docs/components/table.mdx: ### Summary

In the `Table` component, the `classNames` property's type declaration has been changed from a specific set of string keys to a more flexible `Partial` type that allows setting custom class names for dropdown item slots.

---

apps/docs/content/docs/components/tabs.mdx: ## Short Summary

The change in functionality for the `Tabs` component involves modifying the `classNames` property to accept a `Partial` type for custom class names, providing more flexibility in setting class names for the card slots.

---

apps/docs/content/docs/components/textarea.mdx: ## Short Summary

The change in functionality for the `textarea` component involves modifying the `classNames` property to accept a `Partial` type instead of a full `Record` type for setting custom class names for the checkbox slots.

---

apps/docs/content/docs/components/time-input.mdx: ### Summary

The change in functionality for `TimeInput` in the `apps/docs/content/docs/components/time-input.mdx` file involves modifying the `classNames` prop from a full `Record` type to a `Partial<Record>` type, allowing custom class names for the time input slots.

---

apps/docs/content/docs/components/tooltip.mdx: ### Summary

The change in functionality for the `Tooltip` component involves updating the `classNames` property to use `Partial<Record<"base"ÔΩú"content", string>>` instead of `Record<"base"ÔΩú"content", string>`. This change allows setting custom class names for the tooltip slots.

---

apps/docs/content/docs/components/user.mdx: ## Short summary

The change in functionality involves updating the `classNames` attribute in the API section of the user component documentation. The type definition for `classNames` has been modified to allow partial custom class names for user slots.
```

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

### PR Summary

**Title:** fix(docs): updated docs for all the components that had issue on `classNames` prop type  
**User:** aayush-goyal  
**Number:** 3226  

**Description:**  
This pull request addresses the issue where the `classNames` prop type was incorrectly specified in the documentation for various components. The type was changed from `Record<UnionType, string>` to `Partial<Record<UnionType, string>>` to accurately reflect the intended usage. This update ensures that not all keys need to be defined when using the `classNames` prop.

### Objectives from Linked Issues

**Issue #3216:**  
The issue reported that the `classNames` type description in the NextUI documentation was incorrect. Specifically, the documentation indicated that the `classNames` prop should be of type `Record<"base" | "trigger" | "backdrop" | "content", string>`, which implied that each key must be defined. However, this was not necessary, and the correct type should be `Partial<Record<"base" | "trigger" | "backdrop" | "content", string>>`, allowing for optional keys. The objective was to review and correct the documentation to reflect this accurate type description.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated Summary of Generated Summaries

The recent changes across multiple component documentation files in the `apps/docs/content/docs/components` directory primarily involve updating the type declarations for the `classNames` property. The modifications consistently change the type from `Record<...>` to `Partial<Record<...>>`, allowing for more flexible and partial assignment of custom class names for various component slots. This update affects a wide range of components, including but not limited to `Autocomplete`, `Avatar`, `Badge`, `Breadcrumbs`, `Calendar`, `Card`, `Checkbox`, `Chip`, `CircularProgress`, `DateInput`, `DatePicker`, `Dropdown`, `Image`, `Input`, `Kbd`, `Listbox`, `Modal`, `Navbar`, `Pagination`, `Popover`, `Progress`, `RadioGroup`, `RangeCalendar`, `Skeleton`, `Slider`, `Snippet`, `Spinner`, `Switch`, `Table`, `Tabs`, `Textarea`, `TimeInput`, `Tooltip`, and `User`.

The primary goal of these changes is to enhance the flexibility of styling by allowing developers to specify only the class names they need to customize, rather than requiring a complete set of class names. This approach simplifies the customization process and reduces the need for redundant class name definitions.

### Alterations to the Declarations of Exported or Public Entities

Below is a merged list of alterations illustrating the differences in the signatures of entities before and after the changes for each file:

#### `autocomplete.mdx`
- **Before**: `Record<"base" | "listboxWrapper" | "listbox" | "popoverContent" | "endContentWrapper" | "clearButton" | "selectorButton", string>`
- **After**: `Partial<Record<"base" | "listboxWrapper" | "listbox" | "popoverContent" | "endContentWrapper" | "clearButton" | "selectorButton", string>>`

#### `avatar.mdx`
- **Before**: `Record<"base" | "img" | "fallback" | "name" | "icon", string>` (Avatar)
- **After**: `Partial<Record<"base" | "img" | "fallback" | "name" | "icon", string>>`
- **Before**: `Record<"base" | "count", string>` (Avatar Group)
- **After**: `Partial<Record<"base" | "count", string>>`

#### `badge.mdx`
- **Before**: `Record<"base" | "badge", string>`
- **After**: `Partial<Record<"base" | "badge", string>>`

#### `breadcrumbs.mdx`
- **Before**: `Record<"itemClasses" | "classNames", string>` (Breadcrumbs and BreadcrumbItem)
- **After**: `Partial<Record<"itemClasses" | "classNames", string>>`

#### `calendar.mdx`
- **Before**: `Record<"base" | "header" | "body" | "footer", string>`
- **After**: `Partial<Record<"base" | "header" | "body" | "footer", string>>`

#### `card.mdx`
- **Before**: `Record<"base" | "header" | "body" | "footer", string>`
- **After**: `Partial<Record<"base" | "header" | "body" | "footer", string>>`

#### `checkbox-group.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `checkbox.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `chip.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `circular-progress.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `date-input.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `date-picker.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `date-range-picker.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `dropdown.mdx`
- **Before**: `Record<"classNames" | "itemClasses", string>`
- **After**: `Partial<Record<"classNames" | "itemClasses", string>>`

#### `image.mdx`
- **Before**: `Record<"img" | "wrapper" | "zoomedWrapper" | "blurredImg", string>`
- **After**: `Partial<Record<"img" | "wrapper" | "zoomedWrapper" | "blurredImg", string>>`

#### `input.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `kbd.mdx`
- **Before**: `Record<"base" | "abbr" | "content", string>`
- **After**: `Partial<Record<"base" | "abbr" | "content", string>>`

#### `listbox.mdx`
- **Before**: `Record<"classNames" | "itemClasses", string>`
- **After**: `Partial<Record<"classNames" | "itemClasses", string>>`

#### `modal.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `navbar.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `pagination.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `popover.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `progress.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `radio-group.mdx`
- **Before**: `Record<"base" | "wrapper" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "label", string>>`

#### `range-calendar.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `skeleton.mdx`
- **Before**: `Record<"base" | "content", string>`
- **After**: `Partial<Record<"base" | "content", string>>`

#### `slider.mdx`
- **Before**: `Record<"base" | "labelWrapper" | "label" | "value" | "step" | "mark" | "trackWrapper" | "track" | "output" | "filler" | "thumb" | "startContent" | "endContent", string>`
- **After**: `Partial<Record<"base" | "labelWrapper" | "label" | "value" | "step" | "mark" | "trackWrapper" | "track" | "output" | "filler" | "thumb" | "startContent" | "endContent", string>>`

#### `snippet.mdx`
- **Before**: `Record<"base" | "content" | "pre" | "symbol" | "copyButton" | "checkIcon", string>`
- **After**: `Partial<Record<"base" | "content" | "pre" | "symbol" | "copyButton" | "copyIcon" | "checkIcon", string>>`

#### `spinner.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `switch.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `table.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `tabs.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `textarea.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `time-input.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

#### `tooltip.mdx`
- **Before**: `Record<"base" | "content", string>`
- **After**: `Partial<Record<"base" | "content", string>>`

#### `user.mdx`
- **Before**: `Record<"base" | "wrapper" | "icon" | "label", string>`
- **After**: `Partial<Record<"base" | "wrapper" | "icon" | "label", string>>`

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 20c2f3b6b4965f73fb0994b7f08e1e7d572d481e -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- wingkwong: @aayush-goyal as discussed internally, this change may make it longer. We may need another approach. Can you DM me via discord for the discussion? My discord ID is same as my github one.\n

Files Changed:
- apps/docs/content/docs/components/autocomplete.mdx (modified, 4 changes)\n  Patch: @@ -84,7 +84,7 @@ the end of the label and the autocomplete will be required.
 
 ### Read Only
 
-If you pass the `isReadOnly` property to the Autocomplete, the Listbox will open to display 
+If you pass the `isReadOnly` property to the Autocomplete, the Listbox will open to display
 all available options, but users won't be able to select any of the listed options.
 
 <CodeDemo title="Read Only" highlightedLines="8" files={autocompleteContent.readOnly} />
@@ -453,7 +453,7 @@ properties to customize the popover, listbox and input components.
 | disableClearable            | `boolean`                                                                                                                             | Whether the clear button should be hidden. (**Deprecated**) Use `isClearable` instead.                                                                        | `false`                  |
 | disableAnimation            | `boolean`                                                                                                                             | Whether the Autocomplete should be animated.                                                                                                                  | `true`                   |
 | disableSelectorIconRotation | `boolean`                                                                                                                             | Whether the select should disable the rotation of the selector icon.                                                                                          | `false`                  |
-| classNames                  | `Record<"base"ÔΩú "listboxWrapper"ÔΩú "listbox"ÔΩú "popoverContent" ÔΩú "endContentWrapper"ÔΩú "clearButton" ÔΩú "selectorButton", string>` | Allows to set custom class names for the Autocomplete slots.                                                                                                  | -                        |
+| classNames                  | `Partial<Record<"base"ÔΩú "listboxWrapper"ÔΩú "listbox"ÔΩú "popoverContent" ÔΩú "endContentWrapper"ÔΩú "clearButton" ÔΩú "selectorButton", string>>` | Allows to set custom class names for the Autocomplete slots.                                                                                                  | -                        |
 
 ### Autocomplete Events
 \n- apps/docs/content/docs/components/avatar.mdx (modified, 4 changes)\n  Patch: @@ -184,7 +184,7 @@ You can customize any part of the avatar by using the `classNames` prop, each `s
 | showFallback | `boolean`                                                                   | If `true`, shows the fallback icon or initials when the image fails to load. | `false`   |
 | ImgComponent | `React.ElementType`                                                         | The component to be used as the image element.                               | `img`     |
 | imgProps     | `ImgComponentProps`                                                         | Props to be passed to the image element.                                     | -         |
-| classNames   | `Record<"base"ÔΩú "img"ÔΩú "fallback"ÔΩú "name"ÔΩú "icon", string>`             | Allows to set custom class names for the avatar slots.                       | -         |
+| classNames   | `Partial<Record<"base"ÔΩú "img"ÔΩú "fallback"ÔΩú "name"ÔΩú "icon", string>>`             | Allows to set custom class names for the avatar slots.                       | -         |
 
 ### Avatar Group Props
 
@@ -199,4 +199,4 @@ You can customize any part of the avatar by using the `classNames` prop, each `s
 | isDisabled  | `boolean`                          | Whether the avatars are disabled                    | -       |
 | isBordered  | `boolean`                          | Whether the avatars have a border                   | -       |
 | renderCount | `(count: number) => ReactNode`     | This allows you to render a custom count component. | -       |
-| classNames  | `Record<"base"ÔΩú "count", string>` | Allows to set custom class names for the avatar group slots. | -  |
+| classNames  | `Partial<Record<"base"ÔΩú "count", string>>` | Allows to set custom class names for the avatar group slots. | -  |\n- apps/docs/content/docs/components/badge.mdx (modified, 2 changes)\n  Patch: @@ -108,4 +108,4 @@ Instead, consider supplying a comprehensive description, such as using `aria-lab
 | isInvisible      | `boolean`                                                                   | If `true`, the badge will be invisible.                                                  | `false`     |
 | isOneChar        | `boolean`                                                                   | If `true`, the badge will have the same width and height.                                | `false`     |
 | isDot            | `boolean`                                                                   | If `true`, the badge will have smaller dimensions.                                       | `false`     |
-| classNames       | `Record<"base"ÔΩú"badge", string>`                                           | Allows to set custom class names for the badge slots.                                    | -           |
+| classNames       | `Partial<Record<"base"ÔΩú"badge", string>>`                                           | Allows to set custom class names for the badge slots.                                    | -           |\n- apps/docs/content/docs/components/breadcrumbs.mdx (modified, 6 changes)\n  Patch: @@ -226,8 +226,8 @@ You can customize the `Breadcrumbs` style by using the `classNames` prop and its
 | hideSeparator       | `boolean`                                                                      | Whether to hide the separator between breadcrumbs.                              | `false`      |
 | isDisabled          | `boolean`                                                                      | Whether the Breadcrumbs are disabled except the last item.                      | `false`      |
 | disableAnimation    | `boolean`                                                                      | Whether the Breadcrumbs should display animations.                              | `false`      |
-| itemClasses         | `Record<"base"ÔΩú "item"ÔΩú "separator", string>`                                | Allows to set custom class names for the breadcrumbs item slots.                | -            |
-| classNames          | `Record<"base"ÔΩú "list"ÔΩú "ellipsis"ÔΩú "separator", string>`                   | Allows to set custom class names for the breadcrumbs slots.                     | -            |
+| itemClasses         | `Partial<Record<"base"ÔΩú "item"ÔΩú "separator", string>>`                                | Allows to set custom class names for the breadcrumbs item slots.                | -            |
+| classNames          | `Partial<Record<"base"ÔΩú "list"ÔΩú "ellipsis"ÔΩú "separator", string>>`                   | Allows to set custom class names for the breadcrumbs slots.                     | -            |
 
 ### Breadcrumbs Functions
 
@@ -259,7 +259,7 @@ You can customize the `Breadcrumbs` style by using the `classNames` prop and its
 | hideSeparator    | `boolean`                                                                      | Whether to hide the item separator.                       | `false`      |
 | isDisabled       | `boolean`                                                                      | Whether the item is disabled.                             | `false`      |
 | disableAnimation | `boolean`                                                                      | Whether the item should display animations.               | `false`      |
-| classNames       | `Record<"base"ÔΩú "item"ÔΩú "separator", string>`                                | Allows to set custom class names for the item slots.      | -            |
+| classNames       | `Partial<Record<"base"ÔΩú "item"ÔΩú "separator", string>>`                                | Allows to set custom class names for the item slots.      | -            |
 
 ### BreadcrumbItem Events
 \n- apps/docs/content/docs/components/calendar.mdx (modified, 2 changes)\n  Patch: @@ -228,7 +228,7 @@ Here's the example to customize `topContent` and `bottomContent` to have some pr
 | errorMessage            | `ReactNode \| (v: ValidationResult) => ReactNode`                                                                                                                                                                                                                                                                                                                                             | An error message for the field.                                                                                                                                                           | -                   |
 | hideDisabledDates       | `boolean`                                                                                                                                                                                                                                                                                                                                                                                     | Whether to hide the disabled or invalid dates.                                                                                                                                            | `false`             |
 | disableAnimation        | `boolean`                                                                                                                                                                                                                                                                                                                                                                                     | Whether to disable the animation of the calendar.                                                                                                                                         | `false`             |
-| classNames              | `Record<"base"ÔΩú "prevButton"ÔΩú "nextButton"ÔΩú "headerWrapper" \| "header" \| "title" \| "content" \| "gridWrapper" \| "grid" \| "gridHeader" \| "gridHeaderRow" \| "gridHeaderCell" \| "gridBody" \| "gridBodyRow" \| "cell" \| "cellButton" \| "pickerWrapper" \| "pickerMonthList" \| "pickerYearList" \| "pickerHighlight" \| "pickerItem" \| "helperWrapper" \| "errorMessage", string>`  | Allows to set custom class names for the calendar slots.                                                                                                                                  | -                   |
+| classNames              | `Partial<Record<"base"ÔΩú "prevButton"ÔΩú "nextButton"ÔΩú "headerWrapper" \| "header" \| "title" \| "content" \| "gridWrapper" \| "grid" \| "gridHeader" \| "gridHeaderRow" \| "gridHeaderCell" \| "gridBody" \| "gridBodyRow" \| "cell" \| "cellButton" \| "pickerWrapper" \| "pickerMonthList" \| "pickerYearList" \| "pickerHighlight" \| "pickerItem" \| "helperWrapper" \| "errorMessage", string>>`  | Allows to set custom class names for the calendar slots.                                                                                                                                  | -                   |
 
 ### Calendar Events
 \n- apps/docs/content/docs/components/card.mdx (modified, 2 changes)\n  Patch: @@ -128,7 +128,7 @@ You can use `Image` component as the cover of the card by taking it out of the `
 | disableAnimation          | `boolean`                                               | Whether to disable the animation.                                             | `false` |
 | disableRipple             | `boolean`                                               | Whether to disable ripple effect. Only when `isPressable` is true.            | `false` |
 | allowTextSelectionOnPress | `boolean`                                               | Whether to allow text selection on pressing. Only when `isPressable` is true. | `false` |
-| classNames                | `Record<"base"ÔΩú "header"ÔΩú "body"ÔΩú "footer", string>` | Allows to set custom class names for the card slots.                          | -       |
+| classNames                | `Partial<Record<"base"ÔΩú "header"ÔΩú "body"ÔΩú "footer", string>>` | Allows to set custom class names for the card slots.                          | -       |
 
 ### Card Events
 \n- apps/docs/content/docs/components/checkbox-group.mdx (modified, 2 changes)\n  Patch: @@ -115,7 +115,7 @@ In case you need to customize the checkbox even further, you can use the `useChe
 | isRequired         | `boolean`                                                                   | Whether user checkboxes are required on the input before form submission.                                                                                     | `false`    |
 | isReadOnly         | `boolean`                                                                   | Whether the checkboxes can be selected but not changed by the user.                                                                                           | -          |
 | disableAnimation   | `boolean`                                                                   | Whether the animation should be disabled.                                                                                                                     | `false`    |
-| classNames         | `Record<"base"ÔΩú "wrapper"ÔΩú "label", string>`                              | Allows to set custom class names for the checkbox group slots.                                                                                                | -          |
+| classNames         | `Partial<Record<"base"ÔΩú "wrapper"ÔΩú "label", string>>`                              | Allows to set custom class names for the checkbox group slots.                                                                                                | -          |
 
 ### Checkbox Group Events
 \n- apps/docs/content/docs/components/checkbox.mdx (modified, 2 changes)\n  Patch: @@ -163,7 +163,7 @@ In case you need to customize the checkbox even further, you can use the `useChe
 | isInvalid        | `boolean`                                                                   | Whether the checkbox is invalid.                                                                                         | `false`   |
 | validationState  | `valid` \| `invalid`                                                        | Whether the checkbox should display its "valid" or "invalid" visual styling. (**Deprecated**) use **isInvalid** instead. | -         |
 | disableAnimation | `boolean`                                                                   | Whether the animation should be disabled.                                                                             | `false`   |
-| classNames       | `Record<"base"ÔΩú "wrapper"ÔΩú "icon"ÔΩú "label", string>`                     | Allows to set custom class names for the checkbox slots.                                                              | -         |
+| classNames       | `Partial<Record<"base"ÔΩú "wrapper"ÔΩú "icon"ÔΩú "label", string>>`                     | Allows to set custom class names for the checkbox slots.                                                              | -         |
 
 ### Checkbox Events
 \n- apps/docs/content/docs/components/chip.mdx (modified, 2 changes)\n  Patch: @@ -110,7 +110,7 @@ You can customize the `Chip` component by passing custom Tailwind CSS classes to
 | startContent | `ReactNode`                                                                  | Element to be rendered in the left side of the chip. This prop overrides the `avatar` prop.                                  | -         |
 | endContent   | `ReactNode`                                                                  | Element to be rendered in the right side of the chip. This prop overrides the default close button when `onClose` is passed. | -         |
 | isDisabled   | `boolean`                                                                    | Whether the chip is disabled.                                                                                                | `false`   |
-| classNames   | `Record<"base"ÔΩú "content"ÔΩú "dot"ÔΩú "avatar"ÔΩú "closeButton", string>`      | Allows to set custom class names for the chip slots.                                                                         | -         |
+| classNames   | `Partial<Record<"base"ÔΩú "content"ÔΩú "dot"ÔΩú "avatar"ÔΩú "closeButton", string>>`      | Allows to set custom class names for the chip slots.                                                                         | -         |
 
 ### Chip Events
 \n- apps/docs/content/docs/components/circular-progress.mdx (modified, 2 changes)\n  Patch: @@ -134,4 +134,4 @@ You can customize the `CircularProgress` component by passing custom Tailwind CS
 | strokeWidth      | `number`                                                                                                                | The width of the progress stroke.                                 | `2`                  |
 | isDisabled       | `boolean`                                                                                                               | Whether the progress is disabled.                                 | `false`              |
 | disableAnimation | `boolean`                                                                                                               | Whether to disable the animation.                                 | `false`              |
-| classNames       | `Record<"base"ÔΩú"svgWrapper"ÔΩú"svg"ÔΩú"track"ÔΩú"indicator"ÔΩú"value"ÔΩú"label", string>`                                   | Allows to set custom class names for the circular progress slots. | -                    |
+| classNames       | `Partial<Record<"base"ÔΩú"svgWrapper"ÔΩú"svg"ÔΩú"track"ÔΩú"indicator"ÔΩú"value"ÔΩú"label", string>>`                                   | Allows to set custom class names for the circular progress slots. | -                    |\n- apps/docs/content/docs/components/date-input.mdx (modified, 2 changes)\n  Patch: @@ -317,7 +317,7 @@ import {parseZonedDateTime} from "@internationalized/date";
 | hideTimeZone            | `boolean`                                                                                                                         | Whether to hide the time zone abbreviation.                                                                                                                   | `false`   |
 | shouldForceLeadingZeros | `boolean`                                                                                                                         | Whether to always show leading zeros in the month, day, and hour fields.                                                                                      | `true`    |
 | disableAnimation        | `boolean`                                                                                                                         | Whether to disable animations.                                                                                                                                | `false`   |
-| classNames              | `Record<"base"ÔΩú "label"ÔΩú "inputWrapper"ÔΩú "innerWrapper"ÔΩú "input"ÔΩú "helperWrapper"ÔΩú "description"ÔΩú "errorMessage", string>`   | Allows to set custom class names for the date input slots.                                                                                                    | -         |
+| classNames              | `Partial<Record<"base"ÔΩú "label"ÔΩú "inputWrapper"ÔΩú "innerWrapper"ÔΩú "input"ÔΩú "helperWrapper"ÔΩú "description"ÔΩú "errorMessage", string>>`   | Allows to set custom class names for the date input slots.                                                                                                    | -         |
 
 ### DateInput Events
 \n- apps/docs/content/docs/components/date-picker.mdx (modified, 2 changes)\n  Patch: @@ -341,7 +341,7 @@ import {I18nProvider} from "@react-aria/i18n";
 | calendarProps           | `CalendarProps` \| `undefined`                                                                                                                           | Props to be passed to the selector button component.                                                                                                          | `{ size: "sm", variant: "light", radius: "full", isIconOnly: true }` |
 | timeInputProps          | `TimeInputProps`                                                                                                                                         | Props to be passed to the time input component.                                                                                                               | `{ size: "sm", variant: "light", radius: "full", isIconOnly: true }` |
 | disableAnimation        | `boolean`                                                                                                                                                | Whether to disable all animations in the date picker. Including the DateInput, Button, Calendar, and Popover.                                                 | `false`                                                              |
-| classNames              | `Record<"base" \| "selectorButton" \| "selectorIcon" \| "popoverContent" \| "calendar" \| "calendarContent" \| "timeInputLabel" \| "timeInput", string>` | Allows to set custom class names for the date-picker slots.                                                                                                   | -                                                                    |
+| classNames              | `Partial<Record<"base" \| "selectorButton" \| "selectorIcon" \| "popoverContent" \| "calendar" \| "calendarContent" \| "timeInputLabel" \| "timeInput", string>>` | Allows to set custom class names for the date-picker slots.                                                                                                   | -                                                                    |
 
 ### DatePicker Events
 \n- apps/docs/content/docs/components/date-range-picker.mdx (modified, 2 changes)\n  Patch: @@ -383,7 +383,7 @@ import {useLocale, useDateFormatter} from "@react-aria/i18n";
 | calendarProps             | `CalendarProps`                                                                                                                                          | Props to be passed to the selector button component.                                                                                                                    | `{ size: "sm", variant: "light", radius: "full", isIconOnly: true }` |
 | timeInputProps            | `TimeInputProps`                                                                                                                                         | Props to be passed to the time input component.                                                                                                                         | `{ size: "sm", variant: "light", radius: "full", isIconOnly: true }` |
 | disableAnimation          | `boolean`                                                                                                                                                | Whether to disable all animations in the date picker. Including the DateInput, Button, Calendar, and Popover.                                                           | `false`                                                              |
-| classNames                | `Record<"base" \| "selectorButton" \| "selectorIcon" \| "popoverContent" \| "calendar" \| "calendarContent" \| "timeInputLabel" \| "timeInput", string>` | Allows to set custom class names for the date-range-picker slots.                                                                                                       | -                                                                    |
+| classNames                | `Partial<Record<"base" \| "selectorButton" \| "selectorIcon" \| "popoverContent" \| "calendar" \| "calendarContent" \| "timeInputLabel" \| "timeInput", string>>` | Allows to set custom class names for the date-range-picker slots.                                                                                                       | -                                                                    |
 
 ### DateRangePicker Events
 \n- apps/docs/content/docs/components/dropdown.mdx (modified, 10 changes)\n  Patch: @@ -335,8 +335,8 @@ you to customize each item individually.
 | shouldFocusWrap        | `boolean`                                                                                              | Whether keyboard navigation is circular.                                                                | `false`     |
 | closeOnSelect          | `boolean`                                                                                              | Whether the dropdown menu should be closed when an item is selected.                                    | `true`      |
 | disableAnimation       | `boolean`                                                                                              | Whether to disable the animation of the dropdown items.                                                 | `false`     |
-| classNames             | `Record<"base"ÔΩú "list"ÔΩú "emptyContent", string>`                                                     | Allows to set custom class names for the dropdown menu slots.                                           | -           |
-| itemClasses            | `Record<"base"ÔΩú "wrapper"ÔΩú "title"ÔΩú "description"ÔΩú "shortcut" ÔΩú "selectedIcon", string>`          | Allows to set custom class names for the dropdown item slots.                                           | -           |
+| classNames             | `Partial<Record<"base"ÔΩú "list"ÔΩú "emptyContent", string>>`                                                     | Allows to set custom class names for the dropdown menu slots.                                           | -           |
+| itemClasses            | `Partial<Record<"base"ÔΩú "wrapper"ÔΩú "title"ÔΩú "description"ÔΩú "shortcut" ÔΩú "selectedIcon", string>>`          | Allows to set custom class names for the dropdown item slots.                                           | -           |
 
 ### DropdownMenu Events
 
@@ -358,8 +358,8 @@ you to customize each item individually.
 | hideSelectedIcon | `boolean`                                                                                              | Whether to hide the check icon when the items are selected.                                 | `false` |
 | showDivider      | `boolean`                                                                                              | Whether to show the divider between the groups.                                             | `false` |
 | dividerProps     | [DividerProps](/docs/components/divider)                                                               | The divider component props.                                                                | -       |
-| classNames       | `Record<"base"ÔΩú "heading"ÔΩú "group"ÔΩú "divider", string>`                                             | Allows to set custom class names for the dropdown section slots.                            | -       |
-| itemClasses      | `Record<"base"ÔΩú "wrapper"ÔΩú "title"ÔΩú "description"ÔΩú "shortcut" ÔΩú "selectedIcon", string>`          | Allows to set custom class names for the dropdown item slots.                               | -       |
+| classNames       | `Partial<Record<"base"ÔΩú "heading"ÔΩú "group"ÔΩú "divider", string>>`                                             | Allows to set custom class names for the dropdown section slots.                            | -       |
+| itemClasses      | `Partial<Record<"base"ÔΩú "wrapper"ÔΩú "title"ÔΩú "description"ÔΩú "shortcut" ÔΩú "selectedIcon", string>>`          | Allows to set custom class names for the dropdown item slots.                               | -       |
 
 ---
 
@@ -388,7 +388,7 @@ you to customize each item individually.
 | isReadOnly       | `boolean`                                                                                     | Whether the dropdown item press events should be ignored.                                                                                                                        | `false` |
 | hideSelectedIcon | `boolean`                                                                                     | Whether to hide the check icon when the item is selected.                                                                                                                        | `false` |
 | closeOnSelect    | `boolean`                                                                                     | Whether the dropdown menu should be closed when the item is selected.                                                                                                            | `true`  |
-| classNames       | `Record<"base"ÔΩú "wrapper"ÔΩú "title"ÔΩú "description"ÔΩú "shortcut" ÔΩú "selectedIcon", string>` | Allows to set custom class names for the dropdown item slots.                                                                                                                    | -       |
+| classNames       | `Partial<Record<"base"ÔΩú "wrapper"ÔΩú "title"ÔΩú "description"ÔΩú "shortcut" ÔΩú "selectedIcon", string>>` | Allows to set custom class names for the dropdown item slots.                                                                                                                    | -       |
 
 ### DropdownItem Events
 \n- apps/docs/content/docs/components/image.mdx (modified, 2 changes)\n  Patch: @@ -111,7 +111,7 @@ you can use it with NextUI `Image` component as well.
 | isZoomed        | `boolean`                                                            | Whether the image should be zoomed when hovered.                                                                                                                                                            | `false` |
 | removeWrapper   | `boolean`                                                            | Whether to remove the wrapper element. This will cause the image to be rendered as a direct child of the parent element. If you set this prop as `true` neither the skeleton nor the zoom effect will work. | `false` |
 | disableSkeleton | `boolean`                                                            | Whether the image should disable the skeleton animation while loading.                                                                                                                                      | `false` |
-| classNames      | `Record<"img"ÔΩú "wrapper"ÔΩú "zoomedWrapper"ÔΩú "blurredImg", string>` | Allows to set custom class names for the image slots.                                                                                                                                                       | -       |
+| classNames      | `Partial<Record<"img"ÔΩú "wrapper"ÔΩú "zoomedWrapper"ÔΩú "blurredImg", string>>` | Allows to set custom class names for the image slots.                                                                                                                                                       | -       |
 
 ### Image Events
 \n- apps/docs/content/docs/components/input.mdx (modified, 2 changes)\n  Patch: @@ -221,7 +221,7 @@ In case you need to customize the input even further, you can use the `useInput`
 | baseRef            | `RefObject<HTMLDivElement>`                                                                                                                                            | The ref to the base element.                                                                                                                                  | -         |
 | validationState    | `valid` \| `invalid`                                                                                                                                                   | Whether the input should display its "valid" or "invalid" visual styling. (**Deprecated**) use **isInvalid** instead.                                         | -         |
 | disableAnimation   | `boolean`                                                                                                                                                              | Whether the input should be animated.                                                                                                                         | `false`   |
-| classNames         | `Record<"base"ÔΩú "label"ÔΩú "inputWrapper"ÔΩú "innerWrapper"ÔΩú "mainWrapper" ÔΩú "input" ÔΩú "clearButton" ÔΩú "helperWrapper" ÔΩú "description" ÔΩú "errorMessage", string>`    | Allows to set custom class names for the Input slots.                                                                                                         | -         |
+| classNames         | `Partial<Record<"base"ÔΩú "label"ÔΩú "inputWrapper"ÔΩú "innerWrapper"ÔΩú "mainWrapper" ÔΩú "input" ÔΩú "clearButton" ÔΩú "helperWrapper" ÔΩú "description" ÔΩú "errorMessage", string>>`    | Allows to set custom class names for the Input slots.                                                                                                         | -         |
 
 ### Input Events
 \n- apps/docs/content/docs/components/kbd.mdx (modified, 6 changes)\n  Patch: @@ -53,13 +53,13 @@ Keyboard key is a component to display which key or combination of keys performs
 - **abbr**: The `keys` wrapper that handles the appearance of the keys.
 - **content**: The children wrapper that handles the appearance of the content.
 
-<Spacer y={4}/>  
+<Spacer y={4}/>
 
 ## Accessibility
 
 - Each command `key` has a `title` attribute that describes the action that the key performs.
 
-<Spacer y={4}/>  
+<Spacer y={4}/>
 
 ## API
 
@@ -69,7 +69,7 @@ Keyboard key is a component to display which key or combination of keys performs
 | ---------- | ------------------------------------------------------ | -------------------------------------------------------- | ------- |
 | children   | `ReactNode`                                            | The content of the keyboard key.                         | -       |
 | keys       | [KbdKey](#keyboard-keys) \| [KbdKey[]](#keyboard-keys) | The keys of the keyboard key.                            | -       |
-| classNames | `Record<"base"ÔΩú"abbr"ÔΩú"content",string>`          | Allows to set custom class names for the checkbox slots. | -       |
+| classNames | `Partial<Record<"base"ÔΩú"abbr"ÔΩú"content",string>>`          | Allows to set custom class names for the checkbox slots. | -       |
 
 ### Keyboard Keys
 \n- apps/docs/content/docs/components/listbox.mdx (modified, 10 changes)\n  Patch: @@ -260,8 +260,8 @@ You can customize the `Listbox` items style by using the `itemClasses` prop and
 | hideEmptyContent       | `boolean`                                                                                              | Whether to not display the empty content when the collection is empty.                                   | `false`     |
 | hideSelectedIcon       | `boolean`                                                                                              | Whether to hide the check icon when the items are selected.                                              | `false`     |
 | disableAnimation       | `boolean`                                                                                              | Whether to disable the animation of the listbox items.                                                   | `false`     |
-| classNames             | `Record<"base"ÔΩú "list"ÔΩú "emptyContent", string>`                                                     | Allows to set custom class names for the listbox slots.                                                  | -           |
-| itemClasses            | `Record<"base"ÔΩú "wrapper"ÔΩú "title"ÔΩú "description"ÔΩú "selectedIcon", string>`                        | Allows to set custom class names for the listbox item slots.                                             | -           |
+| classNames             | `Partial<Record<"base"ÔΩú "list"ÔΩú "emptyContent", string>>`                                                     | Allows to set custom class names for the listbox slots.                                                  | -           |
+| itemClasses            | `Partial<Record<"base"ÔΩú "wrapper"ÔΩú "title"ÔΩú "description"ÔΩú "selectedIcon", string>>`                        | Allows to set custom class names for the listbox item slots.                                             | -           |
 
 ### Listbox Events
 
@@ -282,8 +282,8 @@ You can customize the `Listbox` items style by using the `itemClasses` prop and
 | hideSelectedIcon | `boolean`                                                                                              | Whether to hide the check icon when the items are selected.                               | `false` |
 | showDivider      | `boolean`                                                                                              | Whether to show the divider between the groups.                                           | `false` |
 | dividerProps     | [DividerProps](/docs/components/divider)                                                               | The divider component props.                                                              | -       |
-| classNames       | `Record<"base"ÔΩú "heading"ÔΩú "group"ÔΩú "divider", string>`                                             | Allows to set custom class names for the listbox section slots.                           | -       |
-| itemClasses      | `Record<"base"ÔΩú "wrapper"ÔΩú "title"ÔΩú "description"ÔΩú "shortcut" ÔΩú "selectedIcon", string>`          | Allows to set custom class names for the listbox item slots.                              | -       |
+| classNames       | `Partial<Record<"base"ÔΩú "heading"ÔΩú "group"ÔΩú "divider", string>>`                                             | Allows to set custom class names for the listbox section slots.                           | -       |
+| itemClasses      | `Partial<Record<"base"ÔΩú "wrapper"ÔΩú "title"ÔΩú "description"ÔΩú "shortcut" ÔΩú "selectedIcon", string>>`          | Allows to set custom class names for the listbox item slots.                              | -       |
 
 ---
 
@@ -312,7 +312,7 @@ You can customize the `Listbox` items style by using the `itemClasses` prop and
 | isDisabled             | `boolean`                                                                                     | Whether the listbox item should be disabled. (**Deprecated**) pass **disabledKeys** to `Listbox` instead.                                                                        | `false` |
 | isSelected             | `boolean`                                                                                     | Whether the listbox item should be selected. (**Deprecated**) pass **selectedKeys** to `Listbox` instead.                                                                        | `false` |
 | isReadOnly             | `boolean`                                                                                     | Whether the listbox item press events should be ignored.                                                                                                                         | `false` |
-| classNames             | `Record<"base"ÔΩú "wrapper"ÔΩú "title"ÔΩú "description"ÔΩú "shortcut" ÔΩú "selectedIcon", string>` | Allows to set custom class names for the listbox item slots.                                                                                                                     | -       |
+| classNames             | `Partial<Record<"base"ÔΩú "wrapper"ÔΩú "title"ÔΩú "description"ÔΩú "shortcut" ÔΩú "selectedIcon", string>>` | Allows to set custom class names for the listbox item slots.                                                                                                                     | -       |
 
 ### ListboxItem Events
 \n- apps/docs/content/docs/components/modal.mdx (modified, 20 changes)\n  Patch: @@ -42,18 +42,18 @@ NextUI exports 5 modal-related components:
 <ImportTabs
   commands={{
     main: `import {
-  Modal, 
-  ModalContent, 
-  ModalHeader, 
-  ModalBody, 
+  Modal,
+  ModalContent,
+  ModalHeader,
+  ModalBody,
   ModalFooter
 } from "@nextui-org/react";`,
     individual:
       `import {
-  Modal, 
-  ModalContent, 
-  ModalHeader, 
-  ModalBody, 
+  Modal,
+  ModalContent,
+  ModalHeader,
+  ModalBody,
   ModalFooter
 } from "@nextui-org/modal";`,
   }}
@@ -74,7 +74,7 @@ When the modal opens:
 
 ### Non-dissmissable
 
-By default, the modal can be closed by clicking on the overlay or pressing the <Kbd>Esc</Kbd> key. 
+By default, the modal can be closed by clicking on the overlay or pressing the <Kbd>Esc</Kbd> key.
 You can disable this behavior by setting the following properties:
 
 - Set the `isDismissable` property to `false` to prevent the modal from closing when clicking on the overlay.
@@ -200,7 +200,7 @@ You can customize the `Modal` component by passing custom Tailwind CSS classes t
 | motionProps               | [MotionProps](#motion-props)                                                                        | The props to modify the framer motion animation. Use the `variants` API to create your own animation. |                 |
 | portalContainer           | `HTMLElement`                                                                                       | The container element in which the overlay portal will be placed.                                     | `document.body` |
 | disableAnimation          | `boolean`                                                                                           | Whether the modal should not have animations.                                                         | `false`         |
-| classNames                | `Record<"wrapper"ÔΩú "base"ÔΩú "backdrop"ÔΩú "header" ÔΩú "body" ÔΩú "footer" ÔΩú "closeButton", string>` | Allows to set custom class names for the modal slots.                                                 | -               |
+| classNames                | `Partial<Record<"wrapper"ÔΩú "base"ÔΩú "backdrop"ÔΩú "header" ÔΩú "body" ÔΩú "footer" ÔΩú "closeButton", string>>` | Allows to set custom class names for the modal slots.                                                 | -               |
 
 ### Modal Events
 \n- apps/docs/content/docs/components/navbar.mdx (modified, 18 changes)\n  Patch: @@ -44,19 +44,19 @@ NextUI exports 7 navbar-related components:
 <ImportTabs
   commands={{
     main: `import {
-  Navbar, 
-  NavbarBrand, 
-  NavbarContent, 
-  NavbarItem, 
+  Navbar,
+  NavbarBrand,
+  NavbarContent,
+  NavbarItem,
   NavbarMenuToggle,
   NavbarMenu,
   NavbarMenuItem
 } from "@nextui-org/react";`,
     individual: `import {
-  Navbar, 
-  NavbarBrand, 
-  NavbarContent, 
-  NavbarItem, 
+  Navbar,
+  NavbarBrand,
+  NavbarContent,
+  NavbarItem,
   NavbarMenuToggle,
   NavbarMenu,
   NavbarMenuItem
@@ -278,7 +278,7 @@ When the `NavbarItem` is active, it will have a `data-active` attribute. You can
 | motionProps          | [MotionProps](#motion-props)                                                                                        | The motion props to control the `visible` / `hidden` animation. This motion is only available if the `shouldHideOnScroll` prop is set to `true`.   | -             |
 | disableScrollHandler | `boolean`                                                                                                           | Whether the navbar parent scroll event should be listened to or not.                                                                                | `false`       |
 | disableAnimation     | `boolean`                                                                                                           | Whether the navbar menu animation should be disabled or not.                                                                                        | `false`       |
-| classNames           | `Record<"base"ÔΩú "wrapper"ÔΩú "brand"ÔΩú "content"ÔΩú "item"ÔΩú "toggle"ÔΩú "toggleIcon"ÔΩú "menu"ÔΩú "menuItem", string>` | Allows to set custom class names for the navbar slots.                                                                                              | -             |
+| classNames           | `Partial<Record<"base"ÔΩú "wrapper"ÔΩú "brand"ÔΩú "content"ÔΩú "item"ÔΩú "toggle"ÔΩú "toggleIcon"ÔΩú "menu"ÔΩú "menuItem", string>>` | Allows to set custom class names for the navbar slots.                                                                                              | -             |
 
 ### Navbar Events
 \n- apps/docs/content/docs/components/pagination.mdx (modified, 4 changes)\n  Patch: @@ -142,7 +142,7 @@ You can customize the `Pagination` component by passing custom Tailwind CSS clas
 In case you need to customize the pagination even further, you can use the `usePagination` hook to create
 your own implementation.
 
-<CodeDemo title="Custom Implementation" files={paginationContent.customImpl} /> 
+<CodeDemo title="Custom Implementation" files={paginationContent.customImpl} />
 
 <Spacer y={4} />
 
@@ -197,7 +197,7 @@ your own implementation.
 | renderItem             | [PaginationItemProps](#pagination-item-props)                                                                                 | The pagination item render function.                                     | -         |
 | getItemAriaLabel       | `(page: string) => string`                                                                                                    | A function that allows you to customize the pagination items aria-label. | -         |
 | disableAnimation       | `boolean`                                                                                                                     | Whether the pagination cursor should be animated.                        | `false`   |
-| classNames             | `Record<"base"ÔΩú "wrapper" ÔΩú "prev"ÔΩú "next" ÔΩú "item" ÔΩú "cursor" ÔΩú "forwardIcon" ÔΩú "ellipsis" ÔΩú "chevronNext", string>` | Allows to set custom class names for the pagination slots.               | -         |
+| classNames             | `Partial<Record<"base"ÔΩú "wrapper" ÔΩú "prev"ÔΩú "next" ÔΩú "item" ÔΩú "cursor" ÔΩú "forwardIcon" ÔΩú "ellipsis" ÔΩú "chevronNext", string>>` | Allows to set custom class names for the pagination slots.               | -         |
 
 ### Pagination Events
 \n- apps/docs/content/docs/components/popover.mdx (modified, 2 changes)\n  Patch: @@ -176,7 +176,7 @@ You can customize the `Popover` component by passing custom Tailwind CSS classes
 | triggerRef                | `RefObject<HTMLElement>`                                                    | The ref for the element which the popover positions itself with respect to.                                                                                  | -               |
 | scrollRef                 | `RefObject<HTMLElement>`                                                    | A ref for the scrollable region within the popover.                                                                                                          | `overlayRef`    |
 | disableAnimation          | `boolean`                                                                   | Whether the popover is animated.                                                                                                                             | `false`         |
-| classNames                | `Record<"base"ÔΩú "trigger"ÔΩú "backdrop"ÔΩú "content", string>`               | Allows to set custom class names for the popover slots.                                                                                                      | -               |
+| classNames                | `Partial<Record<"base"ÔΩú "trigger"ÔΩú "backdrop"ÔΩú "content", string>>`               | Allows to set custom class names for the popover slots.                                                                                                      | -               |
 
 <Spacer y={1} />
 \n- apps/docs/content/docs/components/progress.mdx (modified, 2 changes)\n  Patch: @@ -138,4 +138,4 @@ You can customize the `Progress` component by passing custom Tailwind CSS classe
 | showValueLabel   | `boolean`                                                                                                               | Whether to show the value label.                           | `true`               |
 | isDisabled       | `boolean`                                                                                                               | Whether the progress is disabled.                          | `false`              |
 | disableAnimation | `boolean`                                                                                                               | Whether to disable the animation.                          | `false`              |
-| classNames       | `Record<"base"ÔΩú"labelWrapper"ÔΩú"label"ÔΩú"track"ÔΩú"value"ÔΩú"track"ÔΩú"indicator", string>`                               | Allows to set custom class names for the progress slots.   | -                    |
+| classNames       | `Partial<Record<"base"ÔΩú"labelWrapper"ÔΩú"label"ÔΩú"value"ÔΩú"track"ÔΩú"indicator", string>>`                               | Allows to set custom class names for the progress slots.   | -                    |\n- apps/docs/content/docs/components/radio-group.mdx (modified, 4 changes)\n  Patch: @@ -167,7 +167,7 @@ In case you need to customize the radio group even further, you can use the `use
 | isInvalid          | `boolean`                                                                   | Whether the radio group is invalid.                                                                                                                                                                                     | `false`    |
 | validationState    | `valid` \| `invalid`                                                        | Whether the inputs should display its "valid" or "invalid" visual styling. (**Deprecated**) use **isInvalid** instead.                                                                                                  | `false`    |
 | disableAnimation   | `boolean`                                                                   | Whether the animation should be disabled.                                                                                                                                                                               | `false`    |
-| classNames         | `Record<"base"ÔΩú "wrapper"ÔΩú "label", string>`                              | Allows to set custom class names for the radio group slots.                                                                                                                                                             | -          |
+| classNames         | `Partial<Record<"base"ÔΩú "wrapper"ÔΩú "label", string>>`                              | Allows to set custom class names for the radio group slots.                                                                                                                                                             | -          |
 
 ### RadioGroup Events
 
@@ -190,4 +190,4 @@ In case you need to customize the radio group even further, you can use the `use
 | isReadOnly       | `boolean`                                                                                      | Whether the checkboxes can be selected but not changed by the user.                            | -         |
 | isInvalid        | `boolean`                                                                                      | Whether the radio is invalid. This is based on the radio group `validationState` prop.        | `false`   |
 | disableAnimation | `boolean`                                                                                      | Whether the animation should be disabled.                                                      | `false`   |
-| classNames       | `Record<"base"ÔΩú "wrapper"ÔΩú "labelWrapper" ÔΩú "label" ÔΩú "control" ÔΩú "description", string>` | Allows to set custom class names for the radio slots.                                          | -         |
+| classNames       | `Partial<Record<"base"ÔΩú "wrapper"ÔΩú "labelWrapper" ÔΩú "label" ÔΩú "control" ÔΩú "description", string>>` | Allows to set custom class names for the radio slots.                                          | -         |\n- apps/docs/content/docs/components/range-calendar.mdx (modified, 2 changes)\n  Patch: @@ -229,7 +229,7 @@ Here's the example to customize `topContent` and `bottomContent` to have some pr
 | validate                  | `(value: { inputValue: string, selectedKey: React.Key }) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                                                                                                                                                                                                                                                                                     | Validate input values when committing (e.g. on blur), returning error messages for invalid values. Validation errors are displayed upon form submission if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop.| -                                 |   |
 | hideDisabledDates         | `boolean`                                                                                                                                                                                                                                                                                                                                                                                     | Whether to hide the disabled or invalid dates.                                                                                                                                            | `false`                           |   |
 | disableAnimation          | `boolean`                                                                                                                                                                                                                                                                                                                                                                                     | Whether to disable the animation of the calendar.                                                                                                                                         | `false`                           |   |
-| classNames                | `Record<"base"ÔΩú "prevButton"ÔΩú "nextButton"ÔΩú "headerWrapper" \| "header" \| "title" \| "content" \| "gridWrapper" \| "grid" \| "gridHeader" \| "gridHeaderRow" \| "gridHeaderCell" \| "gridBody" \| "gridBodyRow" \| "cell" \| "cellButton" \| "pickerWrapper" \| "pickerMonthList" \| "pickerYearList" \| "pickerHighlight" \| "pickerItem" \| "helperWrapper" \| "errorMessage", string>` | Allows to set custom class names for the calendar slots.                                                                                                                                  | -                                 |   |
+| classNames                | `Partial<Record<"base"ÔΩú "prevButton"ÔΩú "nextButton"ÔΩú "headerWrapper" \| "header" \| "title" \| "content" \| "gridWrapper" \| "grid" \| "gridHeader" \| "gridHeaderRow" \| "gridHeaderCell" \| "gridBody" \| "gridBodyRow" \| "cell" \| "cellButton" \| "pickerWrapper" \| "pickerMonthList" \| "pickerYearList" \| "pickerHighlight" \| "pickerItem" \| "helperWrapper" \| "errorMessage", string>>` | Allows to set custom class names for the calendar slots.                                                                                                                                  | -                                 |   |
 
 ### RangeCalendar Events
 \n- apps/docs/content/docs/components/select.mdx (modified, 2 changes)\n  Patch: @@ -392,7 +392,7 @@ the popover and listbox components.
 | popoverProps                | [PopoverProps](/docs/components/popover#api)                                                                                                                                                                           | Props to be passed to the popover component.                                                                           | -                  |
 | listboxProps                | [ListboxProps](/docs/components/listbox#api)                                                                                                                                                                           | Props to be passed to the listbox component.                                                                           | -                  |
 | scrollShadowProps           | [ScrollShadowProps](/docs/components/scroll-shadow#api)                                                                                                                                                                | Props to be passed to the scroll shadow component.                                                                     | -                  |
-| classNames                  | `Record<"base"ÔΩú "label"ÔΩú "trigger"ÔΩú "mainWrapper" ÔΩú "innerWrapper"ÔΩú "selectorIcon" ÔΩú "value" ÔΩú "listboxWrapper"ÔΩú "listbox" ÔΩú "popoverContent" ÔΩú "helperWrapper" ÔΩú "description" ÔΩú "errorMessage", string>` | Allows to set custom class names for the Select slots.                                                                 | -                  |
+| classNames                  | `Partial<Record<"base"ÔΩú "label"ÔΩú "trigger"ÔΩú "mainWrapper" ÔΩú "innerWrapper"ÔΩú "selectorIcon" ÔΩú "value" ÔΩú "listboxWrapper"ÔΩú "listbox" ÔΩú "popoverContent" ÔΩú "helperWrapper" ÔΩú "description" ÔΩú "errorMessage", string>>` | Allows to set custom class names for the Select slots.                                                                 | -                  |
 
 ### Select Events
 \n- apps/docs/content/docs/components/skeleton.mdx (modified, 6 changes)\n  Patch: @@ -59,7 +59,7 @@ You can use the `isLoaded` prop to stop the skeleton animation and show the chil
 - **base**: The base slot of the skeleton, it contains the `before` and `after` pseudo elements to create the animation.
 - **content**: The wrapped component to show the skeleton shape. It is visible only when the `isLoaded` prop is `true`.
 
-<Spacer y={4}/>  
+<Spacer y={4}/>
 
 ## Data Attributes
 
@@ -68,7 +68,7 @@ You can use the `isLoaded` prop to stop the skeleton animation and show the chil
 - **data-loaded**:
   Indicates the loaded state of the skeleton. Based on the `isLoaded` prop.
 
-<Spacer y={4}/>  
+<Spacer y={4}/>
 
 ## API
 
@@ -79,4 +79,4 @@ You can use the `isLoaded` prop to stop the skeleton animation and show the chil
 | children         | `ReactNode`                         | The content of the skeleton.                             | -       |
 | isLoaded         | `boolean`                           | Whether the skeleton is loaded.                          | `false` |
 | disableAnimation | `boolean`                           | Whether to disable the animations.                       | `false` |
-| classNames       | `Record<"base"ÔΩú"content", string>` | Allows to set custom class names for the skeleton slots. | -       |
+| classNames       | `Partial<Record<"base"ÔΩú"content", string>>` | Allows to set custom class names for the skeleton slots. | -       |\n- apps/docs/content/docs/components/slider.mdx (modified, 2 changes)\n  Patch: @@ -277,7 +277,7 @@ You can customize the `Slider` component by passing custom Tailwind CSS classes
 | disableThumbScale         | `boolean`                                                                                                                                                                        | Whether to disable the thumb scale animation.                                                                                                                 | `false`      |
 | isDisabled                | `boolean`                                                                                                                                                                        | Whether the whole Slider is disabled.                                                                                                                         | `false`      |
 | disableAnimation          | `boolean`                                                                                                                                                                        | Whether to disable the Slider animations.                                                                                                                     | `false`      |
-| classNames                | `Record<"base"ÔΩú"labelWrapper"ÔΩú"label"ÔΩú "value" ÔΩú "step" ÔΩú "mark" ÔΩú "trackWrapper" ÔΩú "track"ÔΩú "output" ÔΩú "filler" ÔΩú "thumb" ÔΩú "startContent" ÔΩú "endContent", string>` | Allows to set custom class names for the Slider slots.                                                                                                        | -            |
+| classNames                | `Partial<Record<"base"ÔΩú"labelWrapper"ÔΩú"label"ÔΩú "value" ÔΩú "step" ÔΩú "mark" ÔΩú "trackWrapper" ÔΩú "track"ÔΩú "output" ÔΩú "filler" ÔΩú "thumb" ÔΩú "startContent" ÔΩú "endContent", string>>` | Allows to set custom class names for the Slider slots.                                                                                                        | -            |
 
 ### Slider Functions
 \n- apps/docs/content/docs/components/snippet.mdx (modified, 2 changes)\n  Patch: @@ -115,7 +115,7 @@ You can customize the copy and copied icons by using the `copyIcon` and `checkIc
 | hideSymbol       | `boolean`                                                                       | Whether to hide the symbol.                                                                    | `false` |
 | copyButtonProps  | [ButtonProps](/docs/components/button#button-props)                             | The props of the copy button.                                                                  | -       |
 | disableAnimation | `boolean`                                                                       | Whether to disable the animations.                                                             | `false` |
-| classNames       | `Record<"base"ÔΩú"content"ÔΩú"pre"ÔΩú"symbol"ÔΩú"copyButton"ÔΩú"checkIcon", string>` | Allows to set custom class names for the snippet slots.                                        | -       |
+| classNames       | `Partial<Record<"base"ÔΩú"content"ÔΩú"pre"ÔΩú"symbol"ÔΩú"copyButton"ÔΩú"copyIcon"ÔΩú"checkIcon", string>>` | Allows to set custom class names for the snippet slots.                                        | -       |
 
 ### Snippet Events
 \n- apps/docs/content/docs/components/spinner.mdx (modified, 2 changes)\n  Patch: @@ -80,4 +80,4 @@ Spinner express an unspecified wait time or display the length of a process.
 | size       | `sm` \| `md` \| `lg`                                                        | The size of the spinner circles.                        | `md`      |
 | color      | `default` \| `primary` \| `secondary` \| `success` \| `warning` \| `danger` | The color of the spinner circles.                       | `primary` |
 | labelColor | `default` \| `primary` \| `secondary` \| `success` \| `warning` \| `danger` | The color of the label.                                 | `default` |
-| classNames | `Record<"base"ÔΩú"wrapper"ÔΩú"circle1"ÔΩú"circle2"ÔΩú"label", string>`          | Allows to set custom class names for the spinner slots. | -         |
+| classNames | `Partial<Record<"base"ÔΩú"wrapper"ÔΩú"circle1"ÔΩú"circle2"ÔΩú"label", string>>`          | Allows to set custom class names for the spinner slots. | -         |\n
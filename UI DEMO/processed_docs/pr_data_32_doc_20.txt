Pull Request Number: 42
Title: Feat/input
Base Branch: main
Head Branch: feat/input
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/42
State: MERGED
Created At: 2021-09-25T18:15:35Z
Merged At: 2021-09-25T18:37:13Z
Participants: jrgarciadev, codecov-commenter

Description:
Close #28
Types of changes


 Bug fix (non-breaking change which fixes an issue)
 New feature (non-breaking change which adds functionality)
 Breaking change (fix or feature that would cause existing functionality to not work as expected)
 Documentation Only
 Refactor

Description, Motivation and Context
New component input added to the NextUI components



Screenshots - Animations

Commits:
- feat: input improvements\n- Update button-group.tsx

chore: button group radius moved to dimensions util file\n- chore: merged with main\n- chore: input clear icon animated\n- feat: input label improved, new utility added to put multiples classnames\n- feat: new input types added\n- feat: new undelined styled added and other improvements\n- feat: test passing\n- chore: aria attr added to input\n- chore: a11y storybook addon added\n- fix: a11y input label\n- chore: input added to manifest\n- Merge branch 'main' of github.com:nextui-org/nextui into feat/input\n- feat: input component done\n- chore: test snapshots updated\n- chore: pipeline test command updated to avoid validating snapshots\n

Labels:


Comments:
- codecov-commenter: # [Codecov](https://codecov.io/gh/nextui-org/nextui/pull/42?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) Report
> Merging [#42](https://codecov.io/gh/nextui-org/nextui/pull/42?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) (5892f02) into [main](https://codecov.io/gh/nextui-org/nextui/commit/5f84f79e406afc5813559b910017ec0369d5afed?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) (5f84f79) will **decrease** coverage by `0.80%`.
> The diff coverage is `92.30%`.

[![Impacted file tree graph](https://codecov.io/gh/nextui-org/nextui/pull/42/graphs/tree.svg?width=650&height=150&src=pr&token=We4e5sFK8O&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None)](https://codecov.io/gh/nextui-org/nextui/pull/42?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None)

```diff
@@            Coverage Diff             @@
##             main      #42      +/-   ##
==========================================
- Coverage   95.78%   94.98%   -0.81%     
==========================================
  Files          55       66      +11     
  Lines         830     1056     +226     
  Branches      266      374     +108     
==========================================
+ Hits          795     1003     +208     
- Misses         32       46      +14     
- Partials        3        7       +4     
```


| [Impacted Files](https://codecov.io/gh/nextui-org/nextui/pull/42?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) | Coverage Δ | |
|---|---|---|
| [.../nextui/src/components/input/input-block-label.tsx](https://codecov.io/gh/nextui-org/nextui/pull/42/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2lucHV0L2lucHV0LWJsb2NrLWxhYmVsLnRzeA==) | `73.33% <73.33%> (ø)` | |
| [...s/nextui/src/components/input/input-icon-clear.tsx](https://codecov.io/gh/nextui-org/nextui/pull/42/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2lucHV0L2lucHV0LWljb24tY2xlYXIudHN4) | `77.27% <77.27%> (ø)` | |
| [...ages/nextui/src/components/input/input-content.tsx](https://codecov.io/gh/nextui-org/nextui/pull/42/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2lucHV0L2lucHV0LWNvbnRlbnQudHN4) | `81.25% <81.25%> (ø)` | |
| [...ckages/nextui/src/components/input/input-label.tsx](https://codecov.io/gh/nextui-org/nextui/pull/42/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2lucHV0L2lucHV0LWxhYmVsLnRzeA==) | `81.25% <81.25%> (ø)` | |
| [packages/nextui/src/components/input/input.tsx](https://codecov.io/gh/nextui-org/nextui/pull/42/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2lucHV0L2lucHV0LnRzeA==) | `96.47% <96.47%> (ø)` | |
| [...ages/nextui/src/components/button/button-group.tsx](https://codecov.io/gh/nextui-org/nextui/pull/42/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2J1dHRvbi9idXR0b24tZ3JvdXAudHN4) | `100.00% <100.00%> (ø)` | |
| [packages/nextui/src/components/button/button.tsx](https://codecov.io/gh/nextui-org/nextui/pull/42/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2J1dHRvbi9idXR0b24udHN4) | `93.05% <100.00%> (+0.19%)` | :arrow_up: |
| [...ages/nextui/src/components/image/image-browser.tsx](https://codecov.io/gh/nextui-org/nextui/pull/42/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2ltYWdlL2ltYWdlLWJyb3dzZXIudHN4) | `100.00% <100.00%> (ø)` | |
| [...ges/nextui/src/components/image/image.skeleton.tsx](https://codecov.io/gh/nextui-org/nextui/pull/42/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2ltYWdlL2ltYWdlLnNrZWxldG9uLnRzeA==) | `100.00% <100.00%> (ø)` | |
| [...ackages/nextui/src/components/input/clear-icon.tsx](https://codecov.io/gh/nextui-org/nextui/pull/42/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jb21wb25lbnRzL2lucHV0L2NsZWFyLWljb24udHN4) | `100.00% <100.00%> (ø)` | |
| ... and [18 more](https://codecov.io/gh/nextui-org/nextui/pull/42/diff?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nextui-org/nextui/pull/42?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nextui-org/nextui/pull/42?src=pr&el=footer&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None). Last update [5f84f79...5892f02](https://codecov.io/gh/nextui-org/nextui/pull/42?src=pr&el=lastupdated&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None).
\n

Files Changed:
- .github/workflows/main.yaml (modified, 2 changes)\n  Patch: @@ -67,7 +67,7 @@ jobs:
       - name: Install dependencies
         run: yarn install --frozen-lockfile
       - name: Test
-        run: yarn coverage
+        run: yarn coverage:update
       - uses: codecov/codecov-action@v2
         with:
           directory: './packages/nextui'\n- packages/docs/content/docs/components/avatar.mdx (modified, 4 changes)\n  Patch: @@ -287,8 +287,6 @@ import { Avatar } from '@nextui-org/react';
 | **icon**      | `ReactNode`             | -                                        | Show icon in avatar                    | -         |
 | ...           | `ImgHTMLAttributes`     | `'alt', 'crossOrigin', 'className', ...` | Native props                           | -         |
 
----
-
 <Spacer y={2} />
 
 #### Avatar Group Props
@@ -299,8 +297,6 @@ import { Avatar } from '@nextui-org/react';
 | **animated** | `boolean`        | -                                | Display translations animation on hover | `false` |
 | ...          | `HTMLAttributes` | `'id', 'name', 'className', ...` | Native props                            | -       |
 
----
-
 <Spacer y={2} />
 
 ### Avatar types\n- packages/docs/content/docs/components/button-group.mdx (modified, 2 changes)\n  Patch: @@ -195,8 +195,6 @@ import { Button } from '@nextui-org/react';
 | **weight**   | `NormalWeights`         | [NormalWeights](#normal-weights) | Border weight for `bordered` button | `normal`  |
 | ...          | `ButtonHTMLAttributes`  | `'id', 'className', ...`         | Native button props                 | -         |
 
----
-
 <Spacer y={2} />
 
 ### Button group types\n- packages/docs/content/docs/components/button.mdx (modified, 48 changes)\n  Patch: @@ -52,7 +52,7 @@ import { Button } from '@nextui-org/react';
 
 <Playground
   title="Colors"
-  desc="You can change the color of the `Button` with the property color."
+  desc="You can change the color of the `Button` with the property `color`."
   code={`
 <Grid.Container gap={2}>
   <Grid>
@@ -223,7 +223,7 @@ import { Button } from '@nextui-org/react';
 
 <Playground
   title="Rounded"
-  desc="You can completely round the corners of any type of button with the `rounded` property."
+  desc="You can completely round the corners of any type of `Button` with the `rounded` property."
   code={`
 <Grid.Container gap={2}>
   <Grid>
@@ -427,29 +427,27 @@ import { Button } from '@nextui-org/react';
 
 #### Button Props
 
-| Attribute      | Type                                            | Accepted values                  | Description                               | Default   |
-| -------------- | ----------------------------------------------- | -------------------------------- | ----------------------------------------- | --------- |
-| **color**      | `NormalColors` `string`                         | [NormalColors](#normal-colors)   | Change button color                       | `default` |
-| **size**       | `NormalSizes`                                   | [NormalSizes](#normal-sizes)     | Change button size                        | `medium`  |
-| **disabled**   | `boolean`                                       | `true/false`                     | Disable button                            | `false`   |
-| **bordered**   | `boolean`                                       | `true/false`                     | Bodered button                            | `false`   |
-| **flat**       | `boolean`                                       | `true/false`                     | Flat button                               | `false`   |
-| **rounded**    | `boolean`                                       | `true/false`                     | Rounded button                            | `false`   |
-| **ghost**      | `boolean`                                       | `true/false`                     | The opposite color                        | `false`   |
-| **shadow**     | `boolean`                                       | `true/false`                     | Display shadow effect                     | `false`   |
-| **loading**    | `boolean`                                       | `true/false`                     | Display loading indicator                 | `false`   |
-| **loaderType** | `NormalLoaders`                                 | [NormalLoaders](#normal-loaders) | Change loader indicator                   | `default` |
-| **auto**       | `boolean`                                       | `true/false`                     | Autoscale button width                    | `false`   |
-| **animated**   | `boolean`                                       | `true/false`                     | Display drip and scale animation          | `true`    |
-| **weight**     | `NormalWeights`                                 | [NormalWeights](#normal-weights) | Border weight for `bordered` button       | `normal`  |
-| **onClick**    | `MouseEventHandler`                             | -                                | Button click handler                      | -         |
-| **icon**       | `ReactNode`                                     | -                                | Show icon in button                       | -         |
-| **iconRight**  | `ReactNode`                                     | -                                | Show icon on the other side of the button | -         |
-| **htmlType**   | `ButtonHTMLAttributes.type`                     | -                                | Native type of button element             | `button`  |
-| **ref**        | <Code>Ref<HTMLButtonElement &#124; null></Code> | -                                | forwardRef                                | -         |
-| ...            | `ButtonHTMLAttributes`                          | `'id', 'className', ...`         | Native button props                       | -         |
-
----
+| Attribute        | Type                                            | Accepted values                  | Description                               | Default   |
+| ---------------- | ----------------------------------------------- | -------------------------------- | ----------------------------------------- | --------- |
+| **color**        | `NormalColors` `string`                         | [NormalColors](#normal-colors)   | Change button color                       | `default` |
+| **size**         | `NormalSizes`                                   | [NormalSizes](#normal-sizes)     | Change button size                        | `medium`  |
+| **disabled**     | `boolean`                                       | `true/false`                     | Disable button                            | `false`   |
+| **bordered**     | `boolean`                                       | `true/false`                     | Bodered button                            | `false`   |
+| **flat**         | `boolean`                                       | `true/false`                     | Flat button                               | `false`   |
+| **rounded**      | `boolean`                                       | `true/false`                     | Rounded button                            | `false`   |
+| **ghost**        | `boolean`                                       | `true/false`                     | The opposite color                        | `false`   |
+| **shadow**       | `boolean`                                       | `true/false`                     | Display shadow effect                     | `false`   |
+| **loading**      | `boolean`                                       | `true/false`                     | Display loading indicator                 | `false`   |
+| **loaderType**   | `NormalLoaders`                                 | [NormalLoaders](#normal-loaders) | Change loader indicator                   | `default` |
+| **auto**         | `boolean`                                       | `true/false`                     | Autoscale button width                    | `false`   |
+| **animated**     | `boolean`                                       | `true/false`                     | Display drip and scale animation          | `true`    |
+| **borderWeight** | `NormalWeights`                                 | [NormalWeights](#normal-weights) | Border weight for `bordered` button       | `normal`  |
+| **onClick**      | `MouseEventHandler`                             | -                                | Button click handler                      | -         |
+| **icon**         | `ReactNode`                                     | -                                | Show icon in button                       | -         |
+| **iconRight**    | `ReactNode`                                     | -                                | Show icon on the other side of the button | -         |
+| **htmlType**     | `ButtonHTMLAttributes.type`                     | -                                | Native type of button element             | `button`  |
+| **ref**          | <Code>Ref<HTMLButtonElement &#124; null></Code> | -                                | forwardRef                                | -         |
+| ...              | `ButtonHTMLAttributes`                          | `'id', 'className', ...`         | Button native props                       | -         |
 
 <Spacer y={2} />
 \n- packages/docs/content/docs/components/checkbox.mdx (modified, 4 changes)\n  Patch: @@ -232,8 +232,6 @@ import { Checkbox } from '@nextui-org/react';
 | **onChange**       | `CheckboxEvent`         | -                              | The callback invoked when the checked state of the `Checkbox` changes. | -         |
 | ...                | `LabelHTMLAttributes`   | `'form', 'className', ...`     | Native checkbox props                                                  | -         |
 
----
-
 <Spacer y={2} />
 
 #### Checkbox Group Props
@@ -249,8 +247,6 @@ import { Checkbox } from '@nextui-org/react';
 | **onChange**  | `(values: string[]) => void` | -                              | Checkbox group event handler        | -         |
 | ...           | `HTMLAttributes`             | `'id', 'className', ...`       | Native props                        | -         |
 
----
-
 <Spacer y={2} />
 
 ### Checkbox types\n- packages/docs/content/docs/components/input.mdx (modified, 576 changes)\n  Patch: @@ -1 +1,577 @@
+---
+title: 'Input'
+description: 'Inputs fields are used to get the user input in a text field.'
+url: https://nextui.com/docs/components/button
+---
+
 # Input
+
+Inputs fields are used to get the user input in a text field.
+
+```jsx
+import { Input } from '@nextui-org/react';
+```
+
+<CarbonAd />
+
+<Playground
+  title="Default"
+  desc="The default `Input` contains an animation effect."
+  code={`
+<Input labelPlaceholder="Next UI" />
+`}
+/>
+
+<Playground
+  title="Disabled"
+  desc="Unusable and un-writtable `Input`."
+  code={`
+<>
+    <Input disabled placeholder="Disabled" />
+    <Spacer y={0.5} />
+    <Input readOnly initialValue="readOnly" />
+</>
+`}
+/>
+
+<Playground
+  title="Clearable"
+  desc="Add a clear button in the `Input` box."
+  code={`
+<>
+<Input clearable bordered labelPlaceholder="Name" initialValue="NextUI"/>
+<Spacer y={2.5} />
+<Input clearable underlined labelPlaceholder="Name" initialValue="NextUI"/>
+<Spacer y={1.5} />
+<Input clearable label="Name" placeholder="Name" initialValue="NextUI" />
+</>
+`}
+/>
+
+<Playground
+  title="Label"
+  desc="Add a label to the `Input` with the property `label`"
+  code={`
+<Input label="Full Name" placeholder="Guillermo Rauch" />
+`}
+/>
+
+<Playground
+  title="Label Placeholder"
+  desc="With the property `labelPlaceholder` the placeholder becomes a label with an great animation."
+  code={`
+<Input labelPlaceholder="NextUI" />
+`}
+/>
+
+<Playground
+  title="Password"
+  desc="`Input` component with a show/hide password functionality, Important: You have to use the `Input.Password`
+  component."
+  code={`
+<>
+    <Input.Password labelPlaceholder="Password" initialValue="nextui123" />
+    <Spacer y={1.6} />
+    <Input.Password 
+        labelPlaceholder="Custom icons" 
+        visibleIcon={<Unlock fill="currentColor" />} 
+        hiddenIcon={<Lock fill="currentColor" />}
+    />
+</>
+`}
+/>
+
+<Playground
+  title="Sizes"
+  desc="Change the size of the entire `Input` including `padding`, `font-size` and `border` with the `size` property."
+  code={`
+ <>
+    <Input size="mini" placeholder="Mini" />
+    <Spacer y={0.5} />
+    <Input size="small" placeholder="Small" />
+    <Spacer y={0.5} />
+    <Input size="medium" placeholder="Medium" />
+    <Spacer y={0.5} />
+    <Input size="large" placeholder="Large" />
+    <Spacer y={0.5} />
+    <Input size="xlarge" placeholder="xLarge" />
+    <Spacer y={0.5} />
+    <Input width="120px" placeholder="120px" />
+  </>
+`}
+/>
+
+<Playground
+  title="Bordered"
+  desc="You can change the full style towards a bodered `Input` with the `bordered` property and 
+  you can customze the color with the `color` prop."
+  code={`
+<Grid.Container gap={2.5}>
+  <Grid>
+    <Input bordered labelPlaceholder="Default" color="default" />
+  </Grid>    
+  <Grid>
+    <Input bordered labelPlaceholder="Primary" color="primary" />
+  </Grid>
+  <Grid>
+    <Input bordered labelPlaceholder="Secondary" color="secondary" />
+  </Grid>
+  <Grid>
+    <Input bordered labelPlaceholder="Success" color="success" />
+  </Grid>
+  <Grid>
+    <Input bordered labelPlaceholder="Warning" color="warning" />
+  </Grid>
+  <Grid>
+    <Input bordered labelPlaceholder="Error" color="error" />
+  </Grid>
+  <Grid>
+    <Input bordered labelPlaceholder="#ff4ecd" color="#ff4ecd" />
+  </Grid>  
+</Grid.Container>   
+`}
+/>
+
+<Playground
+  title="Underlined"
+  desc="You can change the full style towards an undelined `Input` like the material effect just adding 
+ the `underlined` prop."
+  code={`
+<Grid.Container gap={2.5}>
+  <Grid>
+    <Input underlined labelPlaceholder="Default" color="default" />
+  </Grid>    
+  <Grid>
+    <Input underlined labelPlaceholder="Primary" color="primary" />
+  </Grid>
+  <Grid>
+    <Input underlined labelPlaceholder="Secondary" color="secondary" />
+  </Grid>
+  <Grid>
+    <Input underlined labelPlaceholder="Success" color="success" />
+  </Grid>
+  <Grid>
+    <Input underlined labelPlaceholder="Warning" color="warning" />
+  </Grid>
+  <Grid>
+    <Input underlined labelPlaceholder="Error" color="error" />
+  </Grid>
+</Grid.Container>   
+`}
+/>
+
+<Playground
+  title="Rounded"
+  desc="You can completely round the corners of any type of `Input` with the `rounded` prop."
+  code={`
+<Grid.Container gap={2.5}>
+  <Grid>
+    <Input rounded bordered label="Default" placeholder="Default" color="default" />
+  </Grid>    
+  <Grid>
+    <Input rounded bordered label="Primary" placeholder="Primary" color="primary" />
+  </Grid>
+  <Grid>
+    <Input rounded bordered label="Secondary" placeholder="Secondary" color="secondary" />
+  </Grid>
+  <Grid>
+    <Input rounded bordered label="Success" placeholder="Success" color="success" />
+  </Grid>
+  <Grid>
+    <Input rounded bordered label="Warning" placeholder="Warning" color="warning" />
+  </Grid>
+  <Grid>
+    <Input rounded bordered label="Error" placeholder="Error" color="error" />
+  </Grid>
+</Grid.Container> 
+`}
+/>
+
+<Playground
+  title="Status"
+  desc="You can change the color of the entire `Input` with the property `status`."
+  code={`
+<Grid.Container gap={2.5}>
+  <Grid>
+    <Input labelPlaceholder="Default" status="default" />
+  </Grid>    
+  <Grid>
+    <Input labelPlaceholder="Primary" status="primary" />
+  </Grid>
+  <Grid>
+    <Input labelPlaceholder="Secondary" status="secondary" />
+  </Grid>
+  <Grid>
+    <Input labelPlaceholder="Success" status="success" />
+  </Grid>
+  <Grid>
+    <Input labelPlaceholder="Warning" status="warning" />
+  </Grid>
+  <Grid>
+    <Input labelPlaceholder="Error" status="error" />
+  </Grid>
+  <Grid>
+    <Input labelPlaceholder="#ff4ecd" status="#ff4ecd" />
+  </Grid>  
+</Grid.Container>
+`}
+/>
+
+<Playground
+  title="No Shadow"
+  desc="You can disable the shadow of the entire `Input` with the property `shadow={false}`."
+  code={`
+<Grid.Container gap={2.5}>
+  <Grid>
+    <Input shadow={false} labelPlaceholder="Default" status="default" />
+  </Grid>
+  <Grid>
+    <Input shadow={false} labelPlaceholder="Primary" status="primary" />
+  </Grid>
+  <Grid>
+    <Input shadow={false} labelPlaceholder="Secondary" status="secondary" />
+  </Grid>
+  <Grid>
+    <Input shadow={false} labelPlaceholder="Success" status="success" />
+  </Grid>
+  <Grid>
+    <Input shadow={false} labelPlaceholder="Warning" status="warning" />
+  </Grid>
+  <Grid>
+    <Input shadow={false} labelPlaceholder="Error" status="error" />
+  </Grid>
+</Grid.Container>
+`}
+/>
+
+<Playground
+  title="No Animated"
+  desc="You can disable the animation of the entire `Input` with the property `animated={false}`."
+  code={`
+<Grid.Container gap={2.5}>
+  <Grid>
+    <Input animated={false} labelPlaceholder="Default" status="default" />
+  </Grid>
+  <Grid>
+    <Input underlined animated={false} labelPlaceholder="Primary" color="primary" />
+  </Grid>
+  <Grid>
+    <Input bordered animated={false} labelPlaceholder="Secondary" color="secondary" />
+  </Grid>
+</Grid.Container>
+`}
+/>
+
+<Playground
+  title="Helper text"
+  desc="You can add a helper text to `Input` with the property `helperText`. 
+  The first example is using the hook [useInput](#useinput)"
+  code={`
+  () => {
+    const { value, reset, bindings } = useInput('');      
+ 
+    const validateEmail = (value) => {
+        return /^\w+([\\.-]?\w+)*@\w+([\\.-]?\w+)*(\.\w{2,3})+$/.test(value);
+    };
+    const helperText = React.useMemo(() => {
+        if (!value) return '';
+        return !validateEmail(value) ? 'Enter a valid email' : 'Correct email';
+    }, [value]);
+    const helperColor = React.useMemo(() => {
+        if (!value) return 'default';
+        return !validateEmail(value) ? 'error' : 'success';
+    }, [value]);
+    return (
+<Grid.Container gap={2.5}>
+     <Grid>
+        <Input
+            {...bindings}
+            clearable
+            status={helperColor}
+            shadow={false}
+            onClearClick={reset}
+            color={helperColor}
+            helperText={helperText}
+            type="email"
+            label="Email"
+            placeholder="With regex validation"
+        />
+      </Grid>   
+     <Grid>
+        <Input
+            clearable
+            helperText="Please enter your name"
+            label="Name"
+            placeholder="Enter your name"
+        />
+      </Grid>
+      <Grid>
+        <Input
+            clearable
+            color="error"
+            helperText="Required"
+            label="Error"
+            placeholder="Enter something"
+        />
+      </Grid>
+      <Grid>
+        <Input
+            clearable
+            color="success"
+            initialValue="getnextui"
+            helperText="Excelent username"
+            type="test"
+            label="Username"
+            placeholder="Enter your username"
+        />
+      </Grid>
+      <Grid>
+        <Input
+            clearable
+            color="warning"
+            helperText="Insecure password"
+            type="password"
+            label="Password"
+            placeholder="Enter your password"
+        />
+      </Grid>
+      <Grid>
+        <Input.Password
+            clearable
+            color="warning"
+            initialValue="123"
+            helperText="Insecure password"
+            type="password"
+            label="Password"
+            placeholder="Enter your password with eye"
+        />
+      </Grid>
+    </Grid.Container>
+    );
+ }
+`}
+/>
+
+<Playground
+  title="Left/right labels"
+  desc="You can put any content at the begining or at the end of the `Input`"
+  code={`
+<Grid.Container gap={2.5}>
+    <Grid>    
+     <Input
+        bordered
+        labelLeft="https://"
+        labelRight=".org"
+        placeholder="nextui"
+        />
+    </Grid>
+    <Grid>
+     <Input
+        bordered
+        labelRight=".org"
+        placeholder="https://nextui"
+        />
+    </Grid >
+    <Grid>
+     <Input
+        bordered
+        labelLeft="https://"
+        placeholder="nextui.org"
+        />
+    </Grid >    
+    <Grid>      
+        <Input labelLeft="username" placeholder="getnextui" />
+    </Grid>
+    <Grid>      
+        <Input
+        labelRight=".org"
+        placeholder="https://nextui"
+        />
+    </Grid>
+    <Grid>
+     <Input
+        underlined
+        labelLeft="username"
+        placeholder="Next UI"
+        />
+    </Grid>
+  </Grid.Container>
+`}
+/>
+
+<Playground
+  title="Content"
+  desc="You can put any content at the begining or at the end of the `Input` with the properties `contentLeft` and `contentRight`.
+  Impotant: If you want the `Input` component change the icon colors according to the current `status` color 
+  you should use `currentColor` as the icon/svg color to allows ."
+  code={`
+  <Grid.Container gap={2.5}>
+       <Grid>
+        <Input
+            clearable
+            contentRightStyling={false}
+            placeholder="Type your message..."
+            contentRight={<SendButton />}
+        />
+        </Grid>
+        <Grid>
+        <Input
+            clearable
+            underlined
+            status="warning"
+            labelPlaceholder="Sun icon"
+            contentRight={<Sun filled fill="currentColor" />}
+        />
+        </Grid>
+        <Grid>
+        <Input
+            clearable
+            bordered
+            color="primary"
+            labelPlaceholder="Loading..."
+            contentRight={<Loading size="mini" style={{transform:'translateY(-2px)'}} />}
+        /> 
+        </Grid>
+    </Grid.Container>
+`}
+/>
+
+<Playground
+  title="Input Types"
+  desc="Change the type of `Input` with the `type` property as a native html input, the default value is `text`"
+  code={`
+  <Grid.Container gap={2.5}>
+    <Grid>
+      <Input label="Text" type="text" />
+    </Grid>
+    <Grid>
+      <Input label="Password" type="password" />
+    </Grid>
+    <Grid>
+      <Input label="Search" type="search" />
+    </Grid>
+    <Grid>
+      <Input label="Number" type="number" />
+    </Grid>
+    <Grid>
+      <Input label="Url" type="url" />
+    </Grid>
+    <Grid>
+      <Input label="Time" type="time" />
+    </Grid>
+    <Grid>
+      <Input label="Date" type="date" />
+    </Grid>
+  </Grid.Container>
+`}
+/>
+
+<Spacer y={3} />
+
+### APIs
+
+<Spacer y={2} />
+
+#### Input Props
+
+| Attribute               | Type                                                  | Accepted values                      | Description                                                                                       | Default   |
+| ----------------------- | ----------------------------------------------------- | ------------------------------------ | ------------------------------------------------------------------------------------------------- | --------- |
+| **value**               | `string`                                              | -                                    | Input value                                                                                       | -         |
+| **initialValue**        | `string`                                              | -                                    | Input default value                                                                               | -         |
+| **placeholder**         | `string`                                              | -                                    | The short hint displayed in the input                                                             | -         |
+| **size**                | `NormalSizes`                                         | [NormalSizes](#normal-sizes)         | Change input size                                                                                 | `medium`  |
+| **color**               | `SimpleColors`                                        | [SimpleColors](#simple-colors)       | Change input text, border and label color                                                         | `default` |
+| **status**              | `SimpleColors`                                        | [SimpleColors](#simple-colors)       | Change input status color                                                                         | `default` |
+| **required**            | `boolean`                                             | `true/false`                         | Required input prop                                                                               | `false`   |
+| **readOnly**            | `boolean`                                             | `true/false`                         | It prevents the user from changing the value of the field                                         | `false`   |
+| **disabled**            | `boolean`                                             | `true/false`                         | Disable input                                                                                     | `false`   |
+| **clearable**           | `boolean`                                             | `true/false`                         | Show clear button                                                                                 | `false`   |
+| **rounded**             | `boolean`                                             | `true/false`                         | Rounded input                                                                                     | `false`   |
+| **bordered**            | `boolean`                                             | `true/false`                         | Bordered input                                                                                    | `false`   |
+| **underlined**          | `boolean`                                             | `true/false`                         | Underlined input                                                                                  | `false`   |
+| **shadow**              | `boolean`                                             | `true/false`                         | Enable or disable the input shadow                                                                | `true`    |
+| **animated**            | `boolean`                                             | `true/false`                         | Enable or disable the input animation                                                             | `true`    |
+| **autoComplete**        | `string`                                              | -                                    | HTML input autocomplete attribute                                                                 | `off`     |
+| **borderWeight**        | `NormalWeights`                                       | [NormalWeights](#normal-weights)     | Border weight for `bordered` input                                                                | `normal`  |
+| **width**               | `string`                                              | -                                    | Input width                                                                                       | `initial` |
+| **label**               | `string`                                              | -                                    | Text label for input                                                                              | -         |
+| **labelPlaceholder**    | `string`                                              | -                                    | The placeholder becomes a label                                                                   | -         |
+| **labelLeft**           | `string`                                              | -                                    | Text label at left of the input                                                                   | -         |
+| **labelRight**          | `string`                                              | -                                    | Text label at right of the input                                                                  | -         |
+| **helperText**          | `string`                                              | -                                    | Add a helper text to Input                                                                        | -         |
+| **contentLeft**         | `React.ReactNode`                                     | -                                    | Left content for input                                                                            | -         |
+| **contentRight**        | `React.ReactNode`                                     | -                                    | Right content for input                                                                           | -         |
+| **contentClickable**    | `boolean`                                             | `true/false`                         | Left/right content are clickable (just applied when the styling prop is true, see the next props) | `false`   |
+| **contentLeftStyling**  | `boolean`                                             | `true/false`                         | Allows the Input component to wrap the `contentLeft` in a container                               | `true`    |
+| **contentRightStyling** | `boolean`                                             | `true/false`                         | Allows the Input component to wrap the `contentRight` in a container                              | `true`    |
+| **onChange**            | `(e: React.ChangeEvent) => void`                      | -                                    | Callback fired when the value is changed                                                          | -         |
+| **onFocus**             | `(e: React.FocusEvent) => void`                       | -                                    | Callback fired when the input is focused.                                                         | -         |
+| **onBlur**              | `(e: React.FocusEvent) => void`                       | -                                    | Callback fired when the input is blurred.                                                         | -         |
+| **onContentClick**      | `(key: ContentPosition, e: React.MouseEvent) => void` | [ContentPosition](#content-position) | click icon event                                                                                  | -         |
+| **onClearClick**        | `(e: React.MouseEvent) => void`                       | -                                    | clear icon event                                                                                  | -         |
+| **ref**                 | <Code>Ref<HTMLInputElement &#124; null></Code>        | -                                    | forwardRef                                                                                        | -         |
+| ...                     | `InputHTMLAttributes`                                 | `'alt', 'type', 'className', ...`    | Input native props                                                                                | -         |
+
+<Spacer y={2} />
+
+### Input.Password props
+
+| Attribute       | Type              | Accepted values             | Description                  | Default |
+| --------------- | ----------------- | --------------------------- | ---------------------------- | ------- |
+| **hideToggle**  | `boolean`         | -                           | Hide toggle icon             | `false` |
+| **visibleIcon** | `React.ReactNode` | -                           | Custom visible password icon | -       |
+| **hiddenIcon**  | `React.ReactNode` | -                           | Custom hidden password icon  | -       |
+| ...             | `Input Props`     | [Input Props](#input-props) | Input props                  | -       |
+
+<Spacer y={2} />
+
+### Input types
+
+<Spacer y={1} />
+
+#### Simple Colors
+
+```ts
+type NormalColors =
+  | 'default'
+  | 'primary'
+  | 'secondary'
+  | 'success'
+  | 'warning'
+  | 'error';
+```
+
+#### Normal Sizes
+
+```ts
+type NormalSizes = 'mini' | 'small' | 'medium' | 'large' | 'xlarge';
+```
+
+#### Normal Weights
+
+```ts
+type NormalWeights = 'normal' | 'light' | 'bold';
+```
+
+#### Content Position
+
+```ts
+type ContentPosition = 'left' | 'right';
+```
+
+#### useInput
+
+```ts
+type useInput = (
+  initialValue: string
+) => {
+  value: string;
+  setValue: Dispatch<SetStateAction<string>>;
+  currentRef: MutableRefObject<string>;
+  reset: () => void;
+  bindings: {
+    value: string;
+    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;
+  };
+};
+```\n- packages/docs/content/docs/components/loading.mdx (modified, 2 changes)\n  Patch: @@ -145,8 +145,6 @@ import { Loading } from '@nextui-org/react';
 | **gradientBackground** | `string/null`           | -                                | Set a background for gradient loading type | -         |
 | ...                    | `HTMLAttributes`        | `'id', 'className', ...`         | Native props                               | -         |
 
----
-
 <Spacer y={2} />
 
 ### Loading types\n- packages/docs/content/docs/components/radio.mdx (modified, 6 changes)\n  Patch: @@ -214,8 +214,6 @@ import { Radio } from '@nextui-org/react';
 | **onChange**  | `(e: RadioEvent) => void` | -                              | The callback invoked when the checked state of the `Radio` changes. | -         |
 | ...           | `InputHTMLAttributes`     | `'id', 'className', ...`       | Native radio props                                                  | -         |
 
----
-
 <Spacer y={2} />
 
 #### Radio Group Props
@@ -232,8 +230,6 @@ import { Radio } from '@nextui-org/react';
 | **onChange**     | `(e:`[RadioEvent](#radio-event)) `=> void` | -                              | Radio group event handler        | -         |
 | ...              | `InputHTMLAttributes`                      | `'id', 'className', ...`       | Native props                     | -         |
 
----
-
 <Spacer y={2} />
 
 #### Radio Desc Props
@@ -242,8 +238,6 @@ import { Radio } from '@nextui-org/react';
 | --------- | ---------------- | ------------------------ | ------------ | ------- |
 | ...       | `HTMLAttributes` | `'id', 'className', ...` | native props | -       |
 
----
-
 <Spacer y={2} />
 
 ### Radio types\n- packages/docs/content/docs/components/switch.mdx (modified, 2 changes)\n  Patch: @@ -189,8 +189,6 @@ import { Switch } from '@nextui-org/react';
 | **onChange**       | `(e:`[SwitchEvent](#switch-event)) `=> void` | -                              | The callback invoked when the checked state of the switch changes. | -         |
 | ...                | `LabelHTMLAttributes`                        | `'id', 'className', ...`       | Native props                                                       | -         |
 
----
-
 <Spacer y={2} />
 
 ### Switch types\n- packages/docs/content/docs/components/text.mdx (modified, 2 changes)\n  Patch: @@ -166,8 +166,6 @@ import { Text } from '@nextui-org/react';
 | **color**      | `NormalColors` `string` | [NormalColors](#normal-colors) | text color      | `default`       |
 | ...            | `HTMLAttributes`        | `'id', 'className', ...`       | native props    | -               |
 
----
-
 <Spacer y={2} />
 
 ### Text types\n- packages/docs/content/docs/components/tooltip.mdx (modified, 2 changes)\n  Patch: @@ -374,8 +374,6 @@ import { Tooltip } from '@nextui-org/react';
 | **onVisibleChange** | `number`                   | [TooltipOnVisibleChange](#tooltip-on-visible-change) | Callback when tooltip visibility has changed               | -         |
 | ...                 | `DivHTMLAttributes`        | `'className', 'id', ...`                             | Native div props                                           | -         |
 
----
-
 <Spacer y={2} />
 
 ### Tooltip types\n- packages/docs/content/docs/layout/container.mdx (modified, 6 changes)\n  Patch: @@ -180,8 +180,6 @@ const App = () => (
 | **as**           | `ElementType`    | [ElementType](#element-type)   | Root node component              | `div`   |
 | ...              | `HTMLAttributes` | `'id', 'className', ...`       | Native element props             | -       |
 
----
-
 <Spacer y={1} />
 
 #### Row Props
@@ -196,8 +194,6 @@ const App = () => (
 | **as**      | `ElementType`    | [ElementType](#element-type) | The component used for the root node | -            |
 | ...         | `HTMLAttributes` | `'id', 'className', ...`     | Native element props                 | -            |
 
----
-
 <Spacer y={1} />
 
 #### Col Props
@@ -209,8 +205,6 @@ const App = () => (
 | **as**     | `ElementType`    | [ElementType](#element-type) | The component used for the root node | -       |
 | ...        | `HTMLAttributes` | `'id', 'className', ...`     | Native element props                 | -       |
 
----
-
 <Spacer y={2} />
 
 ### Container types\n- packages/docs/content/docs/layout/grid.mdx (modified, 4 changes)\n  Patch: @@ -237,8 +237,6 @@ const App = () => (
 | **alignContent** | `AlignContent`   | [AlignContent](#align-content) | CSS "align-content" property   | -       |
 | ...              | `HTMLAttributes` | `'id', 'className', ...`       | Native element props           | -       |
 
----
-
 <Spacer y={2} />
 
 #### Grid.Container Props
@@ -249,8 +247,6 @@ const App = () => (
 | **wrap**  | `Wrap`           | [Wrap](#wrap)            | CSS "flex-wrap" property | `wrap`  |
 | ...       | `HTMLAttributes` | `'id', 'className', ...` | Native element props     | -       |
 
----
-
 ### Grid types
 
 <Spacer y={1} />\n- packages/docs/content/docs/manifest.json (modified, 8 changes)\n  Patch: @@ -66,6 +66,11 @@
                             "title": "Button Group",
                             "path": "/docs/components/button-group.mdx"
                         },
+                        {
+                            "title": "Input",
+                            "path": "/docs/components/input.mdx",
+                            "newPost": true
+                        },
                         {
                             "title": "Checkbox",
                             "path": "/docs/components/checkbox.mdx"
@@ -76,8 +81,7 @@
                         },
                         {
                             "title": "Tooltip",
-                            "path": "/docs/components/tooltip.mdx",
-                            "newPost": true
+                            "path": "/docs/components/tooltip.mdx"
                         },
                         {
                             "title": "Loading",\n- packages/docs/src/components/icons/arrow-right.tsx (modified, 3 changes)\n  Patch: @@ -5,19 +5,22 @@ export interface Props {
   width?: number;
   height?: number;
   size?: number;
+  className?: string;
 }
 
 const ArrowRight: React.FC<Props> = ({
   fill,
   size,
   width = 24,
   height = 24,
+  className,
   ...props
 }) => {
   return (
     <svg
       width={size || width}
       height={size || height}
+      className={className}
       viewBox="0 0 24 24"
       fill="none"
       xmlns="http://www.w3.org/2000/svg"\n- packages/docs/src/components/icons/index.ts (modified, 3 changes)\n  Patch: @@ -5,6 +5,7 @@ export interface IconProps {
   height?: string | number;
   width?: string | number;
   label?: string;
+  className?: string;
 }
 
 export { default as Anchor } from './anchor';
@@ -14,6 +15,7 @@ export { default as ArrowLeft } from './arrow-left';
 export { default as ArrowRight } from './arrow-right';
 export { default as Copy } from './copy';
 export { default as Lock } from './lock';
+export { default as Unlock } from './unlock';
 export { default as Moon } from './moon';
 export { default as Notification } from './notification';
 export { default as Sun } from './sun';
@@ -33,3 +35,4 @@ export { default as Close } from './close';
 export { default as Twitter } from './twitter';
 export { default as Discord } from './discord';
 export { default as Github } from './github';
+export { default as Send } from './send';\n- packages/docs/src/components/icons/send.tsx (added, 37 changes)\n  Patch: @@ -0,0 +1,37 @@
+import React from 'react';
+import { IconProps } from './index';
+import { useTheme } from '@nextui-org/react';
+
+const Send: React.FC<IconProps> = ({
+  fill,
+  filled,
+  size,
+  height,
+  width,
+  label,
+  className,
+  ...props
+}) => {
+  const theme = useTheme();
+  const color = fill || theme.palette.accents_3;
+  return (
+    <svg
+      data-name="Iconly/Curved/Lock"
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      className={className}
+      {...props}
+    >
+      <g transform="translate(2 2)">
+        <path
+          d="M19.435.582A1.933,1.933,0,0,0,17.5.079L1.408,4.76A1.919,1.919,0,0,0,.024,6.281a2.253,2.253,0,0,0,1,2.1L6.06,11.477a1.3,1.3,0,0,0,1.61-.193l5.763-5.8a.734.734,0,0,1,1.06,0,.763.763,0,0,1,0,1.067l-5.773,5.8a1.324,1.324,0,0,0-.193,1.619L11.6,19.054A1.91,1.91,0,0,0,13.263,20a2.078,2.078,0,0,0,.25-.01A1.95,1.95,0,0,0,15.144,18.6L19.916,2.525a1.964,1.964,0,0,0-.48-1.943"
+          fill={color}
+        />
+      </g>
+    </svg>
+  );
+};
+
+export default Send;\n- packages/docs/src/components/icons/unlock.tsx (added, 61 changes)\n  Patch: @@ -0,0 +1,61 @@
+import React from 'react';
+import { IconProps } from './index';
+import { useTheme } from '@nextui-org/react';
+
+const Unlock: React.FC<IconProps> = ({
+  fill,
+  filled,
+  size,
+  height,
+  width,
+  label,
+  ...props
+}) => {
+  const theme = useTheme();
+  const color = fill || theme.palette.accents_3;
+  return (
+    <svg
+      data-name="Iconly/Curved/Lock"
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      {...props}
+    >
+      <g transform="translate(3.5 2)">
+        <path
+          d="M8.927,3.237A4.562,4.562,0,0,0,0,4.484V6.653"
+          transform="translate(3.849 0.75)"
+          fill="none"
+          stroke={color}
+          strokeLinecap="round"
+          strokeLinejoin="round"
+          strokeMiterlimit="10"
+          strokeWidth={1.5}
+        />
+        <path
+          d="M.5,0V2.221"
+          transform="translate(7.91 12.156)"
+          fill="none"
+          stroke={color}
+          strokeLinecap="round"
+          strokeLinejoin="round"
+          strokeMiterlimit="10"
+          strokeWidth={1.5}
+        />
+        <path
+          d="M7.66,0C1.915,0,0,1.568,0,6.271s1.915,6.272,7.66,6.272,7.661-1.568,7.661-6.272S13.406,0,7.66,0Z"
+          transform="translate(0.75 6.824)"
+          fill="none"
+          stroke={color}
+          strokeLinecap="round"
+          strokeLinejoin="round"
+          strokeMiterlimit="10"
+          strokeWidth={1.5}
+        />
+      </g>
+    </svg>
+  );
+};
+
+export default Unlock;\n- packages/docs/src/components/playground/dynamic-live.tsx (modified, 12 changes)\n  Patch: @@ -4,12 +4,8 @@ import { useTheme } from '@nextui-org/react';
 import makeCodeTheme from './code-theme';
 import Editor from './editor';
 import NextLink from 'next/link';
-import {
-  Palette,
-  ExampleBlock,
-  UserTwitterCard,
-  DeleteUser,
-} from '@components';
+import { Palette } from '@components';
+import * as TemplateComponents from '../templates';
 import { useMediaQuery } from '@hooks/use-media-query';
 import withDefaults from '@utils/with-defaults';
 import * as Components from '@nextui-org/react';
@@ -30,11 +26,9 @@ const DynamicLive: React.FC<Props> = ({ code, showEditor }) => {
   const scope = {
     ...Components,
     ...Icons,
+    ...TemplateComponents,
     NextLink,
     Palette,
-    ExampleBlock,
-    UserTwitterCard,
-    DeleteUser,
     useMediaQuery,
   };
   return (\n- packages/docs/src/components/templates/index.ts (modified, 1 changes)\n  Patch: @@ -1,3 +1,4 @@
 export { default as DeleteUser } from './delete-user';
 export { default as ExampleBlock } from './example-block';
 export { default as UserTwitterCard } from './user-twitter-card';
+export { default as SendButton } from './send-button';\n- packages/docs/src/components/templates/send-button/index.tsx (added, 53 changes)\n  Patch: @@ -0,0 +1,53 @@
+import React from 'react';
+import { useTheme } from '@nextui-org/react';
+import { Send } from '../../icons';
+
+interface Props {
+  onClick: () => void;
+}
+
+const SendButton: React.FC<Props> = ({ onClick }) => {
+  const theme = useTheme();
+
+  const handleClick = () => {
+    onClick && onClick();
+  };
+
+  return (
+    <div className="send-button-container" onClick={handleClick}>
+      <Send fill="white" className="send-button__arrow-icon" />
+      <style jsx>{`
+        .send-button-container {
+          width: 24px;
+          margin: 0 10px;
+          display: flex;
+          justify-content: center;
+          align-items: center;
+          background-color: ${theme.palette.primary};
+          border-radius: 50%;
+          cursor: pointer;
+          transition: all 0.25s ease;
+        }
+        :global(.send-button__arrow-icon) {
+          width: 100%;
+          height: 100%;
+          padding: 4px;
+          transition: transform 0.25s ease 0s, opacity 200ms ease-in-out 50ms;
+          box-shadow: ${theme.expressiveness.shadowSmall};
+        }
+        .send-button-container:hover {
+          opacity: 0.8;
+        }
+        .send-button-container:active {
+          transform: scale(0.9);
+        }
+        .send-button-container:active :global(.send-button__arrow-icon) {
+          transform: translate(24px, -24px);
+          opacity: 0;
+        }
+      `}</style>
+    </div>
+  );
+};
+
+export default SendButton;\n- packages/docs/src/lib/github/raw.ts (modified, 1 changes)\n  Patch: @@ -2,6 +2,7 @@ import { RAW_GITHUB_URL, REPO_NAME } from './constants';
 import { getError } from './utils';
 
 export async function getRawFileFromGitHub(path: string) {
+  console.log(RAW_GITHUB_URL + path);
   const res = await fetch(RAW_GITHUB_URL + path);
 
   if (res.ok) return res.text();\n- packages/nextui/.storybook/main.js (modified, 1 changes)\n  Patch: @@ -1,5 +1,6 @@
 module.exports = {
   stories: ['../src/**/*.stories.mdx', '../src/**/*.stories.@(js|jsx|ts|tsx)'],
+  addons: ['@storybook/addon-a11y'],
   babel: async (options) => ({
     ...options,
     plugins: [\n- packages/nextui/package.json (modified, 2 changes)\n  Patch: @@ -62,7 +62,7 @@
     "@babel/runtime": "^7.9.6",
     "@rollup/plugin-commonjs": "^19.0.0",
     "@rollup/plugin-node-resolve": "^13.0.0",
-    "@storybook/addon-a11y": "^6.3.7",
+    "@storybook/addon-a11y": "^6.3.8",
     "@storybook/addon-actions": "^6.3.7",
     "@storybook/addon-essentials": "^6.3.7",
     "@storybook/addon-links": "^6.3.7",\n- packages/nextui/src/components/button/__tests__/__snapshots__/group.test.tsx.snap (modified, 10 changes)\n  Patch: @@ -1,19 +1,20 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`ButtonGroup buttons should be displayed vertically 1`] = `"<div weight=\\"normal\\" class=\\"jsx-3471870812 button-group vertical  \\"><button type=\\"button\\" color=\\"default\\" weight=\\"normal\\" class=\\"jsx-2107858474 button \\"><div class=\\"jsx-2107858474 text\\">action1</div></button><button type=\\"button\\" color=\\"default\\" weight=\\"normal\\" class=\\"jsx-2107858474 button \\"><div class=\\"jsx-2107858474 text\\">action2</div></button></div>"`;
+exports[`ButtonGroup buttons should be displayed vertically 1`] = `"<div class=\\"jsx-1409713749 button-group vertical  \\"><button type=\\"button\\" color=\\"default\\" class=\\"jsx-1018608163 button \\"><div class=\\"jsx-1018608163 text\\">action1</div></button><button type=\\"button\\" color=\\"default\\" class=\\"jsx-1018608163 button \\"><div class=\\"jsx-1018608163 text\\">action2</div></button></div>"`;
 
-exports[`ButtonGroup props should be passed to each button 1`] = `"<div weight=\\"normal\\" class=\\"jsx-2901264991 button-group horizontal  \\"><button type=\\"button\\" color=\\"success\\" weight=\\"normal\\" class=\\"jsx-2158042418 button \\"><div class=\\"jsx-2158042418 text\\">action</div></button></div>"`;
+exports[`ButtonGroup props should be passed to each button 1`] = `"<div class=\\"jsx-1635087777 button-group horizontal  \\"><button type=\\"button\\" color=\\"success\\" class=\\"jsx-2393450700 button \\"><div class=\\"jsx-2393450700 text\\">action</div></button></div>"`;
 
-exports[`ButtonGroup props should be passed to each button 2`] = `"<div weight=\\"normal\\" class=\\"jsx-2901264991 button-group horizontal  \\"><button type=\\"button\\" color=\\"success\\" weight=\\"normal\\" class=\\"jsx-2175964210 button \\"><div class=\\"jsx-2175964210 text\\">action</div></button></div>"`;
+exports[`ButtonGroup props should be passed to each button 2`] = `"<div class=\\"jsx-1635087777 button-group horizontal  \\"><button type=\\"button\\" color=\\"success\\" class=\\"jsx-1756895052 button \\"><div class=\\"jsx-1756895052 text\\">action</div></button></div>"`;
 
-exports[`ButtonGroup should render correctly 1`] = `"<div weight=\\"normal\\" class=\\"jsx-3471870812 button-group horizontal  \\"><button type=\\"button\\" color=\\"default\\" weight=\\"normal\\" class=\\"jsx-2107858474 button \\"><div class=\\"jsx-2107858474 text\\">action</div></button></div>"`;
+exports[`ButtonGroup should render correctly 1`] = `"<div class=\\"jsx-1409713749 button-group horizontal  \\"><button type=\\"button\\" color=\\"default\\" class=\\"jsx-1018608163 button \\"><div class=\\"jsx-1018608163 text\\">action</div></button></div>"`;
 
 exports[`ButtonGroup should render different variants 1`] = `ReactWrapper {}`;
 
 exports[`ButtonGroup should render different variants 2`] = `
 <NextUI - Button
   animated={true}
   auto={false}
+  borderWeight="normal"
   bordered={false}
   className=""
   color="default"
@@ -27,7 +28,6 @@ exports[`ButtonGroup should render different variants 2`] = `
   rounded={false}
   shadow={false}
   size="medium"
-  weight="normal"
 >
   button
 </NextUI - Button>\n- packages/nextui/src/components/button/__tests__/__snapshots__/icon.test.tsx.snap (modified, 6 changes)\n  Patch: @@ -1,7 +1,7 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`ButtonIcon should render correctly 1`] = `"<button type=\\"button\\" color=\\"default\\" weight=\\"normal\\" class=\\"jsx-3127238662 button \\"><div class=\\"jsx-3127238662\\"><span class=\\"jsx-2775745252 icon   \\"><svg></svg></span><div class=\\"jsx-3127238662 text left\\">action</div></div></button>"`;
+exports[`ButtonIcon should render correctly 1`] = `"<button type=\\"button\\" color=\\"default\\" class=\\"jsx-1560888911 button \\"><div class=\\"jsx-1560888911\\"><span class=\\"jsx-2775745252 icon   \\"><svg></svg></span><div class=\\"jsx-1560888911 text left\\">action</div></div></button>"`;
 
-exports[`ButtonIcon should work with right 1`] = `"<button type=\\"button\\" color=\\"default\\" weight=\\"normal\\" class=\\"jsx-3127238662 button \\"><div class=\\"jsx-3127238662\\"><span class=\\"jsx-2775745252 icon right  \\"><svg></svg></span><div class=\\"jsx-3127238662 text right\\">action</div></div></button>"`;
+exports[`ButtonIcon should work with right 1`] = `"<button type=\\"button\\" color=\\"default\\" class=\\"jsx-1560888911 button \\"><div class=\\"jsx-1560888911\\"><span class=\\"jsx-2775745252 icon right  \\"><svg></svg></span><div class=\\"jsx-1560888911 text right\\">action</div></div></button>"`;
 
-exports[`ButtonIcon should work without text 1`] = `"<button type=\\"button\\" color=\\"default\\" weight=\\"normal\\" class=\\"jsx-3127238662 button \\"><span class=\\"jsx-2775745252 icon right single \\"><svg></svg></span></button>"`;
+exports[`ButtonIcon should work without text 1`] = `"<button type=\\"button\\" color=\\"default\\" class=\\"jsx-1560888911 button \\"><span class=\\"jsx-2775745252 icon right single \\"><svg></svg></span></button>"`;\n- packages/nextui/src/components/button/__tests__/__snapshots__/index.test.tsx.snap (modified, 4 changes)\n  Patch: @@ -6,6 +6,7 @@ exports[`Button should render different variants 2`] = `
 <NextUI - Button
   animated={true}
   auto={false}
+  borderWeight="normal"
   bordered={false}
   className=""
   color="default"
@@ -19,7 +20,6 @@ exports[`Button should render different variants 2`] = `
   rounded={false}
   shadow={false}
   size="medium"
-  weight="normal"
 >
   button
 </NextUI - Button>
@@ -29,6 +29,7 @@ exports[`Button should render empty button correctly 1`] = `
 <NextUI - Button
   animated={true}
   auto={false}
+  borderWeight="normal"
   bordered={false}
   className=""
   color="default"
@@ -42,6 +43,5 @@ exports[`Button should render empty button correctly 1`] = `
   rounded={false}
   shadow={false}
   size="medium"
-  weight="normal"
 />
 `;\n- packages/nextui/src/components/button/button-group.tsx (modified, 12 changes)\n  Patch: @@ -7,7 +7,8 @@ import {
   NormalWeights,
 } from '../../utils/prop-types';
 import { ButtonGroupContext, ButtonGroupConfig } from './button-group-context';
-import { getButtonRadius, getGroupBorder } from './styles';
+import { getGroupBorder } from './styles';
+import { getNormalRadius } from '../../utils/dimensions';
 
 interface Props {
   disabled?: boolean;
@@ -20,7 +21,7 @@ interface Props {
   animated?: boolean;
   rounded?: boolean;
   ghost?: boolean;
-  weight?: NormalWeights;
+  borderWeight?: NormalWeights;
   size?: NormalSizes;
   color?: NormalColors;
   className?: string;
@@ -37,7 +38,7 @@ const defaultProps = {
   animated: false,
   rounded: false,
   ghost: false,
-  weight: 'normal' as NormalWeights,
+  borderWeight: 'normal' as NormalWeights | undefined,
   size: 'medium' as NormalSizes,
   color: 'default' as NormalColors,
   className: '',
@@ -89,7 +90,10 @@ const ButtonGroup: React.FC<React.PropsWithChildren<ButtonGroupProps>> = (
     return getGroupBorder(theme.palette, groupProps);
   }, [theme, disabled, bordered]);
 
-  const radius = useMemo(() => getButtonRadius(size, rounded), [size, rounded]);
+  const radius = useMemo(() => getNormalRadius(size, rounded), [size, rounded]);
+
+  // to avoid passing borderweight prop to the html button element
+  delete props.borderWeight;
 
   return (
     <ButtonGroupContext.Provider value={initialValue}>\n- packages/nextui/src/components/button/button.tsx (modified, 17 changes)\n  Patch: @@ -24,11 +24,12 @@ import ButtonIcon from './button-icon';
 import {
   getButtonColors,
   getButtonCursor,
-  getButtonRadius,
   getButtonDripColor,
   getShadowColor,
   getButtonSize,
 } from './styles';
+import { getNormalRadius } from '../..//utils/dimensions';
+import { __DEV__ } from '../../utils/assertion';
 
 export interface Props {
   color?: NormalColors | string;
@@ -43,7 +44,7 @@ export interface Props {
   disabled?: boolean;
   bordered?: boolean;
   ghost?: boolean;
-  weight?: NormalWeights;
+  borderWeight?: NormalWeights;
   loaderType?: NormalLoaders;
   htmlType?: React.ButtonHTMLAttributes<unknown>['type'];
   icon?: React.ReactNode;
@@ -58,7 +59,7 @@ const defaultProps = {
   size: 'medium' as NormalSizes,
   htmlType: 'button' as React.ButtonHTMLAttributes<unknown>['type'],
   loaderType: 'default' as NormalLoaders,
-  weight: 'normal' as NormalWeights,
+  borderWeight: 'normal' as NormalWeights | undefined,
   flat: false,
   light: false,
   loading: false,
@@ -125,7 +126,7 @@ const Button = React.forwardRef<
     [theme.palette, filteredProps]
   );
 
-  const radius = useMemo(() => getButtonRadius(size, rounded), [size, rounded]);
+  const radius = useMemo(() => getNormalRadius(size, rounded), [size, rounded]);
 
   const shadowColor = useMemo(
     () =>
@@ -185,6 +186,9 @@ const Button = React.forwardRef<
     onClick && onClick(event);
   };
 
+  // to avoid passing borderweight prop to the html button element
+  delete props.borderWeight;
+
   return (
     <button
       ref={buttonRef}
@@ -332,8 +336,9 @@ type ButtonComponent<T, P = {}> = React.ForwardRefExoticComponent<
 type ComponentProps = Partial<typeof defaultProps> &
   Omit<Props, keyof typeof defaultProps> &
   NativeAttrs;
-
-Button.displayName = 'NextUI - Button';
+if (__DEV__) {
+  Button.displayName = 'NextUI - Button';
+}
 Button.defaultProps = defaultProps;
 
 export default Button as ButtonComponent<HTMLButtonElement, ComponentProps>;\n- packages/nextui/src/components/button/styles.ts (modified, 39 changes)\n  Patch: @@ -1,10 +1,6 @@
 import { CSSProperties } from 'react';
 import { NextUIThemesPalette } from '../../theme';
-import {
-  NormalSizes,
-  NormalColors,
-  NormalWeights,
-} from '../../utils/prop-types';
+import { NormalSizes, NormalColors } from '../../utils/prop-types';
 import { Props as ButtonProps } from './button';
 import { ButtonGroupProps } from './button-group';
 import {
@@ -13,6 +9,7 @@ import {
   hexFromString,
   getNormalColor,
 } from '../../utils/color';
+import { getNormalWeight } from '../../utils/dimensions';
 
 export interface ButtonBorder {
   display?: string;
@@ -48,8 +45,8 @@ export const getGroupBorder = (
   palette: NextUIThemesPalette,
   props: ButtonGroupProps
 ): ButtonBorder => {
-  const { bordered, color, weight } = props;
-  const border = getButtonWeight(weight);
+  const { bordered, color, borderWeight } = props;
+  const border = getNormalWeight(borderWeight);
   const common = {
     color: palette.background,
     width: bordered ? border : '0px',
@@ -64,15 +61,6 @@ export const getGroupBorder = (
   return buttonColor;
 };
 
-const getButtonWeight = (weight?: NormalWeights): string | undefined => {
-  const weights: { [key in NormalWeights]?: string } = {
-    light: '1px',
-    normal: '2px',
-    bold: '3px',
-  };
-  return weights[weight || 'normal'];
-};
-
 export const getShadowColor = (
   palette: NextUIThemesPalette,
   color: NormalColors | string
@@ -93,8 +81,8 @@ export const getButtonColors = (
   palette: NextUIThemesPalette,
   props: ButtonProps
 ): ButtonColorGroup => {
-  const { color, disabled, bordered, ghost, weight, flat, light } = props;
-  const border = getButtonWeight(weight);
+  const { color, disabled, bordered, ghost, borderWeight, flat, light } = props;
+  const border = getNormalWeight(borderWeight);
   const common = {
     color: palette.white,
     border: {
@@ -265,21 +253,6 @@ export const getButtonCursor = (
   };
 };
 
-export const getButtonRadius = (
-  size: NormalSizes,
-  rounded?: boolean
-): string => {
-  const radius: { [key in NormalSizes]: string } = {
-    mini: '0.4375rem',
-    small: '0.5625rem',
-    medium: '0.7375rem',
-    large: '0.8rem',
-    xlarge: '0.9rem',
-  };
-  const baseRadius = radius[size];
-  return rounded ? `calc(${baseRadius} + 10rem)` : baseRadius;
-};
-
 export const getButtonSize = (
   size: NormalSizes = 'medium',
   auto: boolean\n
Pull Request Number: 1851
Title: Fix/small issues
Base Branch: v2.2.0
Head Branch: fix/small-issues
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/1851
State: MERGED
Created At: 2023-11-02T12:17:37Z
Merged At: 2023-11-02T19:26:11Z
Participants: jrgarciadev

Description:
Closes #1761
üìù Description
Fixes:

 Input outline
 ButtonGroup radius prop
 isActive prop added to NavbarMenuItem
 Pagination custom-items example fixed, key prop added
 Collection Items are now supported by extendVariants function #1761
 Transition added to menu/listbox items
 disableAutosize prop added to Textarea, this disable the auto resize.
 Textarea styles fixed
 Textarea height style animated
 hoverOpacity key added to themes
 Button hover effect added

üí£ Is this a breaking change (Yes/No): No

üìù Additional Information

Commits:
- fix(input): visible outline\n- fix(button): button group radius prop\n- chore(navbar): menu item active status added\n- fix(docs): pagination missing keys custom items\n- fix(core): extendVariants support added to collection-based components\n- fix(theme): card body padding\n- chore(theme): transition added to menu/listbox items\n- fix(input): textarea styles fixed, new prop added\n- chore(input): textarea height animated\n- feat(button): hover opacity added\n- chore(textarea): hide scroll when the limit hasn't been reached\n- chore(docs): updated badge added to textarea\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: a8cc4056e9c7dc84aa3e2e435561407407f7c197

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 29 packages</summary>

  | Name                           | Type  |
| ------------------------------ | ----- |
| @nextui-org/theme              | Patch |
| @nextui-org/input              | Patch |
| @nextui-org/listbox            | Patch |
| @nextui-org/table              | Patch |
| @nextui-org/menu               | Patch |
| @nextui-org/tabs               | Patch |
| @nextui-org/system-rsc         | Patch |
| @nextui-org/accordion          | Patch |
| @nextui-org/autocomplete       | Patch |
| @nextui-org/badge              | Patch |
| @nextui-org/button             | Patch |
| @nextui-org/code               | Patch |
| @nextui-org/divider            | Patch |
| @nextui-org/dropdown           | Patch |
| @nextui-org/kbd                | Patch |
| @nextui-org/modal              | Patch |
| @nextui-org/navbar             | Patch |
| @nextui-org/popover            | Patch |
| @nextui-org/select             | Patch |
| @nextui-org/skeleton           | Patch |
| @nextui-org/slider             | Patch |
| @nextui-org/snippet            | Patch |
| @nextui-org/spacer             | Patch |
| @nextui-org/spinner            | Patch |
| @nextui-org/tooltip            | Patch |
| @nextui-org/react              | Patch |
| @nextui-org/system             | Patch |
| @nextui-org/aria-utils         | Patch |
| @nextui-org/framer-transitions | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/small-issues?filename=.changeset/rich-points-promise.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Finput%22%3A%20patch%0A%22%40nextui-org%2Flistbox%22%3A%20patch%0A%22%40nextui-org%2Fmenu%22%3A%20patch%0A%22%40nextui-org%2Fnavbar%22%3A%20patch%0A%22%40nextui-org%2Ftable%22%3A%20patch%0A%22%40nextui-org%2Ftabs%22%3A%20patch%0A%22%40nextui-org%2Fsystem-rsc%22%3A%20patch%0A%22%40nextui-org%2Fsystem%22%3A%20patch%0A%22%40nextui-org%2Ftheme%22%3A%20patch%0A---%0A%0AFix%2Fsmall%20issues%0A)

\n- vercel: [vc]: #Rgy/fE5YegaKySsQlqVabpcq/TLfNycAX/HL/NJ+2aA=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9DSndCRG9ZaGlSM0xrVlJVaE5kUE5iRzFiTG1xIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtc21hbGwtaXNzdWVzLW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktZG9jcy12Mi1naXQtZml4LXNtYWxsLWlzc3Vlcy1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX0seyJuYW1lIjoibmV4dHVpLXN0b3J5Ym9vay12MiIsInJvb3REaXJlY3RvcnkiOiJwYWNrYWdlcy9zdG9yeWJvb2siLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktc3Rvcnlib29rLXYyLzZBeVF1eUM5cFVuM1d0NnlNQnZGUHJXcUNxYVciLCJwcmV2aWV3VXJsIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LXNtYWxsLWlzc3Vlcy1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LXNtYWxsLWlzc3Vlcy1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/CJwBDoYhiR3LkVRUhNdPNbG1bLmq)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-small-issues-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-small-issues-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 2, 2023 7:29pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/6AyQuyC9pUn3Wt6yMBvFPrWqCqaW)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-small-issues-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-small-issues-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 2, 2023 7:29pm |


\n

Files Changed:
- .changeset/four-actors-give.md (added, 6 changes)\n  Patch: @@ -0,0 +1,6 @@
+---
+"@nextui-org/theme": patch
+---
+
+- New variable added to the theme layout `hoverOpacity`
+- Hover opacity added to button\n- .changeset/seven-buses-cry.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/theme": patch
+---
+
+Transition animation added to Menu/Listbox items\n- .changeset/shy-pans-juggle.md (added, 7 changes)\n  Patch: @@ -0,0 +1,7 @@
+---
+"@nextui-org/input": patch
+"@nextui-org/theme": patch
+---
+
+- Textarea styles fixed
+- New prop added to text area `disableAutosize` to preventthe resize\n- .changeset/wise-apples-travel.md (added, 10 changes)\n  Patch: @@ -0,0 +1,10 @@
+---
+"@nextui-org/listbox": patch
+"@nextui-org/table": patch
+"@nextui-org/menu": patch
+"@nextui-org/tabs": patch
+"@nextui-org/system-rsc": patch
+"@nextui-org/theme": patch
+---
+
+Collection-based components support on extendVariants function added, input focus-visible outline removed, collection item components "as" prop fixed\n- apps/docs/config/routes.json (modified, 3 changes)\n  Patch: @@ -346,7 +346,8 @@
           "key": "textarea",
           "title": "Textarea",
           "keywords": "textarea, multi-line text input, large text field, form control",
-          "path": "/docs/components/textarea.mdx"
+          "path": "/docs/components/textarea.mdx",
+          "updated": true
         },
         {
           "key": "tooltip",\n- apps/docs/content/components/pagination/custom-items.ts (modified, 16 changes)\n  Patch: @@ -52,6 +52,7 @@ import {ChevronIcon} from "./ChevronIcon";
 export default function App() {
   const renderItem = ({
     ref,
+    key,
     value,
     isActive,
     onNext,
@@ -61,28 +62,29 @@ export default function App() {
   }: PaginationItemRenderProps<HTMLButtonElement>) => {
     if (value === PaginationItemType.NEXT) {
       return (
-        <button className={cn(className, "bg-default-200/50 min-w-8 w-8 h-8")} onClick={onNext}>
+        <button key={key} className={cn(className, "bg-default-200/50 min-w-8 w-8 h-8")} onClick={onNext}>
           <ChevronIcon className="rotate-180" />
         </button>
       );
     }
 
     if (value === PaginationItemType.PREV) {
       return (
-        <button className={cn(className, "bg-default-200/50 min-w-8 w-8 h-8")} onClick={onPrevious}>
+        <button key={key} className={cn(className, "bg-default-200/50 min-w-8 w-8 h-8")} onClick={onPrevious}>
           <ChevronIcon />
         </button>
       );
     }
 
     if (value === PaginationItemType.DOTS) {
-      return <button className={className}>...</button>;
+      return <button key={key} className={className}>...</button>;
     }
 
     // cursor is the default item
     return (
       <button
         ref={ref}
+        key={key}
         className={cn(
           className,
           isActive &&
@@ -115,6 +117,7 @@ import {ChevronIcon} from "./ChevronIcon";
 export default function App() {
   const renderItem = ({
     ref,
+    key,
     value,
     isActive,
     onNext,
@@ -124,27 +127,28 @@ export default function App() {
   }) => {
     if (value === PaginationItemType.NEXT) {
       return (
-        <button className={cn(className, "bg-default-200/50 min-w-8 w-8 h-8")} onClick={onNext}>
+        <button key={key} className={cn(className, "bg-default-200/50 min-w-8 w-8 h-8")} onClick={onNext}>
           <ChevronIcon className="rotate-180" />
         </button>
       );
     }
 
     if (value === PaginationItemType.PREV) {
       return (
-        <button className={cn(className, "bg-default-200/50 min-w-8 w-8 h-8")} onClick={onPrevious}>
+        <button key={key} className={cn(className, "bg-default-200/50 min-w-8 w-8 h-8")} onClick={onPrevious}>
           <ChevronIcon />
         </button>
       );
     }
 
     if (value === PaginationItemType.DOTS) {
-      return <button className={className}>...</button>;
+      return <button key={key} className={className}>...</button>;
     }
 
     // cursor is the default item
     return (
       <button
+        key={key}
         ref={ref}
         className={cn(
           className,\n- apps/docs/content/components/textarea/autosize.ts (modified, 3 changes)\n  Patch: @@ -5,19 +5,16 @@ export default function App() {
     <div className="flex w-full flex-wrap md:flex-nowrap mb-6 md:mb-0 gap-4">
       <Textarea
         label="Description"
-        labelPlacement="outside"
         placeholder="Enter your description (Default autosize)"
       />
       <Textarea
         minRows={2}
         label="Description"
-        labelPlacement="outside"
         placeholder="Enter your description (Min rows 2)"
       />
       <Textarea
         maxRows={3}
         label="Description"
-        labelPlacement="outside"
         placeholder="Enter your description (Max rows 3)"
       />
     </div>\n- apps/docs/content/components/textarea/description.ts (modified, 1 changes)\n  Patch: @@ -5,7 +5,6 @@ export default function App() {
     <Textarea
       variant="faded"
       label="Description"
-      labelPlacement="outside"
       placeholder="Enter your description"
       description="Enter a concise description of your project."
       className="max-w-xs"\n- apps/docs/content/components/textarea/error-message.ts (modified, 1 changes)\n  Patch: @@ -6,7 +6,6 @@ export default function App() {
       isInvalid={true}
       variant="bordered"
       label="Description"
-      labelPlacement="outside"
       placeholder="Enter your description"
       defaultValue="NextUI is a React UI library with..."
       errorMessage="The description should be at least 255 characters long."\n- apps/docs/content/components/textarea/usage.ts (modified, 1 changes)\n  Patch: @@ -4,7 +4,6 @@ export default function App() {
   return (
     <Textarea
       label="Description"
-      labelPlacement="outside"
       placeholder="Enter your description"
       className="max-w-xs"
     />\n- apps/docs/content/docs/components/navbar.mdx (modified, 14 changes)\n  Patch: @@ -13,7 +13,7 @@ A responsive navigation header positioned on top side of your page that includes
 
 ---
 
-<CarbonAd/>
+<CarbonAd />
 
 ## Import
 
@@ -238,6 +238,11 @@ When the `NavbarItem` is active, it will have a `data-active` attribute. You can
 - **data-focus-visible**:
   When the navbar menu toggle is being focused with the keyboard. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).
 
+`NavbarMenuItem` has the following attributes on the `base` element:
+
+- **data-active**:
+  Indicates if the menu item is active. It is used when the `isActive` prop is `true`.
+
 <Spacer y={4} />
 
 ## API
@@ -305,6 +310,13 @@ When the `NavbarItem` is active, it will have a `data-active` attribute. You can
 | portalContainer | `HTMLElement`                | The container element in which the navbar menu overlay portal will be placed.                                                                | `document.body` |
 | motionProps     | [MotionProps](#motion-props) | The motion props to controle the `open` / `close` animation. This motion is only available if the `disableAnimation` prop is set to `false`. | -               |
 
+### NavbarMenuItem Props
+
+| Attribute | Type        | Description                              | Default |
+| --------- | ----------- | ---------------------------------------- | ------- |
+| children  | `ReactNode` | The children to render as the menu item. | -       |
+| isActive  | `boolean`   | Whether the menu item is active or not.  | `false` |
+
 > **Note**: The rest of the navbar components such as `NavbarMenuItem` and `NavbarBrand` have the same props as the `li` element.
 
 ### Navbar types\n- apps/docs/content/docs/components/textarea.mdx (modified, 1 changes)\n  Patch: @@ -142,6 +142,7 @@ You can use the `value` and `onValueChange` properties to control the input valu
 | isDisabled        | `boolean`                                                                                        | Whether the textarea is disabled.                                                                                        | `false`   |
 | isInvalid         | `boolean`                                                                                        | Whether the textarea is invalid.                                                                                         | `false`   |
 | validationState   | `valid` \| `invalid`                                                                             | Whether the textarea should display its "valid" or "invalid" visual styling. (**Deprecated**) use **isInvalid** instead. | -         |
+| disableAutosize   | `boolean`                                                                                        | Whether the textarea auto vertically resize should be disabled.                                                          | `false`   |
 | disableAnimation  | `boolean`                                                                                        | Whether the textarea should be animated.                                                                                 | `false`   |
 | classNames        | `Record<"base"ÔΩú "label"ÔΩú "inputWrapper"ÔΩú "input" ÔΩú "description" ÔΩú "errorMessage", string>` | Allows to set custom class names for the checkbox slots.                                                                 | -         |
 \n- apps/docs/content/docs/customization/layout.mdx (modified, 5 changes)\n  Patch: @@ -47,7 +47,7 @@ module.exports = {
     nextui({
       layout: {
         spacingUnit: 4, // in px
-        disabledOpacity: ".5", // this value is applied as opacity-[value] when the component is disabled
+        disabledOpacity: 0.5, // this value is applied as opacity-[value] when the component is disabled
         dividerWeight: "1px", // h-divider the default height applied to the divider component
         fontSize: {
           tiny: "0.75rem", // text-tiny
@@ -74,6 +74,7 @@ module.exports = {
       },
       themes: {
         light: {
+          hoverOpacity: 0.8, //  this value is applied as opacity-[value] when the component is hovered
           layout: {
             boxShadow: {
               // shadow-small
@@ -90,6 +91,7 @@ module.exports = {
         },
         dark: {
           layout: {
+            hoverOpacity: 0.9, //  this value is applied as opacity-[value] when the component is hovered
             boxShadow: {
               // shadow-small
               small:
@@ -227,6 +229,7 @@ Then you can use the CSS variables in your CSS files.
 | --------------- | ------------------------------- | ------------------------------------------------------------------------------------------- |
 | spacingUnit     | number                          | Base unit token that defines a consistent spacing scale across the components.              |
 | disabledOpacity | string, number                  | A number between 0 and 1 that is applied as opacity-[value] when the component is disabled. |
+| hoverOpacity    | string, number                  | A number between 0 and 1 that is applied as opacity-[value] when the component is hovered.  |
 | dividerWeight   | string                          | The default height applied to the divider component. We recommend to use `px` units.        |
 | fontSize        | [FontThemeUnit](#fontthemeunit) | The default font size applied across the components.                                        |
 | lineHeight      | [FontThemeUnit](#fontthemeunit) | The default line height applied across the components.                                      |\n- packages/components/input/src/textarea.tsx (modified, 51 changes)\n  Patch: @@ -1,5 +1,7 @@
+import {dataAttr} from "@nextui-org/shared-utils";
 import {forwardRef} from "@nextui-org/system";
 import {mergeProps} from "@react-aria/utils";
+import {useState} from "react";
 import TextareaAutosize from "react-textarea-autosize";
 
 import {UseInputProps, useInput} from "./use-input";
@@ -25,6 +27,11 @@ export type TextareaHeightChangeMeta = {
 };
 
 export interface TextAreaProps extends Omit<UseInputProps, OmittedInputProps> {
+  /**
+   * Whether the textarea should automatically grow vertically to accomodate content.
+   * @default false
+   */
+  disableAutosize?: boolean;
   /**
    * Minimum number of rows to show for textarea
    * @default 3
@@ -53,7 +60,15 @@ export interface TextAreaProps extends Omit<UseInputProps, OmittedInputProps> {
 
 const Textarea = forwardRef<"textarea", TextAreaProps>(
   (
-    {style, minRows = 3, maxRows = 8, cacheMeasurements = false, onHeightChange, ...otherProps},
+    {
+      style,
+      minRows = 3,
+      maxRows = 8,
+      cacheMeasurements = false,
+      disableAutosize = false,
+      onHeightChange,
+      ...otherProps
+    },
     ref,
   ) => {
     const {
@@ -72,22 +87,40 @@ const Textarea = forwardRef<"textarea", TextAreaProps>(
       getErrorMessageProps,
     } = useInput<HTMLTextAreaElement>({...otherProps, ref, isMultiline: true});
 
+    const [isLimitReached, setIsLimitReached] = useState(false);
     const labelContent = <label {...getLabelProps()}>{label}</label>;
     const inputProps = getInputProps();
 
+    const handleHeightChange = (height: number, meta: TextareaHeightChangeMeta) => {
+      if (maxRows > minRows) {
+        const limitReached = height >= maxRows * meta.rowHeight;
+
+        setIsLimitReached(limitReached);
+      }
+
+      onHeightChange?.(height, meta);
+    };
+
+    const content = disableAutosize ? (
+      <textarea {...inputProps} style={mergeProps(inputProps.style, style ?? {})} />
+    ) : (
+      <TextareaAutosize
+        {...inputProps}
+        cacheMeasurements={cacheMeasurements}
+        data-hide-scroll={dataAttr(!isLimitReached)}
+        maxRows={maxRows}
+        minRows={minRows}
+        style={mergeProps(inputProps.style as TextareaAutoSizeStyle, style ?? {})}
+        onHeightChange={handleHeightChange}
+      />
+    );
+
     return (
       <Component {...getBaseProps()}>
         {shouldLabelBeOutside ? labelContent : null}
         <div {...getInputWrapperProps()}>
           {shouldLabelBeInside ? labelContent : null}
-          <TextareaAutosize
-            {...inputProps}
-            cacheMeasurements={cacheMeasurements}
-            maxRows={maxRows}
-            minRows={minRows}
-            style={mergeProps(inputProps.style as TextareaAutoSizeStyle, style ?? {})}
-            onHeightChange={onHeightChange}
-          />
+          {content}
         </div>
         <div {...getHelperWrapperProps()}>
           {errorMessage ? (\n- packages/components/input/stories/textarea.stories.tsx (modified, 6 changes)\n  Patch: @@ -38,6 +38,11 @@ export default {
       },
       options: ["inside", "outside", "outside-left"],
     },
+    disableAutosize: {
+      control: {
+        type: "boolean",
+      },
+    },
     isDisabled: {
       control: {
         type: "boolean",
@@ -55,6 +60,7 @@ export default {
 
 const defaultProps = {
   ...input.defaultVariants,
+  disableAutosize: false,
   label: "Description",
   placeholder: "Enter your description",
 };\n- packages/components/listbox/src/use-listbox-item.ts (modified, 2 changes)\n  Patch: @@ -49,7 +49,7 @@ export function useListboxItem<T extends object>(originalProps: UseListboxItemPr
 
   const domRef = useRef<HTMLLIElement>(null);
 
-  const Component = as || originalProps.href ? "a" : "li";
+  const Component = as || (originalProps.href ? "a" : "li");
   const shouldFilterDOMProps = typeof Component === "string";
 
   const {rendered, key} = item;\n- packages/components/menu/src/use-menu-item.ts (modified, 2 changes)\n  Patch: @@ -52,7 +52,7 @@ export function useMenuItem<T extends object>(originalProps: UseMenuItemProps<T>
 
   const domRef = useRef<HTMLLIElement>(null);
 
-  const Component = as || otherProps?.href ? "a" : "li";
+  const Component = as || (otherProps?.href ? "a" : "li");
   const shouldFilterDOMProps = typeof Component === "string";
 
   const {rendered, key} = item;\n- packages/components/navbar/src/navbar-menu-item.tsx (modified, 8 changes)\n  Patch: @@ -5,11 +5,16 @@ import {clsx, dataAttr} from "@nextui-org/shared-utils";
 import {useNavbarContext} from "./navbar-context";
 
 export interface NavbarMenuItemProps extends HTMLNextUIProps<"li"> {
+  /**
+   * Whether the item is active or not.
+   * @default false
+   */
+  isActive?: boolean;
   children?: React.ReactNode;
 }
 
 const NavbarMenuItem = forwardRef<"li", NavbarMenuItemProps>((props, ref) => {
-  const {className, children, ...otherProps} = props;
+  const {className, children, isActive, ...otherProps} = props;
 
   const domRef = useDOMRef(ref);
 
@@ -21,6 +26,7 @@ const NavbarMenuItem = forwardRef<"li", NavbarMenuItemProps>((props, ref) => {
     <li
       ref={domRef}
       className={slots.menuItem?.({class: styles})}
+      data-active={dataAttr(isActive)}
       data-open={dataAttr(isMenuOpen)}
       {...otherProps}
     >\n- packages/components/table/src/table-row.tsx (modified, 2 changes)\n  Patch: @@ -28,7 +28,7 @@ const TableRow = forwardRef<"tr", TableRowProps>((props, ref) => {
   const {as, className, children, node, slots, state, isSelectable, classNames, ...otherProps} =
     props;
 
-  const Component = as || props?.href ? "a" : "tr";
+  const Component = as || (props?.href ? "a" : "tr");
   const shouldFilterDOMProps = typeof Component === "string";
 
   const domRef = useDOMRef(ref);\n- packages/components/tabs/src/tab.tsx (modified, 2 changes)\n  Patch: @@ -51,7 +51,7 @@ const Tab = forwardRef<"button", TabItemProps>((props, ref) => {
 
   const domRef = useDOMRef(ref);
 
-  const Component = as || props.href ? "a" : "button";
+  const Component = as || (props.href ? "a" : "button");
   const shouldFilterDOMProps = typeof Component === "string";
 
   const {\n- packages/core/system-rsc/src/extend-variants.js (modified, 85 changes)\n  Patch: @@ -21,6 +21,41 @@ function getSlots(variants) {
     : {};
 }
 
+function getClassNamesWithProps({props, defaultVariants, customTv, hasSlots}) {
+  const [baseProps, variantProps] = mapPropsVariants(props, customTv.variantKeys, false);
+
+  const newProps = {...defaultVariants, ...baseProps};
+
+  let classNames = {};
+
+  const result = customTv(variantProps);
+
+  // if no slots, the result is a string
+  if (!hasSlots) {
+    newProps.className = cn(result, props.className);
+  }
+  // if has slots, the result is an object with keys as slots functions
+  else {
+    Object.entries(result).forEach(([key, value]) => {
+      const slotResult = value();
+
+      if (typeof slotResult === "string") {
+        classNames[key] = slotResult;
+      }
+    });
+
+    Object.entries(props.classNames ?? {}).forEach(([key, value]) => {
+      classNames[key] = cn(classNames[key], value);
+    });
+  }
+
+  if (Object.keys(classNames).length !== 0) {
+    newProps.classNames = classNames;
+  }
+
+  return newProps;
+}
+
 export function extendVariants(BaseComponent, styles = {}, opts = {}) {
   const {variants, defaultVariants, compoundVariants} = styles || {};
 
@@ -40,40 +75,30 @@ export function extendVariants(BaseComponent, styles = {}, opts = {}) {
     },
   );
 
-  const ForwardedComponent = React.forwardRef((originalProps, ref) => {
-    const [baseProps, variantProps] = mapPropsVariants(originalProps, customTv.variantKeys, false);
-
-    const newProps = {...defaultVariants, ...baseProps, ref};
-
-    let classNames = {};
-
-    const result = React.useMemo(() => customTv(variantProps), [...Object.values(variantProps)]);
-
-    // if no slots, the result is a string
-    if (!hasSlots) {
-      newProps.className = cn(result, originalProps.className);
-    }
-    // if has slots, the result is an object with keys as slots functions
-    else {
-      Object.entries(result).forEach(([key, value]) => {
-        const slotResult = value();
+  const ForwardedComponent = React.forwardRef((originalProps = {}, ref) => {
+    const newProps = getClassNamesWithProps({
+      props: originalProps,
+      defaultVariants,
+      customTv,
+      hasSlots,
+    });
 
-        if (typeof slotResult === "string") {
-          classNames[key] = slotResult;
-        }
-      });
+    return React.createElement(BaseComponent, {...originalProps, ...newProps, ref});
+  });
 
-      Object.entries(originalProps.classNames ?? {}).forEach(([key, value]) => {
-        classNames[key] = cn(classNames[key], value);
+  // Add collection node function for collection-based components
+  if (BaseComponent.getCollectionNode) {
+    ForwardedComponent.getCollectionNode = (itemProps) => {
+      const newProps = getClassNamesWithProps({
+        props: itemProps,
+        defaultVariants,
+        customTv,
+        hasSlots,
       });
-    }
 
-    if (Object.keys(classNames).length !== 0) {
-      newProps.classNames = classNames;
-    }
-
-    return React.createElement(BaseComponent, newProps);
-  });
+      return BaseComponent.getCollectionNode({...itemProps, ...newProps});
+    };
+  }
 
   // To make dev tools show a proper name
   ForwardedComponent.displayName = `Extended(${BaseComponent.displayName || BaseComponent.name})`;\n- packages/core/system-rsc/src/types.ts (modified, 2 changes)\n  Patch: @@ -70,7 +70,7 @@ export type Merge<M, N> = N extends Record<string, unknown> ? M : Omit<M, keyof
 
 export type HTMLNextUIProps<T extends As = "div", OmitKeys extends keyof any = never> = Omit<
   PropsOf<T>,
-  "ref" | "color" | "slot" | OmitKeys
+  "ref" | "color" | "slot" | "defaultChecked" | "defaultValue" | OmitKeys
 > & {
   as?: As;
 };\n- packages/core/theme/src/components/button.ts (modified, 35 changes)\n  Patch: @@ -86,7 +86,7 @@ const button = tv({
     disableAnimation: {
       true: "!transition-none",
       false:
-        "data-[pressed=true]:scale-[0.97] transition-transform-colors motion-reduce:transition-none",
+        "data-[pressed=true]:scale-[0.97] transition-transform-colors-opacity motion-reduce:transition-none",
     },
   },
   defaultVariants: {
@@ -316,7 +316,7 @@ const button = tv({
       color: "danger",
       class: colorVariants.ghost.danger,
     },
-    // isInGroup / radius
+    // isInGroup / radius / size <-- radius not provided
     {
       isInGroup: true,
       class: "rounded-none first:rounded-s-medium last:rounded-e-medium",
@@ -341,6 +341,32 @@ const button = tv({
       isRounded: true,
       class: "rounded-none first:rounded-s-full last:rounded-e-full",
     },
+    // isInGroup / radius <-- radius provided
+    {
+      isInGroup: true,
+      radius: "none",
+      class: "rounded-none first:rounded-s-none last:rounded-e-none",
+    },
+    {
+      isInGroup: true,
+      radius: "sm",
+      class: "rounded-none first:rounded-s-small last:rounded-e-small",
+    },
+    {
+      isInGroup: true,
+      radius: "md",
+      class: "rounded-none first:rounded-s-medium last:rounded-e-medium",
+    },
+    {
+      isInGroup: true,
+      radius: "lg",
+      class: "rounded-none first:rounded-s-large last:rounded-e-large",
+    },
+    {
+      isInGroup: true,
+      radius: "full",
+      class: "rounded-none first:rounded-s-full last:rounded-e-full",
+    },
     // isInGroup / bordered / ghost
     {
       isInGroup: true,
@@ -393,6 +419,11 @@ const button = tv({
       size: "lg",
       class: "min-w-unit-12 w-unit-12 h-unit-12",
     },
+    // variant / hover
+    {
+      variant: ["solid", "faded", "flat", "bordered", "shadow"],
+      class: "data-[hover=true]:opacity-hover",
+    },
   ],
 });
 \n- packages/core/theme/src/components/card.ts (modified, 2 changes)\n  Patch: @@ -49,7 +49,7 @@ const card = tv({
       "flex",
       "flex-1",
       "w-full",
-      "p-5",
+      "p-3",
       "flex-auto",
       "flex-col",
       "place-content-inherit",\n- packages/core/theme/src/components/input.ts (modified, 36 changes)\n  Patch: @@ -39,7 +39,7 @@ const input = tv({
       "relative w-full inline-flex tap-highlight-transparent flex-row items-center shadow-sm px-3 gap-3",
     innerWrapper: "inline-flex w-full items-center h-full box-border",
     input: [
-      "w-full font-normal !bg-transparent outline-none placeholder:text-foreground-500",
+      "w-full font-normal bg-transparent !outline-none placeholder:text-foreground-500 focus-visible:outline-none",
       "data-[has-start-content=true]:ps-1.5",
       "data-[has-end-content=true]:pe-1.5",
     ],
@@ -207,12 +207,14 @@ const input = tv({
     },
     isMultiline: {
       true: {
+        label: "relative",
         inputWrapper: "!h-auto",
-        input: "resize-none py-2",
+        input: "resize-none py-2 data-[hide-scroll=true]:scrollbar-hide",
       },
     },
     disableAnimation: {
       true: {
+        input: "transition-none",
         inputWrapper: "transition-none",
         label: "transition-none",
       },
@@ -236,6 +238,7 @@ const input = tv({
     fullWidth: true,
     labelPlacement: "inside",
     isDisabled: false,
+    isMultiline: false,
     disableAnimation: false,
   },
   compoundVariants: [
@@ -573,6 +576,7 @@ const input = tv({
     },
     {
       labelPlacement: "outside",
+      isMultiline: false,
       class: {
         base: "group relative justify-end",
         label: [
@@ -627,6 +631,7 @@ const input = tv({
     },
     {
       labelPlacement: "inside",
+      isMultiline: false,
       size: "sm",
       class: {
         label: [
@@ -636,6 +641,7 @@ const input = tv({
     },
     {
       labelPlacement: "inside",
+      isMultiline: false,
       size: "md",
       class: {
         label: [
@@ -645,6 +651,7 @@ const input = tv({
     },
     {
       labelPlacement: "inside",
+      isMultiline: false,
       size: "lg",
       class: {
         label: [
@@ -657,6 +664,7 @@ const input = tv({
     {
       labelPlacement: "inside",
       variant: ["faded", "bordered"],
+      isMultiline: false,
       size: "sm",
       class: {
         label: [
@@ -667,6 +675,7 @@ const input = tv({
     {
       labelPlacement: "inside",
       variant: ["faded", "bordered"],
+      isMultiline: false,
       size: "md",
       class: {
         label: [
@@ -677,6 +686,7 @@ const input = tv({
     {
       labelPlacement: "inside",
       variant: ["faded", "bordered"],
+      isMultiline: false,
       size: "lg",
       class: {
         label: [
@@ -689,6 +699,7 @@ const input = tv({
     {
       labelPlacement: "inside",
       variant: "underlined",
+      isMultiline: false,
       size: "sm",
       class: {
         label: [
@@ -699,6 +710,7 @@ const input = tv({
     {
       labelPlacement: "inside",
       variant: "underlined",
+      isMultiline: false,
       size: "md",
       class: {
         label: [
@@ -710,6 +722,7 @@ const input = tv({
       labelPlacement: "inside",
       variant: "underlined",
       size: "lg",
+      isMultiline: false,
       class: {
         label: [
           "text-medium",
@@ -721,6 +734,7 @@ const input = tv({
     {
       labelPlacement: "outside",
       size: "sm",
+      isMultiline: false,
       class: {
         label: [
           "left-2",
@@ -733,6 +747,7 @@ const input = tv({
     {
       labelPlacement: "outside",
       size: "md",
+      isMultiline: false,
       class: {
         label: [
           "left-3",
@@ -745,6 +760,7 @@ const input = tv({
     {
       labelPlacement: "outside",
       size: "lg",
+      isMultiline: false,
       class: {
         label: [
           "left-3",
@@ -776,6 +792,22 @@ const input = tv({
         label: "group-data-[has-helper=true]:pt-4",
       },
     },
+    // isMultiline & labelPlacement="inside"
+    {
+      labelPlacement: "inside",
+      isMultiline: true,
+      class: {
+        input: "pt-0",
+      },
+    },
+    // isMultiline & !disableAnimation
+    {
+      isMultiline: true,
+      disableAnimation: false,
+      class: {
+        input: "transition-height !duration-150 motion-reduce:transition-none",
+      },
+    },
   ],
 });
 \n- packages/core/theme/src/components/menu.ts (modified, 4 changes)\n  Patch: @@ -140,7 +140,9 @@ const menuItem = tv({
     },
     disableAnimation: {
       true: {},
-      false: {},
+      false: {
+        base: "data-[hover=true]:transition-colors",
+      },
     },
   },
   defaultVariants: {\n- packages/core/theme/src/components/navbar.ts (modified, 5 changes)\n  Patch: @@ -172,7 +172,10 @@ const navbar = tv({
       "gap-2",
       "overflow-y-auto",
     ],
-    menuItem: ["text-large"],
+    menuItem: [
+      "text-large", // active
+      "data-[active=true]:font-semibold",
+    ],
   },
   variants: {
     position: {\n- packages/core/theme/src/default-layout.ts (modified, 5 changes)\n  Patch: @@ -36,9 +36,12 @@ export const defaultLayout: LayoutTheme = {
   },
 };
 
-export const lightLayout: LayoutTheme = {};
+export const lightLayout: LayoutTheme = {
+  hoverOpacity: ".8",
+};
 
 export const darkLayout: LayoutTheme = {
+  hoverOpacity: ".9",
   boxShadow: {
     small:
       "0px 0px 5px 0px rgb(0 0 0 / 0.05), 0px 2px 10px 0px rgb(0 0 0 / 0.2), inset 0px 0px 1px 0px rgb(255 255 255 / 0.15)",\n- packages/core/theme/src/plugin.ts (modified, 5 changes)\n  Patch: @@ -137,6 +137,10 @@ const resolveConfig = (
       } else {
         const layoutVariable = `--${prefix}-${key}`;
 
+        if (layoutVariable.includes("opacity") && typeof value === "number") {
+          value = value.toString().replace(/^0\./, ".");
+        }
+
         resolved.utilities[cssSelector]![layoutVariable] = value;
       }
     });
@@ -227,6 +231,7 @@ const corePlugin = (
             large: `var(--${prefix}-radius-large)`,
           },
           opacity: {
+            hover: `var(--${prefix}-hover-opacity)`,
             disabled: `var(--${prefix}-disabled-opacity)`,
           },
           borderWidth: {\n- packages/core/theme/src/types.ts (modified, 8 changes)\n  Patch: @@ -122,6 +122,14 @@ export interface LayoutTheme {
    * @default .5
    */
   disabledOpacity?: string | number;
+  /**
+   * A number between 0 and 1 that is applied as opacity-[value] when the component is hovered.
+   *
+   * format: ".[value]"
+   *
+   * @default .8
+   */
+  hoverOpacity?: string | number;
   /**
    * The default height applied to the divider component.
    * we recommend to use `px` units.\n
Pull Request Number: 3362
Title: fix: tsc error
Base Branch: canary
Head Branch: fix-tsc-error
Author: winchesHe
URL: https://github.com/nextui-org/nextui/pull/3362
State: MERGED
Created At: 2024-06-29T09:14:05Z
Merged At: 2024-07-07T04:19:09Z
Participants: winchesHe, jrgarciadev, wingkwong

Description:
Closes: #2365
Closes: #2314
Closes: #2505

üìù Description
Fix all the typescript error in project


Add a brief description

‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


New Features

Improved type safety and clarity across various components and scripts.



Bug Fixes

Addressed TypeScript compiler errors in the @nextui-org/aria-utils package.



Refactor

Updated type declarations for states and props in multiple components to improve robustness and maintainability.



Chores

Modified TypeScript configuration to allow implicit any types.

Commits:
- fix: tsc error\n- docs: changeset\n- fix: test\n- fix: test\n- fix: review problem\n- fix: review\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: fb0a09474ca7889deab07c0f272a688248257eb1

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 14 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/aria-utils   | Patch |
| @nextui-org/accordion    | Patch |
| @nextui-org/autocomplete | Patch |
| @nextui-org/date-picker  | Patch |
| @nextui-org/dropdown     | Patch |
| @nextui-org/listbox      | Patch |
| @nextui-org/menu         | Patch |
| @nextui-org/popover      | Patch |
| @nextui-org/select       | Patch |
| @nextui-org/tabs         | Patch |
| @nextui-org/tooltip      | Patch |
| @nextui-org/react        | Patch |
| @nextui-org/slider       | Patch |
| @nextui-org/snippet      | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix-tsc-error?filename=.changeset/dry-zoos-pull.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Fautocomplete%22%3A%20patch%0A%22%40nextui-org%2Fbadge%22%3A%20patch%0A%22%40nextui-org%2Fcalendar%22%3A%20patch%0A%22%40nextui-org%2Fselect%22%3A%20patch%0A%22%40nextui-org%2Faria-utils%22%3A%20patch%0A---%0A%0Afix%3A%20tsc%20error%0A)

\n- vercel: [vc]: #PjA6N0E+jgiRjYdwdMTeidsr2VJ1Y1JZ35Il9ypXNL8=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9ENXdCQTFrcWN4cjVOSldncWhIYmllWktXWG5FIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtdHNjLWVycm9yLW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktZG9jcy12Mi1naXQtZml4LXRzYy1lcnJvci1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX0seyJuYW1lIjoibmV4dHVpLXN0b3J5Ym9vay12MiIsInJvb3REaXJlY3RvcnkiOiJwYWNrYWdlcy9zdG9yeWJvb2siLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktc3Rvcnlib29rLXYyLzJmbWg3aUdHR0dMR2FjZHVLcFVDeUgzbmlXSkoiLCJwcmV2aWV3VXJsIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LXRzYy1lcnJvci1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LXRzYy1lcnJvci1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/D5wBA1kqcxr5NJWgqhHbieZKWXnE)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-tsc-error-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-tsc-error-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jul 6, 2024 10:18am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/2fmh7iGGGGLGacduKpUCyH3niWJJ)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-tsc-error-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-tsc-error-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jul 6, 2024 10:18am |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

A patch was made to address TypeScript compiler errors, and various components were updated to improve type safety and consistency. This includes adjustments in type declarations, handling of state, and component rendering logic. These changes aim to enhance reliability and maintainability, particularly in handling dynamic collections, ensuring better developer experience with fewer type-related issues.

## Changes

| Files/Groups | Change Summary |
|:-------------|:---------------|
| `.changeset/eight-worms-cough.md` | Introduced a patch for the `@nextui-org/aria-utils` package to resolve TypeScript compiler errors. |
| `packages/components/autocomplete/stories/...`<br>`packages/components/badge/stories/...`<br>`packages/components/calendar/src/...`<br>`apps/docs/scripts/update-search-meta.ts` | Updated type declarations, `handleSelectionChange` function parameters, and state initialization for `ControlledTemplate`, `Badge`, and `CalendarBase` components. |
| `packages/components/select/__tests__/select.test.tsx`<br>`apps/docs/components/code-window/code-block.tsx`<br>`apps/docs/components/sonar-pulse.tsx` | Modified rendering logic for `SelectItem` components, added TypeScript type ignores in form data logging, and changed array types from `any` to `React.ReactNode`. |
| `packages/utilities/aria-utils/src/collections/section.ts` | Excluded the "children" property from the `HTMLNextUIProps` type in `section.ts`. |
| `tsconfig.json` | Added `"noImplicitAny": false` under compiler options to allow implicit `any` types. |

## Assessment against linked issues

| Objective (Issue #)                                                              | Addressed | Explanation                                                         |
|:---------------------------------------------------------------------------------|:---------:|:-------------------------------------------------------------------|
| Fix TypeScript typing issues with `Listbox` and `Autocomplete` components (#2365, #2314, #2505) |    ‚úÖ     |                                                                    |
| Ensure no compiler errors and correct type handling in updated components (#2365, #2314, #2505) |    ‚úÖ     |                                                                    |
| Maintain proper rendering logic and state management for components (#2365, #2314) |    ‚úÖ     |                                                                    |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

```markdown
.changeset/eight-worms-cough.md: ## Short summary

The new file introduces a patch for the `@nextui-org/aria-utils` package to address TypeScript compiler errors.

## Alterations to the declarations of exported or public entities

No alterations to the declarations of exported or public entities are present in this diff.

---

packages/components/autocomplete/stories/autocomplete.stories.tsx: ## Short Summary
The change in functionality involves updating the type declaration for the `value` state in the `ControlledTemplate` component from `Key` to `Key | null` and adjusting the parameter type in the `handleSelectionChange` function accordingly in `packages/components/autocomplete/stories/autocomplete.stories.tsx`.

## Alterations to the declarations of exported or public entities
- `ControlledTemplate` component in `packages/components/autocomplete/stories/autocomplete.stories.tsx`
  - Before: `const [value, setValue] = React.useState<Key>("cat");`
  - After: `const [value, setValue] = React.useState<Key | null>("cat");`
  - Before: `const handleSelectionChange = (key: Key) => {`
  - After: `const handleSelectionChange = (key: Key | null) => {`

---

packages/components/badge/stories/badge.stories.tsx: ## Short Summary
In the given diff for `badge.stories.tsx`, the change involves modifying the way `isBordered` is accessed within the `Avatar` component, specifically by extracting and checking the `classNamesBadge` array to determine if "bottom" is included.

## Alterations to the declarations of exported or public entities
- `isBordered={args.classNames?.badge?.includes("bottom")}` in `badge.stories.tsx` ‚Üí `isBordered={isBordered}` in `badge.stories.tsx`

---

packages/components/calendar/src/calendar-base.tsx: ## Short Summary
The change in functionality involves updating the type declarations for `headers` and `calendars` variables in the `CalendarBase` function in `calendar-base.tsx` to specify them as arrays of `React.ReactNode`.

## Alterations to the declarations of exported or public entities
- `const headers = [];` in `CalendarBase` function in `calendar-base.tsx` ‚Üí `const headers: React.ReactNode[] = [];`
- `const calendars = [];` in `CalendarBase` function in `calendar-base.tsx` ‚Üí `const calendars: React.ReactNode[] = [];`

---

packages/components/select/__tests__/select.test.tsx: ### Summary

In the `select.test.tsx` file:
- Updated the rendering logic to include a `key` prop for `SelectItem` components based on item properties like `id` or `key.
- Added a comment with `@ts-ignore` directive for ignoring TypeScript errors in logging form data.

### Alterations to the declarations of exported or public entities

- `Select` component rendering logic updated:
  - From: `{(item) => <SelectItem>{item.label}</SelectItem>}`
  - To: `{(item) => <SelectItem key={item.id}>{item.label}</SelectItem>}`
- `Select` component rendering logic updated:
  - From: `<SelectSection<Item>`
  - To: `<SelectSection<(typeof itemsSectionData)[0]["children"][0]>`
- `Select` component rendering logic updated:
  - From: `{(item) => <SelectItem>{item.value}</SelectItem>}`
  - To: `{(item) => <SelectItem key={item.id}>{item.value}</SelectItem>}`
- `Select` component rendering logic updated:
  - From: `{(item) => <SelectItem>{item.value}</SelectItem>}`
  - To: `{(item) => <SelectItem key={item.key}>{item.value}</SelectItem>}`
- Form submission handling logic updated with a comment:
  - Added: `// @ts-ignore`

---

packages/utilities/aria-utils/src/collections/section.ts: ## Short Summary
The change in functionality involves modifying the `SectionProps` type in `section.ts` within the `aria-utils` package. The change includes excluding the "children" property from the `HTMLNextUIProps` type.

## Alterations to the declarations of exported or public entities
- `export type SectionProps<Type extends As = "div", T extends object = {}> = BaseSectionProps<T> & HTMLNextUIProps<Type>;` in `section.ts` in `packages/utilities/aria-utils/src/collections` ‚Üí `export type SectionProps<Type extends As = "div", T extends object = {}> = BaseSectionProps<T> & Omit<HTMLNextUIProps<Type>, "children">;

---

tsconfig.json: ## Short Summary

In `tsconfig.json`, the change includes adding `"noImplicitAny": false` under compiler options, indicating a modification to the TypeScript configuration to allow implicit any types.

## Alterations to the declarations of exported or public entities

- `tsconfig.json`:
  - Added `"noImplicitAny": false` under compiler options

---

apps/docs/components/code-window/code-block.tsx: ## Short Summary

In the `CodeBlockProps` interface in `code-block.tsx`, the type of `childTextNodes` in the `getTextNodes` function has been changed from an array of any type to an array of `React.ReactNode`.

## Alterations to the declarations of exported or public entities

- `function getTextNodes(node: any)` in `code-block.tsx`
  - Changed: `let childTextNodes = [];`
  - To: `let childTextNodes: React.ReactNode[] = [];`

---

apps/docs/components/sonar-pulse.tsx: ## Short Summary
The change in functionality involves specifying the type of the `circles` array as `React.ReactNode[]` in the `SonarPulse` component in `sonar-pulse.tsx`. This change likely enhances type safety and clarity in the code.

## Alterations to the declarations of exported or public entities
- `const circles = [];` in `SonarPulse` component in `sonar-pulse.tsx` ‚Üí `const circles: React.ReactNode[] = [];` in `SonarPulse` component in `sonar-pulse.tsx`

---

apps/docs/scripts/update-search-meta.ts: ## Update existing summary

## Short Summary
In the `update-search-meta.ts` script, the change involves specifying the type of the `result` variable as an array of `ResultType` elements instead of leaving it as an empty array.

## Alterations to the declarations of exported or public entities
- `let result = []` in function `getSearchMeta` in `update-search-meta.ts` ‚Üí `let result: ResultType[] = []` in function `getSearchMeta` in `update-search-meta.ts`
```

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR summary

**Title:** fix: tsc error  
**User:** winchesHe  
**Number:** 3362  
**URL:** [https://github.com/nextui-org/nextui/pull/3362](https://github.com/nextui-org/nextui/pull/3362)  

**Description:**  
This pull request aims to fix all the TypeScript errors in the NextUI project. The PR closes issues #2365, #2314, and #2505. A screenshot showing one of the TypeScript errors is attached. The PR does not provide a detailed description of the current or new behavior, nor does it specify if the changes are breaking.

## Objectives from linked issues

### Issue #2365: [BUG] - Listbox typing issue when using dynamic collections

- **NextUI Version:** 2.2.9
- **Description:** The Listbox and ListboxSection components report a typing issue when using dynamic collections. The error message indicates that the type `(item: ListboxItemBaseProps) => Element` is not assignable to the expected type.
- **Steps to Reproduce:** Use the Listbox and ListboxSection components with dynamic collections in a React project.
- **Expected Behavior:** The code should not produce TypeScript errors.

### Issue #2314: [BUG] - Autocomplete with dynamic AutocompleteSection and AutocompleteItem displays "Did you mean to call this expression?"

- **NextUI Version:** 2.2.9
- **Description:** Similar to issue #2365, this issue involves the Autocomplete component along with AutocompleteSection and AutocompleteItem. The TypeScript error message indicates that the type `(i: { id: number; name: string; }) => Element` is not assignable to the expected type.
- **Steps to Reproduce:** Use the Autocomplete, AutocompleteSection, and AutocompleteItem components with dynamic data in a React project.
- **Expected Behavior:** The code should not produce TypeScript errors.

### Issue #2505: [BUG] - Listbox

- **NextUI Version:** 2.2.9
- **Description:** TypeScript throws an error when using the Listbox component, stating that the type `(item: any) => JSX.Element` is not assignable to the expected type. The issue arises from the code snippet provided in the official documentation.
- **Steps to Reproduce:** Use the Listbox component with the provided example code from the official documentation.
- **Expected Behavior:** The code should work without TypeScript errors.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

## Summary of Generated Summaries

The recent updates encompass several TypeScript and React component enhancements across multiple packages and files. A patch was introduced to the `@nextui-org/aria-utils` package to resolve TypeScript compiler errors. In `autocomplete.stories.tsx`, the `ControlledTemplate` component's `value` state type was updated from `Key` to `Key | null`, and the `handleSelectionChange` function was adjusted accordingly. The `badge.stories.tsx` file saw a change in how the `isBordered` property is accessed within the `Avatar` component by checking the `classNamesBadge` array.

In `calendar-base.tsx`, type declarations for `headers` and `calendars` were specified as arrays of `React.ReactNode`. The `select.test.tsx` file was updated to include a `key` prop for `SelectItem` components and added a `@ts-ignore` directive to ignore TypeScript errors in logging form data. The `section.ts` file in the `aria-utils` package modified the `SectionProps` type to exclude the "children" property from the `HTMLNextUIProps` type.

The `tsconfig.json` file was updated to add `"noImplicitAny": false` under compiler options, allowing implicit `any` types. In `code-block.tsx`, the `childTextNodes` type in the `getTextNodes` function was changed to an array of `React.ReactNode`. Similarly, the `SonarPulse` component in `sonar-pulse.tsx` specified the type of the `circles` array as `React.ReactNode[]`. Finally, in `update-search-meta.ts`, the `result` variable type was specified as an array of `ResultType` elements.

## Alterations to the Declarations of Exported or Public Entities

### `packages/components/autocomplete/stories/autocomplete.stories.tsx`
- `ControlledTemplate` component:
  - Before: `const [value, setValue] = React.useState<Key>("cat");`
  - After: `const [value, setValue] = React.useState<Key | null>("cat");`
  - Before: `const handleSelectionChange = (key: Key) => {`
  - After: `const handleSelectionChange = (key: Key | null) => {`

### `packages/components/badge/stories/badge.stories.tsx`
- `isBordered` property:
  - Before: `isBordered={args.classNames?.badge?.includes("bottom")}`
  - After: `isBordered={isBordered}`

### `packages/components/calendar/src/calendar-base.tsx`
- `CalendarBase` function:
  - Before: `const headers = [];`
  - After: `const headers: React.ReactNode[] = [];`
  - Before: `const calendars = [];`
  - After: `const calendars: React.ReactNode[] = [];`

### `packages/components/select/__tests__/select.test.tsx`
- `Select` component rendering logic:
  - Before: `{(item) => <SelectItem>{item.label}</SelectItem>}`
  - After: `{(item) => <SelectItem key={item.id}>{item.label}</SelectItem>}`
  - Before: `<SelectSection<Item>`
  - After: `<SelectSection<(typeof itemsSectionData)[0]["children"][0]>`
  - Before: `{(item) => <SelectItem>{item.value}</SelectItem>}`
  - After: `{(item) => <SelectItem key={item.id}>{item.value}</SelectItem>}`
  - Before: `{(item) => <SelectItem>{item.value}</SelectItem>}`
  - After: `{(item) => <SelectItem key={item.key}>{item.value}</SelectItem>}`
  - Form submission handling logic:
    - Added: `// @ts-ignore`

### `packages/utilities/aria-utils/src/collections/section.ts`
- `SectionProps` type:
  - Before: `export type SectionProps<Type extends As = "div", T extends object = {}> = BaseSectionProps<T> & HTMLNextUIProps<Type>;`
  - After: `export type SectionProps<Type extends As = "div", T extends object = {}> = BaseSectionProps<T> & Omit<HTMLNextUIProps<Type>, "children">;`

### `tsconfig.json`
- Compiler options:
  - Added: `"noImplicitAny": false`

### `apps/docs/components/code-window/code-block.tsx`
- `getTextNodes` function:
  - Before: `let childTextNodes = [];`
  - After: `let childTextNodes: React.ReactNode[] = [];`

### `apps/docs/components/sonar-pulse.tsx`
- `SonarPulse` component:
  - Before: `const circles = [];`
  - After: `const circles: React.ReactNode[] = [];`

### `apps/docs/scripts/update-search-meta.ts`
- `getSearchMeta` function:
  - Before: `let result = []`
  - After: `let result: ResultType[] = []`

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 425b7d50a2899d0b5bdbb2e2f78c3187afe3846f -->
<!-- 325c677cbcf34919993143b28a2414f2f127f818 -->
<!-- fc876a69e6f708494d167c0fd1e08a142d058e03 -->
<!-- a050329a9b3d03fb31b45814b2adf359448b6a87 -->
<!-- fb0a09474ca7889deab07c0f272a688248257eb1 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/eight-worms-cough.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/aria-utils": patch
+---
+
+Fix tsc error (#2365, #2314, #2505)\n- apps/docs/components/code-window/code-block.tsx (modified, 2 changes)\n  Patch: @@ -39,7 +39,7 @@ export type CodeBlockProps = PreProps & {
  * recursively get all text nodes as an array for a given element
  */
 function getTextNodes(node: any): any[] {
-  let childTextNodes = [];
+  let childTextNodes: React.ReactNode[] = [];
 
   if (!node.hasChildNodes()) return [];
 \n- apps/docs/components/sonar-pulse.tsx (modified, 2 changes)\n  Patch: @@ -41,7 +41,7 @@ export const SonarPulse: FC<SonarPulseProps> = ({
   }, [circlesCount, color]);
 
   const renderCircles = useMemo(() => {
-    const circles = [];
+    const circles: React.ReactNode[] = [];
 
     for (let i = 1; i < circlesCount; i++) {
       circles.push(\n- apps/docs/scripts/update-search-meta.ts (modified, 4 changes)\n  Patch: @@ -54,7 +54,7 @@ async function getMDXMeta(file: string) {
 
 
   const result:ResultType[] = [];
-  const title = !!frontMatter.title ? frontMatter.title : "";
+  const title = frontMatter.title || "";
 
   result.push({
     content: title,
@@ -96,7 +96,7 @@ async function getSearchMeta(saveMode: "algolia" | "local" = "local") {
       .filter((file: any) => file.endsWith(".mdx"));
 
     for (const file of files) {
-      let result = [];
+      let result: ResultType[] = [];
 
       try {
         result = await getMDXMeta(file);\n- packages/components/autocomplete/stories/autocomplete.stories.tsx (modified, 4 changes)\n  Patch: @@ -431,9 +431,9 @@ const ItemStartContentTemplate = ({color, variant, ...args}: AutocompleteProps<A
 );
 
 const ControlledTemplate = ({color, variant, ...args}: AutocompleteProps<Animal>) => {
-  const [value, setValue] = React.useState<Key>("cat");
+  const [value, setValue] = React.useState<Key | null>("cat");
 
-  const handleSelectionChange = (key: Key) => {
+  const handleSelectionChange = (key: Key | null) => {
     setValue(key);
   };
 \n- packages/components/badge/stories/badge.stories.tsx (modified, 25 changes)\n  Patch: @@ -65,15 +65,22 @@ const defaultProps = {
   content: 5,
 };
 
-const Template = (args: BadgeProps) => (
-  <Badge {...args}>
-    <Avatar
-      isBordered={args.classNames?.badge?.includes("bottom")}
-      radius={args.shape === "rectangle" ? "lg" : "full"}
-      src="https://i.pravatar.cc/300?u=a042581f4e29026709d"
-    />
-  </Badge>
-);
+const Template = (args: BadgeProps) => {
+  const classNamesBadge = args.classNames?.badge;
+  const isBordered = Array.isArray(classNamesBadge)
+    ? classNamesBadge?.some((c) => (c as string).includes("bottom"))
+    : (classNamesBadge as string)?.includes("bottom");
+
+  return (
+    <Badge {...args}>
+      <Avatar
+        isBordered={isBordered}
+        radius={args.shape === "rectangle" ? "lg" : "full"}
+        src="https://i.pravatar.cc/300?u=a042581f4e29026709d"
+      />
+    </Badge>
+  );
+};
 
 const ShapesTemplate = (args: BadgeProps) => (
   <div className="flex gap-4 items-center">\n- packages/components/calendar/src/calendar-base.tsx (modified, 4 changes)\n  Patch: @@ -59,8 +59,8 @@ export function CalendarBase(props: CalendarBaseProps) {
 
   const currentMonth = state.visibleRange.start;
 
-  const headers = [];
-  const calendars = [];
+  const headers: React.ReactNode[] = [];
+  const calendars: React.ReactNode[] = [];
 
   for (let i = 0; i < visibleMonths; i++) {
     let d = currentMonth.add({months: i});\n- packages/components/select/__tests__/select.test.tsx (modified, 27 changes)\n  Patch: @@ -83,7 +83,7 @@ describe("Select", () => {
   it("should render correctly (dynamic)", () => {
     const wrapper = render(
       <Select aria-label="Favorite Animal" items={itemsData} label="Favorite Animal">
-        {(item) => <SelectItem>{item.label}</SelectItem>}
+        {(item) => <SelectItem key={item.id}>{item.label}</SelectItem>}
       </Select>,
     );
 
@@ -110,7 +110,7 @@ describe("Select", () => {
     const wrapper = render(
       <Select aria-label="Favorite Animal" items={itemsSectionData} label="Favorite Animal">
         {(section) => (
-          <SelectSection<Item>
+          <SelectSection<(typeof itemsSectionData)[0]["children"][0]>
             aria-label={section.title}
             items={section.children}
             title={section.title}
@@ -350,9 +350,9 @@ describe("Select", () => {
 
   it("onSelectionChange should be called with a Set of item ids upon selection", async () => {
     const itemsWithId = [
-      {id: 1, value: "penguin"},
-      {id: 2, value: "zebra"},
-      {id: 3, value: "shark"},
+      {id: "1", value: "penguin"},
+      {id: "2", value: "zebra"},
+      {id: "3", value: "shark"},
     ];
 
     const onSelectionChangeId = jest.fn();
@@ -363,7 +363,7 @@ describe("Select", () => {
         label="Test with ID"
         onSelectionChange={onSelectionChangeId}
       >
-        {(item) => <SelectItem>{item.value}</SelectItem>}
+        {(item) => <SelectItem key={item.id}>{item.value}</SelectItem>}
       </Select>,
     );
 
@@ -390,9 +390,9 @@ describe("Select", () => {
 
   it("onSelectionChange should be called with a Set of item keys upon selection", async () => {
     const itemsWithKey = [
-      {key: 1, value: "penguin"},
-      {key: 2, value: "zebra"},
-      {key: 3, value: "shark"},
+      {key: "1", value: "penguin"},
+      {key: "2", value: "zebra"},
+      {key: "3", value: "shark"},
     ];
 
     const onSelectionChangeKey = jest.fn();
@@ -403,7 +403,7 @@ describe("Select", () => {
         label="Test with Key"
         onSelectionChange={onSelectionChangeKey}
       >
-        {(item) => <SelectItem>{item.value}</SelectItem>}
+        {(item) => <SelectItem key={item.key}>{item.value}</SelectItem>}
       </Select>,
     );
 
@@ -561,6 +561,7 @@ describe("Select", () => {
           const formData = new FormData(e.target as HTMLFormElement);
 
           /* eslint-disable no-console */
+          // @ts-ignore
           console.log(JSON.stringify(Object.fromEntries(formData)));
         }}
       >
@@ -648,19 +649,19 @@ describe("Select with React Hook Form", () => {
     wrapper = render(
       <form className="flex flex-col gap-4" onSubmit={handleSubmit(onSubmit)}>
         <Select data-testid="select-1" items={itemsData} {...register("withDefaultValue")}>
-          {(item) => <SelectItem key={item.value}>{item.label}</SelectItem>}
+          {(item) => <SelectItem key={item.id}>{item.label}</SelectItem>}
         </Select>
 
         <Select data-testid="select-2" items={itemsData} {...register("withoutDefaultValue")}>
-          {(item) => <SelectItem key={item.value}>{item.label}</SelectItem>}
+          {(item) => <SelectItem key={item.id}>{item.label}</SelectItem>}
         </Select>
 
         <Select
           data-testid="select-3"
           items={itemsData}
           {...register("requiredField", {required: true})}
         >
-          {(item) => <SelectItem key={item.value}>{item.label}</SelectItem>}
+          {(item) => <SelectItem key={item.id}>{item.label}</SelectItem>}
         </Select>
 
         {errors.requiredField && <span className="text-danger">This field is required</span>}\n- packages/utilities/aria-utils/src/collections/section.ts (modified, 2 changes)\n  Patch: @@ -7,4 +7,4 @@ import {HTMLNextUIProps, As} from "@nextui-org/system";
  *
  */
 export type SectionProps<Type extends As = "div", T extends object = {}> = BaseSectionProps<T> &
-  HTMLNextUIProps<Type>;
+  Omit<HTMLNextUIProps<Type>, "children">;\n- tsconfig.json (modified, 3 changes)\n  Patch: @@ -15,7 +15,8 @@
     "esModuleInterop": true,
     "resolveJsonModule": true,
     "allowSyntheticDefaultImports": true,
-    "downlevelIteration": true
+    "downlevelIteration": true,
+    "noImplicitAny": false
   },
   "include": ["packages"],
   "exclude": ["**/node_modules", "**/dist", "**/.turbo"]\n
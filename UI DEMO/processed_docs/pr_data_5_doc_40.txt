Pull Request Number: 3726
Title: fix(autocomplete): highlight item in `AutocompleteSection` during keyboard navigation
Base Branch: canary
Head Branch: fix/eng-1314
Author: chirokas
URL: https://github.com/nextui-org/nextui/pull/3726
State: MERGED
Created At: 2024-09-07T14:28:46Z
Merged At: 2024-09-07T14:59:01Z
Participants: chirokas, wingkwong

Description:
Closes #3713
üìù Description

Add a brief description

‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

  
    
    

    20240907_210634.mp4
    
  

  

  


üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


New Features

Improved keyboard navigation for item highlighting in the AutocompleteSection, enhancing accessibility and usability.



Bug Fixes

Resolved issues with item highlighting during keyboard navigation, ensuring a smoother interaction experience.

Commits:
- fix(autocomplete): highlight item in `AutocompleteSection` during keyboard navigation\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: e4a7356e11b514cca3ba66ccf333e06f12b16e30

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 4 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/listbox      | Patch |
| @nextui-org/autocomplete | Patch |
| @nextui-org/select       | Patch |
| @nextui-org/react        | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/chirokas/nextui/new/fix/eng-1314?filename=.changeset/selfish-moose-march.md&value=---%0A%22%40nextui-org%2Flistbox%22%3A%20patch%0A---%0A%0Afix(autocomplete)%3A%20highlight%20item%20in%20%60AutocompleteSection%60%20during%20keyboard%20navigation%0A)

\n- vercel: @chirokas is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%22e4a7356e11b514cca3ba66ccf333e06f12b16e30%22%7D%2C%22id%22%3A%22QmScUV4UdNpNYh5hNojNh6p3XDFPyu7JYUq1HB5EGsW6VC%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A3726%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

This change introduces a patch for the `@nextui-org/listbox` package, focusing on the `AutocompleteSection` component's item highlighting during keyboard navigation. The modifications enhance the highlighting logic for better accessibility and usability, particularly for keyboard users. The `isHighlighted` state logic in the `useListboxItem` function has been simplified to improve interaction feedback.

## Changes

| File                                      | Change Summary                                                                                      |
|-------------------------------------------|----------------------------------------------------------------------------------------------------|
| `packages/components/listbox/src/use-listbox-item.ts` | Modified the logic for determining `isHighlighted` state to simplify the implementation while retaining original conditions. |

## Assessment against linked issues

| Objective                                      | Addressed | Explanation                          |
|------------------------------------------------|-----------|--------------------------------------|
| Highlight item on key events (#3713)          | ‚úÖ        |                                      |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

```
.changeset/popular-baboons-pull.md: ## AI-generated summary of changes

This new file introduces a patch for the `@nextui-org/listbox` package, specifically addressing an issue related to item highlighting within the `AutocompleteSection` component during keyboard navigation. The change aims to enhance the user experience by ensuring that items are correctly highlighted as users navigate through them using the keyboard. This improvement is crucial for accessibility and usability, particularly for users who rely on keyboard navigation. The patch likely modifies the event handling logic to ensure that the highlighting state is accurately updated in response to keyboard events, thereby providing a smoother and more intuitive interaction with the autocomplete functionality.

Additionally, the logic determining the `isHighlighted` state within the `useListboxItem` function has been modified. The previous implementation utilized a `useMemo` hook to compute `isHighlighted` based on several conditions. The new implementation simplifies this logic by directly assigning the result of the conditional checks to `isHighlighted`, retaining the original conditions but adding an additional check for `isFocused` when `isFocusVisible` is false. This change could impact the user experience in terms of item selection and interaction feedback in the listbox component.

## Alterations to the declarations of exported or public entities

- `export function useListboxItem<T extends object>(originalProps: UseListboxItemProps)` in `packages/components/listbox/src/use-listbox-item.ts` ‚Üí No changes to the function signature.
```

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR Summary

The pull request titled "fix(autocomplete): highlight item in `AutocompleteSection` during keyboard navigation" was created by the user chirokas and is identified as PR number 3726. This PR addresses an issue related to the `AutocompleteSection` component in the NextUI library, specifically focusing on the keyboard navigation experience. The current behavior of the component does not highlight items when the user navigates through the list using the up and down arrow keys. This issue was reported in a linked bug report (#3713). The new behavior introduced by this PR ensures that items in the `AutocompleteSection` are highlighted appropriately during keyboard navigation, enhancing the user experience. The PR includes a visual demonstration of the new behavior, showcasing the highlighting functionality when navigating with the keyboard. The author has indicated that this change does not introduce any breaking changes for existing users of NextUI.

## Objectives from Linked Issues

The linked issue, titled "[BUG] - Autocomplete - highlight item on key events," outlines a specific problem with the `AutocompleteSection` component in the NextUI library, version @nextui-org/autocomplete@2.1.5. The issue describes that when users interact with the `AutocompleteSection` by pressing the down arrow key, the items in the list do not receive visual highlighting, which can lead to confusion. Although the second item can still be selected by pressing the enter key, the lack of highlighting during navigation diminishes the usability of the component. The expected behavior, as stated in the issue, is for the items to be highlighted appropriately when navigating with the keyboard. This enhancement aims to improve the overall functionality and user experience of the autocomplete feature, ensuring that users can easily identify which item is currently selected while navigating through the list.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- e4a7356e11b514cca3ba66ccf333e06f12b16e30 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>



<!-- tips_end -->\n- vercel: [vc]: #zTG7fAfhrKSpzg3+m2Je3pg805yrU4IvF3pGlU0mxZU=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvNkpheThHSzFUV2hhUmlMdVB4dFltUW1YazJBRiIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWNoaXJva2FzLWZpeC1lbmctMTMxNC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZm9yay1jaGlyb2thcy1maXgtZW5nLTEzMTQtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/6Jay8GK1TWhaRiLuPxtYmQmXk2AF)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-chirokas-fix-eng-1314-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-chirokas-fix-eng-1314-nextui-org.vercel.app?via=pr-comment-feedback-link) | Sep 7, 2024 2:51pm |

\n

Files Changed:
- .changeset/popular-baboons-pull.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/listbox": patch
+---
+
+Fix item highlighting in `AutocompleteSection` during keyboard navigation (#3713)\n- packages/components/listbox/src/use-listbox-item.ts (modified, 10 changes)\n  Patch: @@ -109,13 +109,9 @@ export function useListboxItem<T extends object>(originalProps: UseListboxItemPr
     itemProps = removeEvents(itemProps);
   }
 
-  const isHighlighted = useMemo(() => {
-    if (shouldHighlightOnFocus && isFocused) {
-      return true;
-    }
-
-    return isMobile ? isHovered || isPressed : isHovered;
-  }, [isHovered, isPressed, isFocused, isMobile, shouldHighlightOnFocus]);
+  const isHighlighted =
+    (shouldHighlightOnFocus && isFocused) ||
+    (isMobile ? isHovered || isPressed : isHovered || (isFocused && !isFocusVisible));
 
   const getItemProps: PropGetter = (props = {}) => ({
     ref: domRef,\n
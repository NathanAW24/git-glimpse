Pull Request Number: 2686
Title: docs: Calendar & RangeCalendar
Base Branch: v.2.3.0
Head Branch: docs/eng-593
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/2686
State: MERGED
Created At: 2024-04-11T11:51:35Z
Merged At: 2024-04-14T14:26:45Z
Participants: wingkwong, jrgarciadev

Description:
Closes # 
üìù Description

add documentation for Calendar & RangeCalendar component

‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Commits:
- feat(docs): add calendar in routes.json\n- feat(docs): refresh search-meta.json\n- feat(docs): add calendar examples\n- feat(docs): calendar content\n- feat(deps): add @internationalized/date\n- refactor(docs): remove div wrapper\n- feat(docs): add calendar doc\n- fix(docs): calendar presets\n- fix(docs): preset styles\n- chore(docs): remove calendar iframe examples\n- refactor(docs): discard iframe in calendar doc\n- fix(docs): incorrect DateValue import\n- feat(docs): include @internationalized/date in live demo scope\n- feat(docs): add presets description\n- chore(docs): update search-meta.json\n- fix(docs): remove DateValue\n- feat(docs): include reactAriaI18n in react live demo scope\n- fix(docs): presets import issue\n- chore(docs): update search-meta.json\n- feat(docs): add api reference for nextui provider\n- fix(calendar): ixExpanded  typo\n- feat(docs): add missing props & event\n- chore(docs): update search-meta.json\n- chore(docs): update route keywords\n- chore(docs): revise value style add defaultFocusedValue\n- chore(docs): remove padding and revise gap\n- feat(docs): range calendar\n- chore(docs): update search-meta.json\n- feat(docs): add reactAriaHook\n- fix(docs): incorrect component and add storybook and reactAriaHook\n- fix(docs): incorrect import path\n- chore(docs): reorder range calendar position in sidebar\n- chore(Docs): remove custom styles & implementation\n- chore(docs): remove last item from accessibility\n- chore(docs): onValueChange -> onChange\n- Merge branch 'v.2.3.0' into docs/eng-593\n- feat(docs): add ts example for range calendar\n- chore(docs): remove unwanted content in range calendar\n- feat(docs): add ts examples for calendar\n- chore(docs): update import path\n- chore(docs): update import path\n- Merge branch 'v.2.3.0' of github.com:nextui-org/nextui into docs/eng-593\n- chore(docs): styles adjusted, routes updated\n

Labels:


Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-593/calendar-documentation">ENG-593 Calendar Documentation</a></p>\n- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: 2b79f5f53f1687bfe3759274dfe19d0ac8277a32

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/nextui-org/nextui/new/docs/eng-593?filename=.changeset/light-otters-hide.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A---%0A%0Adocs%3A%20Calendar%20%26%20RangeCalendar%0A)

\n- vercel: [vc]: #srO2F3USKG8fnRK7NzRQIMztd9kFAKNxjBG3bSQcAdM=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9HQ3h0QXA3WHJ5d2NxSGNGUVlWVjZKMjVMU1ZOIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1kb2NzLWVuZy01OTMtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1kb2NzLXYyLWdpdC1kb2NzLWVuZy01OTMtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19LHsibmFtZSI6Im5leHR1aS1zdG9yeWJvb2stdjIiLCJyb290RGlyZWN0b3J5IjoicGFja2FnZXMvc3Rvcnlib29rIiwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi9Gbkt2N3VSR1NzcEJHNUdOdGNyZnRuYmpnN3prIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWRvY3MtZW5nLTU5My1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZG9jcy1lbmctNTkzLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/GCxtAp7XrywcqHcFQYVV6J25LSVN)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-docs-eng-593-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-docs-eng-593-nextui-org.vercel.app?via=pr-comment-feedback-link) | Apr 14, 2024 2:31pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/FnKv7uRGSspBG5GNtcrftnbjg7zk)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-docs-eng-593-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-docs-eng-593-nextui-org.vercel.app?via=pr-comment-feedback-link) | Apr 14, 2024 2:31pm |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: skip review by coderabbit.ai -->

> [!IMPORTANT]
> ## Auto Review Skipped
> 
> Auto reviews are disabled on base/target branches other than the default branch. Please add the base/target branch pattern to the list of additional branches to be reviewed in the settings.
> 
> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository.
> 
> To trigger a single review, invoke the `@coderabbitai review` command.
> 

<!-- end of auto-generated comment: skip review by coderabbit.ai --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- jrgarciadev: @wingkwong please remove this section because we don't provide an example of custom styles yet

![CleanShot 2024-04-13 at 11 16 36](https://github.com/nextui-org/nextui/assets/30373425/ab3ed210-b776-45f9-b9b5-07df2b25295b)


Could you please add the typescript variations as well? only for those examples that have the `DateValue`

e.g

```
const PresetsTemplate = (args: CalendarProps) => {
  let defaultDate = today(getLocalTimeZone());
  let [value, setValue] = React.useState<DateValue>(defaultDate);
  let {locale} = useLocale();

  let now = today(getLocalTimeZone());
  let nextWeek = startOfWeek(now.add({weeks: 1}), locale);
  let nextMonth = startOfMonth(now.add({months: 1}));

....
```\n- jrgarciadev: @wingkwong remove
![CleanShot 2024-04-13 at 11 19 45](https://github.com/nextui-org/nextui/assets/30373425/ac3e5bb5-3e5a-4c34-b627-90b499fa0c19)

\n- jrgarciadev: @wingkwong this one is called `onChange`

![CleanShot 2024-04-13 at 11 20 52](https://github.com/nextui-org/nextui/assets/30373425/64969f5d-a2c8-4a38-bb2b-01797a130f47)
\n- jrgarciadev: @wingkwong Please check this example, I updated the storybook so maybe it is outdated

RangeCalendar - Presets

![CleanShot 2024-04-13 at 11 23 23](https://github.com/nextui-org/nextui/assets/30373425/b9af5a6d-76c6-4a28-b94d-c03ba2f74bfd)
\n

Files Changed:
- apps/docs/components/docs/components/code-demo/react-live-demo.tsx (modified, 4 changes)\n  Patch: @@ -2,6 +2,8 @@ import React from "react";
 import {LivePreview, LiveProvider, LiveError} from "react-live";
 import {clsx} from "@nextui-org/shared-utils";
 import * as Components from "@nextui-org/react";
+import * as intlDateUtils from "@internationalized/date";
+import * as reactAriaI18n from "@react-aria/i18n";
 
 import {BgGridContainer} from "@/components/bg-grid-container";
 import {GradientBox, GradientBoxProps} from "@/components/gradient-box";
@@ -19,6 +21,8 @@ export interface ReactLiveDemoProps {
 
 export const scope = {
   ...Components,
+  ...intlDateUtils,
+  ...reactAriaI18n,
 } as Record<string, unknown>;
 
 export const ReactLiveDemo: React.FC<ReactLiveDemoProps> = ({\n- apps/docs/config/routes.json (modified, 55 changes)\n  Patch: @@ -28,8 +28,7 @@
           "key": "routing",
           "title": "Routing",
           "keywords": "client side routing, routing, browser routing, nextui, next.js router, react router, remix router",
-          "path": "/docs/guide/routing.mdx",
-          "newPost": true
+          "path": "/docs/guide/routing.mdx"
         },
         {
           "key": "upgrade-to-v2",
@@ -141,8 +140,7 @@
           "key": "autocomplete",
           "title": "Autocomplete",
           "keywords": "autocomplete, auto suggest, search, typeahead",
-          "path": "/docs/components/autocomplete.mdx",
-          "newPost": true
+          "path": "/docs/components/autocomplete.mdx"
         },
         {
           "key": "badge",
@@ -160,8 +158,7 @@
           "key": "breadcrumbs",
           "title": "Breadcrumbs",
           "keywords": "breadcrumbs, navigation, path, trail, location",
-          "path": "/docs/components/breadcrumbs.mdx",
-          "newPost": true
+          "path": "/docs/components/breadcrumbs.mdx"
         },
         {
           "key": "card",
@@ -181,6 +178,20 @@
           "keywords": "checkbox group, binary choice, selection control, toggle",
           "path": "/docs/components/checkbox-group.mdx"
         },
+        {
+          "key": "calendar",
+          "title": "Calendar",
+          "keywords": "calendar, date picker, month picker, year picker",
+          "path": "/docs/components/calendar.mdx",
+          "newPost": true
+        },
+        {
+          "key": "range-calendar",
+          "title": "Range Calendar",
+          "keywords": "range calendar, date picker, month picker, year picker",
+          "path": "/docs/components/range-calendar.mdx",
+          "newPost": true
+        },
         {
           "key": "chip",
           "title": "Chip",
@@ -209,8 +220,7 @@
           "key": "dropdown",
           "title": "Dropdown",
           "keywords": "dropdown, menu, selection, option list",
-          "path": "/docs/components/dropdown.mdx",
-          "updated": true
+          "path": "/docs/components/dropdown.mdx"
         },
         {
           "key": "image",
@@ -234,15 +244,13 @@
           "key": "link",
           "title": "Link",
           "keywords": "link, navigation, href, web page connection",
-          "path": "/docs/components/link.mdx",
-          "updated": true
+          "path": "/docs/components/link.mdx"
         },
         {
           "key": "listbox",
           "title": "Listbox",
           "keywords": "listbox, selection, option list, multiple choice",
-          "path": "/docs/components/listbox.mdx",
-          "updated": true
+          "path": "/docs/components/listbox.mdx"
         },
         {
           "key": "modal",
@@ -326,8 +334,7 @@
           "key": "slider",
           "title": "Slider",
           "keywords": "slider, range input, value selector, sliding control",
-          "path": "/docs/components/slider.mdx",
-          "newPost": true
+          "path": "/docs/components/slider.mdx"
         },
         {
           "key": "table",
@@ -339,15 +346,13 @@
           "key": "tabs",
           "title": "Tabs",
           "keywords": "tabs, section navigation, categorized content, tabbed interface",
-          "path": "/docs/components/tabs.mdx",
-          "updated": true
+          "path": "/docs/components/tabs.mdx"
         },
         {
           "key": "textarea",
           "title": "Textarea",
           "keywords": "textarea, multi-line text input, large text field, form control",
-          "path": "/docs/components/textarea.mdx",
-          "updated": true
+          "path": "/docs/components/textarea.mdx"
         },
         {
           "key": "tooltip",
@@ -362,6 +367,20 @@
           "path": "/docs/components/user.mdx"
         }
       ]
+    },
+    {
+      "key": "api-references",
+      "title": "API References",
+      "defaultOpen": true,
+      "keywords": "api references, nextui, api",
+      "routes": [
+        {
+          "key": "nextui-provider",
+          "title": "NextUI Provider",
+          "keywords": "api references, nextui, api, nextui provider",
+          "path": "/docs/api-references/nextui-provider.mdx"
+        }
+      ]
     }
   ],
   "mobileRoutes": [\n- apps/docs/config/search-meta.json (modified, 2475 changes)\n  Patch: No patch available\n- apps/docs/content/components/calendar/controlled-focused-value.ts (added, 43 changes)\n  Patch: @@ -0,0 +1,43 @@
+const App = `import {Calendar} from "@nextui-org/react";
+import {today, getLocalTimeZone} from "@internationalized/date";
+
+export default function App() {
+  let defaultDate = today(getLocalTimeZone());
+  let [focusedDate, setFocusedDate] = React.useState(defaultDate);
+
+  return (
+    <Calendar
+      aria-label="Date (Controlled Focused Value)"
+      focusedValue={focusedDate}
+      value={defaultDate}
+      onFocusChange={setFocusedDate}
+    />
+  );
+}`;
+
+const AppTs = `import {Calendar} from "@nextui-org/react";
+import type {DateValue} from "@react-types/calendar";
+import {today, getLocalTimeZone} from "@internationalized/date";
+
+export default function App() {
+  let defaultDate = today(getLocalTimeZone());
+  let [focusedDate, setFocusedDate] = React.useState<DateValue>(defaultDate);
+
+  return (
+    <Calendar
+      aria-label="Date (Controlled Focused Value)"
+      focusedValue={focusedDate}
+      value={defaultDate}
+      onFocusChange={setFocusedDate}
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+  "/App.tsx": AppTs,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/calendar/controlled.ts (added, 39 changes)\n  Patch: @@ -0,0 +1,39 @@
+const App = `import {Calendar} from "@nextui-org/react";
+import {parseDate} from "@internationalized/date";
+
+export default function App() {
+  let [value, setValue] = React.useState(parseDate("2024-03-07"));
+
+  return (
+    <Calendar 
+      aria-label="Date (Controlled)" 
+      value={value} 
+      onChange={setValue} 
+    />
+  );
+}`;
+
+const AppTs = `import {Calendar} from "@nextui-org/react";
+import type {DateValue} from "@react-types/calendar";
+import {parseDate} from "@internationalized/date";
+
+export default function App() {
+  let [value, setValue] = React.useState<DateValue>(parseDate("2024-03-07"));
+
+  return (
+    <Calendar 
+      aria-label="Date (Controlled)" 
+      value={value} 
+      onChange={setValue} 
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+  "/App.tsx": AppTs,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/calendar/disabled.ts (added, 15 changes)\n  Patch: @@ -0,0 +1,15 @@
+const App = `import {Calendar} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <Calendar aria-label="Date (Disabled)" isDisabled />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/calendar/index.ts (added, 31 changes)\n  Patch: @@ -0,0 +1,31 @@
+import usage from "./usage";
+import disabled from "./disabled";
+import readonly from "./read-only";
+import controlled from "./controlled";
+import minDateValue from "./min-date-value";
+import maxDateValue from "./max-date-value";
+import unavailableDates from "./unavailable-dates";
+import controlledFocusedValue from "./controlled-focused-value";
+import invalidDate from "./invalid-date";
+import withMonthAndYearPicker from "./with-month-and-year-picker";
+import internationalCalendars from "./international-calendars";
+import visibleMonths from "./visible-months";
+import pageBehaviour from "./page-behaviour";
+import presets from "./presets";
+
+export const calendarContent = {
+  usage,
+  disabled,
+  readonly,
+  controlled,
+  minDateValue,
+  maxDateValue,
+  unavailableDates,
+  controlledFocusedValue,
+  invalidDate,
+  withMonthAndYearPicker,
+  internationalCalendars,
+  visibleMonths,
+  pageBehaviour,
+  presets,
+};\n- apps/docs/content/components/calendar/international-calendars.ts (added, 18 changes)\n  Patch: @@ -0,0 +1,18 @@
+const App = `import {Calendar} from "@nextui-org/react";
+import {I18nProvider} from "@react-aria/i18n";
+
+export default function App() {
+  return (
+    <I18nProvider locale="zh-CN-u-ca-chinese">
+      <Calendar aria-label="Date (International Calendar)" />
+    </I18nProvider>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/calendar/invalid-date.ts (added, 51 changes)\n  Patch: @@ -0,0 +1,51 @@
+const App = `import {Calendar} from "@nextui-org/react";
+import {today, getLocalTimeZone, isWeekend} from "@internationalized/date";
+import {useLocale} from "@react-aria/i18n";
+
+
+export default function App() {
+  let [date, setDate] = React.useState(today(getLocalTimeZone()));
+  let {locale} = useLocale();
+  let isInvalid = isWeekend(date, locale);
+
+  return (
+    <Calendar
+      aria-label="Date (Invalid on weekends)"
+      errorMessage={isInvalid ? "We are closed on weekends" : undefined}
+      isInvalid={isInvalid}
+      value={date}
+      onChange={setDate}
+    />
+  );
+}`;
+
+const AppTs = `import {Calendar} from "@nextui-org/react";
+import type {DateValue} from "@react-types/calendar";
+import {today, getLocalTimeZone, isWeekend} from "@internationalized/date";
+import {useLocale} from "@react-aria/i18n";
+
+
+export default function App() {
+  let [date, setDate] = React.useState<DateValue>(today(getLocalTimeZone()));
+  let {locale} = useLocale();
+  let isInvalid = isWeekend(date, locale);
+
+  return (
+    <Calendar
+      aria-label="Date (Invalid on weekends)"
+      errorMessage={isInvalid ? "We are closed on weekends" : undefined}
+      isInvalid={isInvalid}
+      value={date}
+      onChange={setDate}
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+  "/App.tsx": AppTs,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/calendar/max-date-value.ts (added, 20 changes)\n  Patch: @@ -0,0 +1,20 @@
+const App = `import {Calendar} from "@nextui-org/react";
+import {today, getLocalTimeZone} from "@internationalized/date";
+
+export default function App() {
+  return (
+    <Calendar
+      aria-label="Date (Max Date Value)"
+      defaultValue={today(getLocalTimeZone())}
+      maxValue={today(getLocalTimeZone())}
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/calendar/min-date-value.ts (added, 20 changes)\n  Patch: @@ -0,0 +1,20 @@
+const App = `import {Calendar} from "@nextui-org/react";
+import {today, getLocalTimeZone} from "@internationalized/date";
+
+export default function App() {
+  return (
+    <Calendar
+      aria-label="Date (Min Date Value)"
+      defaultValue={today(getLocalTimeZone())}
+      minValue={today(getLocalTimeZone())}
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/calendar/page-behaviour.ts (added, 18 changes)\n  Patch: @@ -0,0 +1,18 @@
+const App = `import {Calendar} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <Calendar 
+      aria-label="Date (Page Behaviour)" 
+      pageBehavior="single" 
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/calendar/presets.ts (added, 185 changes)\n  Patch: @@ -0,0 +1,185 @@
+const App = `import {Calendar, Radio, RadioGroup, Button, ButtonGroup, cn} from "@nextui-org/react";
+import {today, getLocalTimeZone, startOfWeek, startOfMonth} from "@internationalized/date";
+import {useLocale} from "@react-aria/i18n";
+
+export default function App() {
+  let defaultDate = today(getLocalTimeZone());
+  let [value, setValue] = React.useState(defaultDate);
+  let {locale} = useLocale();
+
+  let now = today(getLocalTimeZone());
+  let nextWeek = startOfWeek(now.add({weeks: 1}), locale);
+  let nextMonth = startOfMonth(now.add({months: 1}));
+
+  const CustomRadio = (props) => {
+    const {children, ...otherProps} = props;
+
+    return (
+      <Radio
+        {...otherProps}
+        classNames={{
+          base: cn(
+            "flex-none m-0 h-8 bg-content1 hover:bg-content2 items-center justify-between",
+            "cursor-pointer rounded-full border-2 border-default-200/60",
+            "data-[selected=true]:border-primary",
+          ),
+          label: "text-tiny text-default-500",
+          labelWrapper: "px-1 m-0",
+          wrapper: "hidden",
+        }}
+      >
+        {children}
+      </Radio>
+    );
+  };
+
+  return (
+    <div className="flex flex-col gap-4">
+      <Calendar
+        aria-label="Date (Presets)"
+        bottomContent={
+          <RadioGroup
+            aria-label="Date precision"
+            classNames={{
+              base: "w-full pb-2",
+              wrapper: "-my-2.5 py-2.5 px-3 gap-1 flex-nowrap max-w-[280px] overflow-scroll",
+            }}
+            defaultValue="exact_dates"
+            orientation="horizontal"
+          >
+            <CustomRadio value="exact_dates">Exact dates</CustomRadio>
+            <CustomRadio value="1_day">1 day</CustomRadio>
+            <CustomRadio value="2_days">2 days</CustomRadio>
+            <CustomRadio value="3_days">3 days</CustomRadio>
+            <CustomRadio value="7_days">7 days</CustomRadio>
+            <CustomRadio value="14_days">14 days</CustomRadio>
+          </RadioGroup>
+        }
+        classNames={{
+          content: "w-full",
+        }}
+        focusedValue={value}
+        nextButtonProps={{
+          variant: "bordered",
+        }}
+        prevButtonProps={{
+          variant: "bordered",
+        }}
+        topContent={
+          <ButtonGroup
+            fullWidth
+            className="px-3 pb-2 pt-3 bg-content1 [&>button]:text-default-500 [&>button]:border-default-200/60"
+            radius="full"
+            size="sm"
+            variant="bordered"
+          >
+            <Button onPress={() => setValue(now)}>Today</Button>
+            <Button onPress={() => setValue(nextWeek)}>Next week</Button>
+            <Button onPress={() => setValue(nextMonth)}>Next month</Button>
+          </ButtonGroup>
+        }
+        value={value}
+        onChange={setValue}
+        onFocusChange={setValue}
+      />
+    </div>
+  );
+}`;
+
+const AppTs = `import {Calendar, Radio, RadioGroup, Button, ButtonGroup, cn} from "@nextui-org/react";
+import type {DateValue} from "@react-types/calendar";
+import {today, getLocalTimeZone, startOfWeek, startOfMonth} from "@internationalized/date";
+import {useLocale} from "@react-aria/i18n";
+
+export default function App() {
+  let defaultDate = today(getLocalTimeZone());
+  let [value, setValue] = React.useState<DateValue>(defaultDate);
+  let {locale} = useLocale();
+
+  let now = today(getLocalTimeZone());
+  let nextWeek = startOfWeek(now.add({weeks: 1}), locale);
+  let nextMonth = startOfMonth(now.add({months: 1}));
+
+  const CustomRadio = (props) => {
+    const {children, ...otherProps} = props;
+
+    return (
+      <Radio
+        {...otherProps}
+        classNames={{
+          base: cn(
+            "flex-none m-0 h-8 bg-content1 hover:bg-content2 items-center justify-between",
+            "cursor-pointer rounded-full border-2 border-default-200/60",
+            "data-[selected=true]:border-primary",
+          ),
+          label: "text-tiny text-default-500",
+          labelWrapper: "px-1 m-0",
+          wrapper: "hidden",
+        }}
+      >
+        {children}
+      </Radio>
+    );
+  };
+
+  return (
+    <div className="flex flex-col gap-4">
+      <Calendar
+        aria-label="Date (Presets)"
+        bottomContent={
+          <RadioGroup
+            aria-label="Date precision"
+            classNames={{
+              base: "w-full pb-2",
+              wrapper: "-my-2.5 py-2.5 px-3 gap-1 flex-nowrap max-w-[280px] overflow-scroll",
+            }}
+            defaultValue="exact_dates"
+            orientation="horizontal"
+          >
+            <CustomRadio value="exact_dates">Exact dates</CustomRadio>
+            <CustomRadio value="1_day">1 day</CustomRadio>
+            <CustomRadio value="2_days">2 days</CustomRadio>
+            <CustomRadio value="3_days">3 days</CustomRadio>
+            <CustomRadio value="7_days">7 days</CustomRadio>
+            <CustomRadio value="14_days">14 days</CustomRadio>
+          </RadioGroup>
+        }
+        classNames={{
+          content: "w-full",
+        }}
+        focusedValue={value}
+        nextButtonProps={{
+          variant: "bordered",
+        }}
+        prevButtonProps={{
+          variant: "bordered",
+        }}
+        topContent={
+          <ButtonGroup
+            fullWidth
+            className="px-3 pb-2 pt-3 bg-content1 [&>button]:text-default-500 [&>button]:border-default-200/60"
+            radius="full"
+            size="sm"
+            variant="bordered"
+          >
+            <Button onPress={() => setValue(now)}>Today</Button>
+            <Button onPress={() => setValue(nextWeek)}>Next week</Button>
+            <Button onPress={() => setValue(nextMonth)}>Next month</Button>
+          </ButtonGroup>
+        }
+        value={value}
+        onChange={setValue}
+        onFocusChange={setValue}
+      />
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+  "/App.tsx": AppTs,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/calendar/read-only.ts (added, 20 changes)\n  Patch: @@ -0,0 +1,20 @@
+const App = `import {Calendar} from "@nextui-org/react";
+import {today, getLocalTimeZone} from "@internationalized/date";
+
+export default function App() {
+  return (
+    <Calendar 
+      aria-label="Date (Read Only)" 
+      value={today(getLocalTimeZone())} 
+      isReadOnly 
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/calendar/unavailable-dates.ts (added, 37 changes)\n  Patch: @@ -0,0 +1,37 @@
+const App = `import {Calendar} from "@nextui-org/react";
+import {today, getLocalTimeZone, isWeekend} from "@internationalized/date";
+import {useLocale} from "@react-aria/i18n";
+
+
+export default function App() {
+  let now = today(getLocalTimeZone());
+
+  let disabledRanges = [
+    [now, now.add({days: 5})],
+    [now.add({days: 14}), now.add({days: 16})],
+    [now.add({days: 23}), now.add({days: 24})],
+  ];
+
+  let {locale} = useLocale();
+
+  let isDateUnavailable = (date) =>
+    isWeekend(date, locale) ||
+    disabledRanges.some(
+      (interval) => date.compare(interval[0]) >= 0 && date.compare(interval[1]) <= 0,
+    );
+
+  return (
+    <Calendar
+      aria-label="Date (Unavailable)"
+      isDateUnavailable={isDateUnavailable} 
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/calendar/usage.ts (added, 19 changes)\n  Patch: @@ -0,0 +1,19 @@
+const App = `import {Calendar} from "@nextui-org/react";
+import {parseDate} from '@internationalized/date';
+
+export default function App() {
+  return (
+    <div className="flex gap-x-4">
+      <Calendar aria-label="Date (No Selection)" />
+      <Calendar aria-label="Date (Uncontrolled)" defaultValue={parseDate("2020-02-03")} />
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/calendar/visible-months.ts (added, 18 changes)\n  Patch: @@ -0,0 +1,18 @@
+const App = `import {Calendar} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <Calendar 
+      aria-label="Date (Visible Month)" 
+      visibleMonths={3} 
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/calendar/with-month-and-year-picker.ts (added, 18 changes)\n  Patch: @@ -0,0 +1,18 @@
+const App = `import {Calendar} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <Calendar 
+      aria-label="Date (Show Month and Year Picker)" 
+      showMonthAndYearPickers 
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/range-calendar/controlled-focused-value.ts (added, 23 changes)\n  Patch: @@ -0,0 +1,23 @@
+const App = `import {RangeCalendar} from "@nextui-org/react";
+import {today, getLocalTimeZone} from "@internationalized/date";
+
+export default function App() {
+  let defaultDate = today(getLocalTimeZone());
+  let [focusedDate, setFocusedDate] = React.useState(defaultDate);
+
+  return (
+    <RangeCalendar
+      aria-label="Date (Controlled Focused Value)"
+      focusedValue={focusedDate}
+      onFocusChange={setFocusedDate}
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/range-calendar/controlled.ts (added, 46 changes)\n  Patch: @@ -0,0 +1,46 @@
+const App = `import {RangeCalendar} from "@nextui-org/react";
+import {today, getLocalTimeZone} from "@internationalized/date";
+
+export default function App() {
+  let [value, setValue] = React.useState({
+    start: today(getLocalTimeZone()),
+    end: today(getLocalTimeZone()).add({weeks: 1}),
+  });
+
+  return (
+    <RangeCalendar 
+      aria-label="Date (Controlled)" 
+      value={value} 
+      onChange={setValue} 
+    />
+  );
+}`;
+
+const AppTs = `import {RangeCalendar} from "@nextui-org/react";
+import type {DateValue} from "@react-types/calendar";
+import type {RangeValue} from "@react-types/shared";
+import {today, getLocalTimeZone} from "@internationalized/date";
+
+export default function App() {
+  let [value, setValue] = React.useState<RangeValue<DateValue>>({
+    start: today(getLocalTimeZone()),
+    end: today(getLocalTimeZone()).add({weeks: 1}),
+  });
+
+  return (
+    <RangeCalendar 
+      aria-label="Date (Controlled)" 
+      value={value} 
+      onChange={setValue} 
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+  "/App.tsx": AppTs,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/range-calendar/disabled.ts (added, 15 changes)\n  Patch: @@ -0,0 +1,15 @@
+const App = `import {RangeCalendar} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <RangeCalendar aria-label="Date (Disabled)" isDisabled />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/range-calendar/index.ts (added, 31 changes)\n  Patch: @@ -0,0 +1,31 @@
+import usage from "./usage";
+import disabled from "./disabled";
+import readonly from "./read-only";
+import controlled from "./controlled";
+import minDateValue from "./min-date-value";
+import maxDateValue from "./max-date-value";
+import unavailableDates from "./unavailable-dates";
+import controlledFocusedValue from "./controlled-focused-value";
+import invalidDate from "./invalid-date";
+import nonContiguousRanges from "./non-contiguous-ranges";
+import internationalCalendars from "./international-calendars";
+import visibleMonths from "./visible-months";
+import pageBehaviour from "./page-behaviour";
+import presets from "./presets";
+
+export const rangeCalendarContent = {
+  usage,
+  disabled,
+  readonly,
+  controlled,
+  minDateValue,
+  maxDateValue,
+  unavailableDates,
+  controlledFocusedValue,
+  invalidDate,
+  nonContiguousRanges,
+  internationalCalendars,
+  visibleMonths,
+  pageBehaviour,
+  presets,
+};\n- apps/docs/content/components/range-calendar/international-calendars.ts (added, 18 changes)\n  Patch: @@ -0,0 +1,18 @@
+const App = `import {RangeCalendar} from "@nextui-org/react";
+import {I18nProvider} from "@react-aria/i18n";
+
+export default function App() {
+  return (
+    <I18nProvider locale="zh-CN-u-ca-chinese">
+      <RangeCalendar aria-label="Date (International RangeCalendar)" />
+    </I18nProvider>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/range-calendar/invalid-date.ts (added, 58 changes)\n  Patch: @@ -0,0 +1,58 @@
+const App = `import {RangeCalendar} from "@nextui-org/react";
+import {today, getLocalTimeZone, isWeekend} from "@internationalized/date";
+import {useLocale} from "@react-aria/i18n";
+
+
+export default function App() {
+  let [date, setDate] = React.useState({
+    start: today(getLocalTimeZone()),
+    end: today(getLocalTimeZone()).add({weeks: 1}),
+  });
+  let {locale} = useLocale();
+  let isInvalid = isWeekend(date.start, locale) || isWeekend(date.end, locale);
+
+  return (
+    <RangeCalendar
+      aria-label="Date (Invalid on weekends)"
+      errorMessage={isInvalid ? "We are closed on weekends" : undefined}
+      isInvalid={isInvalid}
+      value={date}
+      onChange={setDate}
+    />
+  );
+}`;
+
+const AppTs = `import {RangeCalendar} from "@nextui-org/react";
+import type {DateValue} from "@react-types/calendar";
+import type {RangeValue} from "@react-types/shared";
+import {today, getLocalTimeZone, isWeekend} from "@internationalized/date";
+import {useLocale} from "@react-aria/i18n";
+
+
+export default function App() {
+  let [date, setDate] = React.useState<RangeValue<DateValue>>({
+    start: today(getLocalTimeZone()),
+    end: today(getLocalTimeZone()).add({weeks: 1}),
+  });
+  let {locale} = useLocale();
+  let isInvalid = isWeekend(date.start, locale) || isWeekend(date.end, locale);
+
+  return (
+    <RangeCalendar
+      aria-label="Date (Invalid on weekends)"
+      errorMessage={isInvalid ? "We are closed on weekends" : undefined}
+      isInvalid={isInvalid}
+      value={date}
+      onChange={setDate}
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+  "/App.tsx": AppTs,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/range-calendar/max-date-value.ts (added, 19 changes)\n  Patch: @@ -0,0 +1,19 @@
+const App = `import {RangeCalendar} from "@nextui-org/react";
+import {today, getLocalTimeZone} from "@internationalized/date";
+
+export default function App() {
+  return (
+    <RangeCalendar
+      aria-label="Date (Max Date Value)"
+      maxValue={today(getLocalTimeZone())}
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/range-calendar/min-date-value.ts (added, 19 changes)\n  Patch: @@ -0,0 +1,19 @@
+const App = `import {RangeCalendar} from "@nextui-org/react";
+import {today, getLocalTimeZone} from "@internationalized/date";
+
+export default function App() {
+  return (
+    <RangeCalendar
+      aria-label="Date (Min Date Value)"
+      minValue={today(getLocalTimeZone())}
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/range-calendar/non-contiguous-ranges.ts (added, 23 changes)\n  Patch: @@ -0,0 +1,23 @@
+const App = `import {RangeCalendar} from "@nextui-org/react";
+import {isWeekend} from "@internationalized/date";
+import {useLocale} from "@react-aria/i18n";
+
+export default function App() {
+  let {locale} = useLocale();
+
+  return (
+    <RangeCalendar
+      allowsNonContiguousRanges
+      aria-label="Time off request"
+      isDateUnavailable={(date) => isWeekend(date, locale)}
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/range-calendar/page-behaviour.ts (added, 18 changes)\n  Patch: @@ -0,0 +1,18 @@
+const App = `import {RangeCalendar} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <RangeCalendar 
+      aria-label="Date (Page Behaviour)" 
+      pageBehavior="single" 
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/range-calendar/presets.ts (added, 244 changes)\n  Patch: @@ -0,0 +1,244 @@
+const App = `import {RangeCalendar, Radio, RadioGroup, Button, ButtonGroup, cn} from "@nextui-org/react";
+import {today, getLocalTimeZone, startOfWeek, startOfMonth} from "@internationalized/date";
+import {useLocale} from "@react-aria/i18n";
+
+export default function App() {
+  let [value, setValue] = React.useState({
+    start: today(getLocalTimeZone()),
+    end: today(getLocalTimeZone()).add({weeks: 1, days: 3}),
+  });
+  let [focusedValue, setFocusedValue] = React.useState(today(getLocalTimeZone()));
+
+  let {locale} = useLocale();
+
+  let now = today(getLocalTimeZone());
+  let nextMonth = now.add({months: 1});
+
+  let nextWeek = {
+    start: startOfWeek(now.add({weeks: 1}), locale),
+    end: endOfWeek(now.add({weeks: 1}), locale),
+  };
+  let thisMonth = {start: startOfMonth(now), end: endOfMonth(now)};
+  let nextMonthValue = {start: startOfMonth(nextMonth), end: endOfMonth(nextMonth)};
+
+
+  const CustomRadio = (props) => {
+    const {children, ...otherProps} = props;
+
+    return (
+      <Radio
+        {...otherProps}
+        classNames={{
+          base: cn(
+            "flex-none m-0 h-8 bg-content1 hover:bg-content2 items-center justify-between",
+            "cursor-pointer rounded-full border-2 border-default-200/60",
+            "data-[selected=true]:border-primary",
+          ),
+          label: "text-tiny text-default-500",
+          labelWrapper: "px-1 m-0",
+          wrapper: "hidden",
+        }}
+      >
+        {children}
+      </Radio>
+    );
+  };
+
+  return (
+    <div className="flex flex-col gap-4">
+      <RangeCalendar
+        bottomContent={
+          <RadioGroup
+            aria-label="Date precision"
+            classNames={{
+              base: "w-full pb-2",
+              wrapper: "-my-2.5 py-2.5 px-3 gap-1 flex-nowrap max-w-[280px] overflow-scroll",
+            }}
+            defaultValue="exact_dates"
+            orientation="horizontal"
+          >
+            <CustomRadio value="exact_dates">Exact dates</CustomRadio>
+            <CustomRadio value="1_day">1 day</CustomRadio>
+            <CustomRadio value="2_days">2 days</CustomRadio>
+            <CustomRadio value="3_days">3 days</CustomRadio>
+            <CustomRadio value="7_days">7 days</CustomRadio>
+            <CustomRadio value="14_days">14 days</CustomRadio>
+          </RadioGroup>
+        }
+        classNames={{
+          content: "w-full",
+        }}
+        focusedValue={focusedValue}
+        nextButtonProps={{
+          variant: "bordered",
+        }}
+        prevButtonProps={{
+          variant: "bordered",
+        }}
+        topContent={
+          <ButtonGroup
+            fullWidth
+            className="px-3 max-w-full pb-2 pt-3 bg-content1 [&>button]:text-default-500 [&>button]:border-default-200/60"
+            radius="full"
+            size="sm"
+            variant="bordered"
+          >
+            <Button
+              onPress={() => {
+                setValue(nextWeek);
+                setFocusedValue(nextWeek.end);
+              }}
+            >
+              Next week
+            </Button>
+            <Button
+              onPress={() => {
+                setValue(thisMonth);
+                setFocusedValue(thisMonth.start);
+              }}
+            >
+              This month
+            </Button>
+            <Button
+              onPress={() => {
+                setValue(nextMonthValue), setFocusedValue(nextMonthValue.start);
+              }}
+            >
+              Next month
+            </Button>
+          </ButtonGroup>
+        }
+        value={value}
+        onChange={setValue}
+        onFocusChange={setFocusedValue}
+      />
+    </div>
+  );
+}`;
+
+const AppTs = `import {RangeCalendar, Radio, RadioGroup, Button, ButtonGroup, cn} from "@nextui-org/react";
+import type {DateValue} from "@react-types/calendar";
+import type {RangeValue} from "@react-types/shared";
+import {today, getLocalTimeZone, startOfWeek, startOfMonth} from "@internationalized/date";
+import {useLocale} from "@react-aria/i18n";
+
+export default function App() {
+  let [value, setValue] = React.useState<RangeValue<DateValue>>({
+    start: today(getLocalTimeZone()),
+    end: today(getLocalTimeZone()).add({weeks: 1, days: 3}),
+  });
+  
+  let [focusedValue, setFocusedValue] = React.useState<DateValue>(today(getLocalTimeZone()));
+
+  let {locale} = useLocale();
+
+  let now = today(getLocalTimeZone());
+  let nextMonth = now.add({months: 1});
+
+  let nextWeek = {
+    start: startOfWeek(now.add({weeks: 1}), locale),
+    end: endOfWeek(now.add({weeks: 1}), locale),
+  };
+  let thisMonth = {start: startOfMonth(now), end: endOfMonth(now)};
+  let nextMonthValue = {start: startOfMonth(nextMonth), end: endOfMonth(nextMonth)};
+
+
+  const CustomRadio = (props) => {
+    const {children, ...otherProps} = props;
+
+    return (
+      <Radio
+        {...otherProps}
+        classNames={{
+          base: cn(
+            "flex-none m-0 h-8 bg-content1 hover:bg-content2 items-center justify-between",
+            "cursor-pointer rounded-full border-2 border-default-200/60",
+            "data-[selected=true]:border-primary",
+          ),
+          label: "text-tiny text-default-500",
+          labelWrapper: "px-1 m-0",
+          wrapper: "hidden",
+        }}
+      >
+        {children}
+      </Radio>
+    );
+  };
+
+  return (
+    <div className="flex flex-col gap-4">
+      <RangeCalendar
+        bottomContent={
+          <RadioGroup
+            aria-label="Date precision"
+            classNames={{
+              base: "w-full pb-2",
+              wrapper: "-my-2.5 py-2.5 px-3 gap-1 flex-nowrap max-w-[280px] overflow-scroll",
+            }}
+            defaultValue="exact_dates"
+            orientation="horizontal"
+          >
+            <CustomRadio value="exact_dates">Exact dates</CustomRadio>
+            <CustomRadio value="1_day">1 day</CustomRadio>
+            <CustomRadio value="2_days">2 days</CustomRadio>
+            <CustomRadio value="3_days">3 days</CustomRadio>
+            <CustomRadio value="7_days">7 days</CustomRadio>
+            <CustomRadio value="14_days">14 days</CustomRadio>
+          </RadioGroup>
+        }
+        focusedValue={focusedValue}
+        nextButtonProps={{
+          variant: "bordered",
+        }}
+        prevButtonProps={{
+          variant: "bordered",
+        }}
+        topContent={
+          <ButtonGroup
+            fullWidth
+            className="px-3 max-w-full pb-2 pt-3 bg-content1 [&>button]:text-default-500 [&>button]:border-default-200/60"
+            radius="full"
+            size="sm"
+            variant="bordered"
+          >
+            <Button
+              onPress={() => {
+                setValue(nextWeek);
+                setFocusedValue(nextWeek.end);
+              }}
+            >
+              Next week
+            </Button>
+            <Button
+              onPress={() => {
+                setValue(thisMonth);
+                setFocusedValue(thisMonth.start);
+              }}
+            >
+              This month
+            </Button>
+            <Button
+              onPress={() => {
+                setValue(nextMonthValue), setFocusedValue(nextMonthValue.start);
+              }}
+            >
+              Next month
+            </Button>
+          </ButtonGroup>
+        }
+        value={value}
+        onChange={setValue}
+        onFocusChange={setFocusedValue}
+      />
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+  "/App.tsx": AppTs,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/range-calendar/read-only.ts (added, 23 changes)\n  Patch: @@ -0,0 +1,23 @@
+const App = `import {RangeCalendar} from "@nextui-org/react";
+import {today, getLocalTimeZone} from "@internationalized/date";
+
+export default function App() {
+  return (
+    <RangeCalendar 
+      aria-label="Date (Read Only)" 
+      value={{
+        start: today(getLocalTimeZone()),
+        end: today(getLocalTimeZone()).add({weeks: 1}),
+      }} 
+      isReadOnly 
+    />
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n
Pull Request Number: 2754
Title: fix(checkbox): checkbox controlled state
Base Branch: main
Head Branch: fix/eng-653
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/2754
State: MERGED
Created At: 2024-04-17T08:22:50Z
Merged At: 2024-04-17T13:43:57Z
Participants: wingkwong, jrgarciadev

Description:
Closes #2752
üìù Description

revise checkbox controlled state logic

‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

  
    
    

    pr2754-demo.webm
    
  

  

  


üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit

Bug Fixes

Improved the handling of controlled and uncontrolled states in the checkbox component, ensuring it behaves as expected during user interactions.


New Features

Introduced a new ControlledTemplate component in the checkbox group stories to manage selected checkboxes using state and display the selected values.
Added new templates (GroupTemplate and WithReactHookFormTemplate) in the checkbox stories for displaying lists of checkboxes with different functionalities.
Enhanced the checkbox component by introducing a new state variable toggleState to manage checkbox state and syncing it with the input reference.

Commits:
- fix(checkbox): checkbox controlled state\n- feat(checkbox): add @nextui-org/use-callback-ref\n- chore(deps): pnpm-lock.yaml\n- fix(checkbox): handle checkbox group\n- fix(checkbox): rely on react aria logic (#2760)\n- fix(checkbox): add missing dependency in useCheckbox hook\n

Labels:


Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-653/[bug]-controlled-checkbox-remains-checked-despite-state-being-false">ENG-653 [BUG] - Controlled Checkbox remains checked despite state being false</a></p>\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 1ef7939af344d1c318ed4f1545c796380cda2516

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 3 packages</summary>

  | Name                 | Type  |
| -------------------- | ----- |
| @nextui-org/checkbox | Patch |
| @nextui-org/table    | Patch |
| @nextui-org/react    | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/eng-653?filename=.changeset/hot-eagles-beg.md&value=---%0A%22%40nextui-org%2Fcheckbox%22%3A%20patch%0A---%0A%0Afix(checkbox)%3A%20checkbox%20controlled%20state%0A)

\n- vercel: [vc]: #cfLud7cZDWs2kCUj9jTL9wHcIrZk0UVHZmFyPReEmvk=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi85dUd6QXJ5aURQOVVRUlNFb011ejRvNGVVSDFNIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtZW5nLTY1My1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWZpeC1lbmctNjUzLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvOVJmbzR1eTNQYWZOdlhSaVBkUDdlbVhoMkNXYiIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1maXgtZW5nLTY1My1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LWVuZy02NTMtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/9uGzAryiDP9UQRSEoMuz4o4eUH1M)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-653-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-653-nextui-org.vercel.app?via=pr-comment-feedback-link) | Apr 17, 2024 1:46pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/9Rfo4uy3PafNvXRiPdP7emXh2CWb)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-653-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-653-nextui-org.vercel.app?via=pr-comment-feedback-link) | Apr 17, 2024 1:46pm |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
The changes aim to resolve the issue where the controlled checkbox in the `@nextui-org/checkbox` component incorrectly remains checked despite its state being false. Enhancements include state management updates in `use-checkbox.ts` and the introduction of `toggleState` for improved checkbox state handling based on user interactions.

## Changes

| File Path                                           | Change Summary                                                               |
|-----------------------------------------------------|------------------------------------------------------------------------------|
| `.changeset/wicked-bananas-shave.md`                | Introduced a patch for the checkbox component issue (#2752).                 |
| `packages/components/checkbox/src/use-checkbox.ts`  | Updated state handling to manage checkbox state effectively.                |
| `packages/components/checkbox/package.json`         | Added `@nextui-org/use-callback-ref` dependency and updated peer dependencies. |

## Assessment against linked issues

| Objective                                                                 | Addressed | Explanation |
|---------------------------------------------------------------------------|-----------|-------------|
| Controlled Checkbox should not remain checked when state is false (#2752) | ‚úÖ         |             |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->
<!--


.changeset/wicked-bananas-shave.md: The new file introduces a patch for the "@nextui-org/checkbox" component, addressing the issue with the checkbox controlled state (#2752).

---

packages/components/checkbox/package.json: Added the dependency `@nextui-org/use-callback-ref` and updated the peer dependencies in the `package.json` file.

---

packages/components/checkbox/src/use-checkbox.ts: 
- ## Update existing summary
- Short summary

---

packages/components/checkbox/stories/checkbox-group.stories.tsx: Added a new `ControlledTemplate` component in the `checkbox-group.stories.tsx` file that manages selected checkboxes using state and logs the selected values. The component renders a group of checkboxes with cities and displays the selected cities below.

---

packages/components/checkbox/stories/checkbox.stories.tsx: 
- Added `useForm` import from "react-hook-form".
- Added a `button` element with `onClick` event to toggle selection in `ControlledTemplate`.
- Added `GroupTemplate` to display a list of fruits with checkboxes.
- Added `WithReactHookFormTemplate` for a form with a checkbox using `react-hook-form`.
- Exported `Group` and `WithReactHookForm` with respective render functions.

-->
<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: short summary by coderabbit.ai -->
<!--


### PR Objectives (User Provided Facts)

This pull request, numbered 2754 and titled "fix(checkbox): checkbox controlled state," aims to address a bug identified in issue #2752. The bug involves a controlled checkbox component in the NextUI library version 2.3.1, where the checkbox remains visually checked even when its internal state is set to false. This behavior deviates from the expected, where the checkbox should display an unchecked state when its internal state is false.

The issue was not present in the previous version (2.2.10) of NextUI, suggesting that changes introduced in version 2.3.1 adversely affected the checkbox's behavior. The problem is demonstrated through a reproducible example provided on StackBlitz, where toggling between checkboxes shows the first checkbox remaining checked visually despite its `isSelected` state being false.

The pull request introduces changes to the `use-checkbox.ts` file within the checkbox component's package. A new state variable `checkedState` has been added to better manage the checkbox's state, distinguishing between controlled and uncontrolled states. The logic for updating the checkbox state based on user interactions has also been refined to ensure that the visual representation matches the internal state accurately.

### AI-Generated Summary of Generated Summaries

The pull request addresses the issue with the checkbox controlled state in the `@nextui-org/checkbox` component by refining the state management in `use-checkbox.ts`. It introduces a new state variable, `checkedState`, to differentiate between controlled and uncontrolled states of the checkbox. The logic for updating the checkbox state based on user interactions is enhanced to ensure visual consistency with the internal state. Additionally, a dependency `@nextui-org/use-callback-ref` is added to `package.json`. These changes collectively resolve the bug where the checkbox remained visually checked despite its internal state being false, as reported in issue #2752.

-->
<!-- end of auto-generated comment: short summary by coderabbit.ai -->

---

<details>

<summary>Recent Review Details</summary>

**Configuration used: .coderabbit.yaml**

<details>
<summary>Commits</summary>
Files that changed from the base of the PR and between f4b8206628c1b55d60b3b916cd81b72c4940cb00 and 1ef7939af344d1c318ed4f1545c796380cda2516.
</details>


<details>
<summary>Files selected for processing (1)</summary>

* packages/components/checkbox/src/use-checkbox.ts (8 hunks)

</details>





<details>
<summary>Files skipped from review as they are similar to previous changes (1)</summary>

* packages/components/checkbox/src/use-checkbox.ts

</details>





</details><!-- commit_ids_reviewed_start -->

<!-- d54cbe995e07cb0fb0068d199ecf106b115d02a2 -->
<!-- 161a7cabece12ba50ad7de3badb53aef34f6628f -->
<!-- 6c7e38bdbb75f3b6afd5952d1313fd6f76a6c026 -->
<!-- f4b8206628c1b55d60b3b916cd81b72c4940cb00 -->
<!-- 1ef7939af344d1c318ed4f1545c796380cda2516 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/wicked-bananas-shave.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/checkbox": patch
+---
+
+Fixes checkbox controlled state (#2752)\n- packages/components/checkbox/package.json (modified, 22 changes)\n  Patch: @@ -34,35 +34,37 @@
     "postpack": "clean-package restore"
   },
   "peerDependencies": {
-    "react": ">=18",
-    "react-dom": ">=18",
+    "@nextui-org/system": ">=2.0.0",
     "@nextui-org/theme": ">=2.1.0",
-    "@nextui-org/system": ">=2.0.0"
+    "react": ">=18",
+    "react-dom": ">=18"
   },
   "dependencies": {
-    "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/react-utils": "workspace:*",
+    "@nextui-org/shared-utils": "workspace:*",
+    "@nextui-org/use-callback-ref": "workspace:*",
     "@nextui-org/use-safe-layout-effect": "workspace:*",
     "@react-aria/checkbox": "^3.14.1",
     "@react-aria/focus": "^3.16.2",
     "@react-aria/interactions": "^3.21.1",
+    "@react-aria/utils": "^3.23.2",
     "@react-aria/visually-hidden": "^3.8.10",
     "@react-stately/checkbox": "^3.6.3",
     "@react-stately/toggle": "^3.7.2",
-    "@react-aria/utils": "^3.23.2",
     "@react-types/checkbox": "^3.7.1",
     "@react-types/shared": "^3.22.1"
   },
   "devDependencies": {
-    "@nextui-org/theme": "workspace:*",
-    "@nextui-org/system": "workspace:*",
-    "@nextui-org/shared-icons": "workspace:*",
     "@nextui-org/chip": "workspace:*",
-    "@nextui-org/user": "workspace:*",
     "@nextui-org/link": "workspace:*",
+    "@nextui-org/shared-icons": "workspace:*",
+    "@nextui-org/system": "workspace:*",
+    "@nextui-org/theme": "workspace:*",
+    "@nextui-org/user": "workspace:*",
     "clean-package": "2.2.0",
     "react": "^18.0.0",
-    "react-dom": "^18.0.0"
+    "react-dom": "^18.0.0",
+    "react-hook-form": "^7.51.3"
   },
   "clean-package": "../../../clean-package.config.json"
 }\n- packages/components/checkbox/src/use-checkbox.ts (modified, 27 changes)\n  Patch: @@ -6,6 +6,7 @@ import {ReactNode, Ref, useCallback, useId, useState} from "react";
 import {useMemo, useRef} from "react";
 import {useToggleState} from "@react-stately/toggle";
 import {checkbox} from "@nextui-org/theme";
+import {useCallbackRef} from "@nextui-org/use-callback-ref";
 import {useHover, usePress} from "@react-aria/interactions";
 import {useFocusRing} from "@react-aria/focus";
 import {mergeProps, chain} from "@react-aria/utils";
@@ -170,6 +171,8 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
     onValueChange,
   ]);
 
+  const toggleState = useToggleState(ariaCheckboxProps);
+
   const {
     inputProps,
     isSelected,
@@ -191,7 +194,7 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
       useReactAriaCheckbox(
         {...ariaCheckboxProps, validationBehavior: "native"},
         // eslint-disable-next-line
-        useToggleState(ariaCheckboxProps),
+        toggleState,
         inputRef,
       );
 
@@ -242,18 +245,18 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
     [color, size, radius, isInvalid, lineThrough, isDisabled, disableAnimation],
   );
 
-  const [isChecked, setIsChecked] = useState(!!defaultSelected || !!isSelected);
-
   // if we use `react-hook-form`, it will set the checkbox value using the ref in register
   // i.e. setting ref.current.checked to true or false which is uncontrolled
   // hence, sync the state with `ref.current.checked`
   useSafeLayoutEffect(() => {
     if (!inputRef.current) return;
     const isInputRefChecked = !!inputRef.current.checked;
 
-    setIsChecked(isInputRefChecked);
+    toggleState.setSelected(isInputRefChecked);
   }, [inputRef.current]);
 
+  const onChangeProp = useCallbackRef(onChange);
+
   const handleCheckboxChange = useCallback(
     (event: React.ChangeEvent<HTMLInputElement>) => {
       if (isReadOnly || isDisabled) {
@@ -262,9 +265,9 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
         return;
       }
 
-      setIsChecked(!isChecked);
+      onChangeProp?.(event);
     },
-    [isReadOnly, isDisabled, isChecked],
+    [isReadOnly, isDisabled, onChangeProp],
   );
 
   const baseStyles = clsx(classNames?.base, className);
@@ -274,7 +277,7 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
       ref: domRef,
       className: slots.base({class: baseStyles}),
       "data-disabled": dataAttr(isDisabled),
-      "data-selected": dataAttr(isSelected || isIndeterminate || isChecked),
+      "data-selected": dataAttr(isSelected || isIndeterminate),
       "data-invalid": dataAttr(isInvalid),
       "data-hover": dataAttr(isHovered),
       "data-focus": dataAttr(isFocused),
@@ -315,10 +318,10 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
   const getInputProps: PropGetter = useCallback(() => {
     return {
       ref: mergeRefs(inputRef, ref),
-      ...mergeProps(inputProps, focusProps, {checked: isChecked}),
-      onChange: chain(inputProps.onChange, onChange, handleCheckboxChange),
+      ...mergeProps(inputProps, focusProps),
+      onChange: chain(inputProps.onChange, handleCheckboxChange),
     };
-  }, [inputProps, focusProps, onChange, handleCheckboxChange]);
+  }, [inputProps, focusProps, handleCheckboxChange]);
 
   const getLabelProps: PropGetter = useCallback(
     () => ({
@@ -331,12 +334,12 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
   const getIconProps = useCallback(
     () =>
       ({
-        isSelected: isSelected || isChecked,
+        isSelected: isSelected,
         isIndeterminate: !!isIndeterminate,
         disableAnimation: !!disableAnimation,
         className: slots.icon({class: classNames?.icon}),
       } as CheckboxIconProps),
-    [slots, classNames?.icon, isSelected, isIndeterminate, disableAnimation, isChecked],
+    [slots, classNames?.icon, isSelected, isIndeterminate, disableAnimation],
   );
 
   return {\n- packages/components/checkbox/stories/checkbox-group.stories.tsx (modified, 30 changes)\n  Patch: @@ -107,6 +107,28 @@ const FormTemplate = (args: CheckboxGroupProps) => {
   );
 };
 
+const ControlledTemplate = (args: CheckboxGroupProps) => {
+  const [selected, setSelected] = React.useState<string[]>(["buenos-aires"]);
+
+  React.useEffect(() => {
+    // eslint-disable-next-line no-console
+    console.log("Checkbox ", selected);
+  }, [selected]);
+
+  return (
+    <div className="flex flex-col gap-2">
+      <CheckboxGroup {...args} label="Select cities" value={selected} onValueChange={setSelected}>
+        <Checkbox value="buenos-aires">Buenos Aires</Checkbox>
+        <Checkbox value="sydney">Sydney</Checkbox>
+        <Checkbox value="san-francisco">San Francisco</Checkbox>
+        <Checkbox value="london">London</Checkbox>
+        <Checkbox value="tokyo">Tokyo</Checkbox>
+      </CheckboxGroup>
+      <p className="text-default-500">Selected: {selected.join(", ")}</p>
+    </div>
+  );
+};
+
 export const Default = {
   render: Template,
 
@@ -133,6 +155,14 @@ export const DefaultValue = {
   },
 };
 
+export const Controlled = {
+  render: ControlledTemplate,
+
+  args: {
+    ...defaultProps,
+  },
+};
+
 export const Horizontal = {
   render: Template,
 \n- packages/components/checkbox/stories/checkbox.stories.tsx (modified, 75 changes)\n  Patch: @@ -3,6 +3,7 @@ import {Meta} from "@storybook/react";
 import {checkbox} from "@nextui-org/theme";
 import {CloseIcon} from "@nextui-org/shared-icons";
 import {button} from "@nextui-org/theme";
+import {useForm} from "react-hook-form";
 
 import {Checkbox, CheckboxIconProps, CheckboxProps} from "../src";
 
@@ -60,6 +61,7 @@ const ControlledTemplate = (args: CheckboxProps) => {
         Subscribe (controlled)
       </Checkbox>
       <p className="text-default-500">Selected: {selected ? "true" : "false"}</p>
+      <button onClick={() => setSelected(!selected)}>Toggle</button>
     </div>
   );
 };
@@ -83,6 +85,63 @@ const FormTemplate = (args: CheckboxProps) => {
   );
 };
 
+const GroupTemplate = (args: CheckboxProps) => {
+  const items = ["Apple", "Banana", "Orange", "Mango"];
+
+  const [selectedItems, setSelectedItems] = React.useState<string[]>([]);
+
+  const isSelected = (value: string) => {
+    return selectedItems.some((selected) => selected === value);
+  };
+
+  const handleValueChange = (value: string) => {
+    setSelectedItems([value]);
+  };
+
+  return (
+    <div className="text-white flex flex-col gap-2">
+      <h2>List of Fruits</h2>
+
+      {items.map((item, index) => (
+        <Checkbox
+          {...args}
+          key={index}
+          className="text-white"
+          color="primary"
+          isSelected={isSelected(item)}
+          onValueChange={() => handleValueChange(item)}
+        >
+          {item} {isSelected(item) ? "/ state: true" : "/ state: false"}
+        </Checkbox>
+      ))}
+    </div>
+  );
+};
+
+const WithReactHookFormTemplate = (args: CheckboxProps) => {
+  const {
+    register,
+    formState: {errors},
+    handleSubmit,
+  } = useForm();
+
+  const onSubmit = (data: any) => {
+    // eslint-disable-next-line no-console
+    console.log(data);
+    alert("Submitted value: " + data.example);
+  };
+
+  return (
+    <form className="flex flex-col gap-4" onSubmit={handleSubmit(onSubmit)}>
+      <Checkbox {...args} {...register("example", {required: true})} />
+      {errors.example && <span className="text-danger">This field is required</span>}
+      <button className={button({class: "w-fit"})} type="submit">
+        Submit
+      </button>
+    </form>
+  );
+};
+
 export const Default = {
   args: {
     ...defaultProps,
@@ -110,6 +169,22 @@ export const CustomIconNode = {
   },
 };
 
+export const Group = {
+  render: GroupTemplate,
+
+  args: {
+    ...defaultProps,
+  },
+};
+
+export const WithReactHookForm = {
+  render: WithReactHookFormTemplate,
+
+  args: {
+    ...defaultProps,
+  },
+};
+
 export const CustomIconFunction = {
   args: {
     ...defaultProps,\n- pnpm-lock.yaml (modified, 31 changes)\n  Patch: @@ -146,7 +146,7 @@ importers:
         version: 4.0.2(eslint@7.32.0)(webpack@5.91.0)
       eslint-plugin-import:
         specifier: ^2.26.0
-        version: 2.29.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-typescript@2.7.1)(eslint@7.32.0)
+        version: 2.29.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-typescript@3.6.1)(eslint@7.32.0)
       eslint-plugin-jest:
         specifier: ^24.3.6
         version: 24.7.0(@typescript-eslint/eslint-plugin@5.62.0)(eslint@7.32.0)(typescript@4.9.5)
@@ -1134,6 +1134,9 @@ importers:
       '@nextui-org/shared-utils':
         specifier: workspace:*
         version: link:../../utilities/shared-utils
+      '@nextui-org/use-callback-ref':
+        specifier: workspace:*
+        version: link:../../hooks/use-callback-ref
       '@nextui-org/use-safe-layout-effect':
         specifier: workspace:*
         version: link:../../hooks/use-safe-layout-effect
@@ -1192,6 +1195,9 @@ importers:
       react-dom:
         specifier: ^18.2.0
         version: 18.2.0(react@18.2.0)
+      react-hook-form:
+        specifier: ^7.51.3
+        version: 7.51.3(react@18.2.0)
 
   packages/components/chip:
     dependencies:
@@ -15962,7 +15968,7 @@ packages:
     dependencies:
       confusing-browser-globals: 1.0.11
       eslint: 7.32.0
-      eslint-plugin-import: 2.29.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-typescript@2.7.1)(eslint@7.32.0)
+      eslint-plugin-import: 2.29.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-typescript@3.6.1)(eslint@7.32.0)
       object.assign: 4.1.5
       object.entries: 1.1.8
     dev: true
@@ -15995,7 +16001,7 @@ packages:
     dependencies:
       eslint: 7.32.0
       eslint-config-airbnb-base: 14.2.1(eslint-plugin-import@2.29.1)(eslint@7.32.0)
-      eslint-plugin-import: 2.29.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-typescript@2.7.1)(eslint@7.32.0)
+      eslint-plugin-import: 2.29.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-typescript@3.6.1)(eslint@7.32.0)
       eslint-plugin-jsx-a11y: 6.8.0(eslint@7.32.0)
       eslint-plugin-react: 7.34.1(eslint@7.32.0)
       eslint-plugin-react-hooks: 4.6.0(eslint@7.32.0)
@@ -16018,7 +16024,7 @@ packages:
       eslint: 7.32.0
       eslint-import-resolver-node: 0.3.9
       eslint-import-resolver-typescript: 3.6.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-node@0.3.9)(eslint-plugin-import@2.29.1)(eslint@7.32.0)
-      eslint-plugin-import: 2.29.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-typescript@2.7.1)(eslint@7.32.0)
+      eslint-plugin-import: 2.29.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-typescript@3.6.1)(eslint@7.32.0)
       eslint-plugin-jsx-a11y: 6.8.0(eslint@7.32.0)
       eslint-plugin-react: 7.34.1(eslint@7.32.0)
       eslint-plugin-react-hooks: 4.6.0(eslint@7.32.0)
@@ -16067,7 +16073,7 @@ packages:
       confusing-browser-globals: 1.0.11
       eslint: 7.32.0
       eslint-plugin-flowtype: 5.10.0(eslint@7.32.0)
-      eslint-plugin-import: 2.29.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-typescript@2.7.1)(eslint@7.32.0)
+      eslint-plugin-import: 2.29.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-typescript@3.6.1)(eslint@7.32.0)
       eslint-plugin-jest: 24.7.0(@typescript-eslint/eslint-plugin@5.62.0)(eslint@7.32.0)(typescript@4.9.5)
       eslint-plugin-jsx-a11y: 6.8.0(eslint@7.32.0)
       eslint-plugin-react: 7.34.1(eslint@7.32.0)
@@ -16108,7 +16114,7 @@ packages:
     dependencies:
       debug: 4.3.4
       eslint: 7.32.0
-      eslint-plugin-import: 2.29.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-typescript@2.7.1)(eslint@7.32.0)
+      eslint-plugin-import: 2.29.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-typescript@3.6.1)(eslint@7.32.0)
       glob: 7.2.3
       is-glob: 4.0.3
       resolve: 1.22.8
@@ -16128,7 +16134,7 @@ packages:
       enhanced-resolve: 5.16.0
       eslint: 7.32.0
       eslint-module-utils: 2.8.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.6.1)(eslint@7.32.0)
-      eslint-plugin-import: 2.29.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-typescript@2.7.1)(eslint@7.32.0)
+      eslint-plugin-import: 2.29.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-typescript@3.6.1)(eslint@7.32.0)
       fast-glob: 3.3.2
       get-tsconfig: 4.7.3
       is-core-module: 2.13.1
@@ -16239,7 +16245,7 @@ packages:
       string-natural-compare: 3.0.1
     dev: true
 
-  /eslint-plugin-import@2.29.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-typescript@2.7.1)(eslint@7.32.0):
+  /eslint-plugin-import@2.29.1(@typescript-eslint/parser@5.62.0)(eslint-import-resolver-typescript@3.6.1)(eslint@7.32.0):
     resolution: {integrity: sha512-BbPC0cuExzhiMo4Ff1BTVwHpjjv28C5R+btTOGaCRC7UEz801up0JadwkeSk5Ued6TG34uaczuVuH6qyy5YUxw==}
     engines: {node: '>=4'}
     peerDependencies:
@@ -23349,6 +23355,15 @@ packages:
     resolution: {integrity: sha512-nQTTcUu+ATDbrSD1BZHr5kgSD4oF8OFjxun8uAaL8RwPBacGBNPf/yAuVVdx17N8XNzRDMrZ9XcKZHCjPW+9ew==}
     dev: true
 
+  /react-hook-form@7.51.3(react@18.2.0):
+    resolution: {integrity: sha512-cvJ/wbHdhYx8aviSWh28w9ImjmVsb5Y05n1+FW786vEZQJV5STNM0pW6ujS+oiBecb0ARBxJFyAnXj9+GHXACQ==}
+    engines: {node: '>=12.22.0'}
+    peerDependencies:
+      react: ^18.2.0
+    dependencies:
+      react: 18.2.0
+    dev: true
+
   /react-icons@4.12.0(react@18.2.0):
     resolution: {integrity: sha512-IBaDuHiShdZqmfc/TwHu6+d6k2ltNCf3AszxNmjJc1KUfXdEeRJOKyNvLmAHaarhzGmTSVygNdyu8/opXv2gaw==}
     peerDependencies:\n
Pull Request Number: 1289
Title: feat(root): RSC components added, packages modified, filter dom props  function adapted
Base Branch: main
Head Branch: feat/server-components
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/1289
State: MERGED
Created At: 2023-08-05T21:22:34Z
Merged At: 2023-08-05T21:53:35Z
Participants: jrgarciadev

Description:
Closes #1228
üìù Description

Some components were modified to support RSC, use client; removed. -> Divider, Skeleton, Spinner, Kbd, Spacer, Code, Badge
New link added to the components links to display whether the component supports RSC
filterDomProps function adapted to disabled/enabled it
useSeparator adapted to support RSC


Add a brief description

‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior


Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Commits:
- feat(root): rsc components added, packages modified, filter dom props function adapted\n- Merge branch 'main' of github.com:nextui-org/nextui into feat/server-components\n- Merge branch 'main' of github.com:nextui-org/nextui into feat/server-components\n- fix(root): eslint/prettier issues\n

Labels:


Comments:
- vercel: [vc]: #/fblUTrZA1Y8vvXI+gnZ1Mgci362VrjI/jjVBgB4aMY=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYxIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiIifSwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12MS81cFVOZXJ4SnZ6YnMxTFVCRm5XV1hoNHpwRlZYIiwibmV4dENvbW1pdFN0YXR1cyI6IkZBSUxFRCIsInByZXZpZXdVcmwiOiIifSx7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi80YjU3cnRvTVNFNW1RTlNDdDlCS0hiOHpTb0xEIiwibmV4dENvbW1pdFN0YXR1cyI6IkZBSUxFRCIsInByZXZpZXdVcmwiOiIiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoiIn19LHsibmFtZSI6Im5leHR1aS1kb2NzLXYxIiwicm9vdERpcmVjdG9yeSI6ImFwcHMvZG9jcyIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1kb2NzLXYxLzRFNE5ZQXlURldVTDRNTGpyUWpNamU1VFVUclMiLCJwcmV2aWV3VXJsIjoiIiwibmV4dENvbW1pdFN0YXR1cyI6IkZBSUxFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiIifX0seyJuYW1lIjoibmV4dHVpLXN0b3J5Ym9vay12MiIsInJvb3REaXJlY3RvcnkiOiJwYWNrYWdlcy9zdG9yeWJvb2siLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktc3Rvcnlib29rLXYyLzlLRGJLZjVyU2pmUzluSkc1UURzVmpyalVEUG4iLCJuZXh0Q29tbWl0U3RhdHVzIjoiRkFJTEVEIiwicHJldmlld1VybCI6IiIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiIifX1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v1** | ‚ùå Failed ([Inspect](https://vercel.com/nextui-org/nextui-docs-v1/4E4NYAyTFWUL4MLjrQjMje5TUTrS)) |  |  | Aug 5, 2023 9:58pm |
| **nextui-docs-v2** | ‚ùå Failed ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/4b57rtoMSE5mQNSCt9BKHb8zSoLD)) |  |  | Aug 5, 2023 9:58pm |
| **nextui-storybook-v1** | ‚ùå Failed ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v1/5pUNerxJvzbs1LUBFnWWXh4zpFVX)) |  |  | Aug 5, 2023 9:58pm |
| **nextui-storybook-v2** | ‚ùå Failed ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/9KDbKf5rSjfS9nJG5QDsVjrjUDPn)) |  |  | Aug 5, 2023 9:58pm |




\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: fbb7c3fb7fbd5176ba5cf31579a27e04ac291c2b

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 36 packages</summary>

  | Name                           | Type  |
| ------------------------------ | ----- |
| @nextui-org/react-utils        | Patch |
| @nextui-org/accordion          | Patch |
| @nextui-org/dropdown           | Patch |
| @nextui-org/skeleton           | Patch |
| @nextui-org/divider            | Patch |
| @nextui-org/spinner            | Patch |
| @nextui-org/button             | Patch |
| @nextui-org/spacer             | Patch |
| @nextui-org/badge              | Patch |
| @nextui-org/input              | Patch |
| @nextui-org/table              | Patch |
| @nextui-org/card               | Patch |
| @nextui-org/code               | Patch |
| @nextui-org/tabs               | Patch |
| @nextui-org/kbd                | Patch |
| @nextui-org/system             | Patch |
| @nextui-org/avatar             | Patch |
| @nextui-org/checkbox           | Patch |
| @nextui-org/chip               | Patch |
| @nextui-org/image              | Patch |
| @nextui-org/link               | Patch |
| @nextui-org/modal              | Patch |
| @nextui-org/navbar             | Patch |
| @nextui-org/pagination         | Patch |
| @nextui-org/popover            | Patch |
| @nextui-org/progress           | Patch |
| @nextui-org/radio              | Patch |
| @nextui-org/ripple             | Patch |
| @nextui-org/snippet            | Patch |
| @nextui-org/switch             | Patch |
| @nextui-org/tooltip            | Patch |
| @nextui-org/user               | Patch |
| @nextui-org/use-real-shape     | Patch |
| @nextui-org/react              | Patch |
| @nextui-org/aria-utils         | Patch |
| @nextui-org/framer-transitions | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/feat/server-components?filename=.changeset/itchy-trains-call.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Faccordion%22%3A%20patch%0A%22%40nextui-org%2Fbadge%22%3A%20patch%0A%22%40nextui-org%2Fbutton%22%3A%20patch%0A%22%40nextui-org%2Fcard%22%3A%20patch%0A%22%40nextui-org%2Fcode%22%3A%20patch%0A%22%40nextui-org%2Fdivider%22%3A%20patch%0A%22%40nextui-org%2Fdropdown%22%3A%20patch%0A%22%40nextui-org%2Finput%22%3A%20patch%0A%22%40nextui-org%2Fkbd%22%3A%20patch%0A---%0A%0Afeat(root)%3A%20RSC%20components%20added%2C%20packages%20modified%2C%20filter%20dom%20props%20%20function%20adapted%0A)

\n

Files Changed:
- .changeset/fresh-jobs-draw.md (added, 22 changes)\n  Patch: @@ -0,0 +1,22 @@
+---
+"@nextui-org/react-utils": patch
+"@nextui-org/accordion": patch
+"@nextui-org/dropdown": patch
+"@nextui-org/skeleton": patch
+"@nextui-org/divider": patch
+"@nextui-org/spinner": patch
+"@nextui-org/button": patch
+"@nextui-org/spacer": patch
+"@nextui-org/badge": patch
+"@nextui-org/input": patch
+"@nextui-org/table": patch
+"@nextui-org/card": patch
+"@nextui-org/code": patch
+"@nextui-org/tabs": patch
+"@nextui-org/kbd": patch
+"@nextui-org/system": patch
+---
+
+- "use client" directive removed from components that didn't need it
+- packages adapted to support RSC imports
+- filterDomProps function was modified to enable/disabled it\n- apps/docs/app/page.tsx (modified, 2 changes)\n  Patch: @@ -1,4 +1,4 @@
-import {Spacer} from "@nextui-org/react";
+import {Spacer} from "@nextui-org/spacer";
 
 import {Hero} from "@/components/marketing/hero";
 import {FeaturesGrid} from "@/components/marketing/features-grid";\n- apps/docs/components/blog-post.tsx (modified, 9 changes)\n  Patch: @@ -1,7 +1,7 @@
 "use client";
 
 import {BlogPost} from "contentlayer/generated";
-import {Card, CardFooter, CardBody, CardHeader, Link, Avatar} from "@nextui-org/react";
+import {Card, CardFooter, CardBody, CardHeader, Link, Avatar, Image} from "@nextui-org/react";
 import Balancer from "react-wrap-balancer";
 import {format, parseISO} from "date-fns";
 import NextLink from "next/link";
@@ -39,10 +39,9 @@ const BlogPostCard = (post: BlogPost) => {
                 <Balancer>{post.title}</Balancer>
               </Link>
             </CardHeader>
-            <CardBody className="px-3 pt-0 pb-1">
-              <p className="font-normal text-default-600">
-                <Balancer>{post.description}</Balancer>
-              </p>
+            <CardBody className="pt-0 px-2 pb-1">
+              <Image className="mb-3" src={post.image} />
+              <p className="font-normal px-1 text-default-600">{post.description}</p>
             </CardBody>
             <CardFooter className="flex justify-between items-center">
               <time className="block text-small text-default-500" dateTime={post.date}>\n- apps/docs/components/docs/components/component-links.tsx (modified, 66 changes)\n  Patch: @@ -1,40 +1,56 @@
-import {Button, ButtonProps, Link} from "@nextui-org/react";
+import {Button, ButtonProps, Code, Link, Tooltip} from "@nextui-org/react";
+import {ReactNode} from "react";
+import Balancer from "react-wrap-balancer";
 
-import {GithubIcon, NpmIcon, AdobeIcon, StorybookIcon} from "@/components/icons";
+import {GithubIcon, NpmIcon, AdobeIcon, StorybookIcon, NextJsIcon} from "@/components/icons";
 import {COMPONENT_PATH, COMPONENT_THEME_PATH} from "@/libs/github/constants";
 
 export interface ComponentLinksProps {
   component: string;
   styles?: string;
   storybook?: string;
+  rscCompatible?: boolean;
   reactAriaHook?: string;
 }
 
 const ButtonLink = ({
   children,
   href,
   startContent,
+  tooltip,
   ...props
 }: ButtonProps & {
   href: string;
-}) => (
-  <Button
-    isExternal
-    as={Link}
-    className="!text-small py-4 bg-default-100 dark:bg-default-50 text-default-700"
-    href={href}
-    size="sm"
-    startContent={startContent}
-    {...props}
-  >
-    {children}
-  </Button>
-);
+  tooltip?: string | ReactNode;
+}) => {
+  const button = (
+    <Button
+      isExternal
+      as={Link}
+      className="!text-small py-4 bg-default-100 dark:bg-default-50 text-default-700"
+      href={href}
+      size="sm"
+      startContent={startContent}
+      {...props}
+    >
+      {children}
+    </Button>
+  );
+
+  return tooltip ? (
+    <Tooltip className="max-w-[230px]" content={tooltip}>
+      {button}
+    </Tooltip>
+  ) : (
+    button
+  );
+};
 
 export const ComponentLinks = ({
   component,
   storybook,
   styles,
+  rscCompatible,
   reactAriaHook,
 }: ComponentLinksProps) => {
   if (!component) {
@@ -63,6 +79,26 @@ export const ComponentLinks = ({
           React Aria
         </ButtonLink>
       )}
+      {rscCompatible && (
+        <ButtonLink
+          href="https://nextjs.org/docs/getting-started/react-essentials#server-components"
+          startContent={<NextJsIcon size={18} />}
+          tooltip={
+            <p>
+              <Balancer>
+                This component doesn&apos;t use the
+                <Code className="font-normal bg-transparent px-0 py-0 text-code-mdx">
+                  `use client;`
+                </Code>
+                directive making it compatible with RSC.
+              </Balancer>
+            </p>
+          }
+        >
+          Server component
+        </ButtonLink>
+      )}
+
       <ButtonLink href={`${COMPONENT_PATH}/${component}`} startContent={<GithubIcon size={20} />}>
         Source
       </ButtonLink>\n- apps/docs/components/sandpack/theme.ts (modified, 3 changes)\n  Patch: @@ -30,8 +30,7 @@ export const nextuiTheme: SandpackTheme = {
   },
   font: {
     body: "Inter var",
-    mono:
-      'ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace',
+    mono: 'ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace',
     size: "14px",
     lineHeight: "1.5rem",
   },\n- apps/docs/content/docs/components/badge.mdx (modified, 2 changes)\n  Patch: @@ -9,7 +9,7 @@ import {badgeContent} from "@/content/components/badge";
 
 Badges are used as a small numerical value or status descriptor for UI elements.
 
-<ComponentLinks component="badge" />
+<ComponentLinks component="badge" rscCompatible />
 
 ---
 \n- apps/docs/content/docs/components/code.mdx (modified, 2 changes)\n  Patch: @@ -9,7 +9,7 @@ import {codeContent} from "@/content/components/code";
 
 Code is a component used to display inline code.
 
-<ComponentLinks component="code" />
+<ComponentLinks component="code" rscCompatible />
 
 ---
 \n- apps/docs/content/docs/components/divider.mdx (modified, 2 changes)\n  Patch: @@ -9,7 +9,7 @@ import {dividerContent} from "@/content/components/divider";
 
 Divider is a component that separates content in a page.
 
-<ComponentLinks component="divider" reactAriaHook="useSeparator" />
+<ComponentLinks component="divider" reactAriaHook="useSeparator" rscCompatible />
 
 ---
 \n- apps/docs/content/docs/components/kbd.mdx (modified, 2 changes)\n  Patch: @@ -9,7 +9,7 @@ import {kbdContent} from "@/content/components/kbd";
 
 Keyboard key is a component to display which key or combination of keys performs a given action.
 
-<ComponentLinks component="kbd" />
+<ComponentLinks component="kbd" rscCompatible />
 
 ---
 \n- apps/docs/content/docs/components/skeleton.mdx (modified, 2 changes)\n  Patch: @@ -9,7 +9,7 @@ import {skeletonContent} from "@/content/components/skeleton";
 
 Skeleton is a placeholder to show a loading state and the expected shape of a component.
 
-<ComponentLinks component="skeleton" />
+<ComponentLinks component="skeleton" rscCompatible />
 
 ---
 \n- apps/docs/content/docs/components/spacer.mdx (modified, 2 changes)\n  Patch: @@ -9,7 +9,7 @@ import {spacerContent} from "@/content/components/spacer";
 
 Spacer is a component used to add space between components.
 
-<ComponentLinks component="spacer" />
+<ComponentLinks component="spacer" rscCompatible />
 
 ---
 \n- apps/docs/content/docs/components/spinner.mdx (modified, 2 changes)\n  Patch: @@ -9,7 +9,7 @@ import {spinnerContent} from "@/content/components/spinner";
 
 Spinner express an unspecified wait time or display the length of a process.
 
-<ComponentLinks component="spinner" />
+<ComponentLinks component="spinner" rscCompatible />
 
 ---
 \n- apps/docs/package.json (modified, 7 changes)\n  Patch: @@ -22,6 +22,13 @@
     "@nextui-org/shared-icons": "workspace:*",
     "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/theme": "workspace:*",
+    "@nextui-org/spacer": "workspace:*",
+    "@nextui-org/kbd": "workspace:*",
+    "@nextui-org/code": "workspace:*",
+    "@nextui-org/badge": "workspace:*",
+    "@nextui-org/skeleton": "workspace:*",
+    "@nextui-org/spinner": "workspace:*",
+    "@nextui-org/divider": "workspace:*",
     "@nextui-org/use-clipboard": "workspace:*",
     "@nextui-org/use-infinite-scroll": "workspace:*",
     "@nextui-org/use-is-mobile": "workspace:*",\n- packages/components/accordion/src/use-accordion-item.ts (modified, 10 changes)\n  Patch: @@ -67,6 +67,7 @@ export function useAccordionItem<T extends object = {}>(props: UseAccordionItemP
   } = props;
 
   const Component = as || "div";
+  const shouldFilterDOMProps = typeof Component === "string";
 
   const domRef = useDOMRef<HTMLButtonElement>(ref);
 
@@ -132,10 +133,15 @@ export function useAccordionItem<T extends object = {}>(props: UseAccordionItemP
         "data-open": dataAttr(isOpen),
         "data-disabled": dataAttr(isDisabled),
         className: slots.base({class: baseStyles}),
-        ...mergeProps(filterDOMProps(otherProps), props),
+        ...mergeProps(
+          filterDOMProps(otherProps, {
+            enabled: shouldFilterDOMProps,
+          }),
+          props,
+        ),
       };
     },
-    [baseStyles, otherProps, slots, item.props, isOpen, isDisabled],
+    [baseStyles, shouldFilterDOMProps, otherProps, slots, item.props, isOpen, isDisabled],
   );
 
   const getButtonProps: PropGetter = (props = {}) => {\n- packages/components/badge/src/badge.tsx (modified, 7 changes)\n  Patch: @@ -1,6 +1,6 @@
 import type {ReactNode} from "react";
 
-import {forwardRef} from "@nextui-org/system";
+import {forwardRef} from "@nextui-org/system/utils";
 
 import {UseBadgeProps, useBadge} from "./use-badge";
 
@@ -11,13 +11,14 @@ export interface BadgeProps extends UseBadgeProps {
 const Badge = forwardRef<"span", BadgeProps>((props, ref) => {
   const {Component, children, content, slots, classNames, getBadgeProps} = useBadge({
     ...props,
-    ref,
   });
 
   return (
     <div className={slots.base({class: classNames?.base})}>
       {children}
-      <Component {...getBadgeProps()}>{content}</Component>
+      <Component ref={ref} {...getBadgeProps()}>
+        {content}
+      </Component>
     </div>
   );
 });\n- packages/components/badge/src/use-badge.ts (modified, 9 changes)\n  Patch: @@ -2,8 +2,8 @@ import type {BadgeSlots, BadgeVariantProps, SlotsToClasses} from "@nextui-org/th
 import type {ReactNode} from "react";
 
 import {badge} from "@nextui-org/theme";
-import {HTMLNextUIProps, mapPropsVariants, PropGetter} from "@nextui-org/system";
-import {useDOMRef} from "@nextui-org/react-utils";
+import {HTMLNextUIProps, PropGetter} from "@nextui-org/system/types";
+import {mapPropsVariants} from "@nextui-org/system/utils";
 import {clsx} from "@nextui-org/shared-utils";
 import {ReactRef} from "@nextui-org/react-utils";
 import {useMemo} from "react";
@@ -41,12 +41,10 @@ export type UseBadgeProps = Props & BadgeVariantProps;
 export function useBadge(originalProps: UseBadgeProps) {
   const [props, variantProps] = mapPropsVariants(originalProps, badge.variantKeys);
 
-  const {as, ref, children, className, content, classNames, ...otherProps} = props;
+  const {as, children, className, content, classNames, ...otherProps} = props;
 
   const Component = as || "span";
 
-  const domRef = useDOMRef(ref);
-
   const isOneChar = useMemo(
     () => String(content)?.length === 1 || originalProps?.isOneChar,
     [content, originalProps?.isOneChar],
@@ -68,7 +66,6 @@ export function useBadge(originalProps: UseBadgeProps) {
 
   const getBadgeProps: PropGetter = () => {
     return {
-      ref: domRef,
       className: slots.badge({class: baseStyles}),
       "data-invisible": originalProps.isInvisible,
       ...otherProps,\n- packages/components/badge/tsup.config.ts (modified, 1 changes)\n  Patch: @@ -4,5 +4,4 @@ export default defineConfig({
   clean: true,
   target: "es2019",
   format: ["cjs", "esm"],
-  banner: {js: '"use client";'},
 });\n- packages/components/button/src/use-button.ts (modified, 6 changes)\n  Patch: @@ -92,6 +92,7 @@ export function useButton(props: UseButtonProps) {
   } = props;
 
   const Component = as || "button";
+  const shouldFilterDOMProps = typeof Component === "string";
 
   const domRef = useDOMRef(ref);
 
@@ -164,7 +165,9 @@ export function useButton(props: UseButtonProps) {
         ariaButtonProps,
         focusProps,
         hoverProps,
-        filterDOMProps(otherProps),
+        filterDOMProps(otherProps, {
+          enabled: shouldFilterDOMProps,
+        }),
         filterDOMProps(props),
       ),
     }),
@@ -173,6 +176,7 @@ export function useButton(props: UseButtonProps) {
       isDisabled,
       isFocused,
       isPressed,
+      shouldFilterDOMProps,
       isFocusVisible,
       isHovered,
       ariaButtonProps,\n- packages/components/card/src/use-card.ts (modified, 6 changes)\n  Patch: @@ -81,6 +81,7 @@ export function useCard(originalProps: UseCardProps) {
 
   const domRef = useDOMRef<HTMLDivElement>(ref);
   const Component = as || (originalProps.isPressable ? "button" : "div");
+  const shouldFilterDOMProps = typeof Component === "string";
 
   const baseStyles = clsx(classNames?.base, className);
 
@@ -154,7 +155,9 @@ export function useCard(originalProps: UseCardProps) {
         ...mergeProps(
           originalProps.isPressable ? {...buttonProps, ...focusProps, role: "button"} : {},
           originalProps.isHoverable ? hoverProps : {},
-          filterDOMProps(otherProps),
+          filterDOMProps(otherProps, {
+            enabled: shouldFilterDOMProps,
+          }),
           filterDOMProps(props),
         ),
       };
@@ -163,6 +166,7 @@ export function useCard(originalProps: UseCardProps) {
       domRef,
       slots,
       baseStyles,
+      shouldFilterDOMProps,
       originalProps.isPressable,
       originalProps.isHoverable,
       originalProps.isDisabled,\n- packages/components/code/src/code.tsx (modified, 10 changes)\n  Patch: @@ -1,13 +1,17 @@
-import {forwardRef} from "@nextui-org/system";
+import {forwardRef} from "@nextui-org/system/utils";
 
 import {useCode, UseCodeProps} from "./use-code";
 
 export interface CodeProps extends UseCodeProps {}
 
 const Code = forwardRef<"div", CodeProps>((props, ref) => {
-  const {Component, children, getCodeProps} = useCode({...props, ref});
+  const {Component, children, getCodeProps} = useCode({...props});
 
-  return <Component {...getCodeProps()}>{children}</Component>;
+  return (
+    <Component ref={ref} {...getCodeProps()}>
+      {children}
+    </Component>
+  );
 });
 
 Code.displayName = "NextUI.Code";\n- packages/components/code/src/use-code.ts (modified, 9 changes)\n  Patch: @@ -1,8 +1,8 @@
 import type {CodeVariantProps} from "@nextui-org/theme";
 
 import {code} from "@nextui-org/theme";
-import {HTMLNextUIProps, PropGetter, mapPropsVariants} from "@nextui-org/system";
-import {useDOMRef} from "@nextui-org/react-utils";
+import {HTMLNextUIProps, PropGetter} from "@nextui-org/system/types";
+import {mapPropsVariants} from "@nextui-org/system/utils";
 import {ReactRef} from "@nextui-org/react-utils";
 import {useMemo} from "react";
 
@@ -16,12 +16,10 @@ export interface UseCodeProps extends HTMLNextUIProps<"code">, CodeVariantProps
 export function useCode(originalProps: UseCodeProps) {
   const [props, variantProps] = mapPropsVariants(originalProps, code.variantKeys);
 
-  const {ref, as, children, className, ...otherProps} = props;
+  const {as, children, className, ...otherProps} = props;
 
   const Component = as || "code";
 
-  const domRef = useDOMRef(ref);
-
   const classNames = useMemo(
     () =>
       code({
@@ -33,7 +31,6 @@ export function useCode(originalProps: UseCodeProps) {
 
   const getCodeProps: PropGetter = () => {
     return {
-      ref: domRef,
       className: classNames,
       ...otherProps,
     };\n- packages/components/code/tsup.config.ts (modified, 1 changes)\n  Patch: @@ -4,5 +4,4 @@ export default defineConfig({
   clean: true,
   target: "es2019",
   format: ["cjs", "esm"],
-  banner: {js: '"use client";'},
 });\n- packages/components/divider/package.json (modified, 5 changes)\n  Patch: @@ -38,11 +38,10 @@
   },
   "dependencies": {
     "@nextui-org/shared-utils": "workspace:*",
-    "@nextui-org/react-utils": "workspace:*",
+    "@nextui-org/react-rsc-utils": "workspace:*",
     "@nextui-org/system": "workspace:*",
     "@nextui-org/theme": "workspace:*",
-    "@react-aria/separator": "^3.3.3",
-    "@react-aria/utils": "^3.18.0"
+    "@react-types/shared": "^3.18.1"
   },
   "devDependencies": {
     "clean-package": "2.2.0",\n- packages/components/divider/src/divider.tsx (modified, 6 changes)\n  Patch: @@ -1,13 +1,13 @@
-import {forwardRef} from "@nextui-org/system";
+import {forwardRef} from "@nextui-org/system/utils";
 
 import {UseDividerProps, useDivider} from "./use-divider";
 
 export interface DividerProps extends Omit<UseDividerProps, "children"> {}
 
 const Divider = forwardRef<"div", DividerProps>((props, ref) => {
-  const {Component, getDividerProps} = useDivider({ref, ...props});
+  const {Component, getDividerProps} = useDivider({...props});
 
-  return <Component {...getDividerProps()} />;
+  return <Component ref={ref} {...getDividerProps()} />;
 });
 
 Divider.displayName = "NextUI.Divider";\n- packages/components/divider/src/use-divider.ts (modified, 18 changes)\n  Patch: @@ -1,11 +1,10 @@
 import type {DividerVariantProps} from "@nextui-org/theme";
 
-import {SeparatorProps as AriaSeparatorProps, useSeparator} from "@react-aria/separator";
-import {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
+import {HTMLNextUIProps, PropGetter} from "@nextui-org/system/types";
 import {divider} from "@nextui-org/theme";
-import {useDOMRef} from "@nextui-org/react-utils";
 import {Ref, useCallback, useMemo} from "react";
-import {mergeProps} from "@react-aria/utils";
+
+import {SeparatorProps as AriaSeparatorProps, useSeparator} from "./use-separator";
 
 interface Props extends HTMLNextUIProps<"hr"> {
   /**
@@ -17,12 +16,10 @@ interface Props extends HTMLNextUIProps<"hr"> {
 export type UseDividerProps = Props & DividerVariantProps & Omit<AriaSeparatorProps, "elementType">;
 
 export function useDivider(props: UseDividerProps) {
-  const {ref, as, className, orientation, ...otherProps} = props;
+  const {as, className, orientation, ...otherProps} = props;
 
   let Component = as || "hr";
 
-  const domRef = useDOMRef(ref);
-
   if (Component === "hr" && orientation === "vertical") {
     Component = "div";
   }
@@ -43,13 +40,14 @@ export function useDivider(props: UseDividerProps) {
 
   const getDividerProps: PropGetter = useCallback(
     (props = {}) => ({
-      ref: domRef,
       className: styles,
       role: "separator",
       "data-orientation": orientation,
-      ...mergeProps(separatorProps, otherProps, props),
+      ...separatorProps,
+      ...otherProps,
+      ...props,
     }),
-    [domRef, styles, orientation, separatorProps, otherProps],
+    [styles, orientation, separatorProps, otherProps],
   );
 
   return {Component, getDividerProps};\n- packages/components/divider/src/use-separator.ts (added, 53 changes)\n  Patch: @@ -0,0 +1,53 @@
+/*
+ * Based on @react-aria/separator but with some changes to support RSC.
+ */
+
+import type {AriaLabelingProps, DOMAttributes, DOMProps, Orientation} from "@react-types/shared";
+
+import {filterDOMProps} from "@nextui-org/react-rsc-utils";
+
+export interface SeparatorProps extends DOMProps, AriaLabelingProps {
+  /**
+   * The orientation of the separator.
+   * @default 'horizontal'
+   */
+  orientation?: Orientation;
+  /** The HTML element type that will be used to render the separator. */
+  elementType?: string;
+}
+
+export interface SeparatorAria {
+  /** Props for the separator element. */
+  separatorProps: DOMAttributes;
+}
+
+/**
+ * Provides the accessibility implementation for a separator.
+ * A separator is a visual divider between two groups of content,
+ * e.g. groups of menu items or sections of a page.
+ */
+export function useSeparator(props: SeparatorProps): SeparatorAria {
+  let domProps = filterDOMProps(props, {
+    enabled: typeof props.elementType === "string",
+  });
+
+  let ariaOrientation: Orientation | undefined;
+
+  // if orientation is horizontal, aria-orientation default is horizontal, so we leave it undefined
+  // if it's vertical, we need to specify it
+  if (props.orientation === "vertical") {
+    ariaOrientation = "vertical";
+  }
+  // hr elements implicitly have role = separator and a horizontal orientation
+  if (props.elementType !== "hr") {
+    return {
+      separatorProps: {
+        ...domProps,
+        role: "separator",
+        "aria-orientation": ariaOrientation,
+      },
+    };
+  }
+
+  return {separatorProps: domProps};
+}\n- packages/components/divider/tsup.config.ts (modified, 1 changes)\n  Patch: @@ -4,5 +4,4 @@ export default defineConfig({
   clean: true,
   target: "es2019",
   format: ["cjs", "esm"],
-  banner: {js: '"use client";'},
 });\n- packages/components/dropdown/src/use-dropdown-item.ts (modified, 5 changes)\n  Patch: @@ -59,6 +59,7 @@ export function useDropdownItem<T extends object>(originalProps: UseDropdownItem
   const domRef = useRef<HTMLLIElement>(null);
 
   const Component = as || "li";
+  const shouldFilterDOMProps = typeof Component === "string";
 
   const {rendered, key} = item;
 
@@ -127,7 +128,9 @@ export function useDropdownItem<T extends object>(originalProps: UseDropdownItem
       itemProps,
       isReadOnly ? {} : mergeProps(focusProps, pressProps),
       hoverProps,
-      filterDOMProps(otherProps),
+      filterDOMProps(otherProps, {
+        enabled: shouldFilterDOMProps,
+      }),
       props,
     ),
     "data-focus": dataAttr(isFocused),\n- packages/components/input/src/use-input.ts (modified, 1 changes)\n  Patch: @@ -93,6 +93,7 @@ export function useInput<T extends HTMLInputElement | HTMLTextAreaElement = HTML
   );
 
   const Component = as || "div";
+
   const baseStyles = clsx(classNames?.base, className, !!inputValue ? "is-filled" : "");
   const isMultiline = originalProps.isMultiline;
 \n- packages/components/kbd/src/kbd.tsx (modified, 5 changes)\n  Patch: @@ -1,5 +1,5 @@
 import {useMemo} from "react";
-import {forwardRef} from "@nextui-org/system";
+import {forwardRef} from "@nextui-org/system/utils";
 
 import {UseKbdProps, useKbd} from "./use-kbd";
 import {kbdKeysLabelMap, kbdKeysMap} from "./utils";
@@ -9,7 +9,6 @@ export interface KbdProps extends UseKbdProps {}
 const Kbd = forwardRef<"kbd", KbdProps>((props, ref) => {
   const {Component, children, slots, classNames, keysToRender, getKbdProps} = useKbd({
     ...props,
-    ref,
   });
 
   const keysContent = useMemo(() => {
@@ -25,7 +24,7 @@ const Kbd = forwardRef<"kbd", KbdProps>((props, ref) => {
   }, [keysToRender]);
 
   return (
-    <Component {...getKbdProps()}>
+    <Component ref={ref} {...getKbdProps()}>
       {keysContent}
       {children && <span className={slots.content({class: classNames?.content})}>{children}</span>}
     </Component>\n
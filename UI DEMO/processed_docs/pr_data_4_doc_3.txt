Pull Request Number: 3966
Title: fix(input): fixed a sliding issue caused by the helper wrapper
Base Branch: beta/release-next
Head Branch: helper-wrapper-div
Author: mstfblci
URL: https://github.com/nextui-org/nextui/pull/3966
State: MERGED
Created At: 2024-10-30T20:46:40Z
Merged At: 2024-11-05T19:03:00Z
Participants: mstfblci, wingkwong, jrgarciadev

Description:
Closes # 
üìù Description
If isInvalid was false but errorMessage was filled, helper-wrapper was created and a sliding problem was experienced. This was prevented by updating the conditions.
‚õ≥Ô∏è Current behavior (updates)

üöÄ New behavior

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


New Features

Enhanced conditional rendering for helper text in Input, Textarea, and Select components, ensuring clarity based on validation states.



Bug Fixes

Improved visual stability by preventing unnecessary layout shifts related to the rendering of helper wrappers.



Documentation

Updated type definitions to reflect changes in Input and Select components.

Commits:
- If it is false and there is an error message or description it will create a div\n- Update packages/components/input/src/input.tsx\n- Update packages/components/select/src/select.tsx\n- Update packages/components/input/src/textarea.tsx\n- add changeset\n- changeset update\n

Labels:
üëÄ Status: To Review

Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 1e3014a74e02825a1f4af80a632d8b916b362411

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 4 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/select       | Patch |
| @nextui-org/input        | Patch |
| @nextui-org/react        | Patch |
| @nextui-org/autocomplete | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/mstfblci/nextui/new/helper-wrapper-div?filename=.changeset/eleven-houses-tickle.md&value=---%0A%22%40nextui-org%2Finput%22%3A%20patch%0A%22%40nextui-org%2Fselect%22%3A%20patch%0A---%0A%0Afix(input)%3A%20fixed%20a%20sliding%20issue%20caused%20by%20the%20helper%20wrapper%0A)

\n- vercel: @mstfblci is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%22e12549874c3e00a59b16f8707ffc51d3d58a7bcb%22%7D%2C%22id%22%3A%22QmdrSirktSdJ81qeGj1qE5fb7PsPHFDB2iUnJ4sYPVcnFp%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A3966%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
The pull request introduces modifications to the `Input`, `Textarea`, and `Select` components within the codebase. Key changes include updates to the conditional rendering logic for helper text and wrappers, ensuring they display only when relevant information (like error messages or descriptions) is present. The memoization logic has been refined for clarity and readability, simplifying the conditions under which helper content is rendered. Additionally, there are minor updates to type definitions in the `Input` and `Select` components, but no significant alterations to the overall functionality or interface of these components.

## Changes

| File Path                                      | Change Summary                                                                                                                                                        |
|------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `packages/components/input/src/input.tsx`     | Updated helper wrapper logic to check for `isInvalid`, `errorMessage`, and `description`. Simplified conditional rendering structure. Updated `InputProps` interface. |
| `packages/components/input/src/textarea.tsx`  | Modified helper text rendering logic to check for `isInvalid`, `errorMessage`, and `description`. Adjusted JSX structure for new conditional logic.                  |
| `packages/components/select/src/select.tsx`   | Changed helper wrapper logic to check for `isInvalid`, `errorMessage`, and `description`. Simplified rendering logic for helper content. Updated `SelectProps` type alias. |
| `.changeset/empty-helper-wrapper-div.md`      | Fixed UI sliding issue by ensuring helper wrapper is not rendered when `isInvalid` is false, improving visual stability.                                              |

## Possibly related PRs
- **#2041**: The changes in the `Textarea` component's helper text rendering logic are similar to the modifications made in the `Input` component regarding the helper wrapper, indicating a related focus on conditional rendering based on component state.
- **#3768**: The fix for the `fullWidth` functionality in the `Input` component directly relates to the changes made in the main PR, as both involve adjustments to the rendering behavior of the input components.
- **#3774**: The update ensuring that the clear button is not focusable when the input is disabled is closely related to the changes in the `Input` component's rendering logic, particularly regarding user interaction and accessibility.
- **#3869**: The adjustments made to the label placement in the `Input` component align with the changes in the main PR, focusing on improving the user interface and usability of the input components.

## Suggested labels
`üëÄ Status: In Review`

## Suggested reviewers
- jrgarciadev
- wingkwong

<!-- walkthrough_end -->





---

<details>
<summary>üìú Recent review details</summary>

**Configuration used: .coderabbit.yaml**
**Review profile: CHILL**

<details>
<summary>üì• Commits</summary>

Reviewing files that changed from the base of the PR and between 4f9378fb8d0aa4086f7a26d2b0693b75036421a1 and 1e3014a74e02825a1f4af80a632d8b916b362411.

</details>

<details>
<summary>üìí Files selected for processing (1)</summary>

* `.changeset/empty-helper-wrapper-div.md` (1 hunks)

</details>

<details>
<summary>üöß Files skipped from review as they are similar to previous changes (1)</summary>

* .changeset/empty-helper-wrapper-div.md

</details>

</details>
<!-- internal state start -->


<!-- FAHghAtBAEAqAWBLAztF0CGA7TBXALgPYQDmAplmQE4b5kAm0AxoQLasX4Bc0ADldEIAjAFZkm+RADcyqIQE9mhetQxChifADoMiaFAB8wY+CjGAxOegAFAErQAyrnYYq84wjJ9cAGx/QqMgBHXFl8aEl8HwZoACIAM0QADwAKRCxeAgBKHkSkmIxoZB9EenSSNGRkUOYMXGQYhQj4LxafXmpoAHcaXg6qWO6MVGqhVk06Rib8Fuh6ztZkfHihHyY9bEZ0Us5ERILUO2gsZyFOgGYATgA2a8EcAHFNAAlcIS04JEP7XUWIwgCskIPhkmCKHXWiSYlWqXkCPloMSIzVaZHanR6GD6nXSKOgADkyEl8ABVACS0HiNA4XUIVAA1loPLMULDBEwmLgqIFGF0WjgZl4AAYoMlYKQYEr0IVKLBlSSEHBdYaUyUNAA00HkZHCgugQuoVDpAFlZMgMOQZcrULxCJkEZMPmKUQ00FgltgmLJNXq2v1ur1/dbmIFEfRNYFqj5JFgKrjCsVSuU+EbVmRWN1NEgBbN5gJ0nQqPEMF6PrAARh6PRI6gZigfbMWHLNIhFah4nSQ2RaMnfWig4GMdQvLhePQw/8U2QZFhdV8YTUqWx2ZzueUmcBPDZ7PRCLJjoRwukykxEZgsIohKH6cmmPBsORUJtoLv91hDynCFIduDxHtENCKj4LoPioIqeKroEs7QGc97fp2ZzJqwyj/jEnZ6pQXQwWQcGtvms5GvQuBevQHwAIJVi2iqSj48gNsOmCBAexxkFhRKFlgkovmQHRyhQ6z7pWKi8lmzToHYmrPpomD0C0kaTnqJC4DsJSUII8TQKwuiztpyaFB2nINIwz7jFgiBaf4DThIQGl3g+sgbgAYp28RcoKAhASByD0d4fiAiEYS1DgZyYByZoFHOXgdn4hBdMmJK2AAMjwADaRzmFctwALopPA+D4LwyBcAA9MVJBZm8WgsKwxWUMSykQHSJC1exynFfaPjFZl1xZBuljQAAwmwHCzqgTguG4xjOnq1UjfgIziAqOA2XiHX+aESw+XmmlLCsax6PwX47IwTAIlQ/6nktgIkK4ZSxhB96xvuWkqGWLSKO+kzNLQeKjuOdCAshMioOxNDgiWyZNMgN59L2sx+tQECYtiHnSN0/JoEeqCfSxDAMG96CViI9T4HNMnVuFtazImd1xlUNQzD9eYg0k/SIPxMREV4yJ6rgWCUF6VSuIoUEqOd90rX26JUEjg5UBu5ZoH4JM0ADermbwJbWRpM2PY+mqLMsqzrG6p24MJ2Edkxz4YPEhZFEwgQUMg8CHsgb1eLEZxW2QgzmRa+4u7FeIFtQxZepmMx4qDCaa+s92nvMUyKFL/Sy1i/SanyiDRHisS24WftaeQ3HIe6+Cq/u6usIdMiMAi8iEAQkeu83vP8+IZrC+D8ckATqDftUXHTjsWAR9UfR0vN0fxPEi3SBQZrqXieRoDX0RzTEuJ6nYG4APIyDQfg+bNnCoEgJDwCUl+RSmWsAVxZyUIk0+S42evPZWZCaumvD3sgiAABecMvAayNDIMmuJtqhyLCWLwsEMDwQEE0NE5l0g9nunqGmyZWQ1GGMgQg6wJxxSjqnRGyN+gbkMCYSAMAKCMBWnUIgpBF6VxOsNTgPB+CCFEPPYGMFFAsDFmoDQ2hdD6AgEYUwMAEDbCfDgJhxByCUDYUodgnCAgYCwtUCal5BHKFUOoTQOg9DUJoWYYAcd6QB2QMVaqtpKCjWKukTI+BirICoEwZxGQCBaHmkkLgwBYjBOAP1MiZIWEqInDorSbhl52SesgZkXgyiz00ihfYVNhRilcTKexipOBun1FYmxdi2AOLPt41x7jPFVN8f4oUHsUz+ziQkku2wcxeB8IQcq0IraAj4uLCoZCBAUOoE0ps8pWw4HfFhO84h6TtnQrSEMmhqCIAwDwaSh9UJUx+kKf+zx+zUBlOgCueC5TfUikxdA8JpzYHCE2Og0FkRlGQLwBuWckB3kqNxQsplGgp1mPwWQHNl5kCzJ0bA0BDSdg4ELEufIKD6lFOKSUpRTm1ioDUTshR3xYAgL/fAigVDIEdogXgS1+4yWJksMmkpCxZNlBXYElJulYWRM7Lk3N4bHNGXLX5ipaIDLFjEJFnSbmoA4Ngcorl/DpCtlpK6yIQUNFnBuCiUzqJ+DoniJY2KJDcuXjNRUWrOL+FFus+6JDsx4gRvyjOnR/7YWRQA9eqFSKfC8CC+C9QWJLCRNQTicS7SqCIAIZ1ZxkWBA+XAkSUcEzlFzpMqiOYfrzKYIsyk6FgWRjBYwnAsKBDwvNIijGIpkBiglFKTFERsXf24sWXwMZhkAktUMvEpLyWUumWgDSiCQJqGiNStpXgKCPUFhBM6mhFBvy8EIrw2dc5aQLLpTB1MMAcEpHzCQ0yuJN3wNVMgG58QAkPHJIoiASBmShA85gH9awAj1N03pP9uSdkevQVSJBNSdieUafw8R2WMW9Xm6C29ZipPiH1KwZFoxhumY+zt4gzo9jbOC1mU80ICEyKsACMLZwtlkMYGAYpCzhxHGOMMPAhQ5IINYI0hUZTsXoagIUe9xj4BACSBodH8AMbtN5OIKBjTNpzukX2BhTk4CFCUx8ZSa4FKcS4ggNSvEqe0A0oJITgBQAgMYOTsgFMVOUz4txHivF0GJK4bsfjkABO07EUJsGInKLDTEGJ3cVqjqSZuSDewNLIVSezJlQpYDsRsxgPJ5SlNHhk4Z2x+THHzTqeZ2pVngKhjs0kIUmp3l/lvTqgjE6QHQBffh/pbzY3yGTPaiI7EJmmtTVxdtyZ+l1Yy9ASNZBkV/QnEuDMib17zpaJm7NAgDnDCOdLGUyJCjISYicT0MQU3KvvI80bWahDnpRZWtFNbzyMD1Kq/NGkIXuX1EW00CKyAyk7EKLt50e2KkaZ8dAo7MDwaoEy/9rKgOxR/u6LkcMfodfYr8qrDc0JYGFeKwE0QJTQVW4hkDmkdQasoktGiuq8WsWgBKc6Q7hRB18PQBwrsugAFF31UFrQWQixEkQAn4liKMZ4TXNiupVlA1XStFrRzdySlzJvIGm/0Ias5OC1pUIkSgR2ARAWoACvtMLIUCGhfzktAdBDq+4mSp7V0Sc+CmF4IOXQsBNIAFIOAABpFHOYapi3XkVExJkzwEQHFouhG/ZITBBxPAPXV4TCsozVIf1d2VgqkeVwnoVaio5WmBNK/KoPyrkx5Y5KMS41swwsRdDNFxTyXAbaVQKuiQWdRL6UIX68CgRZe1eDmD4kT4mKQ4wNqKYwxocQRi8lgA5CMYCdAT0Ah890BiL1uZPsgyh1waH3QYdtFQL6nZcMlGhLsSQDkLCwa+wvpDeoVCnXn0tMCZ3MMr+w94PDm/CPb98zAU997fcKVnyf1WKOVpEmX6vnDbwN8CNIgQsmRgknNdMLEEtjNYtbEGhogJA1N3E0RFpstAkwDnNoBwlIl3NGBPMQ1bIH1kkXwAt0lgsq5c8HBkCJBC8TM4tikSxrF5MktKk4DFpEDWCJBstctfxIQH4itx1PRStE9xsRV48us+VmVOAmkDk+UAB1OWGUDgZCIBBfA8LCdIM2UlMEEPZHcCRmDbBZJZAQY7MDCOFaA0Gna7UtW7dGZFCtKtdFaUX5c5BtSURUEgABFQe9BZNre7R7ClJaV7WRVAD7evCTH7RUFlQDdlQHaoDtfQu1CQp5QpdAdvTve4WHDGdyUBVAO5RHOLRVVQlVMDbQIg1re6YQ/pEZSQ6CZ3HAN1D5D1ARNlWgZ5UrSgANdhTnPdSyYfdMM+N0ObS9WMZNJrTPbwzNJpH1VsP1fVYifAblL5ACeAIoHiU/NERQe5HwXACcew/bDFQ7fUfw57LAbguowEWNEiFuMEBbU3CuXQG+K2ZUKgYyPoI0EsFYhI+YULI3MnCnanI0WnfHVwDZNMalAQsefcUMccDQLPRQEybSYCdIJlFPI+Xog1BYpiOdNRWg/eC7TWFfc/XvIvTgTUDQ7Y2mPEIUdtSg+AyYMkOgVgGUZ8akuPKgMUE8WgOkGUdPXdNsCMdMbSOYMeD+LYTpRAAQRPRrEk2cQfQYsOOBQ4n/LDRgLfELVHcvfASvKOd8FiLCDgGYZQMCHDRjagB/QYhnEiGDTA/fM/N/FJOfT/dDb/S/P/G/QAtU4jXTOAeQDoT7DZVAPrSYGjZUlfCIX0rwWkxaATQqEAWAGFYkVjHhMQCQaAAAXmTMWgMHTJsEY2QDjOzIADJoAABvevAAfh4FsDIHiBAGeFgGNESkpw3k4AMAAF8ABuaTegzNUpZgpxDgtLLxQcrg6AFIXUj7XEABa9WgRYmCZuZI+qbHeHe5F5GfedPvTgOU+oAOXqRzEjCxKqB9HUYqIleQCAe1dOFGCAMoKQLQVgegNAkJMJVzVhaJZwWJWdAg33Ig8fISGsMEckIoKUHBemWPB0d3PUcoioRhcQ6WAMR1fCHEmAykI0DMPUIUAAATqgWMQEaioGakHOZOF2wtajwqalSxlASw+AcAhAumxx8lXi5XkgSOqLGXzGxg/HbTFSyNz1RWrQOI9ABnQGLFAgbWnGRT2HPEu0sK7ktF+RO3VTeyfHoFpVJhSJrnAXIK8EHh2N6LUHE2z2xOgUl1gQjiaB9V2Huj5gFi7jiQbgPSKCQDtndl3xtMLAP3tO4g/08pdN/2v3X3w09MfwJArFtJRx5nf1QztL8pVJ13dKCvv3VK6Eny/lAJ0zMWkQIwYX7QICUTfK+lPlnB4BoG0Q/O7iaAXRoCMTEVMUkVAFoTUU4wAH1ShkBmrAhvxWIGBmqPQwzMrGqyAABGAAJgAFYAAWS4AADgAHYJqmBzgyAAAGZajAMay4IQIa64eIOa5a2a2eJgMaoa+gc4egMa6ajAWaoQJgIQCRKRRq5apa+IIapga4c4c4Ca0626y4Cakaua+gIa+IEasgT6ia0anasgWa6a84Iay4MgBa+6hqqAaACa+IS4c4aGlYaa+gNajACa5a6ana2ajAEa64egEaoQZa64DGoQWasap664P6oajAIapGrKoa0G5aoaiaq6iala/68a1m+IXm3ata96ka+gaaoQS4baoQc4a4Ea8GtmgalG2aTQVq+gdqzq9mFK+gZq+he6oAA -->

<!-- internal state end -->
<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- mstfblci: @wingkwong  This removes extra spacing by skipping the helper-wrapper div when it‚Äôs not needed.

## before
![Ekran Resmi 2024-10-31 09 24 32](https://github.com/user-attachments/assets/f59ca89d-7820-488d-a625-54a7df292833)
![Ekran Resmi 2024-10-31 09 23 45](https://github.com/user-attachments/assets/9dc7084c-df84-431b-8b00-70b03e1e21a4)

## after
![Ekran Resmi 2024-10-31 09 38 03](https://github.com/user-attachments/assets/1f9f1ed6-2ea0-4424-abe7-1ae920cfd876)
\n- mstfblci: Did you verify the changes? @wingkwong \n- wingkwong: not yet. you will see the comments here when I do.\n- jrgarciadev: Thank you! @mstfblci it will be available in the next beta version `2.5.0-beta.2` \n

Files Changed:
- .changeset/empty-helper-wrapper-div.md (added, 6 changes)\n  Patch: @@ -0,0 +1,6 @@
+---
+"@nextui-org/select": patch
+"@nextui-org/input": patch
+---
+
+- Fixed a UI sliding issue caused by the helper wrapper being rendered when `isInvalid` was false but `errorMessage` was present\n- packages/components/input/src/input.tsx (modified, 11 changes)\n  Patch: @@ -43,15 +43,18 @@ const Input = forwardRef<"input", InputProps>((props, ref) => {
   }, [isClearable, getClearButtonProps]);
 
   const helperWrapper = useMemo(() => {
-    if (!hasHelper) return null;
+    const shouldShowError = isInvalid && errorMessage;
+    const hasContent = shouldShowError || description;
+
+    if (!hasHelper || !hasContent) return null;
 
     return (
       <div {...getHelperWrapperProps()}>
-        {isInvalid && errorMessage ? (
+        {shouldShowError ? (
           <div {...getErrorMessageProps()}>{errorMessage}</div>
-        ) : description ? (
+        ) : (
           <div {...getDescriptionProps()}>{description}</div>
-        ) : null}
+        )}
       </div>
     );
   }, [\n- packages/components/input/src/textarea.tsx (modified, 11 changes)\n  Patch: @@ -136,20 +136,23 @@ const Textarea = forwardRef<"textarea", TextAreaProps>(
       return <div {...getInnerWrapperProps()}>{content}</div>;
     }, [startContent, inputProps, endContent, getInnerWrapperProps]);
 
+    const shouldShowError = isInvalid && errorMessage;
+    const hasHelperContent = shouldShowError || description;
+
     return (
       <Component {...getBaseProps()}>
         {shouldLabelBeOutside ? labelContent : null}
         <div {...getInputWrapperProps()} data-has-multiple-rows={dataAttr(hasMultipleRows)}>
           {shouldLabelBeInside ? labelContent : null}
           {innerWrapper}
         </div>
-        {hasHelper ? (
+        {hasHelper && hasHelperContent ? (
           <div {...getHelperWrapperProps()}>
-            {isInvalid && errorMessage ? (
+            {shouldShowError ? (
               <div {...getErrorMessageProps()}>{errorMessage}</div>
-            ) : description ? (
+            ) : (
               <div {...getDescriptionProps()}>{description}</div>
-            ) : null}
+            )}
           </div>
         ) : null}
       </Component>\n- packages/components/select/src/select.tsx (modified, 11 changes)\n  Patch: @@ -53,15 +53,18 @@ function Select<T extends object>(props: Props<T>, ref: ForwardedRef<HTMLSelectE
   const clonedIcon = cloneElement(selectorIcon as ReactElement, getSelectorIconProps());
 
   const helperWrapper = useMemo(() => {
-    if (!hasHelper) return null;
+    const shouldShowError = isInvalid && errorMessage;
+    const hasContent = shouldShowError || description;
+
+    if (!hasHelper || !hasContent) return null;
 
     return (
       <div {...getHelperWrapperProps()}>
-        {isInvalid && errorMessage ? (
+        {shouldShowError ? (
           <div {...getErrorMessageProps()}>{errorMessage}</div>
-        ) : description ? (
+        ) : (
           <div {...getDescriptionProps()}>{description}</div>
-        ) : null}
+        )}
       </div>
     );
   }, [\n
Pull Request Number: 3392
Title: fix(accordion): pass missing `dividerProps` to Divider
Base Branch: canary
Head Branch: fix/eng-1093
Author: chirokas
URL: https://github.com/nextui-org/nextui/pull/3392
State: MERGED
Created At: 2024-07-02T12:35:27Z
Merged At: 2024-07-06T09:47:53Z
Participants: chirokas, jrgarciadev, mauriciabad, wingkwong

Description:
Closes #3390
üìù Description
Pass missing dividerProps to Divider
‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


New Features

Accordion component now supports dividerProps to customize dividers between items.



Tests

Added test cases to ensure dividerProps are correctly passed to the divider component within the Accordion.

Commits:
- chore(deps): pnpm-lock.yaml\n- fix(accordion): pass missing `dividerProps` to Divider\n- Merge branch 'fix/pnpm-lock' into pr/3392\n- chore(changeset): add issue number\n- Merge branch 'canary' into pr/3392\n- Merge branch 'canary' into pr/3392\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 1f24ea478ace14a1f1f82932d1f3ae9e4e3ae6d7

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name                  | Type  |
| --------------------- | ----- |
| @nextui-org/accordion | Patch |
| @nextui-org/react     | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/chirokas/nextui/new/fix/eng-1093?filename=.changeset/stupid-hats-kiss.md&value=---%0A%22%40nextui-org%2Faccordion%22%3A%20patch%0A---%0A%0Afix(accordion)%3A%20pass%20missing%20%60dividerProps%60%20to%20Divider%0A)

\n- vercel: [vc]: #3Vxsr6g1xm3YT4pMUIfQXZfHWQSCApjUDhWbG2u+BY0=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvNFRZUnhjOVpSSHBIc1VVc0ptNlBhVDE5UDVCcSIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWNoaXJva2FzLWZpeC1lbmctMTA5My1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZm9yay1jaGlyb2thcy1maXgtZW5nLTEwOTMtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/4TYRxc9ZRHpHsUUsJm6PaT19P5Bq)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-chirokas-fix-eng-1093-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-chirokas-fix-eng-1093-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jul 6, 2024 7:53am |

\n- vercel: @chirokas is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%22e260a1af962667e512af36152b4df5b92cba07f6%22%7D%2C%22id%22%3A%22QmbJtz7rT1S9YViSCd8jqhK8UHgsqwBkBj5fpyQLu2aXwC%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A3392%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The recent changes to the `@nextui-org/accordion` package fix a bug with the `dividerProps` in the `Accordion` component. Now, the `AccordionGroup` accepts `dividerProps` and correctly passes them to the `Divider` component. Additionally, tests have been added to verify that the `dividerProps` are properly handled and applied, ensuring the intended customizations, like changing the divider color with a CSS class, are functional.

## Changes

| Files                                                          | Change Summaries                                                                                                                                                                                                 |
|----------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `.../accordion/__tests__/accordion.test.tsx`                   | Added a test case to verify that `dividerProps` are correctly passed to the `Divider` component.                                                                                                                  |
| `.../accordion/src/accordion.tsx`                              | Modified the `AccordionGroup` component to accept `dividerProps` and pass them to the `Divider` component when rendering dividers between accordion items.                                                        |
| `.changeset/many-wasps-move.md`                                | Documented the new functionality that involves patching the `@nextui-org/accordion` package to pass missing `dividerProps` to the `Divider`.                                                                      |

## Sequence Diagram(s)

No sequence diagrams as the changes are limited to extending a component property and adding a corresponding test case.

## Assessment against linked issues

| Objective                                                                   | Addressed | Explanation                   |
|-----------------------------------------------------------------------------|-----------|-------------------------------|
| Fix the bug where `dividerProps` do not work in the `Accordion` component (#3390) | ‚úÖ         |                               |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

# Existing changesets

# Existing changesets

.changeset/many-wasps-move.md: ## Summary
The new functionality introduced by the file `many-wasps-move.md` involves patching the `@nextui-org/accordion` package to pass missing `dividerProps` to Divider.

---

packages/components/accordion/__tests__/accordion.test.tsx: ### Summary

In the `accordion.test.tsx` file, a new test case was added to ensure that `dividerProps` are correctly passed to the divider component within the `Accordion` component. The test verifies that the divider component receives the specified `className` when rendered with specific props.

---

packages/components/accordion/src/accordion.tsx: ### Short Summary

In `packages/components/accordion/src/accordion.tsx`, the `AccordionGroup` component now accepts a new prop `dividerProps` and passes it to the `Divider` component when rendering the divider between items in the accordion.

### Alterations to the declarations of exported or public entities

- `dividerProps` added to the destructured object in `AccordionGroup` component in `packages/components/accordion/src/accordion.tsx`

# New changesets

.changeset/many-wasps-move.md: ## Summary
The new functionality introduced by the file `many-wasps-move.md` involves patching the `@nextui-org/accordion` package to pass missing `dividerProps` to Divider.


# New changesets

packages/components/accordion/__tests__/accordion.test.tsx: ### Summary

In the `accordion.test.tsx` file, a new test case was added to ensure that `dividerProps` are correctly passed to the divider component within the `Accordion` component. The test verifies that the divider component receives the specified `className` when rendered with specific props.



### Alterations to the declarations of exported or public entities

No alterations to the declarations of exported or public entities were identified in this diff.

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR summary

**Title**: fix(accordion): pass missing `dividerProps` to Divider

**User**: chirokas

**Number**: 3392

**URL**: [https://github.com/nextui-org/nextui/pull/3392](https://github.com/nextui-org/nextui/pull/3392)

**Description**:
This pull request addresses an issue where the `dividerProps` were not being passed to the Divider component within the Accordion component of the NextUI library. The changes ensure that `dividerProps` are correctly passed, allowing users to customize the divider, such as changing its color. The PR closes issue #3390.

## Objectives from linked issues

**Linked Issue**: [#3390](https://github.com/nextui-org/nextui/issues/3390)

**Title**: [BUG] - `dividerProps` in Accordion not working

**Description**:
- **NextUI Version**: 2.4.2
- **Bug Description**: The `dividerProps` property does not work within the Accordion component, specifically when trying to change the divider color.
- **Steps to Reproduce**:
  1. Import `Accordion` and `AccordionItem` from `@nextui-org/react`.
  2. Use the `Accordion` component with `dividerProps` set to change the divider color.
  3. Observe that the divider color does not change as expected.
- **Expected Behavior**: The divider color should change according to the `dividerProps` provided.
- **Example Code**:
  ```tsx
  import React from "react";
  import {Accordion, AccordionItem} from "@nextui-org/react";

  export default function App() {
    const defaultContent = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.";

    return (
      <Accordion
        dividerProps={{
          className: "bg-red-500", // <-- Not working
        }}
      >
        <AccordionItem key="1" aria-label="Accordion 1" title="Accordion 1">
          {defaultContent}
        </AccordionItem>
        <AccordionItem key="2" aria-label="Accordion 2" title="Accordion 2">
          {defaultContent}
        </AccordionItem>
        <AccordionItem key="3" aria-label="Accordion 3" title="Accordion 3">
          {defaultContent}
        </AccordionItem>
      </Accordion>
    );
  }
  ```
- **Operating System**: macOS
- **Browser**: Chrome

## Comments summary

**Comment by jrgarciadev**:
- jrgarciadev requested chirokas to fix the conflicts in the pull request.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

## Summary of generated summaries

The recent updates introduce new functionality to the `@nextui-org/accordion` package by adding support for `dividerProps` in the `AccordionGroup` component. This enhancement allows the `AccordionGroup` component to pass custom properties to the `Divider` component, enabling more flexible styling and behavior of dividers between accordion items.

Specifically, in the `packages/components/accordion/src/accordion.tsx` file, the `AccordionGroup` component now accepts a new prop, `dividerProps`, which is then passed to the `Divider` component. This change ensures that any specified properties, such as `className`, are correctly applied to the divider.

To verify this new functionality, a corresponding test case was added in the `packages/components/accordion/__tests__/accordion.test.tsx` file. This test checks that the `dividerProps` are correctly passed to the `Divider` component, ensuring that the `className` and other properties are properly rendered.

Overall, these changes enhance the flexibility and customization options available in the `AccordionGroup` component by allowing additional properties to be passed to the dividers.

## Alterations to the declarations of exported or public entities

### packages/components/accordion/src/accordion.tsx

- **Before:**
  ```typescript
  const AccordionGroup = ({ ...props }) => {
    // existing implementation
  };
  ```

- **After:**
  ```typescript
  const AccordionGroup = ({ dividerProps, ...props }) => {
    // updated implementation passing dividerProps to Divider
  };
  ```

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- e260a1af962667e512af36152b4df5b92cba07f6 -->
<!-- b5ab0eb1f0ad995fbcac9486545d88968dab2858 -->
<!-- 1f24ea478ace14a1f1f82932d1f3ae9e4e3ae6d7 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- jrgarciadev: @chirokas please fix the conflicts\n

Files Changed:
- .changeset/many-wasps-move.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/accordion": patch
+---
+
+Pass missing `dividerProps` to Divider (#3390)\n- packages/components/accordion/__tests__/accordion.test.tsx (modified, 19 changes)\n  Patch: @@ -356,4 +356,23 @@ describe("Accordion", () => {
     });
     expect(input).toHaveValue("aabac");
   });
+
+  it("should pass dividerProps to divider", () => {
+    const {getByRole} = render(
+      <Accordion
+        dividerProps={{
+          className: "bg-rose-500",
+        }}
+      >
+        <AccordionItem key="1" data-testid="item-1" title="Accordion Item 1">
+          Accordion Item 1 description
+        </AccordionItem>
+        <AccordionItem key="2" data-testid="item-2" title="Accordion Item 2">
+          Accordion Item 2 description
+        </AccordionItem>
+      </Accordion>,
+    );
+
+    expect(getByRole("separator")).toHaveClass("bg-rose-500");
+  });
 });\n- packages/components/accordion/src/accordion.tsx (modified, 3 changes)\n  Patch: @@ -19,6 +19,7 @@ const AccordionGroup = forwardRef<"div", AccordionProps>((props, ref) => {
     disableAnimation,
     handleFocusChanged: handleFocusChangedProps,
     itemClasses,
+    dividerProps,
   } = useAccordion({
     ...props,
     ref,
@@ -45,7 +46,7 @@ const AccordionGroup = forwardRef<"div", AccordionProps>((props, ref) => {
           {!item.props.hidden &&
             !isSplitted &&
             showDivider &&
-            index < state.collection.size - 1 && <Divider />}
+            index < state.collection.size - 1 && <Divider {...dividerProps} />}
         </Fragment>
       );
     });\n
Pull Request Number: 3773
Title: fix(date-picker): adding props from calendarProps to the getCalendarProps
Base Branch: canary
Head Branch: macci001/fix-passing-props-to-calender-from-date-picker
Author: macci001
URL: https://github.com/nextui-org/nextui/pull/3773
State: MERGED
Created At: 2024-09-17T06:34:50Z
Merged At: 2024-10-01T05:31:10Z
Participants: macci001, wingkwong

Description:
Closes #3769
üìù Description

The classNames in the calendarProps does not get applied to the calendar.

‚õ≥Ô∏è Current behavior (updates)
So currently, the classNames in calendarProps are not propagated to the Calendar due to which the styling does not get applied.
calendarProps={{
    classNames: {
      grid: 'bg-red-800',
    },
}}

As of now, adding the above prop to the date-picker gives following result (does not apply the mentioned style to the grid i.e. bg-red-800):

üöÄ New behavior
The PR propagates the calendarProps's classNames so that styling do get apply to them.
calendarProps={{
    classNames: {
      grid: 'bg-red-800',
    },
}}

After the changes in this PR, adding the above prop to the date-picker gives following result (applies the mentioned styling to the grid i.e. bg-red-800 ):

üí£ Is this a breaking change (Yes/No): No

Summary by CodeRabbit


New Features

Enhanced the date picker component for improved styling flexibility by allowing users to apply custom class names more effectively.



Bug Fixes

Resolved issues with class name propagation in the calendar component, ensuring that styles are applied correctly.

Commits:
- fix(date-picker): adding props from calendarProps to the getCalendarProps\n- chore(date-picker): adding the changeset\n- chore(changeset): add issue number\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: dbb27636b6f9cc11160f2f3a743a0105673ac990

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name                    | Type  |
| ----------------------- | ----- |
| @nextui-org/date-picker | Patch |
| @nextui-org/react       | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/macci001/nextui/new/macci001/fix-passing-props-to-calender-from-date-picker?filename=.changeset/clean-bats-doubt.md&value=---%0A%22%40nextui-org%2Fdate-picker%22%3A%20patch%0A---%0A%0Afix(date-picker)%3A%20adding%20props%20from%20calendarProps%20to%20the%20getCalendarProps%0A)

\n- vercel: Someone is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%22dba5542ccf08adf655e051b1809cb8551e2287f2%22%7D%2C%22id%22%3A%22QmfFTPPj1WhDuYBk9AHWLuXDg2GhKNTMujpek8Hvt5jxAN%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A3773%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
This update introduces a patch for the `@nextui-org/date-picker` package, specifically enhancing the `getCalendarProps` function to ensure that `classNames` are properly propagated within `calendarProps`. The changes allow for improved customization of the date picker component, enabling users to apply their own styles more effectively. Additionally, modifications to the `useDatePicker` function enhance how class names are merged and applied, improving the overall usability of the date picker.

## Changes

| Files                                   | Change Summary                                                                                     |
|-----------------------------------------|---------------------------------------------------------------------------------------------------|
| `.changeset/flat-pants-accept.md`      | Updated `getCalendarProps` to propagate `classNames` in `calendarProps`.                         |

## Assessment against linked issues

| Objective                                                      | Addressed | Explanation                                       |
|---------------------------------------------------------------|-----------|--------------------------------------------------|
| classNames in calendarProps should be applied correctly (3769) | ‚úÖ         |                                                  |

## Possibly related PRs
- **#3054**: Modifies the `inert` attribute in the DatePicker component, related to property handling.
- **#3146**: Adds support for applying styles to the DateInput in the DatePicker, enhancing customization.
- **#3258**: Updates calendar classNames in the useDateRangePicker, relevant to class name handling.
- **#3416**: Addresses width clipping issues in the DatePicker, improving usability.
- **#3505**: Fixes calendar-content width based on visible months, related to display improvements.

## Suggested reviewers
- jrgarciadev

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

```
.changeset/flat-pants-accept.md: ## AI-generated summary of changes

The changes introduce a patch for the `@nextui-org/date-picker` package, specifically addressing an issue with the `getCalendarProps` function. The modification ensures that the `classNames` are correctly propagated within the `calendarProps`. This adjustment enhances the functionality of the date picker component by ensuring that the appropriate class names are applied, which may affect the styling and behavior of the calendar interface. Additionally, the changes in the `useDatePicker` function involve modifications to how class names are handled for the calendar component. Previously, the class names for the calendar and its content were directly assigned from the `classNames` object. The updated implementation merges the existing `classNames` with those provided in `calendarProps.classNames`, allowing for greater flexibility and customization. Specifically, the `base` and `content` class names are now constructed using the `clsx` utility, which combines the original class names with any additional ones specified in `calendarProps`. This change enhances the ability to manage styles dynamically and ensures that both sets of class names are applied correctly.

## Alterations to the declarations of exported or public entities

- Modified: `getCalendarProps` in `@nextui-org/date-picker` to propagate `classNames` in `calendarProps`.
```

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR Summary

The pull request titled "fix(date-picker): adding props from calendarProps to the getCalendarProps" addresses an issue where classNames specified in the `calendarProps` of the DatePicker component were not being applied to the Calendar. This issue was identified in linked issue #3769. The current behavior resulted in styles not being applied, as demonstrated by an example where the class `bg-red-800` was intended to style the grid but did not take effect. 

With the changes proposed in this PR, the classNames from `calendarProps` will now be properly propagated to the Calendar component, ensuring that the specified styles are applied correctly. The PR includes before and after screenshots to illustrate the difference in behavior, showing that the styling is now applied as expected. The author confirms that this change is not a breaking change.

## Objectives from Linked Issues

The linked issue #3769 describes a bug in the DatePicker component of the NextUI library, specifically regarding the application of classNames within the `calendarProps`. Users reported that when attempting to style the Calendar using `calendarProps`, the styles were not being applied, which was contrary to the expected behavior. An example was provided where the class `bg-red-800` was intended to style the grid but failed to do so when used within the DatePicker. 

The objective of the issue is to ensure that classNames specified in `calendarProps` are correctly applied to the Calendar component, similar to how they work when applied directly to the Calendar itself. Users expect that the styling should take effect when using the DatePicker, and the resolution of this issue aims to meet that expectation by fixing the propagation of classNames.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 7f2fbe4eb372fff71ec7875bf34bb7ac5fd5eb30 -->
<!-- dbb27636b6f9cc11160f2f3a743a0105673ac990 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/flat-pants-accept.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/date-picker": patch
+---
+
+Fixes getCalendarProps to propagate the classNames in the calendarProps. (#3769)\n- packages/components/date-picker/src/use-date-picker.ts (modified, 7 changes)\n  Patch: @@ -204,8 +204,11 @@ export function useDatePicker<T extends DateValue>({
       ...ariaCalendarProps,
       ...calendarProps,
       classNames: {
-        base: slots.calendar({class: classNames?.calendar}),
-        content: slots.calendarContent({class: classNames?.calendarContent}),
+        ...calendarProps.classNames,
+        base: slots.calendar({class: clsx(classNames?.base, calendarProps.classNames?.base)}),
+        content: slots.calendarContent({
+          class: clsx(classNames?.calendarContent, calendarProps.classNames?.content),
+        }),
       },
     };
   };\n
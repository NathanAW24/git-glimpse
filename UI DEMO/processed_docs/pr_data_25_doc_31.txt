Pull Request Number: 919
Title: fix: added isFocusVisible to inputs
Base Branch: next
Head Branch: fix/added-isFocusVisible-to-inputs
Author: jguddas
URL: https://github.com/nextui-org/nextui/pull/919
State: CLOSED
Created At: 2022-11-28T20:59:36Z
Merged At: None
Participants: jguddas, jrgarciadev

Description:
Closes #918 
📝 Description
This adds a focus ring to inputs that have been focus using a keyboard.
⛳️ Current behavior (updates)
The focus state is very minimal.
🚀 New behavior
The focus state is now consistent with the other form elements.
💣 Is this a breaking change (Yes/No):
No
📝 Additional Information

  
    
    

    simplescreenrecorder-2022-11-28_21.27.49.mp4

Commits:
- fix: added isFocusVisible to inputs\n

Labels:


Comments:
- vercel: @jguddas is attempting to deploy a commit to the **NextUI** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%223deff43d325012e52f01fe8dcbdd67cdaf6e666a%22%7D%2C%22id%22%3A%22Qmb2YTtqUqhPg9MxCe5vRbtWwLHmp8qsyQqzLWDvgP8Fht%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A919%2C%22repo%22%3A%22nextui%22%7D).

\n- vercel: [vc]: #HLZDXyK48C6JF/j9pzboJH8lRnB7WMglFg/juseY/Os=:eyJ0eXBlIjoiZ2l0aHViIiwiaXNNb25vcmVwbyI6dHJ1ZSwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcyIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1kb2NzL0ZzMnlqQmcycjlZUkt4YksySkNCakdZZ1JUbkIiLCJwcmV2aWV3VXJsIjoiaHR0cHM6Ly9uZXh0dWktZG9jcy1naXQtZm9yay1qZ3VkZGFzLWZpeC1hZGRlZC1pc2ZvY3UtMjgyYTQ2LW5leHR1aS1vcmcudmVyY2VsLmFwcCIsImxpdmVGZWVkYmFjayI6eyJ1bnJlc29sdmVkIjowLCJyZXNvbHZlZCI6MCwibGluayI6Imh0dHBzOi8vbmV4dHVpLWRvY3MtZ2l0LWZvcmstamd1ZGRhcy1maXgtYWRkZWQtaXNmb2N1LTI4MmE0Ni1uZXh0dWktb3JnLnZlcmNlbC5hcHAifSwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIn0seyJuYW1lIjoibmV4dHVpLXN0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2svR2dnSzZZRnRzd2ZEOVp0R3FMdzNQamtxeU1NViIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLWdpdC1mb3JrLWpndWRkYXMtZml4LWFkZGVkLWktYzM3ZDcxLW5leHR1aS1vcmcudmVyY2VsLmFwcCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLWdpdC1mb3JrLWpndWRkYXMtZml4LWFkZGVkLWktYzM3ZDcxLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9LCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJyb290RGlyZWN0b3J5IjoicGFja2FnZXMvc3Rvcnlib29rIn1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ↗︎](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs** | ✅ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs/Fs2yjBg2r9YRKxbK2JCBjGYgRTnB)) | [Visit Preview](https://nextui-docs-git-fork-jguddas-fix-added-isfocu-282a46-nextui-org.vercel.app) | 💬 [**Add your feedback**](https://vercel.live/open-feedback/nextui-docs-git-fork-jguddas-fix-added-isfocu-282a46-nextui-org.vercel.app) | Jan 7, 2023 at 6:46PM (UTC) |
| **nextui-storybook** | ✅ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook/GggK6YFtswfD9ZtGqLw3PjkqyMMV)) | [Visit Preview](https://nextui-storybook-git-fork-jguddas-fix-added-i-c37d71-nextui-org.vercel.app) | 💬 [**Add your feedback**](https://vercel.live/open-feedback/nextui-storybook-git-fork-jguddas-fix-added-i-c37d71-nextui-org.vercel.app) | Jan 7, 2023 at 6:46PM (UTC) |


\n- jrgarciadev: Hey @jguddas thank you so much for your contributions!, could you please fix the conflicts? 🙏🏻 \n- jrgarciadev: Hey @jguddas could you please fix the conflicts? 🙏🏻 , thanks for solving this 🎉 \n- jguddas: > Hey @jguddas could you please fix the conflicts? 🙏🏻 , thanks for solving this tada

Done.\n- jrgarciadev: Closed since V1 will not receive more updates\n

Files Changed:
- packages/react/src/input/__tests__/index.test.tsx (modified, 21 changes)\n  Patch: @@ -199,4 +199,25 @@ describe("Input", () => {
     expect(clearButton).toEqual(document.activeElement);
     expect(clearButton.children[0].className).toEqual(focusVisible);
   });
+
+  it("should show a focus ring on keyboard but not on click focus", () => {
+    const wrapper = render(
+      <>
+        <Input data-testid="input-one" />
+        <Input data-testid="input-two" />
+      </>,
+    );
+
+    const inputOne = wrapper.getByTestId("input-one");
+    const inputTwo = wrapper.getByTestId("input-two");
+
+    const focusVisible = expect.stringContaining("isFocusVisible-true");
+
+    userEvent.click(inputOne);
+    expect(inputOne).toEqual(document.activeElement);
+    expect(inputOne.className).not.toEqual(focusVisible);
+    userEvent.tab();
+    expect(inputTwo).toEqual(document.activeElement);
+    expect(inputTwo.className).toEqual(focusVisible);
+  });
 });\n- packages/react/src/input/input.styles.ts (modified, 112 changes)\n  Patch: @@ -172,65 +172,73 @@ const inputAutofillStyles = {
   caretColor: "$$inputTextColor",
 };
 
-export const StyledInputContainer = styled("div", {
-  width: "100%",
-  br: "$$inputBorderRadius",
-  input: {
-    "&:-webkit-autofill": {
-      ...inputAutofillStyles,
-      "&:hover": inputAutofillStyles,
-      "&:focus": inputAutofillStyles,
-      "&:active": inputAutofillStyles,
+export const StyledInputContainer = styled(
+  "div",
+  {
+    width: "100%",
+    br: "$$inputBorderRadius",
+    input: {
+      "&:-webkit-autofill": {
+        ...inputAutofillStyles,
+        "&:hover": inputAutofillStyles,
+        "&:focus": inputAutofillStyles,
+        "&:active": inputAutofillStyles,
+      },
+    },
+    "@motion": {
+      transition: "none",
     },
-  },
-  "@motion": {
-    transition: "none",
-  },
-  variants: {
-    isTextarea: {
-      false: {
-        display: "inline-flex",
-        alignItems: "center",
-        height: "calc($$inputHeightRatio * $9)",
+    variants: {
+      isTextarea: {
+        false: {
+          display: "inline-flex",
+          alignItems: "center",
+          height: "calc($$inputHeightRatio * $9)",
+        },
       },
-    },
-    focused: {
-      true: {},
-    },
-    isReadOnly: {
-      false: {},
-    },
-    underlined: {true: {}},
-    animated: {
-      true: {
-        transition: "$default",
+      focused: {
+        true: {},
       },
-      false: {
-        transition: "none",
+      isReadOnly: {
+        false: {},
       },
-    },
-  },
-  compoundVariants: [
-    {
-      // underlined && !isReadOnly
-      isReadOnly: false,
-      underlined: true,
-      css: {
-        transform: "none",
+      underlined: {
+        true: {
+          br: "0",
+        },
       },
-    },
-    {
-      // focused && animated && !isReadOnly && !underlined
-      focused: true,
-      animated: true,
-      isReadOnly: false,
-      underlined: false,
-      css: {
-        transform: "translateY(-$space$1)",
+      animated: {
+        true: {
+          transition: "$default",
+        },
+        false: {
+          transition: "none",
+        },
       },
     },
-  ],
-});
+    compoundVariants: [
+      {
+        // underlined && !isReadOnly
+        isReadOnly: false,
+        underlined: true,
+        css: {
+          transform: "none",
+        },
+      },
+      {
+        // focused && animated && !isReadOnly && !underlined
+        focused: true,
+        animated: true,
+        isReadOnly: false,
+        underlined: false,
+        css: {
+          transform: "translateY(-$space$1)",
+        },
+      },
+    ],
+  },
+  cssFocusVisible,
+);
 
 export const StyledInput = styled("input", {
   padding: 0,\n- packages/react/src/input/input.tsx (modified, 19 changes)\n  Patch: @@ -1,3 +1,4 @@
+import type {FocusRingAria} from "@react-aria/focus";
 import type {CSS} from "../theme/stitches.config";
 
 import React, {
@@ -11,6 +12,7 @@ import React, {
 } from "react";
 import {useLabel} from "@react-aria/label";
 import {useFocusRing} from "@react-aria/focus";
+import {mergeProps} from "@react-aria/utils";
 
 import {ContentPosition} from "../utils/prop-types";
 import useTheme from "../use-theme";
@@ -39,6 +41,10 @@ import InputPassword from "./input-password";
 type NativeAttrs = Omit<React.InputHTMLAttributes<any>, keyof Props>;
 export type InputProps = Props & typeof defaultProps & NativeAttrs & {css?: CSS};
 
+interface IFocusRingAria extends FocusRingAria {
+  focusProps: Omit<React.HTMLAttributes<HTMLInputElement>, keyof Props>;
+}
+
 const simulateChangeEvent = (
   el: FormElement,
   event: React.MouseEvent<HTMLButtonElement>,
@@ -181,6 +187,10 @@ const Input = React.forwardRef<FormElement, InputProps>(
       ...controlledValue,
     };
 
+    const {isFocusVisible, focusProps}: IFocusRingAria = useFocusRing({
+      autoFocus: props.autoFocus,
+    });
+
     const {
       isFocusVisible: isClearButtonFocusVisible,
       focusProps: clearButtonFocusVisibleFocusProps,
@@ -247,6 +257,8 @@ const Input = React.forwardRef<FormElement, InputProps>(
             className,
           )}
           focused={hover}
+          isFocusVisible={isFocusVisible && !disabled}
+          isFocusVisibleOffset={bordered}
           isReadOnly={readOnly}
           isTextarea={isTextarea}
           underlined={underlined}
@@ -320,11 +332,12 @@ const Input = React.forwardRef<FormElement, InputProps>(
               readOnly={readOnly}
               required={required}
               type="text"
-              onBlur={blurHandler}
               onChange={changeHandler}
-              onFocus={focusHandler}
               {...inputProps}
-              {...fieldProps}
+              {...mergeProps(focusProps, fieldProps, {
+                onFocus: focusHandler,
+                onBlur: blurHandler,
+              })}
             />
             {clearable && (
               <InputClearButton\n- packages/react/src/theme/shared-css.ts (modified, 10 changes)\n  Patch: @@ -18,13 +18,23 @@ export const sharedFocus = css({
 export const cssFocusVisible = css({
   outline: "none",
   variants: {
+    isFocusVisibleOffset: {true: {}},
     isFocusVisible: {
       true: {
         boxShadow: "0 0 0 2px $colors$background, 0 0 0 4px $colors$primary",
       },
       false: {},
     },
   },
+  compoundVariants: [
+    {
+      isFocusVisibleOffset: true,
+      isFocusVisible: true,
+      css: {
+        boxShadow: "0 0 0 4px $colors$background, 0 0 0 6px $colors$primary",
+      },
+    },
+  ],
 });
 
 export const cssNoBlurriness = css({\n
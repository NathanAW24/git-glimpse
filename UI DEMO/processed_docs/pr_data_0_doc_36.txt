Pull Request Number: 4224
Title: fix: form fixes and improvements
Base Branch: canary
Head Branch: feat/select-form-support
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/4224
State: MERGED
Created At: 2024-12-04T22:22:54Z
Merged At: 2024-12-04T22:30:00Z
Participants: jrgarciadev, wingkwong

Description:
Closes # 
üìù Description

‚õ≥Ô∏è Current behavior (updates)

üöÄ New behavior

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit
Release Notes


New Features

Enhanced form integration for input-otp, select, and various components.
Added server-side and custom validation templates for InputOtp and Select components.



Documentation Updates

Clarified validationBehavior descriptions across components to indicate default values.
Expanded API documentation for Autocomplete, CheckboxGroup, DatePicker, and others for better clarity on props and events.



Bug Fixes

Resolved compatibility issues for select component in form contexts.



Chores

Added dependencies for form handling in input-otp and select packages.

Commits:
- fix: form fixes and improvements\n- chore: merged with canary\n

Labels:


Comments:
- vercel: [vc]: #zLUwlRTLIZBWoEfBbIu27AOkPQtK/EuPJzRyVz74tBg=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9DTDRrWEhoN0pNc3BUOGZDODVTOEo1WWdQZG9MIiwicHJldmlld1VybCI6IiIsIm5leHRDb21taXRTdGF0dXMiOiJDQU5DRUxFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiIifX0seyJuYW1lIjoibmV4dHVpLXN0b3J5Ym9vay12MiIsInJvb3REaXJlY3RvcnkiOiJwYWNrYWdlcy9zdG9yeWJvb2siLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktc3Rvcnlib29rLXYyL0RLU1g3aXpmSGR1d256bkZLUzRUMm83WUNhVGYiLCJwcmV2aWV3VXJsIjoiIiwibmV4dENvbW1pdFN0YXR1cyI6IkNBTkNFTEVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6IiJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | üõë Canceled ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/CL4kXHh7JMspT8fC85S8J5YgPdoL)) |  |  | Dec 4, 2024 10:30pm |
| **nextui-storybook-v2** | üõë Canceled ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/DKSX7izfHduwnznFKS4T2o7YCaTf)) |  |  | Dec 4, 2024 10:30pm |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
This pull request introduces modifications across various components in the `@nextui-org` library, primarily focusing on the `validationBehavior` property. The default value for `validationBehavior` has been changed from "aria" to "native" in multiple components, enhancing compatibility with form contexts. Additionally, documentation updates clarify the behavior of components like `Autocomplete`, `CheckboxGroup`, `DatePicker`, and others, providing detailed descriptions for props and events. New tests and examples have been added to ensure proper validation behavior and integration with forms.

## Changes

| File Path                                                             | Change Summary                                                                                                     |
|----------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------|
| .changeset/hip-bananas-notice.md                                    | Introduced patches for form-related functionalities in `input-otp` and `select` components.                      |
| apps/docs/content/docs/components/autocomplete.mdx                   | Updated API section to clarify `validationBehavior` and added descriptions for props and events.                  |
| apps/docs/content/docs/components/checkbox-group.mdx                | Clarified `validationBehavior` description and updated its default value.                                         |
| apps/docs/content/docs/components/date-picker.mdx                   | Enhanced API and usage examples, updated `validationBehavior` description.                                        |
| apps/docs/content/docs/components/date-range-picker.mdx             | Updated `validationBehavior` description in documentation.                                                        |
| apps/docs/content/docs/components/input.mdx                          | Expanded prop descriptions and clarified `validationBehavior` behavior.                                          |
| apps/docs/content/docs/components/radio-group.mdx                   | Updated `validationBehavior` description and marked `validationState` as deprecated.                              |
| apps/docs/content/docs/components/textarea.mdx                       | Clarified `validationBehavior` description and updated its default value.                                        |
| apps/docs/content/docs/components/time-input.mdx                     | Enhanced documentation with prop descriptions and updated `validationBehavior`.                                    |
| packages/components/autocomplete/src/use-autocomplete.ts              | Updated `validationBehavior` from "aria" to "native" and deprecated `disableClearable`.                          |
| packages/components/checkbox/src/use-checkbox-group.ts               | Changed default `validationBehavior` from "aria" to "native".                                                    |
| packages/components/checkbox/src/use-checkbox.ts                     | Updated `validationBehavior` handling based on context.                                                           |
| packages/components/date-input/__tests__/date-input.test.tsx        | Added `validationBehavior` prop to tests for handling unavailable dates.                                          |
| packages/components/date-input/__tests__/time-input.test.tsx        | Enhanced validation behavior tests for time values with `validationBehavior`.                                     |
| packages/components/date-input/src/use-date-input.ts                 | Changed default `validationBehavior` from "aria" to "native".                                                    |
| packages/components/date-input/src/use-time-input.ts                 | Updated default `validationBehavior` to "native".                                                                 |
| packages/components/date-picker/src/use-date-picker.ts               | Changed default `validationBehavior` from "aria" to "native".                                                    |
| packages/components/date-picker/src/use-date-range-picker.ts         | Updated default `validationBehavior` to "native".                                                                 |
| packages/components/form/src/base-form.tsx                          | Changed default `validationBehavior` from "aria" to "native".                                                    |
| packages/components/input-otp/package.json                           | Added dependency on `@nextui-org/form`.                                                                          |
| packages/components/input-otp/src/use-input-otp.ts                  | Enhanced form validation and context management.                                                                  |
| packages/components/input-otp/stories/input-otp.stories.tsx         | Introduced new templates for server-side and custom validation.                                                  |
| packages/components/input/src/use-input.ts                           | Updated default `validationBehavior` from "aria" to "native".                                                    |
| packages/components/radio/src/use-radio-group.ts                     | Changed default `validationBehavior` from "aria" to "native".                                                    |
| packages/components/select/__tests__/select.test.tsx                | Added tests for validation behavior using ARIA attributes.                                                        |
| packages/components/select/package.json                               | Added dependency on `@nextui-org/form`.                                                                          |
| packages/components/select/src/hidden-select.tsx                     | Enhanced accessibility features and error handling.                                                               |
| packages/components/select/src/use-select.ts                         | Updated to include validation and error handling improvements.                                                    |
| packages/components/select/stories/select.stories.tsx               | Added templates for server-side and custom validation scenarios.                                                 |
| packages/core/system/src/provider-context.ts                         | Updated default value for `validationBehavior` from "aria" to `undefined`.                                       |
| packages/core/system/src/provider.tsx                                | Removed default value for `validationBehavior`, allowing it to be undefined.                                      |
| packages/hooks/use-aria-multiselect/src/use-multiselect-state.ts    | Enhanced validation capabilities in multi-select state management.                                               |

## Possibly related PRs
- **#2987**: Changes the default `validationBehavior` from "native" to "aria" and allows switching via props.
- **#3106**: Supplements validation behavior by updating the default to "aria" and requiring the use of `isInvalid`.
- **#4082**: Addresses the controlled `isInvalid` prop in the Select component, relevant to validation behavior changes.
- **#4219**: Introduces the `hideEmptyContent` API to the Select component, enhancing its functionality in relation to form behavior.

## Suggested labels
`üìã Scope : Docs`, `üëÄ Status: In Review`

## Suggested reviewers
- wingkwong

<!-- walkthrough_end -->


<!-- internal state start -->


<!-- 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 -->

<!-- internal state end -->
<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: a43b5d5c5b13d4fab035e8d378620c965e173ecf

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 28 packages</summary>

  | Name                             | Type  |
| -------------------------------- | ----- |
| @nextui-org/use-aria-multiselect | Patch |
| @nextui-org/autocomplete         | Patch |
| @nextui-org/date-picker          | Patch |
| @nextui-org/date-input           | Patch |
| @nextui-org/input-otp            | Patch |
| @nextui-org/checkbox             | Patch |
| @nextui-org/select               | Patch |
| @nextui-org/input                | Patch |
| @nextui-org/radio                | Patch |
| @nextui-org/form                 | Patch |
| @nextui-org/system               | Patch |
| @nextui-org/react                | Patch |
| @nextui-org/drawer               | Patch |
| @nextui-org/modal                | Patch |
| @nextui-org/table                | Patch |
| @nextui-org/accordion            | Patch |
| @nextui-org/navbar               | Patch |
| @nextui-org/popover              | Patch |
| @nextui-org/tabs                 | Patch |
| @nextui-org/calendar             | Patch |
| @nextui-org/dropdown             | Patch |
| @nextui-org/listbox              | Patch |
| @nextui-org/menu                 | Patch |
| @nextui-org/slider               | Patch |
| @nextui-org/snippet              | Patch |
| @nextui-org/tooltip              | Patch |
| @nextui-org/aria-utils           | Patch |
| @nextui-org/framer-utils         | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/feat/select-form-support?filename=.changeset/silly-knives-fold.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Fautocomplete%22%3A%20patch%0A%22%40nextui-org%2Fcheckbox%22%3A%20patch%0A%22%40nextui-org%2Fdate-input%22%3A%20patch%0A%22%40nextui-org%2Fdate-picker%22%3A%20patch%0A%22%40nextui-org%2Fform%22%3A%20patch%0A%22%40nextui-org%2Finput-otp%22%3A%20patch%0A%22%40nextui-org%2Finput%22%3A%20patch%0A%22%40nextui-org%2Fradio%22%3A%20patch%0A%22%40nextui-org%2Fselect%22%3A%20patch%0A%22%40nextui-org%2Fsystem%22%3A%20patch%0A---%0A%0Afix%3A%20form%20fixes%20and%20improvements%0A)

\n

Files Changed:
- .changeset/hip-bananas-notice.md (added, 15 changes)\n  Patch: @@ -0,0 +1,15 @@
+---
+"@nextui-org/use-aria-multiselect": patch
+"@nextui-org/autocomplete": patch
+"@nextui-org/date-picker": patch
+"@nextui-org/date-input": patch
+"@nextui-org/input-otp": patch
+"@nextui-org/checkbox": patch
+"@nextui-org/select": patch
+"@nextui-org/input": patch
+"@nextui-org/radio": patch
+"@nextui-org/form": patch
+"@nextui-org/system": patch
+---
+
+Added form support to input-otp, change default validationBehavior to "native" to avoid breaking changes, and fix select with form\n- apps/docs/content/docs/components/autocomplete.mdx (modified, 4 changes)\n  Patch: @@ -578,8 +578,8 @@ properties to customize the popover, listbox and input components.
     {
       attribute: "validationBehavior",
       type: "native | aria",
-      description: "Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.",
-      default: "aria"
+      description: "Whether to use native HTML form validation or ARIA validation. When wrapped in a Form component, the default is `aria`. Otherwise, the default is `native`.",
+      default: "native"
     },
     {
       attribute: "startContent",\n- apps/docs/content/docs/components/checkbox-group.mdx (modified, 4 changes)\n  Patch: @@ -188,8 +188,8 @@ In case you need to customize the checkbox even further, you can use the `useChe
     {
       attribute: "validationBehavior",
       type: "native | aria",
-      description: "Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.",
-      default: "aria"
+      description: "Whether to use native HTML form validation or ARIA validation. When wrapped in a Form component, the default is `aria`. Otherwise, the default is `native`.",
+      default: "native"
     },
     {
       attribute: "isDisabled",\n- apps/docs/content/docs/components/date-picker.mdx (modified, 4 changes)\n  Patch: @@ -384,8 +384,8 @@ import {I18nProvider} from "@react-aria/i18n";
     {
       attribute: "validationBehavior",
       type: "native | aria",
-      description: "Whether to use native HTML form validation or ARIA validation.",
-      default: "aria"
+      description: "Whether to use native HTML form validation or ARIA validation. When wrapped in a Form component, the default is `aria`. Otherwise, the default is `native`.",
+      default: "native"
     },
     {
       attribute: "startContent",\n- apps/docs/content/docs/components/date-range-picker.mdx (modified, 4 changes)\n  Patch: @@ -443,8 +443,8 @@ You can customize the `DateRangePicker` component by passing custom Tailwind CSS
     {
       attribute: "validationBehavior",
       type: "native | aria",
-      description: "Whether to use native HTML form validation or ARIA validation.",
-      default: "aria"
+      description: "Whether to use native HTML form validation or ARIA validation. When wrapped in a Form component, the default is `aria`. Otherwise, the default is `native`.",
+      default: "native"
     },
     {
       attribute: "startContent",\n- apps/docs/content/docs/components/input.mdx (modified, 4 changes)\n  Patch: @@ -271,8 +271,8 @@ In case you need to customize the input even further, you can use the `useInput`
     {
       attribute: "validationBehavior",
       type: "native | aria",
-      description: "Whether to use native HTML form validation or ARIA validation.",
-      default: "aria"
+      description: "Whether to use native HTML form validation or ARIA validation. When wrapped in a Form component, the default is `aria`. Otherwise, the default is `native`.",
+      default: "native"
     },
     {
       attribute: "startContent",\n- apps/docs/content/docs/components/radio-group.mdx (modified, 4 changes)\n  Patch: @@ -218,8 +218,8 @@ In case you need to customize the radio group even further, you can use the `use
     {
       attribute: "validationBehavior",
       type: "native | aria",
-      description: "Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.",
-      default: "aria"
+      description: "Whether to use native HTML form validation or ARIA validation. When wrapped in a Form component, the default is `aria`. Otherwise, the default is `native`.",
+      default: "native"
     },
     {
       attribute: "isDisabled",\n- apps/docs/content/docs/components/textarea.mdx (modified, 4 changes)\n  Patch: @@ -254,8 +254,8 @@ You can use the `value` and `onValueChange` properties to control the input valu
     {
       attribute: "validationBehavior",
       type: "native | aria",
-      description: "Whether to use native HTML form validation or ARIA.",
-      default: "aria"
+      description: "Whether to use native HTML form validation or ARIA validation. When wrapped in a Form component, the default is `aria`. Otherwise, the default is `native`.",
+      default: "native"
     },
     {
       attribute: "labelPlacement",\n- apps/docs/content/docs/components/time-input.mdx (modified, 4 changes)\n  Patch: @@ -358,8 +358,8 @@ By default, `TimeInput` displays times in either 12 or 24 hour hour format depen
     {
       attribute: "validationBehavior",
       type: "native | aria",
-      description: "Whether to use native HTML form validation or ARIA.",
-      default: "aria"
+      description: "Whether to use native HTML form validation or ARIA validation. When wrapped in a Form component, the default is `aria`. Otherwise, the default is `native`.",
+      default: "native"
     },
     {
       attribute: "disableAnimation",\n- packages/components/autocomplete/src/use-autocomplete.ts (modified, 2 changes)\n  Patch: @@ -180,7 +180,7 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
     isVirtualized,
     maxListboxHeight = 256,
     itemHeight = 32,
-    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "aria",
+    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "native",
     className,
     classNames,
     errorMessage,\n- packages/components/checkbox/src/use-checkbox-group.ts (modified, 2 changes)\n  Patch: @@ -90,7 +90,7 @@ export function useCheckboxGroup(props: UseCheckboxGroupProps) {
     orientation = "vertical",
     lineThrough = false,
     isDisabled = false,
-    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "aria",
+    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "native",
     disableAnimation = globalContext?.disableAnimation ?? false,
     isReadOnly,
     isRequired,\n- packages/components/checkbox/src/use-checkbox.ts (modified, 2 changes)\n  Patch: @@ -101,7 +101,7 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
     isIndeterminate = false,
     validationBehavior = isInGroup
       ? groupContext.validationBehavior
-      : formValidationBehavior ?? globalContext?.validationBehavior ?? "aria",
+      : formValidationBehavior ?? globalContext?.validationBehavior ?? "native",
     defaultSelected,
     classNames,
     className,\n- packages/components/date-input/__tests__/date-input.test.tsx (modified, 1 changes)\n  Patch: @@ -64,6 +64,7 @@ describe("DateInput", () => {
             );
           }}
           name="date"
+          validationBehavior="aria"
         />,
       );
 \n- packages/components/date-input/__tests__/time-input.test.tsx (modified, 34 changes)\n  Patch: @@ -368,14 +368,27 @@ describe("TimeInput", () => {
 
   describe(`Validation (validationBehavior="aria")`, () => {
     it("should display errorMessage when timeValue is less than the minimum (controlled)", () => {
-      render(<TimeInput label="Time" minValue={new Time(9)} value={new Time(8)} />);
+      render(
+        <TimeInput
+          label="Time"
+          minValue={new Time(9)}
+          validationBehavior="aria"
+          value={new Time(8)}
+        />,
+      );
 
       expect(document.querySelector("[data-slot=error-message]")).toBeVisible();
     });
 
     it("should display errorMessage when timeValue is less than the minimum (uncontrolled)", async () => {
       const {getAllByRole} = render(
-        <TimeInput defaultValue={new Time(9)} label="Time" minValue={new Time(9)} name="time" />,
+        <TimeInput
+          defaultValue={new Time(9)}
+          label="Time"
+          minValue={new Time(9)}
+          name="time"
+          validationBehavior="aria"
+        />,
       );
 
       const input = document.querySelector("input[name=time]");
@@ -392,14 +405,27 @@ describe("TimeInput", () => {
     });
 
     it("should display errorMessage when timeValue is greater than the maximum (controlled)", () => {
-      render(<TimeInput label="Time" maxValue={new Time(17)} value={new Time(18)} />);
+      render(
+        <TimeInput
+          label="Time"
+          maxValue={new Time(17)}
+          validationBehavior="aria"
+          value={new Time(18)}
+        />,
+      );
 
       expect(document.querySelector("[data-slot=error-message]")).toBeVisible();
     });
 
     it("should display errorMessage when timeValue is greater than the maximum (uncontrolled)", async () => {
       const {getAllByRole} = render(
-        <TimeInput defaultValue={new Time(17)} label="Time" maxValue={new Time(17)} name="time" />,
+        <TimeInput
+          defaultValue={new Time(17)}
+          label="Time"
+          maxValue={new Time(17)}
+          name="time"
+          validationBehavior="aria"
+        />,
       );
 
       const input = document.querySelector("input[name=time]");\n- packages/components/date-input/src/use-date-input.ts (modified, 2 changes)\n  Patch: @@ -146,7 +146,7 @@ export function useDateInput<T extends DateValue>(originalProps: UseDateInputPro
     innerWrapperProps: innerWrapperPropsProp,
     errorMessageProps: errorMessagePropsProp,
     descriptionProps: descriptionPropsProp,
-    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "aria",
+    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "native",
     shouldForceLeadingZeros = true,
     minValue = globalContext?.defaultDates?.minDate ??
       new CalendarDate(calendarProp, 1900 + gregorianYearOffset, 1, 1),\n- packages/components/date-input/src/use-time-input.ts (modified, 2 changes)\n  Patch: @@ -94,7 +94,7 @@ export function useTimeInput<T extends TimeValue>(originalProps: UseTimeInputPro
     fieldProps: fieldPropsProp,
     errorMessageProps: errorMessagePropsProp,
     descriptionProps: descriptionPropsProp,
-    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "aria",
+    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "native",
     shouldForceLeadingZeros = true,
     minValue,
     maxValue,\n- packages/components/date-picker/src/use-date-picker.ts (modified, 2 changes)\n  Patch: @@ -70,7 +70,7 @@ export function useDatePicker<T extends DateValue>({
     originalProps.validationBehavior ??
     formValidationBehavior ??
     globalContext?.validationBehavior ??
-    "aria";
+    "native";
 
   const {
     domRef,\n- packages/components/date-picker/src/use-date-range-picker.ts (modified, 2 changes)\n  Patch: @@ -77,7 +77,7 @@ export function useDateRangePicker<T extends DateValue>({
     originalProps.validationBehavior ??
     formValidationBehavior ??
     globalContext?.validationBehavior ??
-    "aria";
+    "native";
 
   const {
     domRef,\n- packages/components/form/src/base-form.tsx (modified, 2 changes)\n  Patch: @@ -29,7 +29,7 @@ export const FormContext = createContext<ContextValue<FormProps, HTMLFormElement
  */
 export const Form = forwardRef(function Form(props: FormProps, ref: ForwardedRef<HTMLFormElement>) {
   [props, ref] = useContextProps(props, ref, FormContext);
-  let {validationErrors, validationBehavior = "aria", children, className, ...domProps} = props;
+  let {validationErrors, validationBehavior = "native", children, className, ...domProps} = props;
 
   const styles = useMemo(() => form({className}), [className]);
 \n- packages/components/input-otp/package.json (modified, 1 changes)\n  Patch: @@ -40,6 +40,7 @@
     "@nextui-org/system": ">=2.3.0-beta.0"
   },
   "dependencies": {
+    "@nextui-org/form": "workspace:*",
     "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/react-utils": "workspace:*",
     "@react-aria/utils": "3.24.1",\n- packages/components/input-otp/src/use-input-otp.ts (modified, 10 changes)\n  Patch: @@ -15,13 +15,14 @@ import {inputOtp} from "@nextui-org/theme";
 import {filterDOMProps, ReactRef, useDOMRef} from "@nextui-org/react-utils";
 import {clsx, dataAttr, objectToDeps} from "@nextui-org/shared-utils";
 import {useCallback, useMemo} from "react";
-import {chain, mergeProps} from "@react-aria/utils";
+import {chain, mergeProps, useFormReset} from "@react-aria/utils";
 import {AriaTextFieldProps} from "@react-types/textfield";
 import {useControlledState} from "@react-stately/utils";
 import {useFormValidationState} from "@react-stately/form";
 import {useFormValidation} from "@react-aria/form";
 import {useFocusRing} from "@react-aria/focus";
 import {OTPInputProps} from "input-otp";
+import {FormContext, useSlottedContext} from "@nextui-org/form";
 
 interface Props extends HTMLNextUIProps<"div"> {
   /**
@@ -92,6 +93,8 @@ export type UseInputOtpProps = Props &
 
 export function useInputOtp(originalProps: UseInputOtpProps) {
   const globalContext = useProviderContext();
+  const {validationBehavior: formValidationBehavior} = useSlottedContext(FormContext) || {};
+
   const [props, variantProps] = mapPropsVariants(originalProps, inputOtp.variantKeys);
 
   const {
@@ -105,7 +108,7 @@ export function useInputOtp(originalProps: UseInputOtpProps) {
     "aria-label": ariaLabel = "One-time password input",
     onValueChange = () => {},
     allowedKeys = "^[0-9]*$",
-    validationBehavior = globalContext?.validationBehavior ?? "aria",
+    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "native",
     type,
     name,
     maxLength,
@@ -147,12 +150,13 @@ export function useInputOtp(originalProps: UseInputOtpProps) {
   const isDisabled = originalProps.isDisabled;
   const baseStyles = clsx(classNames?.base, className);
 
-  const validationState = useFormValidationState({
+  const validationState = useFormValidationState<string>({
     ...props,
     validationBehavior,
     value,
   });
 
+  useFormReset(inputRef, value, setValue);
   useFormValidation(props, validationState, inputRef);
 
   const {\n- packages/components/input-otp/stories/input-otp.stories.tsx (modified, 68 changes)\n  Patch: @@ -4,6 +4,7 @@ import {button, inputOtp} from "@nextui-org/theme";
 import {useForm} from "react-hook-form";
 import {ValidationResult} from "@react-types/shared";
 import {Button} from "@nextui-org/button";
+import {Form} from "@nextui-org/form";
 
 import {InputOtp} from "../src";
 
@@ -176,6 +177,56 @@ const WithReactHookFormTemplate = (args) => {
   );
 };
 
+const ServerValidationTemplate = (args) => {
+  const [serverErrors, setServerErrors] = React.useState({});
+
+  const onSubmit = (e) => {
+    e.preventDefault();
+    setServerErrors({
+      otp: "Please provide a valid OTP code.",
+    });
+  };
+
+  return (
+    <Form
+      className="flex flex-col items-start gap-2"
+      validationErrors={serverErrors}
+      onSubmit={onSubmit}
+    >
+      <InputOtp {...args} name="otp" />
+      <Button size="sm" type="submit">
+        Submit
+      </Button>
+    </Form>
+  );
+};
+
+const WithValidationTemplate = (args) => (
+  <form
+    className="flex flex-col items-start gap-2"
+    onSubmit={(e) => {
+      e.preventDefault();
+      const formData = new FormData(e.currentTarget);
+      const otp = formData.get("otp");
+
+      alert(`OTP submitted: ${otp}`);
+    }}
+  >
+    <InputOtp
+      {...args}
+      name="otp"
+      validate={(value) => {
+        if (value.length < 4) {
+          return "OTP must be 4 digits";
+        }
+      }}
+    />
+    <Button size="sm" type="submit">
+      Submit
+    </Button>
+  </form>
+);
+
 export const Default = {
   render: Template,
   args: {
@@ -315,3 +366,20 @@ export const CustomWithClassNames = {
     description: "Enter the 4 digit code sent to your email",
   },
 };
+
+export const WithServerValidation = {
+  render: ServerValidationTemplate,
+  args: {
+    ...defaultProps,
+    length: 4,
+  },
+};
+
+export const WithValidation = {
+  render: WithValidationTemplate,
+  args: {
+    ...defaultProps,
+    length: 4,
+    isRequired: true,
+  },
+};\n- packages/components/input/src/use-input.ts (modified, 2 changes)\n  Patch: @@ -113,7 +113,7 @@ export function useInput<T extends HTMLInputElement | HTMLTextAreaElement = HTML
     onClear,
     onChange,
     validationState,
-    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "aria",
+    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "native",
     innerWrapperRef: innerWrapperRefProp,
     onValueChange = () => {},
     ...otherProps\n- packages/components/radio/src/use-radio-group.ts (modified, 2 changes)\n  Patch: @@ -76,7 +76,7 @@ export function useRadioGroup(props: UseRadioGroupProps) {
     name,
     isInvalid: isInvalidProp,
     validationState,
-    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "aria",
+    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "native",
     size = "md",
     color = "primary",
     isDisabled = false,\n- packages/components/select/__tests__/select.test.tsx (modified, 124 changes)\n  Patch: @@ -4,6 +4,7 @@ import * as React from "react";
 import {act, render, renderHook, waitFor} from "@testing-library/react";
 import userEvent, {UserEvent} from "@testing-library/user-event";
 import {useForm} from "react-hook-form";
+import {Form} from "@nextui-org/form";
 
 import {Select, SelectItem, SelectSection} from "../src";
 import {Modal, ModalContent, ModalHeader, ModalBody, ModalFooter} from "../../modal/src";
@@ -1170,3 +1171,126 @@ describe("Select with React Hook Form", () => {
     expect(onSubmit).toHaveBeenCalledTimes(1);
   });
 });
+
+describe("validation", () => {
+  let user;
+
+  beforeAll(() => {
+    user = userEvent.setup();
+  });
+
+  describe("validationBehavior=aria", () => {
+    it("supports isRequired", async () => {
+      function FormRender() {
+        const [serverErrors, setServerErrors] = React.useState({});
+
+        const onSubmit = (e) => {
+          e.preventDefault();
+          const formData = new FormData(e.target as HTMLFormElement);
+          const value = formData.get("animal");
+
+          if (!value || (value !== "cat" && value !== "dog")) {
+            setServerErrors({
+              animal: "Please select a cat or dog",
+            });
+          } else {
+            setServerErrors({});
+          }
+        };
+
+        return (
+          <Form data-testid="form" validationErrors={serverErrors} onSubmit={onSubmit}>
+            <Select
+              isRequired
+              aria-label="Favorite Animal"
+              data-testid="select"
+              label="Favorite Animal"
+              name="animal"
+            >
+              <SelectItem key="cat">Cat</SelectItem>
+              <SelectItem key="dog">Dog</SelectItem>
+              <SelectItem key="penguin">Penguin</SelectItem>
+              <SelectItem key="zebra">Zebra</SelectItem>
+              <SelectItem key="shark">Shark</SelectItem>
+            </Select>
+            <button data-testid="button" type="submit">
+              Submit
+            </button>
+          </Form>
+        );
+      }
+
+      const {getByTestId} = render(<FormRender />);
+
+      const select = getByTestId("select");
+      const input = document.querySelector("input");
+
+      expect(select).not.toHaveAttribute("aria-describedby");
+      const button = getByTestId("button");
+
+      await user.click(button);
+
+      expect(select).toHaveAttribute("aria-describedby");
+      expect(input).toHaveAttribute("aria-required");
+
+      expect(document.getElementById(select.getAttribute("aria-describedby")!)).toHaveTextContent(
+        "Please select a cat or dog",
+      );
+
+      await user.click(select);
+      let listboxItems = document.querySelectorAll("[role='option']");
+
+      await user.click(listboxItems[0]);
+
+      await user.click(button);
+
+      expect(select).not.toHaveAttribute("aria-describedby");
+    });
+
+    it("supports validate function", async () => {
+      const {getByTestId} = render(
+        <Form data-testid="form">
+          <Select
+            aria-label="Favorite Animal"
+            data-testid="select"
+            defaultSelectedKeys={["penguin"]}
+            label="Favorite Animal"
+            validate={(v) => (v.includes("penguin") ? "Invalid value" : null)}
+            validationBehavior="aria"
+          >
+            <SelectItem key="penguin">Penguin</SelectItem>
+            <SelectItem key="zebra">Zebra</SelectItem>
+            <SelectItem key="shark">Shark</SelectItem>
+          </Select>
+          <button data-testid="button" type="submit">
+            Submit
+          </button>
+        </Form>,
+      );
+
+      const select = getByTestId("select");
+      const input = document.querySelector("input");
+      const button = getByTestId("button");
+
+      expect(select).toHaveAttribute("aria-describedby");
+      expect(input).toHaveAttribute("aria-invalid", "true");
+
+      expect(document.getElementById(select.getAttribute("aria-describedby")!)).toHaveTextContent(
+        "Invalid value",
+      );
+
+      expect(input?.validity.valid).toBe(true);
+
+      await user.click(select);
+
+      let listboxItems = document.querySelectorAll("[role='option']");
+
+      await user.click(listboxItems[1]); // Select "Zebra"
+
+      await user.click(button);
+
+      expect(select).not.toHaveAttribute("aria-describedby");
+      expect(select).not.toHaveAttribute("aria-invalid");
+    });
+  });
+});\n- packages/components/select/package.json (modified, 1 changes)\n  Patch: @@ -52,6 +52,7 @@
     "@nextui-org/use-aria-button": "workspace:*",
     "@nextui-org/use-aria-multiselect": "workspace:*",
     "@nextui-org/use-safe-layout-effect": "workspace:*",
+    "@nextui-org/form": "workspace:*",
     "@react-aria/focus": "3.18.4",
     "@react-aria/form": "3.0.10",
     "@react-aria/interactions": "3.22.4",\n- packages/components/select/src/hidden-select.tsx (modified, 24 changes)\n  Patch: @@ -62,14 +62,15 @@ export function useHiddenSelect<T>(
   triggerRef: RefObject<FocusableElement>,
 ) {
   let data = selectData.get(state) || {};
+
   let {
     autoComplete,
     name = data.name,
     isDisabled = data.isDisabled,
     selectionMode,
     onChange,
   } = props;
-  let {validationBehavior, isRequired} = data;
+  let {validationBehavior, isRequired, isInvalid} = data;
   let modality = useInteractionModality();
   let {visuallyHiddenProps} = useVisuallyHidden();
 
@@ -83,32 +84,33 @@ export function useHiddenSelect<T>(
     props.selectRef,
   );
 
+  const commonProps = {
+    autoComplete,
+    disabled: isDisabled,
+    "aria-invalid": isInvalid || undefined,
+    "aria-required": (isRequired && validationBehavior === "aria") || undefined,
+    required: isRequired && validationBehavior === "native",
+  };
+
   return {
     containerProps: {
       ...visuallyHiddenProps,
       "aria-hidden": true,
       ["data-a11y-ignore"]: "aria-hidden-focus",
     },
     inputProps: {
+      ...commonProps,
       type: "text",
       tabIndex: modality == null || state.isFocused || state.isOpen ? -1 : 0,
-      autoComplete,
       value: [...state.selectedKeys].join(",") ?? "",
-      required: isRequired,
       style: {fontSize: 16},
       onFocus: () => triggerRef.current?.focus(),
-      disabled: isDisabled,
-      // The onChange is handled by the `select` element. This avoids the `form` with input `value`
-      // and no `onChange` warning.
-      onChange: () => {},
+      onChange: () => {}, // The onChange is handled by the `select` element
     },
     selectProps: {
+      ...commonProps,
       name,
       tabIndex: -1,
-      autoComplete,
-      // TODO: Address validation for cases where an option is selected and then deselected.
-      // required: validationBehavior === "native" && isRequired,
-      disabled: isDisabled,
       size: state.collection.size,
       value:
         selectionMode === "multiple"\n- packages/components/select/src/use-select.ts (modified, 18 changes)\n  Patch: @@ -29,7 +29,8 @@ import {
 import {SpinnerProps} from "@nextui-org/spinner";
 import {useSafeLayoutEffect} from "@nextui-org/use-safe-layout-effect";
 import {ariaShouldCloseOnInteractOutside} from "@nextui-org/aria-utils";
-import {CollectionChildren} from "@react-types/shared";
+import {CollectionChildren, ValidationError} from "@react-types/shared";
+import {FormContext, useSlottedContext} from "@nextui-org/form";
 
 export type SelectedItemProps<T = object> = {
   /** A unique key for the item. */
@@ -133,11 +134,19 @@ interface Props<T> extends Omit<HTMLNextUIProps<"select">, keyof SelectVariantPr
    * Handler that is called when the selection changes.
    */
   onSelectionChange?: (keys: SharedSelection) => void;
+  /**
+   * A function that returns an error message if a given value is invalid.
+   * Validation errors are displayed to the user when the form is submitted
+   * if `validationBehavior="native"`. For realtime validation, use the `isInvalid`
+   * prop instead.
+   */
+  validate?: (value: string | string[]) => ValidationError | true | null | undefined;
 }
 
 interface SelectData {
   isDisabled?: boolean;
   isRequired?: boolean;
+  isInvalid?: boolean;
   name?: string;
   validationBehavior?: "aria" | "native";
 }
@@ -175,6 +184,7 @@ export type UseSelectProps<T> = Omit<
 
 export function useSelect<T extends object>(originalProps: UseSelectProps<T>) {
   const globalContext = useProviderContext();
+  const {validationBehavior: formValidationBehavior} = useSlottedContext(FormContext) || {};
 
   const [props, variantProps] = mapPropsVariants(originalProps, select.variantKeys);
 
@@ -214,6 +224,7 @@ export function useSelect<T extends object>(originalProps: UseSelectProps<T>) {
     onClose,
     className,
     classNames,
+    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "native",
     hideEmptyContent = false,
     ...otherProps
   } = props;
@@ -264,6 +275,7 @@ export function useSelect<T extends object>(originalProps: UseSelectProps<T>) {
     isOpen,
     selectionMode,
     disallowEmptySelection,
+    validationBehavior,
     children: children as CollectionChildren<T>,
     isRequired: originalProps.isRequired,
     isDisabled: originalProps.isDisabled,
@@ -686,8 +698,8 @@ export function useSelect<T extends object>(originalProps: UseSelectProps<T>) {
     isDisabled: originalProps?.isDisabled,
     isRequired: originalProps?.isRequired,
     name: originalProps?.name,
-    // TODO: Future enhancement to support "aria" validation behavior.
-    validationBehavior: "native",
+    isInvalid,
+    validationBehavior,
   });
 
   return {\n- packages/components/select/stories/select.stories.tsx (modified, 225 changes)\n  Patch: @@ -19,6 +19,7 @@ import {
   Animal,
   User,
 } from "@nextui-org/stories-utils";
+import {Form} from "@nextui-org/form";
 
 import {Select, SelectedItems, SelectItem, SelectProps, SelectSection} from "../src";
 
@@ -277,6 +278,100 @@ const FormTemplate = ({color, variant, ...args}: SelectProps) => {
   );
 };
 
+const ServerValidationTemplate = (args: SelectProps) => {
+  const [submittedData, setSubmittedData] = React.useState<{animal: string} | null>(null);
+  const [serverErrors, setServerErrors] = React.useState({});
+
+  const onSubmit = (e) => {
+    e.preventDefault();
+    const formData = new FormData(e.target as HTMLFormElement);
+    const value = formData.get("animal");
+
+    if (!value) {
+      setServerErrors({
+        animal: "Please select a valid value",
+      });
+
+      return;
+    }
+
+    if (!value || (value !== "cat" && value !== "dog")) {
+      setServerErrors({
+        animal: "Please select a cat or dog",
+      });
+    } else {
+      setServerErrors({});
+      setSubmittedData({animal: value});
+    }
+  };
+
+  return (
+    <Form
+      className="w-full flex flex-col items-start gap-2"
+      validationErrors={serverErrors}
+      onSubmit={onSubmit}
+    >
+      <Select isRequired {...args} className="max-w-xs" label="Favorite Animal" name="animal">
+        {items}
+      </Select>
+      <button className={button({color: "primary"})} type="submit">
+        Submit
+      </button>
+      {submittedData && (
+        <div className="text-small text-default-500">
+          You submitted: <code>{JSON.stringify(submittedData)}</code>
+        </div>
+      )}
+    </Form>
+  );
+};
+
+const ServerValidationTemplateWithMultiple = (args: SelectProps) => {
+  const [submittedData, setSubmittedData] = React.useState<{animals: string[]} | null>(null);
+  const [serverErrors, setServerErrors] = React.useState({});
+
+  const onSubmit = (e) => {
+    e.preventDefault();
+    const formData = new FormData(e.target as HTMLFormElement);
+    const values = formData.getAll("animals");
+
+    if (!values.length || !values.every((v) => v === "cat" || v === "dog")) {
+      setServerErrors({
+        animals: "Please select only cats and/or dogs",
+      });
+    } else {
+      setServerErrors({});
+      setSubmittedData({animals: values as string[]});
+    }
+  };
+
+  return (
+    <Form
+      className="w-full flex flex-col items-start gap-2"
+      validationErrors={serverErrors}
+      onSubmit={onSubmit}
+    >
+      <Select
+        {...args}
+        className="max-w-xs"
+        label="Favorite Animals"
+        name="animals"
+        selectionMode="multiple"
+      >
+        {items}
+      </Select>
+      <button className={button({color: "primary"})} type="submit">
+        Submit
+      </button>
+      {submittedData && (
+        <div className="text-small text-default-500">
+          You submitted: <code>{JSON.stringify(submittedData)}</code>
+        </div>
+      )}
+    </Form>
+  );
+};
+
 const MirrorTemplate = ({color, variant, ...args}: SelectProps) => (
   <div className="w-full max-w-xl flex flex-row gap-4">
     <Select className="max-w-xs" color={color} label="Select an animal" variant={variant} {...args}>
@@ -807,6 +902,113 @@ const LargeDatasetTemplate = (args: SelectProps & {numItems: number}) => {
   );
 };
 
+const ValidationBehaviorAriaTemplate = (args: SelectProps) => {
+  // Custom validation example
+  const CustomValidationExample = () => {
+    return (
+      <Select
+        {...args}
+        className="max-w-xs"
+        label="Favorite Animal"
+        placeholder="Select an animal"
+        validate={(value) => {
+          if (typeof value === "string" && value === "penguin") {
+            return "Penguins are not allowed";
+          }
+
+          return null;
+        }}
+        validationBehavior="aria"
+      >
+        <SelectItem key="penguin">Penguin</SelectItem>
+        <SelectItem key="zebra">Zebra</SelectItem>
+        <SelectItem key="shark">Shark</SelectItem>
+      </Select>
+    );
+  };
+
+  //Custom validation example multiple
+  const CustomValidationExampleMultiple = () => {
+    return (
+      <Select
+        {...args}
+        className="max-w-xs"
+        label="Favorite Animal"
+        placeholder="Select an animal"
+        selectionMode="multiple"
+        validate={(value) => {
+          if (Array.isArray(value) && value.includes("penguin")) {
+            return "Penguins are not allowed";
+          }
+
+          return null;
+        }}
+        validationBehavior="aria"
+      >
+        <SelectItem key="penguin">Penguin</SelectItem>
+        <SelectItem key="zebra">Zebra</SelectItem>
+        <SelectItem key="shark">Shark</SelectItem>
+      </Select>
+    );
+  };
+
+  // Server validation example
+  const ServerValidationExample = () => {
+    const [serverErrors, setServerErrors] = React.useState({});
+
+    const onSubmit = (e: React.FormEvent) => {
+      e.preventDefault();
+      const formData = new FormData(e.target as HTMLFormElement);
+      const value = formData.get("animal");
+
+      if (value === "penguin") {
+        setServerErrors({
+          animal: "Server says: No penguins allowed!",
+        });
+      } else {
+        setServerErrors({});
+      }
+    };
+
+    return (
+      <Form
+        className="w-full flex flex-col items-start gap-2"
+        validationErrors={serverErrors}
+        onSubmit={onSubmit}
+      >
+        <Select className="max-w-xs" label="Select Animal" name="animal" validationBehavior="aria">
+          <SelectItem key="penguin">Penguin</SelectItem>
+          <SelectItem key="zebra">Zebra</SelectItem>
+          <SelectItem key="shark">Shark</SelectItem>
+        </Select>
+        <button className={button({color: "primary"})} type="submit">
+          Validate
+        </button>
+      </Form>
+    );
+  };
+
+  return (
+    <div className="flex flex-col gap-8">
+      <div className="flex flex-col gap-2">
+        <h3 className="text-default-500">Custom Validation</h3>
+        <p className="text-small text-default-400">Try selecting a penguin</p>
+        <CustomValidationExample />
+      </div>
+      <div className="flex flex-col gap-2">
+        <h3 className="text-default-500">Custom Validation Multiple</h3>
+        <p className="text-small text-default-400">Try selecting a penguin</p>
+        <CustomValidationExampleMultiple />
+      </div>
+      <div className="flex flex-col gap-2">
+        <h3 className="text-default-500">Server Validation</h3>
+        <p className="text-small text-default-400">Select a penguin and click validate</p>
+        <ServerValidationExample />
+      </div>
+    </div>
+  );
+};
+
 export const Default = {
   render: MirrorTemplate,
 
@@ -1027,6 +1229,22 @@ export const WithReactHookForm = {
   },
 };
 
+export const WithServerValidation = {
+  render: ServerValidationTemplate,
+
+  args: {
+    ...defaultProps,
+  },
+};
+
+export const WithServerValidationMultiple = {
+  render: ServerValidationTemplateWithMultiple,
+
+  args: {
+    ...defaultProps,
+  },
+};
+
 export const WithScrollableContainer = {
   render: ScrollableContainerTemplate,
 
@@ -1172,3 +1390,10 @@ export const CustomItemHeight = {
     itemHeight: 40,
   },
 };
+
+export const ValidationBehaviorAria = {
+  render: ValidationBehaviorAriaTemplate,
+  args: {
+    ...defaultProps,
+  },
+};\n- packages/core/system/src/provider-context.ts (modified, 2 changes)\n  Patch: @@ -24,7 +24,7 @@ export type ProviderContextProps = {
    * or invalid via ARIA.
    * @see https://react-spectrum.adobe.com/react-aria/forms.html
    *
-   * @default "aria"
+   * @default undefined
    */
   validationBehavior?: "aria" | "native";
   /**\n
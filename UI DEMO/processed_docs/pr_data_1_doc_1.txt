Pull Request Number: 4200
Title: fix: should not export list item internal variables type
Base Branch: canary
Head Branch: fix/intertype-should-not-expoort
Author: winchesHe
URL: https://github.com/nextui-org/nextui/pull/4200
State: CLOSED
Created At: 2024-12-01T08:28:16Z
Merged At: None
Participants: winchesHe, jrgarciadev

Description:
Closes # 
üìù Description
related #4157

‚õ≥Ô∏è Current behavior (updates)

üöÄ New behavior

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


New Features

Updated type definitions for MenuProps and MenuItemVariantProps, enhancing flexibility in component usage.
Enhanced type safety and structure for the files property in the ReactLiveDemo component.



Bug Fixes

Adjusted properties in type definitions to ensure accurate representation of component capabilities.
Improved encapsulation by preventing the export of internal variable types for list items.

Commits:
- fix: should not export list item internal variables type\n- feat: changeset\n- fix: type error\n- fix: code block type error\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 3e8f7bf0015e373050215ed76bf82c780c4522f0

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 12 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/menu         | Patch |
| @nextui-org/theme        | Patch |
| @nextui-org/dropdown     | Patch |
| @nextui-org/react        | Patch |
| @nextui-org/autocomplete | Patch |
| @nextui-org/checkbox     | Patch |
| @nextui-org/date-input   | Patch |
| @nextui-org/date-picker  | Patch |
| @nextui-org/form         | Patch |
| @nextui-org/input        | Patch |
| @nextui-org/radio        | Patch |
| @nextui-org/table        | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/intertype-should-not-expoort?filename=.changeset/spotty-pens-add.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Flistbox%22%3A%20patch%0A%22%40nextui-org%2Fmenu%22%3A%20patch%0A%22%40nextui-org%2Ftheme%22%3A%20patch%0A---%0A%0Afix%3A%20should%20not%20export%20list%20item%20internal%20variables%20type%0A)

\n- vercel: [vc]: #xoVg2URb/pQvJC5Udj9jHOSIf/0e0y4JbwOCa4iJdIQ=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi80YllSTFRLUEt3VnNFV28xc3pQdlVXR1ZhNFhEIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtaW50ZXJ0eXBlLXNob3VsZC1ub3QtZXhwb29ydC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWZpeC1pbnRlcnR5cGUtc2hvdWxkLW5vdC1leHBvb3J0LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvQm9DZ05Od3ptSkE2YUZOTDV6NzJhS0RSZDJaSCIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1maXgtaW50ZXJ0eXBlLXNob3VsZC1mNDY3YzgtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZpeC1pbnRlcnR5cGUtc2hvdWxkLWY0NjdjOC1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/4bYRLTKPKwVsEWo1szPvUWGVa4XD)) | [Visit Preview](https://nextui-docs-v2-git-fix-intertype-should-not-expoort-nextui-org.vercel.app) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-intertype-should-not-expoort-nextui-org.vercel.app?via=pr-comment-feedback-link) | Dec 1, 2024 3:47pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/BoCgNNwzmJA6aFNL5z72aKDRd2ZH)) | [Visit Preview](https://nextui-storybook-v2-git-fix-intertype-should-f467c8-nextui-org.vercel.app) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-intertype-should-f467c8-nextui-org.vercel.app?via=pr-comment-feedback-link) | Dec 1, 2024 3:47pm |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
The pull request modifies type definitions related to the `Menu` and `menuItem` components within the application. Specifically, it updates the `MenuProps` type to include all properties from the `Props<T>` interface without exclusions and alters the `MenuItemVariantProps` type to exclude specific properties. The implementation of the components remains unchanged, focusing solely on type structure adjustments.

## Changes

| File Path                                   | Change Summary                                                                                          |
|---------------------------------------------|--------------------------------------------------------------------------------------------------------|
| packages/components/menu/src/menu.tsx      | Updated `MenuProps` type to extend `Props<T>` directly, removing exclusions for certain properties.    |
| packages/core/theme/src/components/menu.ts  | Modified `MenuItemVariantProps` type to exclude `hasDescriptionTextChild` and `hasTitleTextChild`.    |
| .changeset/ninety-mails-yell.md            | Introduced a patch for dependencies and refined encapsulation of internal variable types for list items. |
| apps/docs/components/docs/components/code-demo/react-live-demo.tsx | Changed `files` property type in `ReactLiveDemoProps` from `string[]` to `SandpackFiles`. |
| packages/components/listbox/src/use-listbox-item.ts | Updated import to include `MenuItemVariantProps` and refined type casting in `mapPropsVariants`. |
| packages/components/menu/src/use-menu-item.ts | Updated import to include `MenuItemVariantProps` and refined type casting in `mapPropsVariants`. |

## Possibly related PRs
- **#4156**: The changes in this PR modify the `Menu` component to improve how class names are handled for menu items, which is directly related to the modifications made to the `MenuProps` type in the main PR.
- **#4105**: This PR addresses overflow text in menu items, which may relate to how the `MenuProps` type changes affect the rendering of menu items in the main PR.
- **#4168**: This PR fixes the missing `<li>` tag when the `href` property is specified, which is relevant to the changes in the `MenuProps` type as it impacts how menu items are structured and rendered.
- **#4204**: This PR addresses a redundancy in the 'use client' directive within the `@nextui-org/react` package, which may indirectly relate to the overall structure and functionality of components, including the `Menu` component affected by the main PR.

## Suggested labels
`üí• Type: Breaking Change`, `üìã Scope : Docs`

## Suggested reviewers
- jrgarciadev
- wingkwong

<!-- walkthrough_end -->





---

<details>
<summary>üìú Recent review details</summary>

**Configuration used: .coderabbit.yaml**
**Review profile: CHILL**

<details>
<summary>üì• Commits</summary>

Reviewing files that changed from the base of the PR and between 9ed57fc88bf157e3cf50084da2dc1b12b7764a5d and 3e8f7bf0015e373050215ed76bf82c780c4522f0.

</details>

<details>
<summary>üìí Files selected for processing (3)</summary>

* `apps/docs/components/docs/components/code-demo/react-live-demo.tsx` (2 hunks)
* `packages/components/listbox/src/use-listbox-item.ts` (2 hunks)
* `packages/components/menu/src/use-menu-item.ts` (2 hunks)

</details>

<details>
<summary>üîá Additional comments (4)</summary>

<details>
<summary>apps/docs/components/docs/components/code-demo/react-live-demo.tsx (2)</summary>

`16-16`: **LGTM: Type enhancement for files prop**

The change from `string[]` to `SandpackFiles` provides better type safety and alignment with the Sandpack library's type system.

---

`51-51`: **Verify type assertion safety**

The type assertion to `string` might be unsafe if `SandpackFiles` can contain non-string values.

<details>
<summary>‚úÖ Verification successful</summary>

**Type assertion is safe in this context**

The type assertion is safe because:
1. `files` is explicitly typed as `SandpackFiles` from "@codesandbox/sandpack-react/types"
2. The code is defensively checking for existence with optional chaining (`files?.[DEFAULT_FILE]`)
3. The `CopyButton` component expects a string value, and since this is being used in a code demo context where files contain source code, the content will always be a string



</details>

<details>
<summary>üèÅ Scripts executed</summary>

The following scripts were executed for the analysis:

Script:

```shell
#!/bin/bash
# Check SandpackFiles type definition
rg -A 5 "export (type|interface) SandpackFiles" 

```

Length of output: 49

---

Script:

```shell
#!/bin/bash
# Try searching for SandpackFiles in node_modules
fd -g "*sandpack*.d.ts" -x cat {} \; | rg -A 5 "export (type|interface) SandpackFiles"

# Search for imports of SandpackFiles
rg "import.*SandpackFiles.*from"

# Search for the actual usage context
rg -B 5 -A 5 "value=\{files\?\.\[DEFAULT_FILE\] as string\}"

```

Length of output: 1720

---

Script:

```shell
#!/bin/bash
# Let's check the actual usage of files in the component and its type
rg -B 10 -A 10 "const.*files.*:" apps/docs/components/docs/components/code-demo/react-live-demo.tsx

# Also check if there are any type definitions in the local codebase
ast-grep --pattern 'type SandpackFiles = $_'

```

Length of output: 148

---

Script:

```shell
#!/bin/bash
# Let's examine the entire react-live-demo.tsx file to understand the context better
cat apps/docs/components/docs/components/code-demo/react-live-demo.tsx

# Also check how files are being used in other places
rg "files\?\.\[" --type typescript

```

Length of output: 2694

</details>

</details>
<details>
<summary>packages/components/listbox/src/use-listbox-item.ts (1)</summary>

`4-4`: **LGTM: Enhanced type safety for variant props**

The use of `MenuItemVariantProps` for variant keys typing ensures consistent prop handling between menu and listbox items.





Also applies to: 32-35

<details>
<summary>‚úÖ Verification successful</summary>

**LGTM: Consistent type usage between menu and listbox items**

The usage of `MenuItemVariantProps` is correctly implemented in both components:
- In `use-menu-item.ts`, it's used with `menuItem.variantKeys`
- In `use-listbox-item.ts`, it's used with `listboxItem.variantKeys`
- The core theme defines `ListboxItemVariantProps` as an alias of `MenuItemVariantProps`

This ensures type consistency and proper variant handling across both components.


</details>

<details>
<summary>üèÅ Scripts executed</summary>

The following scripts were executed for the analysis:

Script:

```shell
#!/bin/bash
# Verify MenuItemVariantProps usage consistency
ast-grep --pattern 'import { $$$, MenuItemVariantProps } from "@nextui-org/theme"'

```

Length of output: 321

---

Script:

```shell
#!/bin/bash
# Check how MenuItemVariantProps is used in both files
ast-grep --pattern 'MenuItemVariantProps'

```

Length of output: 525

---

Script:

```shell
#!/bin/bash
# Check how the variant props are used in the implementation
ast-grep --pattern 'mapPropsVariants<MenuItemVariantProps>'

```

Length of output: 61

---

Script:

```shell
#!/bin/bash
# Check the implementation details in both files
rg "mapPropsVariants" -A 3 packages/components/listbox/src/use-listbox-item.ts packages/components/menu/src/use-menu-item.ts

```

Length of output: 1358

</details>

</details>
<details>
<summary>packages/components/menu/src/use-menu-item.ts (1)</summary>

`5-5`: **LGTM: Consistent type handling with listbox**

The implementation mirrors the changes in `use-listbox-item.ts`, ensuring consistent typing of variant props across menu and listbox components.





Also applies to: 32-35

<details>
<summary>‚úÖ Verification successful</summary>

Let me verify the consistency of variant props handling between menu and listbox components more thoroughly.

---

**Verified: Consistent type handling between menu and listbox components**

The implementation shows perfect alignment between menu and listbox components:
- Both use `MenuItemVariantProps` from `@nextui-org/theme`
- Both apply identical type casting pattern with `variantKeys`
- The listbox component correctly reuses menu's type definitions as seen in the theme package



</details>

<details>
<summary>üèÅ Scripts executed</summary>

The following scripts were executed for the analysis:

Script:

```shell
#!/bin/bash
# Verify consistent usage of variant keys
rg -A 2 "menuItem.variantKeys|listboxItem.variantKeys"

```

Length of output: 488

---

Script:

```shell
#!/bin/bash
# Check the implementation of mapPropsVariants in both files
ast-grep --pattern 'const $_ = mapPropsVariants($_,$_)'

# Check the type imports and their usage
rg -A 2 "MenuItemVariantProps"

```

Length of output: 7937

</details>

</details>

</details>

</details>
<!-- internal state start -->


<!-- FAHghAtBAEAqAWBLAztF0CGA7TBXALgPYQDmAplmQE4b5kAm0AxoQLasX4Bc0ADldEIAjAFZkm+RADcyqIQE9mhetQxChifADoMiaFAB8wY+CjGAxOegAFAErQAyrnYYq84wjJ9cAGx/QqMgBHXFl8aEl8HwZoACIAM0QADx5keEJfRixCcLIk3kIqcJ8UcM0yVjQsOiosDH8pV0Q1aNR8eV4yWOgAdwxUJkDaGIUI+C9cZGpexCwmceQACS9sRnREFWrERJj+m3ssZyFpgBYAJgAGC8EcAHFNRdwhLThx/eZsaGPMJiZZKcYtDGXnihD8hB6sxI0AAqrYADI8ADa8Hw+F4yC4AHosSRNPAnloWKwsZQkvhcIgIIUSKS8hTEFjeL4fFjzlcALoAClR6MxOLx+AJz2JdPJlOpVFpZIZTJZbMuFwAlFoPG8VMhBoheJJCDgphJEHrBPFge9ZkwfLgNZgIhVeD5htBQQIWNUqIghARCsgADSCAglLBQs15ToSWhGrCoF3QZBPViaSRYaEYbx+ALBULIbTQACSuVYvHg/UQAC9ZGbEEXCvhsH8TdAANZkMi8ENCrx2JRzFBkf0lRPJ6GaCKEG5edqdaBc+PzTCoeiEJjOTiRvX++JkWi4QL+wLxDASQpQ/1u5O4DKoWZ0Eg0XVYfdtwjITSFeT+wpfXDQxJJJX+qs0AcFseptCW4R2Ne7rKLgTAhpQPTQPS1B1P4KidFgmzwZWrAYIogQhIggSYPQ9CaFG9SZlIiBkEhkgcKqwAAOpINEZrIOG2yIEw0AqHWiA+KggQkK45EpmaK5UIE1RfGQJY0V+xwhqwyjcbsWFmohckKUaAjKRJN5ULBfyAiR2ThPwhA0Soaw4J2fGyFqOpRv6DmROx8YkOQObgUCDmgiuqCEKaQroN26BEHwgQyLJDlhrWjY3qhVGNB6LSTh0laBI6dCMFFJQ5mgdCsMgLwAIJkRRer1D4H7AiR6BpgaD5VGaJUOk6QpAv0TaoD04ydgIDnzNgPk9jmmgECsXxDE2IajSm/bfuE2RVC6eGtegVk2TEIliR2SCoP04baMYADyMg0H4blvN2uilWOpH0IEyDHTgKDxl4OXDPl44OcltRUTmVBwRSJEhdAhVlCV/X4rMknKGQQj9Mt9RChkJDwM6u5DY5AlCTcoZJEe4SqeRiRMOu0aYJpnbEWgRYlFTD4xl+eSlCGkzUMd5k5FUlrWjECMOTtGwxPGLhuExljQAAwmwIH4KgThS+4wB5vZbzEkrqAtVGjaiyymYhGEgHQNzAh1BwjAiFKrjwRgKhSM9r0AmaGAEOkVD+pCcwLMs/phm7IZpm6fy1JmolUOJ0IjSWS2oHhKhtQ5dgvJ4SjsJwVTkSzlbdeEDkxbRPTTEulYWXGra04or4kMGlPYGURak86xmVPHY2yP6FmHUCo4YLwnSuG046zFIYIyMB1BkHVwHWR2WWOYkwas+3bATs6gmTuO2A5OMVAZ28Jd0dMpuTWBvSDYfYxNYaxpkPEW6GjI8+vVPBdvJ9oRjECfRJ04FGYWWsvDnnpIbO6tgmIIHQDrHOSAsYlCxsrW0BQ6BbCoo6JgTZGyWiaO0QQAhqy8DbvtGOh0vDk24izKMqArIFHdiLN4zIMyEWzLmAscYfw+VQYXM0p8y7EL1q2eaEl4i41viISYkgm6tXZvkR0dRWrxA7h7L2X41AZHCOkei2sE7jXPB6L0dAnrICnpQzMuVhZvVCL7JA850AHlnnMXYqBzAnAAIwAFYADsqcoGOU1B6Fyepj5eFmERNwmZ4jRAkMdLOqkcD8FJjxCJOAWAp0Ef1Q+30yA0TPlQERZBcFRVwFhHmdY6Yn2pvULwxwkCaUWj5IOnFxDND8IoAaFAxgvjAQYysUwKjAVmNWKiX4rKmV3FRBGyjdxkCYoYEwkAYAUEYJDT2RBSAUFUHlRJnAeD8EEKIcQkgZByEUJk1Q6hNA6D0Es0wMBYHXnengLZ5BKD3hiPA6oPAaBIUlnhaJowrk0BudoXQ+gIBGGWWYYApCcEYB8liYkBRKDVGQFiECuAsTICoEwLFFBcBaGVikYAsQKXAFluVPM2zPm/W4WrPBAzkBqi8BTU01CdjgS8AAAwALJEusMZDEvKIjLxUKvaqH1QHQF5diklyAkhisSNEcJ0V8lGkmCvUZrVuaMF5edIcYqop5EFinNp8FKbRUIJ0IotFUBcl5SWZAcs2L0ALBUZAvL/TOv6LATQ0RYD0jdYJegPq5UuoACJORCQ+YN5JQ0+HDUqDenc3i8uFba5AIBYAGDFYDQ8fx1W4F4PQBlkrdUG0CKpc5ZpDXGtpowcigQJDzxQlhVAmaRU5rzRGoayNFAWitLHTAGYGHUEkJWStlA7JyqzRiXN+aZgYwIMhJIgtXxgWPnAgZY6ag8rjPgUGEh5mQL5YKw4C7vXis6IBcEfsRxF3HlgQ+g9x0isnQ6tN86e1LojQNHi2M8KKAwM/U50BdH1svbgMVqK9Q53QAQQS5YQGCDxqQoowVQpvCHg6Hi1MmKVXIg+Wq9UHICqJSq8pD8MlsDRTnGtugaY0YGXOzQ14mYVDXA+f0JizR9CHaghhvNMqdEYC6uSPSuW0Wbb/KKXclptUo1entvL1UJSKEe4YStnRfgozBuD9GEOySY7MQ9yAMAcCDtGXc/cYZoD1pIDMLo+gx2+YUVtUQun4jNKW8teyRO3oWWywQV1ao9mPWCZ0PgIRNqhoQPEvFIRhVlSp2DWcGOyVcBMOo4GJAjEUGFAYAzAKHpk7Qq+OWobVnKH9YLOq150KYhYKw5UfA1GpmPM0Kh8H3joY2TTeyJlPGZshLYU7WXACecveucySL+d+jwXlQ2Gswevbm9dGD6DBRORIaAABeY5YgJAGEO9AI1mgQAbbzf6WILqk0etht0AAPnEF1AaohkATfgR7r33v9BjcE7U8aQ3utiGdgAZNAAA3geAA/DwWwT8QCLFgPy+EABRaISsDAAF8ADcBacC8oRU2JFsgUXGfRcrQlhxcX4rp8S0lYrABJhHK1bU4vDrb/bALbazdsnfCEd4QQuztHZu1D2HCOkco7Rxj7H3Hqj46J8psnFPMXwZp5i7FDOCUKpZ+Syl024Xq+RSwQIWJOwcD11Tms2umeKq4Eb2IVK2u0o+bsiWzggWKEhs02QoWOVVCi/QOCuE1JyIGwpjN2LPWsCM/bzgAByNoEqn5VqvswvlBub2qoWY4LiTdOm3QvUS+PAA1Jozdr0muXpJ44PT0az3q2akdk4ejjgnfa2Qy3o2xpB1GH7j2xVAT9cgT7QawdhvU68Xd3dHOMwdErvZkwQywCyg4Zy+BU9ysu/gMVyGSiEK5/YoDzAhh0ASdpLnXw/dDmHHGIvsnmxkHkDGNRnwOaTQklz9V1lVAMwQYwYz0gIJE5hSNj8/ccMc8qNfU48SoI0x9sUHBTkoxE8stUEzMcBWNu56BfZfM1pm9+sr4Y8yAGZXpTppAvBkBYtwgZ1pVgoBA0pmgMUNN8hEocwdNOBjoi43g1lz1t52JzxZh5MX1zUVgMwhRAgwFqceCV10g10KtCNjBWtoB2tOt14yDHI+sutBsOCigYgRshAxsgFJtjAZtpw5sdwFsy0lsOcDCi5l4YNK9q9qhr1zsq90p3C/0udIYECKgDBVcEZScjxydzdCgyArdxgbc8UCUtceDHdlY2cHCCgtNb8XCSovDWD8APCjt98QBsia9fCsp/Dy8SoDA7t+9gdQksBh9wdoA3t7t/VA1vtp9k0IdgiSczdKcLcojrcoi4i7dMCdciVFVeUXcLC4UiQWUyB8BSRZg5j5AIA8JBJkAIB5A54fAtBWB6BncKVXdqUPcdkvlGBAVXBoDmAWU1R0Bg8jITJKw0xSF8B5xYx8BO9HJMJsIHVlsAABGUCUGkJnUfTSXlf4+kQEqUaI7jWfYjaVMjf0QeMiN2R4j6WxPJaxereKRwpKaoFKBoavEwsTSsWMaGYqL1GzeMD0X/CCYEKYYLUTaAKuIbBgdVAPPTIKSsY0A8UZGkrwCgKmDEXwamXEmoNCaAFgjKP0a+c/CgBOP4Q9ZKO8TQS4hycmXwMgXfcqawPMO/DVWKR/cpZKCpRgBKKkrwSGQGcUrnMqVQt3dQjrXZaPf6dUcQR0EgmmSGFk9ZAQZkEwnicbSIB1Cw6AAAMWSEwGHhKBiCin4HyRzmxLSPCEtLxKBgJPSiJIZL0wEDJPKEemzysXyWbgXjDzVUmJNwgGMDw0xSXCYE1zkIxSxFrPrKT0bKuQgBUFUixCGAkAgBKBkA7IqEIEVTJQOPtJpTpS9zOJ9wuOZW7im0zjuJgjDwVJLJoT0O0N5WR1JnhGoJjVUlrxD2oCLRWGqT5W3IkF3JkH3MIAwJMzKDSx7PwD7OoMHNUhHJVR3nVV5XzxvW70IQLK3O3EvL3KHMPMLSPC8Ab1bAyTYx/TTFv0hl5RBihCRA5BNXHF5QcFWDJ3DNaAAwcWxlmDzmGASTSG2AfOJlOglmPRAIhhgLlV/LFQYR3RKwXxKBbHfifjiVQTTFUhIlRWiCSD4loGalotPRIljDwjqDxHER3mlPqEQAbhDBS2xgcmwqwjJyPLvBUOADhMgLqgINS3rQvPwCvLIBvLvJp1LwlPqF/lITehjJdL5QVl4HkAACECAiAsArKEE9hG8cC7C9kooqYiofz5L4ctAkQo1MdQzyoYR4RYAAB9UMvMLHdChcW0ZC49KEWfZ5BrfoKYe1R+WzV6P+PgrwRoK0epcgiSByphNoS/NxW0FClMM/ecEDOSJk8Qf4WcsPXeLSOiBrBg+RU0cK/CpiS6QAnwGygPVAOU+sScN4W/SzLcQhICYAiSi0hi8a2QZiz9IoLpNifk0qhaejSMDQKAhQwapCALBC5eAshI6oXfEhHHHjKMFrccx0j07rByXrd0vQr0xwow300bAMsw4M6bGwA6k/ZeRbPKZbX81IHKlMNC4nI8qgE8uVUy8ym88Cknasps5cFskYomus4Y+8+slQN8wgbs4C58/ssgGmj86AdnXazERwHCsIvCvatqCChsICnc0Cg8tTZTQm5simh3CWp62ndszs2mp8l8gc+Wj88sqASs+FMIjXSWxI6GIQQgJIW3bmF8nMfWpICAPMp3SYo4yc04xlX3OcxOIPbYU0e4lciPCmAjLQ5yuVY2vWg2i2kqcYoQ5aS1dczpcbeUyxcA2jRSwhH6YK8cSU2Sf8h1dVEhTgusEqHOWMXlf2pIePMVaCnpeGpygWdvOVTIioIonw7NAi8/WqCENmAQPiyIp/dpa1KcEMSGByZO8IFsd/b8vCXga9Gu5InGCAg2KmDMYunAYgsu0K8IPO0oM2+PLQPugAaTfxvT2E+FcBoEuN5QHshirtYDHtr0pLsxpP8jeD7ptTtUm0wAEs81OXni50BE0nQSATIyX2Mhol/1mzAyWJgTeAAOun8E2vBm2vrW5l3NNoNsLonto0zFWJphvFJj4zXUU3Gm0LvtTtwnwkwHyx0TixGgbIfM63iWuo4yPXkCDFTE0gaQwEUn0lRnWVlTFlsnvrKleBBBo1ahEMOALnHATnoHYhYKvG4asQZW0PzvJNYERLmBHVDl+H+E9BQ3WrRGMWmnelNINMg1WHobP3YgcliyS2zPxmoETGDEMhKm0yvxnA4r5RQCjRQAynDV9RQFQJ4oygjTmKYC0FTWwNQFwKWnoCYgADlxxlD14hEqEnYBrEzawYysomCMaTy5A389R8pcN6BpEcxdYAlKq3DLIYa07eHMxwZ7Jl4e6M1YGV6EHECkHWpgnMreUYQpg4H8BV6Spkcqn67HFFxqBqDGBVFN4Ap+GDYOM554hPrqVvqNyfb/rXBAbTRvSiFvB/TeIIbA8oa8wawtMuDs7ZJS69i5UM6tMYd87488cf1YhwTxQqQgSBjYhVc2aLnwgrmGmC6Sp/RT7z6e1bmxnKh7mASnmoSXmicobQzJnjRrCoGLYgqGBls3QiokQRN/Q+7r0ORzth7R6SnkAuQTxZL6hr0Bxvm17N7t6lQ3m5VUXwh0We1MWSnsXcWh58XvDlYiWPQSWfAyWat4GfmKh16Smt739MquRj7TR/mWWe0lQ0KaWJixyKzjAeiSbKamcjapgViiVA7hXlZ9jKUbbPc7bzjol/drjgBFyXaQ9jJ3ak5I8vbnSYHtXsU9XWBg789/R+AxkPR21X16xLEVqgH1rNIY7ICVTBDeVuZT6i7CBCAmx06DnwgjmV8LH5VyiKgi7/KYLEWAsy7h0hZK7M2z7ZW672qiKsIvbUT+dowDZaniTGtGDpHE6Z5Dh5HbLOWeHM55V2We0x689YWMkItZ790W8npF65UAiPWqX38MLaYn6D7Gwj6snpWS2AXy3xsqT7MzQ76B7GSLcvM36sp8CZSOrCGSE/7G35hxAxEGHGBAh3a+Achv7/BQYtgOBkJpIfQQGaDxKEWG3f0670nIKUHmMQn/Y8DMGKqwtpqGtRH6GFDAKY2S3qNJ7jQnEM9Z11Vw2p69QLxhGgl/2z0JHtV8GP9N5Sc1NFHzUQxeU8yI1srhgkDNIphwt/B4zZIEOeZ1UzGAzYx+IrHeToRuk8YAY7Hbi3GiSfTq4fHMztpXpqAZBT3+N3JAG1qh0iwr3CnOqFrXFJJ3TI2gIcpmhLrI3AOrlf3KndxqnpxAPo2phY3mmpn5rFEeJA1FAZ1mr2nHOiU+mbOBmiKhmPRlOf1i45ibOGtAPcOMPlYZnWLMxZgXRVy1PpxUXSgBTQNBgXxytYI1ULt2OZrJIWUOTtUMOtPF4AHpwRqBsgIKBt3r6YPsUO3yOn6oLDGYhVLoA7xtwagNV4It0sA5m2sFnvaes3SVn14gakyQbNnTCJtIaYBBUMYzilL5sJgkWzmVscSYucDfPDh49NsO0dtjtTkDBuWlLZhSWe0eAOmyBT7JclR0bQjEUIjWzaddchjja3XLbx6uQ1p2SCz4X5loOqxUzxSEPu7QpUmDHMmelL2AD6AVQoaN9pwnZbJltOdl47uYN/PI4js8e6isoQA/DTQUODuKiui5U1WdbGzPvGdvvdXfvvVVRlWllQAVlxt1lTRNliATWGUfluAAgMAAUZzgVLkkYwUNAIV7loUOeoBElNAkqNhkAkrBEGAkquCtN2fHloBFRy0zgmB6BPF6ALgAA2DAXxAAZit+8ROAuGN/iBODIAAE56Arf4hfFvEAAOegLxegIQM4XxeIM4KFIwXXl3hgPxeIJgb373oQeIHxXxMgK3pgeIbxK4b3k4A3+gJgTxIQTxM4IQXxXxM3k4DAbxRgB5Tnq3sgb3z3hPq4HxFP63i4DPs4Zv+gUvhP73w33xb3i4JgE4bxM4M4eIa4HXznnWJXlXtXzVM+egJKgQwwIAA -->

<!-- internal state end -->
<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- jrgarciadev: Hey @winchesHe I see no impactful changes here other than moving the types from one file to another, does this solve the mentioned issue?\n- winchesHe: > Hey @winchesHe I see no impactful changes here other than moving the types from one file to another, does this solve the mentioned issue?

Yes, the original changes omit the internal types in the menu props, but it doesn't have, so i change it to the menuItem\n

Files Changed:
- .changeset/ninety-mails-yell.md (added, 6 changes)\n  Patch: @@ -0,0 +1,6 @@
+---
+"@nextui-org/menu": patch
+"@nextui-org/theme": patch
+---
+
+Fix should not export list item internal variables type\n- apps/docs/components/docs/components/code-demo/react-live-demo.tsx (modified, 5 changes)\n  Patch: @@ -5,14 +5,15 @@ import * as Components from "@nextui-org/react";
 import * as intlDateUtils from "@internationalized/date";
 import * as reactAriaI18n from "@react-aria/i18n";
 import * as reactHookForm from "react-hook-form";
+import {SandpackFiles} from "@codesandbox/sandpack-react/types";
 
 import {BgGridContainer} from "@/components/bg-grid-container";
 import {GradientBox, GradientBoxProps} from "@/components/gradient-box";
 import {CopyButton} from "@/components/copy-button";
 
 export interface ReactLiveDemoProps {
   code: string;
-  files: string[];
+  files: SandpackFiles;
   noInline?: boolean;
   height?: string | number;
   isCentered?: boolean;
@@ -47,7 +48,7 @@ export const ReactLiveDemo: React.FC<ReactLiveDemoProps> = ({
         <div className="absolute top-[-28px] right-[-8px]">
           <CopyButton
             className="opacity-0 group-hover/code-demo:opacity-100 transition-opacity text-zinc-400"
-            value={files?.[DEFAULT_FILE]}
+            value={files?.[DEFAULT_FILE] as string}
           />
         </div>
       )}\n- packages/components/listbox/src/use-listbox-item.ts (modified, 7 changes)\n  Patch: @@ -1,7 +1,7 @@
 import type {ListboxItemBaseProps} from "./base/listbox-item-base";
 
 import {useMemo, useRef, useCallback, Fragment} from "react";
-import {listboxItem} from "@nextui-org/theme";
+import {listboxItem, MenuItemVariantProps} from "@nextui-org/theme";
 import {
   HTMLNextUIProps,
   mapPropsVariants,
@@ -29,7 +29,10 @@ export type UseListboxItemProps<T extends object> = Props<T> &
 export function useListboxItem<T extends object>(originalProps: UseListboxItemProps<T>) {
   const globalContext = useProviderContext();
 
-  const [props, variantProps] = mapPropsVariants(originalProps, listboxItem.variantKeys);
+  const [props, variantProps] = mapPropsVariants(
+    originalProps,
+    listboxItem.variantKeys as (keyof MenuItemVariantProps)[],
+  );
 
   const {
     as,\n- packages/components/menu/src/menu.tsx (modified, 5 changes)\n  Patch: @@ -74,10 +74,7 @@ function Menu<T extends object>(props: Props<T>, ref: ForwardedRef<HTMLUListElem
   );
 }
 
-export type MenuProps<T extends object = object> = Omit<
-  Props<T>,
-  "hasChildItems" | "hasTitleTextChild" | "hasDescriptionTextChild"
-> & {ref?: Ref<HTMLElement>};
+export type MenuProps<T extends object = object> = Props<T> & {ref?: Ref<HTMLElement>};
 
 // forwardRef doesn't support generic parameters, so cast the result to the correct type
 export default forwardRef(Menu) as <T extends object>(props: MenuProps<T>) => ReactElement;\n- packages/components/menu/src/use-menu-item.ts (modified, 7 changes)\n  Patch: @@ -2,7 +2,7 @@ import type {MenuItemBaseProps} from "./base/menu-item-base";
 import type {Node} from "@react-types/shared";
 
 import {useMemo, useRef, useCallback, Fragment} from "react";
-import {menuItem} from "@nextui-org/theme";
+import {menuItem, MenuItemVariantProps} from "@nextui-org/theme";
 import {
   HTMLNextUIProps,
   mapPropsVariants,
@@ -29,7 +29,10 @@ export type UseMenuItemProps<T extends object> = Props<T> &
 export function useMenuItem<T extends object>(originalProps: UseMenuItemProps<T>) {
   const globalContext = useProviderContext();
 
-  const [props, variantProps] = mapPropsVariants(originalProps, menuItem.variantKeys);
+  const [props, variantProps] = mapPropsVariants(
+    originalProps,
+    menuItem.variantKeys as (keyof MenuItemVariantProps)[],
+  );
 
   const {
     as,\n- packages/core/theme/src/components/menu.ts (modified, 5 changes)\n  Patch: @@ -529,7 +529,10 @@ export type MenuVariantProps = VariantProps<typeof menu>;
 export type MenuSlots = keyof ReturnType<typeof menu>;
 export type MenuSectionVariantProps = VariantProps<typeof menuSection>;
 export type MenuSectionSlots = keyof ReturnType<typeof menuSection>;
-export type MenuItemVariantProps = VariantProps<typeof menuItem>;
+export type MenuItemVariantProps = Omit<
+  VariantProps<typeof menuItem>,
+  "hasDescriptionTextChild" | "hasTitleTextChild"
+>;
 export type MenuItemSlots = keyof ReturnType<typeof menuItem>;
 
 export {menu, menuItem, menuSection};\n
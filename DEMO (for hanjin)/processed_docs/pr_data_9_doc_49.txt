Pull Request Number: 3157
Title: fix(select): unset form value after unselecting an item
Base Branch: canary
Head Branch: fix/eng-941
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/3157
State: MERGED
Created At: 2024-06-01T08:10:57Z
Merged At: 2024-06-07T00:47:46Z
Participants: wingkwong, jrgarciadev

Description:
Closes #3156
üìù Description
as titled
‚õ≥Ô∏è Current behavior (updates)
currently, when we unselect an item, the value will be undefined which won't match any option in the hidden select. Therefore, the previous selected item was used. e.g: select foo -> unselect foo -> value: 'foo'
üöÄ New behavior
if it is undefined, we use empty string instead, which keeps consistent with the one in inputProps as well (L96). e.g: select foo -> unselect foo -> value: ''
üí£ Is this a breaking change (Yes/No):
No
üìù Additional Information

Commits:
- fix(select): set empty string instead of undefined for unsetting value\n- feat(selet): should unset form value\n

Labels:


Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-941/[bug]-select-value-not-reset-after-unselect-an-item">ENG-941 [BUG] - Select value not reset after unselect an item</a></p>\n- vercel: [vc]: #vXJv2hIWPuleegE6y/WhTKSU09MVOTZ3WEvpnOZxsyU=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi83a3M2U0xFQWVzbmkyTUhBbnZNNUc1NUhyS3FHIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtZW5nLTk0MS1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWZpeC1lbmctOTQxLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvQmF0WlMyU0ttNTd1N2VDNTd1WnF4U203enk4RiIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1maXgtZW5nLTk0MS1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LWVuZy05NDEtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/7ks6SLEAesni2MHAnvM5G55HrKqG)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-941-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-941-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 1, 2024 8:12am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/BatZS2SKm57u7eC57uZqxSm7zy8F)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-941-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-941-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 1, 2024 8:12am |


\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: ef4ddf2e333ab7e5b0d8e9338fa483d15d176769

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name               | Type  |
| ------------------ | ----- |
| @nextui-org/select | Patch |
| @nextui-org/react  | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/eng-941?filename=.changeset/old-ears-pay.md&value=---%0A%22%40nextui-org%2Fselect%22%3A%20patch%0A---%0A%0Afix(select)%3A%20unset%20form%20value%20after%20unselecting%20an%20item%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The patch for the `@nextui-org/select` package ensures that an empty string is set instead of `undefined` when unsetting a value. This addresses issue #3156 where a form's select component did not reset its value correctly after an item was unselected. A test case was added to verify this behavior in the `select.test.tsx` file. Additionally, the `hidden-select.tsx` file was updated to use an empty string as the default value when `selectionMode` is not "multiple".

## Changes

| Files                                    | Change Summary                                                                                                                                                                               |
|------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `.changeset/thirty-timers-press.md`      | Introduced a patch for the `@nextui-org/select` package to set an empty string instead of `undefined` for unsetting a value, addressing issue #3156.                                           |
| `packages/components/select/__tests__/...| Added a test case to ensure the form value is unset correctly when interacting with a select component. The test simulates selecting an option, submitting the form, and verifying the reset. |
| `packages/components/select/src/hidden...| Updated the default value assignment for the `value` property to use an empty string when `selectionMode` is not "multiple".                                                                   |

## Assessment against linked issues

| Objective                                                                 | Addressed | Explanation                                                                                      |
|---------------------------------------------------------------------------|-----------|--------------------------------------------------------------------------------------------------|
| Ensure the select value is reset correctly after unselecting an item (#3156) | ‚úÖ         |                                                                                                  |
| Verify form data in `onSubmit` does not contain the unselected value (#3156) | ‚úÖ         |                                                                                                  |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

.changeset/thirty-timers-press.md: ## Summary

The new file introduces a patch for the `@nextui-org/select` package that sets an empty string instead of `undefined` for unsetting a value, addressing issue #3156.

---

packages/components/select/__tests__/select.test.tsx: ### Summary

In the `select.test.tsx` file, a test case was added to ensure that the form value is unset correctly when interacting with a select component. The test simulates selecting an option from the dropdown, submitting the form, and verifies that the form value is cleared as expected.

### Alterations to the declarations of exported or public entities

No alterations were made to the declarations of exported or public entities in the `select.test.tsx` file.

---

packages/components/select/src/hidden-select.tsx: ## Short Summary
The change in functionality involves updating the default value assignment for the `value` property in a function related to a hidden select component. The change ensures that an empty string is used as the default value when `selectionMode` is not "multiple".

## Alterations to the declarations of exported or public entities
- `export function useHiddenSelect<T>(...)` in `packages/components/select/src/hidden-select.tsx`
  - Updated default value assignment for the `value` property:
    - Before: `? [...state.selectedKeys][0]`
    - After: `? [...state.selectedKeys][0] ?? ""`

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR Summary

**Title:** fix(select): unset form value after unselecting an item  
**User:** wingkwong  
**Number:** 3157  

**Description:**  
This pull request addresses a bug where the form value is not reset after unselecting an item in a `Select` component. The issue is documented in #3156. The current behavior in uncontrolled forms is that after selecting and then unselecting an item, the form data still retains the previously selected value upon form submission. This PR aims to fix this by ensuring that the form value is unset when an item is unselected.

## Objectives from Linked Issues

**Issue #3156:**  
- **NextUI Version:** 2.4.1  
- **Bug Description:** In an uncontrolled form, after selecting and then unselecting an item in a `Select` component, the form data still retains the selected value when the form is submitted.
- **Steps to Reproduce:**
  1. Select an item in the `Select` component.
  2. Unselect the item.
  3. Submit the form.
- **Expected Behavior:** The form should return an empty value for the `Select` field after unselecting an item.
- **Example Code:**
  ```javascript
  const onSubmit = useCallback((e: FormEvent) => {
    e.preventDefault();
    const formData = new FormData(e.target as HTMLFormElement);
    alert(JSON.stringify(Object.fromEntries(formData), null, 2));
  }, []);

  return (
    <form onSubmit={onSubmit}>
      <Select name="account_filter" label="Account filter" size="sm">
        <SelectItem key="verified">From verified users</SelectItem>
        <SelectItem key="follows">From accounts you follow</SelectItem>
      </Select>
    </form>
  );
  ```
- **Expected Outcome:** The form should return an empty value for the `Select` field after unselecting an item.
- **Operating System:** macOS
- **Browser:** Chrome
- **Additional Information:** A video demonstrating the issue is provided in the linked issue.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated summary of generated summaries

The recent updates introduce a patch for the `@nextui-org/select` package to address issue #3156. The primary change involves setting an empty string instead of `undefined` when unsetting a value in the select component. This adjustment is reflected in the `hidden-select.tsx` file, where the default value assignment for the `value` property in the `useHiddenSelect` function is modified to use an empty string when `selectionMode` is not "multiple". Additionally, a new test case has been added to `select.test.tsx` to verify that the form value is correctly unset when interacting with the select component. No alterations were made to the declarations of exported or public entities in the test file.

### Alterations to the declarations of exported or public entities

#### `packages/components/select/src/hidden-select.tsx`

- **Before:**
  ```typescript
  export function useHiddenSelect<T>(...) {
    // value assignment
    const value = selectionMode !== "multiple" ? [...state.selectedKeys][0] : undefined;
  }
  ```

- **After:**
  ```typescript
  export function useHiddenSelect<T>(...) {
    // updated value assignment
    const value = selectionMode !== "multiple" ? [...state.selectedKeys][0] ?? "" : undefined;
  }
  ```
- **Feedback from the user on the previous review**: undefined

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- ef4ddf2e333ab7e5b0d8e9338fa483d15d176769 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/thirty-timers-press.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/select": patch
+---
+
+set empty string instead of undefined for unsetting value (#3156)\n- packages/components/select/__tests__/select.test.tsx (modified, 69 changes)\n  Patch: @@ -547,6 +547,75 @@ describe("Select", () => {
 
     expect(select).toHaveTextContent("Select an animal");
   });
+
+  it("should unset form value", async () => {
+    const logSpy = jest.spyOn(console, "log");
+
+    const user = userEvent.setup();
+
+    const wrapper = render(
+      <form
+        className="w-full max-w-xs items-end flex flex-col gap-4"
+        onSubmit={(e) => {
+          e.preventDefault();
+          const formData = new FormData(e.target as HTMLFormElement);
+
+          /* eslint-disable no-console */
+          console.log(JSON.stringify(Object.fromEntries(formData)));
+        }}
+      >
+        <Select data-testid="select" label="test select" name="select" size="sm">
+          <SelectItem key="foo">foo</SelectItem>
+          <SelectItem key="bar">bar</SelectItem>
+        </Select>
+        <button data-testid="submit-button" type="submit">
+          Submit
+        </button>
+      </form>,
+    );
+
+    const select = wrapper.getByTestId("select");
+
+    expect(select).not.toBeNull();
+
+    await act(async () => {
+      await user.click(select);
+    });
+
+    let listbox = wrapper.getByRole("listbox");
+
+    expect(listbox).toBeTruthy();
+
+    let listboxItems = wrapper.getAllByRole("option");
+
+    expect(listboxItems.length).toBe(2);
+
+    await act(async () => {
+      await user.click(listboxItems[1]);
+    });
+
+    let submitButton = wrapper.getByTestId("submit-button");
+
+    await act(async () => {
+      await user.click(submitButton);
+    });
+
+    expect(logSpy).toHaveBeenCalledWith(JSON.stringify({select: "bar"}));
+
+    await act(async () => {
+      await user.click(select);
+    });
+
+    await act(async () => {
+      await user.click(listboxItems[1]);
+    });
+
+    await act(async () => {
+      await user.click(submitButton);
+    });
+
+    expect(logSpy).toHaveBeenCalledWith(JSON.stringify({select: ""}));
+  });
 });
 
 describe("Select with React Hook Form", () => {\n- packages/components/select/src/hidden-select.tsx (modified, 2 changes)\n  Patch: @@ -113,7 +113,7 @@ export function useHiddenSelect<T>(
       value:
         selectionMode === "multiple"
           ? [...state.selectedKeys].map((k) => String(k))
-          : [...state.selectedKeys][0],
+          : [...state.selectedKeys][0] ?? "",
       multiple: selectionMode === "multiple",
       onChange: (e: React.ChangeEvent<HTMLSelectElement>) => {
         state.setSelectedKeys(e.target.value);\n
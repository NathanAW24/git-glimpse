Pull Request Number: 3211
Title: fix: dropdown onPress issue
Base Branch: fix/focus
Head Branch: fix/eng-919
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/3211
State: MERGED
Created At: 2024-06-07T09:31:33Z
Merged At: 2024-06-12T08:26:52Z
Participants: wingkwong

Description:
ref #3121
üìù Description
include eng-830 fix here also (wait for eng-830 to merge first)
üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


Tests

Enhanced keyboard interaction tests for the dropdown component, including handling "Enter" and "Space" key events.



Refactor

Improved conditional rendering logic in the PopoverContent component for better performance and readability.

Commits:
- fix(popover): move useDialog to popover-content\n- fix(popover): move useDialog to free-solo-popover\n- refactor(popover): use const instead\n- feat(changset): add changeset\n- feat(popover): popover focus test\n- refactor(popover): getDialogProps\n- Merge branch 'canary' into fix/eng-830\n- Merge branch 'canary' into fix/eng-919\n- fix(popover): dropdown onPress blocking issue\n- fix(dropdown): incorrect keyCodes\n- feat(dropdown): add keyboard onPress test cases\n- Merge branch 'fix/focus' into fix/eng-919\n

Labels:


Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-919/[bug]-enter-or-space-not-selecting-item-in-dropdown">ENG-919 [BUG] - enter or space not selecting item in dropdown</a></p>\n- vercel: [vc]: #ozPWZgIj72QS0y/Wn+pDU8qEVt6eW9fxIw0vKXS8n4U=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi83QzZ4VFJqR1V1OEtqdk1pd3lCZk5MSzV4WGt1IiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtZW5nLTkxOS1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWZpeC1lbmctOTE5LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvOUR2d0IyazhHN1dFdm92YWFCakpXUVNrWHJFZSIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1maXgtZW5nLTkxOS1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LWVuZy05MTktbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/7C6xTRjGUu8KjvMiwyBfNLK5xXku)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-919-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-919-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 12, 2024 8:28am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/9DvwB2k8G7WEvovaaBjJWQSkXrEe)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-919-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-919-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 12, 2024 8:28am |


\n- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: 11e80950801df407ae93d47c075bea8bd8e30066

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/nextui-org/nextui/new/fix/eng-919?filename=.changeset/dull-years-train.md&value=---%0A%22%40nextui-org%2Fdropdown%22%3A%20patch%0A%22%40nextui-org%2Fpopover%22%3A%20patch%0A---%0A%0Afix%3A%20dropdown%20onPress%20issue%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: failure by coderabbit.ai -->

> [!WARNING]
> ## Review failed
> 
> The pull request is closed.

<!-- end of auto-generated comment: failure by coderabbit.ai --><!-- walkthrough_start -->

## Walkthrough

The updates focus on enhancing keyboard interaction tests for the dropdown component and refining content rendering logic in the popover component. Specifically, the dropdown tests now handle "Enter" and "Space" key events more robustly, while the popover component's content rendering is optimized by removing unnecessary imports and conditionally displaying content based on animation settings.

## Changes

| File Path                                                    | Change Summary                                                                                              |
|--------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------|
| `packages/components/dropdown/__tests__/dropdown.test.tsx`   | Improved handling and testing of "Enter" and "Space" key events for dropdown interactions.                  |
| `packages/components/popover/src/popover-content.tsx`        | Removed unused imports and updated content rendering logic to conditionally display content based on animation settings. |

## Sequence Diagram(s)

```mermaid
sequenceDiagram
    participant User
    participant Dropdown
    participant MenuItem

    User->>Dropdown: keyDown (Enter)
    Dropdown-->>MenuItem: Focus on item
    MenuItem-->>Dropdown: Action triggered
    Dropdown-->>User: Action logged

    User->>Dropdown: keyDown (Space)
    Dropdown-->>MenuItem: Focus on item
    MenuItem-->>Dropdown: Action triggered
    Dropdown-->>User: Action logged
```

```mermaid
sequenceDiagram
    participant Popover
    participant Content

    Popover->>Content: Render request
    alt disableAnimation is true
        Content-->>Popover: Render without animation
    else disableAnimation is false
        Content-->>Popover: Render with animation
    end
```

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

packages/components/dropdown/__tests__/dropdown.test.tsx: ### Summary

In the `dropdown.test.tsx` file, the changes primarily focus on keyboard interactions within a dropdown component. The modifications involve handling key events like "Enter" and "Space" to trigger actions within the dropdown menu. The tests simulate key presses and verify the expected behavior, including focusing on menu items and logging actions.

### Alterations to the declarations of exported or public entities

- `fireEvent.keyDown(triggerButton, {key: " ", charCode: keyCodes.Space});` in `dropdown.test.tsx`
  changed to
  `fireEvent.keyDown(triggerButton, {key: " ", charCode: keyCodes[" "]});` in `dropdown.test.tsx`

- Added a new test function:
  ```jsx
  it("should press the item on keyDown (Enter)", async () => {
    // Test logic for pressing Enter key
  });

  it("should press the item on keyDown (Space)", async () => {
    // Test logic for pressing Space key
  });
  ```

These alterations demonstrate the refinement of key event handling and testing scenarios within the dropdown component.

---

packages/components/popover/src/popover-content.tsx: ### Summary

In the `PopoverContent` component in `packages/components/popover/src/popover-content.tsx`:
- Removed `ReactElement`, `useCallback`, and `ReactElement` imports.
- Updated the structure of the `contents` variable to conditionally render content based on `disableAnimation`.

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR summary

**Title:** fix: dropdown onPress issue  
**User:** wingkwong  
**Number:** 3211  

**Description:**  
This pull request addresses a bug related to the dropdown onPress issue. It references issue #3121. The initial plan was to include the fix for eng-830 as well, but it was decided to wait for eng-830 to merge first. The PR does not specify any new behavior or breaking changes. Additional information is not provided.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated summary of generated summaries

In the `dropdown.test.tsx` file, the changes enhance keyboard interaction testing for a dropdown component. Specifically, the modifications focus on handling "Enter" and "Space" key events to trigger actions within the dropdown menu. The tests simulate these key presses and verify the expected behavior, such as focusing on menu items and logging actions. Additionally, the `fireEvent.keyDown` function call was updated to use `keyCodes[" "]` instead of `keyCodes.Space`.

In the `popover-content.tsx` file, the changes involve removing unnecessary imports (`ReactElement`, `useCallback`, and `ReactElement`) and updating the `contents` variable to conditionally render content based on the `disableAnimation` prop.

### Alterations to the declarations of exported or public entities

#### `dropdown.test.tsx`

- **Before:**
  ```jsx
  fireEvent.keyDown(triggerButton, {key: " ", charCode: keyCodes.Space});
  ```

- **After:**
  ```jsx
  fireEvent.keyDown(triggerButton, {key: " ", charCode: keyCodes[" "]});
  ```

- **New Test Functions Added:**
  ```jsx
  it("should press the item on keyDown (Enter)", async () => {
    // Test logic for pressing Enter key
  });

  it("should press the item on keyDown (Space)", async () => {
    // Test logic for pressing Space key
  });
  ```

#### `popover-content.tsx`

- **Removed Imports:**
  ```jsx
  import { ReactElement, useCallback } from 'react';
  ```

- **Updated `contents` Variable:**
  ```jsx
  const contents = disableAnimation ? (
    // Render content without animation
  ) : (
    // Render content with animation
  );
  ```

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- packages/components/dropdown/__tests__/dropdown.test.tsx (modified, 114 changes)\n  Patch: @@ -667,7 +667,7 @@ describe("Keyboard interactions", () => {
 
     expect(triggerButton).toHaveFocus();
 
-    fireEvent.keyDown(triggerButton, {key: " ", charCode: keyCodes.Space});
+    fireEvent.keyDown(triggerButton, {key: " ", charCode: keyCodes[" "]});
 
     let menu = wrapper.queryByRole("menu");
 
@@ -679,4 +679,116 @@ describe("Keyboard interactions", () => {
 
     expect(menuItems[0]).toHaveFocus();
   });
+
+  it("should press the item on keyDown (Enter)", async () => {
+    const user = userEvent.setup();
+
+    const wrapper = render(
+      <Dropdown>
+        <DropdownTrigger>
+          <Button data-testid="trigger-test">Trigger</Button>
+        </DropdownTrigger>
+        <DropdownMenu aria-label="Actions" selectionMode="single">
+          <DropdownItem
+            key="new"
+            onPress={() => {
+              /* eslint-disable no-console */
+              console.log("ENTER");
+            }}
+          >
+            New file
+          </DropdownItem>
+          <DropdownItem key="copy">Copy link</DropdownItem>
+          <DropdownItem key="edit">Edit file</DropdownItem>
+          <DropdownItem key="delete" color="danger">
+            Delete file
+          </DropdownItem>
+        </DropdownMenu>
+      </Dropdown>,
+    );
+
+    let triggerButton = wrapper.getByTestId("trigger-test");
+
+    act(() => {
+      triggerButton.focus();
+    });
+
+    expect(triggerButton).toHaveFocus();
+
+    fireEvent.keyDown(triggerButton, {key: "Enter", charCode: keyCodes.Enter});
+
+    let menu = wrapper.queryByRole("menu");
+
+    expect(menu).toBeTruthy();
+
+    let menuItems = wrapper.getAllByRole("menuitemradio");
+
+    expect(menuItems.length).toBe(4);
+
+    expect(menuItems[0]).toHaveFocus();
+
+    const logSpy = jest.spyOn(console, "log");
+
+    await act(async () => {
+      await user.keyboard("[Enter]");
+    });
+
+    expect(logSpy).toHaveBeenCalledWith("ENTER");
+  });
+
+  it("should press the item on keyDown (Space)", async () => {
+    const user = userEvent.setup();
+
+    const wrapper = render(
+      <Dropdown>
+        <DropdownTrigger>
+          <Button data-testid="trigger-test">Trigger</Button>
+        </DropdownTrigger>
+        <DropdownMenu aria-label="Actions" selectionMode="single">
+          <DropdownItem
+            key="new"
+            onPress={() => {
+              /* eslint-disable no-console */
+              console.log("SPACE");
+            }}
+          >
+            New file
+          </DropdownItem>
+          <DropdownItem key="copy">Copy link</DropdownItem>
+          <DropdownItem key="edit">Edit file</DropdownItem>
+          <DropdownItem key="delete" color="danger">
+            Delete file
+          </DropdownItem>
+        </DropdownMenu>
+      </Dropdown>,
+    );
+
+    let triggerButton = wrapper.getByTestId("trigger-test");
+
+    act(() => {
+      triggerButton.focus();
+    });
+
+    expect(triggerButton).toHaveFocus();
+
+    fireEvent.keyDown(triggerButton, {key: "Enter", charCode: keyCodes.Enter});
+
+    let menu = wrapper.queryByRole("menu");
+
+    expect(menu).toBeTruthy();
+
+    let menuItems = wrapper.getAllByRole("menuitemradio");
+
+    expect(menuItems.length).toBe(4);
+
+    expect(menuItems[0]).toHaveFocus();
+
+    const logSpy = jest.spyOn(console, "log");
+
+    await act(async () => {
+      await user.keyboard("[Space]");
+    });
+
+    expect(logSpy).toHaveBeenCalledWith("SPACE");
+  });
 });\n- packages/components/popover/src/popover-content.tsx (modified, 52 changes)\n  Patch: @@ -1,7 +1,7 @@
 import type {AriaDialogProps} from "@react-aria/dialog";
 import type {HTMLMotionProps} from "framer-motion";
 
-import {DOMAttributes, ReactNode, useMemo, useCallback, ReactElement, useRef} from "react";
+import {DOMAttributes, ReactNode, useMemo, useRef} from "react";
 import {forwardRef} from "@nextui-org/system";
 import {DismissButton} from "@react-aria/overlays";
 import {TRANSITION_VARIANTS} from "@nextui-org/framer-utils";
@@ -82,34 +82,28 @@ const PopoverContent = forwardRef<"div", PopoverContentProps>((props, _) => {
     );
   }, [backdrop, disableAnimation, getBackdropProps]);
 
-  const RemoveScrollWrapper = useCallback(
-    ({children}: {children: ReactElement}) => {
-      return (
-        <RemoveScroll enabled={shouldBlockScroll && isOpen} removeScrollBar={false}>
-          {children}
-        </RemoveScroll>
-      );
-    },
-    [shouldBlockScroll, isOpen],
-  );
-
-  const contents = disableAnimation ? (
-    <RemoveScrollWrapper>{content}</RemoveScrollWrapper>
-  ) : (
-    <LazyMotion features={domAnimation}>
-      <m.div
-        animate="enter"
-        exit="exit"
-        initial="initial"
-        style={{
-          ...getTransformOrigins(placement === "center" ? "top" : placement),
-        }}
-        variants={TRANSITION_VARIANTS.scaleSpringOpacity}
-        {...motionProps}
-      >
-        <RemoveScrollWrapper>{content}</RemoveScrollWrapper>
-      </m.div>
-    </LazyMotion>
+  const contents = (
+    <RemoveScroll enabled={shouldBlockScroll && isOpen} removeScrollBar={false}>
+      {disableAnimation ? (
+        content
+      ) : (
+        <LazyMotion features={domAnimation}>
+          <m.div
+            animate="enter"
+            className="fuckthat"
+            exit="exit"
+            initial="initial"
+            style={{
+              ...getTransformOrigins(placement === "center" ? "top" : placement),
+            }}
+            variants={TRANSITION_VARIANTS.scaleSpringOpacity}
+            {...motionProps}
+          >
+            {content}
+          </m.div>
+        </LazyMotion>
+      )}
+    </RemoveScroll>
   );
 
   return (\n
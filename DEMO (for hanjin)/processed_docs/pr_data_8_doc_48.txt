Pull Request Number: 3311
Title: fix(popover): dialog focus behaviour 
Base Branch: canary
Head Branch: fix/eng-992
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/3311
State: MERGED
Created At: 2024-06-24T06:02:17Z
Merged At: 2024-07-06T07:44:44Z
Participants: wingkwong, jrgarciadev

Description:
Closes: #3225
Closes: #3124
Closes: #3203

üìù Description
The focus on autocomplete works only in the following cases:

production environment
dev environment without React strictMode

This PR is to avoid autocomplete to focus on dialog before focusing on input so that the focus logic in autocomplete hook also works with React strictMode.
‚õ≥Ô∏è Current behavior (updates)

open autocomplete
focus on dialog (logic from react-aria side)
focus on input (logic from nextui autocomplete hook)

üöÄ New behavior

open autocomplete
focus on input (logic from nextui autocomplete hook)

Demo (with strictMode: true)

  
    
    

    pr3311-demo.webm
    
  

  

  



  
    
    

    pr3311-demo-2.webm
    
  

  

  


üí£ Is this a breaking change (Yes/No):

No
üìù Additional Information

Summary by CodeRabbit

New Features

Added disableDialogFocus option to the autocomplete and popover components, allowing users to keep focus on the input when the popover is open.


Bug Fixes

Resolved focus-related issues in popover and autocomplete components (#3225, #3124, #3203).

Commits:
- fix(autocomplete): set skipDialogFocus to true\n- feat(popover): add skipDialogFocus to free solo popover\n- refactor(popover): rename variable and add comment\n- refactor(autocomplete): rename variable and add comment\n- feat(changeset): add changeset\n

Labels:


Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-992/[bug]-autocompletes-keyboard-shortcuts-behave-weirdly">ENG-992 [BUG] - Autocomplete's keyboard shortcuts behave weirdly</a></p>\n- vercel: [vc]: #CdjSoBgTmh3KW+1ps+rEeg1gkVtJVt8L6/MtyjgqwHQ=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWZpeC1lbmctOTkyLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9LCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi83Zm9kWHl3S3Rxa24yNzVqVFJTV0gxTmNoVVZ1IiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtZW5nLTk5Mi1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQifSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvR3pBZVN0TXllUmhSRDhVTTZrdkNIOUdiUkV3MyIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1maXgtZW5nLTk5Mi1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LWVuZy05OTItbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/7fodXywKtqkn275jTRSWH1NchUVu)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-992-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-992-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 24, 2024 6:33am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/GzAeStMyeRhRD8UM6kvCH9GbREw3)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-992-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-992-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 24, 2024 6:33am |


\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 03b40f1ded8faef2f1439485cdda26313f93a993

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 6 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/autocomplete | Patch |
| @nextui-org/popover      | Patch |
| @nextui-org/react        | Patch |
| @nextui-org/date-picker  | Patch |
| @nextui-org/dropdown     | Patch |
| @nextui-org/select       | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/eng-992?filename=.changeset/witty-hotels-peel.md&value=---%0A%22%40nextui-org%2Fautocomplete%22%3A%20patch%0A%22%40nextui-org%2Fpopover%22%3A%20patch%0A---%0A%0Afix(popover)%3A%20dialog%20focus%20behaviour%20%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The update introduces `disableDialogFocus` to the `free-solo-popover` in the `@nextui-org/autocomplete` and `@nextui-org/popover` packages. This enhancement improves the dialog focus handling within the popover component, addressing issues with keyboard shortcuts and focus behavior reported in issues #3225, #3124, and #3203.

## Changes

| Files                                                      | Change Summaries                                                                                               |
|------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------|
| `packages/components/autocomplete/src/use-autocomplete.ts` | Added `disableDialogFocus: true` in the `useAutocomplete` function to ensure focus remains on input when popover is open. |
| `packages/components/popover/src/free-solo-popover.tsx`    | Added `disableDialogFocus` prop to `FreeSoloPopover` component and adjusted focus logic based on this prop.    |

## Assessment against linked issues

| Objective                                                                                  | Addressed | Explanation                                                                              |
|--------------------------------------------------------------------------------------------|-----------|------------------------------------------------------------------------------------------|
| Ensure autocomplete keyboard shortcuts work correctly (Issue #3225)                        | ‚úÖ         |                                                                                          |
| Maintain input focus when autocomplete modal opens (Issue #3124)                           | ‚úÖ         |                                                                                          |
| Input should be focused when clicking on autocomplete (Issue #3203)                        | ‚ùì         | Changes suggest improvement but not confirmed without manual testing for user interaction. |


<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

.changeset/plenty-suns-juggle.md: ## Summary

The new changeset introduces the addition of `disableDialogFocus` to `free-solo-popover` in the `@nextui-org/autocomplete` and `@nextui-org/popover` packages, addressing issues #3225, #3124, and #3203. This enhancement enhances the functionality related to dialog focus disabling within the popover component.

---

packages/components/autocomplete/src/use-autocomplete.ts: ### Summary

The change introduces a new property `disableDialogFocus: true` in the `useAutocomplete` function, ensuring that when the popover is open, the focus remains on the input instead of the dialog.

---

packages/components/popover/src/free-solo-popover.tsx: ## Short Summary
The `FreeSoloPopover` component in `free-solo-popover.tsx` now includes a new prop `disableDialogFocus` which can be used to control the focus behavior when the dialog mounts. This change allows for more flexibility in managing focus within the popover component.

## Alterations to the declarations of exported or public entities
- `interface FreeSoloPopoverProps` in `free-solo-popover.tsx`
    - Added `disableDialogFocus?: boolean;`

- `const FreeSoloPopover` in `free-solo-popover.tsx`
    - Added `disableDialogFocus = false` to the function parameters
    - Updated the spread operator in `dialogProps` to conditionally include `ref: dialogRef` based on `disableDialogFocus` value

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR Summary

**Title**: fix(popover): dialog focus behaviour  
**User**: wingkwong  
**Number**: 3311  

**Description**:  
This pull request addresses the focus behavior of the autocomplete component in the NextUI library, specifically when used in environments with React strictMode enabled. The current behavior causes the dialog to focus before the input, leading to issues with the autocomplete hook's focus logic. The new behavior ensures that the input is focused directly, bypassing the dialog focus. This change resolves several focus-related issues reported in linked issues #3225, #3124, and #3203. The PR includes demo videos showing the improved behavior with strictMode enabled. The change is not a breaking change.

## Objectives from Linked Issues

**#3225**: Autocomplete's keyboard shortcuts behave inconsistently. The issues include:
1. The next autocomplete's textbox not being focused when hitting the tab key, and the popover opens but keyboard shortcuts do not work.
2. When the autocomplete is the last focusable component, hitting the tab key results in the popover remaining open.

**#3124**: Autocomplete inputs lose focus when the modal (options list) opens. This occurs when clicking or using the Tab key. The input loses focus when the modal reopens after typing or deleting characters that change the lookup results.

**#3203**: The autocomplete input does not gain focus when clicked. The expected behavior is that the input should be focused when the autocomplete component is clicked.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated summary of generated summaries

The recent changes introduce a new property `disableDialogFocus` to the `FreeSoloPopover` component in the `@nextui-org/autocomplete` and `@nextui-org/popover` packages. This enhancement addresses issues #3225, #3124, and #3203 by allowing the focus to remain on the input element when the popover is open, rather than shifting focus to the dialog. 

In the `useAutocomplete` function within the `@nextui-org/autocomplete` package, the `disableDialogFocus` property is set to `true`, ensuring that focus behavior is managed as described. The `FreeSoloPopover` component in `free-solo-popover.tsx` has been updated to include this new prop, `disableDialogFocus`, which can be optionally set to control the focus behavior when the dialog mounts. The interface `FreeSoloPopoverProps` has been updated to include `disableDialogFocus` as an optional boolean property. Additionally, the `FreeSoloPopover` component's function parameters now default `disableDialogFocus` to `false`, and the `dialogProps` spread operator conditionally includes `ref: dialogRef` based on the value of `disableDialogFocus`.

### Alterations to the declarations of exported or public entities

#### `free-solo-popover.tsx`
**Before:**
```typescript
interface FreeSoloPopoverProps {
  // existing properties
}

const FreeSoloPopover = (props: FreeSoloPopoverProps) => {
  // existing implementation
};
```

**After:**
```typescript
interface FreeSoloPopoverProps {
  // existing properties
  disableDialogFocus?: boolean;
}

const FreeSoloPopover = ({
  disableDialogFocus = false,
  ...props
}: FreeSoloPopoverProps) => {
  // updated implementation
  const dialogProps = {
    ...props,
    ...(disableDialogFocus ? {} : { ref: dialogRef }),
  };
};
```

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 03b40f1ded8faef2f1439485cdda26313f93a993 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- jrgarciadev: @wingkwong please add tests\n- wingkwong: The tests related to focus have been there. The issue doesn't exist in production since it's related to strict mode (when you set strict mode, it only applies to dev). In our local storybook / doc, we haven't set strict mode so it looks fine. If tests with strictMode on are required, there is [another PR](https://github.com/nextui-org/nextui/pull/3352) doing that.\n

Files Changed:
- .changeset/plenty-suns-juggle.md (added, 6 changes)\n  Patch: @@ -0,0 +1,6 @@
+---
+"@nextui-org/autocomplete": patch
+"@nextui-org/popover": patch
+---
+
+add `disableDialogFocus` to free-solo-popover (#3225, #3124, #3203)\n- packages/components/autocomplete/src/use-autocomplete.ts (modified, 3 changes)\n  Patch: @@ -460,6 +460,9 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
       shouldCloseOnInteractOutside: popoverProps?.shouldCloseOnInteractOutside
         ? popoverProps.shouldCloseOnInteractOutside
         : (element: Element) => ariaShouldCloseOnInteractOutside(element, inputWrapperRef, state),
+      // when the popover is open, the focus should be on input instead of dialog
+      // therefore, we skip dialog focus here
+      disableDialogFocus: true,
     } as unknown as PopoverProps;
   };
 \n- packages/components/popover/src/free-solo-popover.tsx (modified, 8 changes)\n  Patch: @@ -24,6 +24,7 @@ export interface FreeSoloPopoverProps extends Omit<UsePopoverProps, "children">
     originX?: number;
     originY?: number;
   };
+  disableDialogFocus?: boolean;
 }
 
 type FreeSoloPopoverWrapperProps = {
@@ -87,7 +88,7 @@ const FreeSoloPopoverWrapper = forwardRef<"div", FreeSoloPopoverWrapperProps>(
 FreeSoloPopoverWrapper.displayName = "NextUI.FreeSoloPopoverWrapper";
 
 const FreeSoloPopover = forwardRef<"div", FreeSoloPopoverProps>(
-  ({children, transformOrigin, ...props}, ref) => {
+  ({children, transformOrigin, disableDialogFocus = false, ...props}, ref) => {
     const {
       Component,
       state,
@@ -109,7 +110,10 @@ const FreeSoloPopover = forwardRef<"div", FreeSoloPopoverProps>(
     const dialogRef = React.useRef(null);
     const {dialogProps: ariaDialogProps, titleProps} = useDialog({}, dialogRef);
     const dialogProps = getDialogProps({
-      ref: dialogRef,
+      // by default, focus is moved into the dialog on mount
+      // we can use `disableDialogFocus` to disable this behaviour
+      // e.g. in autocomplete, the focus should be moved to the input (handled in autocomplete hook) instead of the dialog first
+      ...(!disableDialogFocus && {ref: dialogRef}),
       ...ariaDialogProps,
     });
 \n
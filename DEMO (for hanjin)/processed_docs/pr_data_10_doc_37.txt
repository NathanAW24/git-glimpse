Pull Request Number: 3020
Title: fix(table): v2 input/textarea don't allow spaces inside a table
Base Branch: canary
Head Branch: fix/eng-847
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/3020
State: MERGED
Created At: 2024-05-18T09:06:15Z
Merged At: 2024-05-19T13:05:51Z
Participants: wingkwong, jrgarciadev

Description:
Closes #1968
üìù Description
In react aria, there is a timeout for typeahead debounce wait on key down when keyboardDelegate.getKeyForSearch is true. In table, we don't need such selection so setting it to undefined.
‚õ≥Ô∏è Current behavior (updates)
The spacebar press works only when

it is the first input after selecting the textarea
it is the first input after pausing for ~1 second
the previous input was a spacebar press

üöÄ New behavior

  
    
    

    pr3020.webm
    
  

  

  


üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit

Bug Fixes

Resolved an issue that prevented users from typing spaces in input or textarea fields within a table component.

Commits:
- fix(table): set onKeyDownCapture to undefined\n- feat(changeset): add changeset\n

Labels:


Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-847/[bug]-v2-textarea-doesnt-allow-spaces-inside-a-table-row">ENG-847 [BUG] - v2 textarea doesn't allow spaces inside a Table row</a></p>\n- vercel: [vc]: #5sjZDzjyO/Abx0eObnrARukODxf229Mkh0dMHn3vTiI=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWZpeC1lbmctODQ3LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9LCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi81SHlIdXp3eUoyUXpmcDlEMm9YdktKeFlaUU1QIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtZW5nLTg0Ny1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQifSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1maXgtZW5nLTg0Ny1uZXh0dWktb3JnLnZlcmNlbC5hcHAifSwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi80d1hUVFk1WDdVaVFNVURYRllDOXVhZDZDWnBXIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZpeC1lbmctODQ3LW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCJ9XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/5HyHuzwyJ2Qzfp9D2oXvKJxYZQMP)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-847-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-847-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 18, 2024 9:29am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/4wXTTY5X7UiQMUDXFYC9uad6CZpW)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-847-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-847-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 18, 2024 9:29am |


\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: cbd5e1715432e3049a7b892fdd8a5d3c51a2fd67

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name              | Type  |
| ----------------- | ----- |
| @nextui-org/table | Patch |
| @nextui-org/react | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/eng-847?filename=.changeset/great-carrots-love.md&value=---%0A%22%40nextui-org%2Ftable%22%3A%20patch%0A---%0A%0Afix(table)%3A%20v2%20input%2Ftextarea%20don't%20allow%20spaces%20inside%20a%20table%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The recent patch for the `@nextui-org/table` package addresses a bug where spaces could not be typed in input or textarea elements within a table component. This was achieved by setting the `onKeyDownCapture` property to `undefined` in the `useTable` function, thus preventing typeahead debounce from interfering with space key input.

## Changes

| File Path                                     | Change Summary                                                                                           |
|-----------------------------------------------|----------------------------------------------------------------------------------------------------------|
| `packages/components/table/src/use-table.ts`  | Added `onKeyDownCapture: undefined` to the `useTable` function to allow typing spaces in input/textarea. |

## Assessment against linked issues

| Objective                                                                 | Addressed | Explanation                      |
|---------------------------------------------------------------------------|-----------|----------------------------------|
| Fix the issue where spaces are not allowed in the Textarea box inside a Table row (#1968) | ‚úÖ         |                                  |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

.changeset/tidy-coins-call.md: ## Summary
The file `tidy-coins-call.md` introduces a patch for the `@nextui-org/table` package to set `onKeyDownCapture` to `undefined`, enabling users to type with spaces in input or textarea within a table component (#1968).

---

packages/components/table/src/use-table.ts: ## Short Summary
In the `useTable` function in `packages/components/table/src/use-table.ts`, a new property `onKeyDownCapture` with a value of `undefined` has been added to avoid typeahead debounce wait for input/textarea, allowing typing with space without being blocked.

## Alterations to the declarations of exported or public entities
- `export function useTable<T extends object>(originalProps: UseTableProps<T>)` in `packages/components/table/src/use-table.ts`
  - Added property: `onKeyDownCapture: undefined`

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

### PR Summary

**Title:** fix(table): v2 input/textarea don't allow spaces inside a table  
**User:** wingkwong  
**Number:** 3020  

**Description:**  
This pull request addresses an issue where spaces were not allowed in input or textarea elements within a table. The problem was due to a timeout for typeahead debounce wait on key down in react aria when `keyboardDelegate.getKeyForSearch` is `true`. Since table elements do not require such selection, the solution was to set this property to `undefined`.

**Current Behavior:**  
- The spacebar press works only when:
  - It is the first input after selecting the textarea.
  - It is the first input after pausing for approximately 1 second.
  - The previous input was a spacebar press.

**New Behavior:**  
- The issue with spacebar presses in input/textarea elements within a table has been resolved, allowing spaces to be entered normally.

### Objectives from Linked Issues

**Issue #1968:**  
**Title:** [BUG] - v2 textarea doesn't allow spaces inside a Table row  
**Description:**  
- The issue reported was that spaces were not allowed when typing in a Textarea box within a table row. This bug was causing inconvenience as users were unable to input spaces in the text area, which is a fundamental requirement for text input fields.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated summary of generated summaries

The recent patch for the `@nextui-org/table` package addresses an issue where users were unable to type spaces in input or textarea elements within a table component. This was achieved by setting the `onKeyDownCapture` property to `undefined` in the `useTable` function. This change prevents the typeahead debounce from interfering with space typing, thus enhancing user experience when interacting with table inputs.

### Alterations to the declarations of exported or public entities

#### Before Changes:
```typescript
export function useTable<T extends object>(originalProps: UseTableProps<T>): ReturnType {
  // existing implementation
}
```

#### After Changes:
```typescript
export function useTable<T extends object>(originalProps: UseTableProps<T>): ReturnType {
  // existing implementation
  onKeyDownCapture: undefined;
}
```

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- cbd5e1715432e3049a7b892fdd8a5d3c51a2fd67 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/tidy-coins-call.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/table": patch
+---
+
+set `onKeyDownCapture` to `undefined` so that users can type with spaces in input or textarea inside a table component (#1968)\n- packages/components/table/src/use-table.ts (modified, 3 changes)\n  Patch: @@ -269,6 +269,9 @@ export function useTable<T extends object>(originalProps: UseTableProps<T>) {
         }),
         props,
       ),
+      // avoid typeahead debounce wait for input / textarea
+      // so that typing with space won't be blocked
+      onKeyDownCapture: undefined,
       ref: domRef,
       className: slots.table({class: clsx(classNames?.table, props?.className)}),
     }),\n
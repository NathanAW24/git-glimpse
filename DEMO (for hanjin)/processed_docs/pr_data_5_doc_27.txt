Pull Request Number: 3751
Title: fix(docs): missing tw nested groups in docs
Base Branch: canary
Head Branch: fix/tw-nested-grp-in-docs
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/3751
State: MERGED
Created At: 2024-09-14T07:34:48Z
Merged At: 2024-09-14T07:41:27Z
Participants: wingkwong, winchesHe

Description:
Closes # 
üìù Description

Add a brief description

‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


New Features

Enhanced styling for input components to improve focus visibility and responsiveness.
Improved visual feedback for the ThemeSwitch component based on its selected state.
Refined label positioning in the Select component for better user interaction.



Bug Fixes

Adjusted styling logic for switch components to ensure consistent behavior across different states.



Documentation

Updated documentation to reflect changes in styling approaches for various components.

Commits:
- fix(docs): missing tw nested groups in docs\n

Labels:


Comments:
- vercel: [vc]: #8gxlcJRPKszP7NQ2/6tsaPqWaZI6nZRiwxgc0sn+CmQ=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9EZVdyS0d3NTVvZVE0eTN6d1dRUFV6VWp3ZUt1IiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtdHctbmVzdGVkLWdycC1pbi1kb2NzLW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktZG9jcy12Mi1naXQtZml4LXR3LW5lc3RlZC1ncnAtaW4tZG9jcy1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX0seyJuYW1lIjoibmV4dHVpLXN0b3J5Ym9vay12MiIsInJvb3REaXJlY3RvcnkiOiJwYWNrYWdlcy9zdG9yeWJvb2siLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktc3Rvcnlib29rLXYyLzg5cGJrQ0VEZFloM21Gc1VONFh0YjFjMkpaTHQiLCJwcmV2aWV3VXJsIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LXR3LW5lc3RlZC1ncnAtaW4tZG9jcy1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LXR3LW5lc3RlZC1ncnAtaW4tZG9jcy1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/DeWrKGw55oeQ4y3zwWQPUzUjweKu)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-tw-nested-grp-in-docs-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-tw-nested-grp-in-docs-nextui-org.vercel.app?via=pr-comment-feedback-link) | Sep 14, 2024 7:39am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/89pbkCEDdYh3mFsUN4Xtb1c2JZLt)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-tw-nested-grp-in-docs-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-tw-nested-grp-in-docs-nextui-org.vercel.app?via=pr-comment-feedback-link) | Sep 14, 2024 7:39am |


\n- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: eb30879b8b9e8ab60760494aca2c79906a6b09c8

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/nextui-org/nextui/new/fix/tw-nested-grp-in-docs?filename=.changeset/tidy-roses-hammer.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Fselect%22%3A%20patch%0A---%0A%0Afix(docs)%3A%20missing%20tw%20nested%20groups%20in%20docs%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The changes in this pull request primarily focus on modifying CSS class names across various components to enhance specificity in styling, particularly for focus and selected states. These updates affect components such as `MyInput`, `ThemeSwitch`, `Select`, and `Switch`, streamlining the way styles are applied and improving the clarity of the styling logic without altering the underlying functionality.

## Changes

| File Path                                      | Change Summary                                                                                     |
|------------------------------------------------|----------------------------------------------------------------------------------------------------|
| `apps/docs/app/examples/perf/page.tsx`        | Updated focus styling class in `MyInput` component for better specificity.                        |
| `apps/docs/components/theme-switch.tsx`       | Modified class for background transparency in `ThemeSwitch` based on selected state.              |
| `apps/docs/content/components/input/custom-styles.ts` | Streamlined focus state class names for input elements in light and dark themes.                  |
| `apps/docs/content/components/select/custom-styles.ts` | Updated label class for specificity in the `Select` component's filled state.                     |
| `apps/docs/content/components/switch/custom-styles.ts` | Enhanced styling logic for switch component states using new `/toggle:` syntax.                   |
| `apps/docs/content/customization/custom-variants/slots-component.ts` | Refined focus state class for `MyInput` to improve specificity.                                   |
| `apps/docs/content/docs/customization/custom-variants.mdx` | Updated focus styling class for `Input` component variants for clarity.                          |
| `packages/components/select/stories/select.stories.tsx` | Modified label class in `Select` component's story for improved styling behavior.                |

## Possibly related PRs

- **#2982**: This PR modifies class names related to focus states for input elements, which aligns with the main PR's changes to the `MyInput` component's focus styling.
- **#3650**: This PR enhances the documentation for CLI commands, including updates to focus states in the context of input elements, which relates to the main PR's focus on improving input styling.
- **#3663**: This PR addresses color discrepancies in the `select` component, which may share similar styling logic with the changes made in the main PR regarding focus states in input components.

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

apps/docs/app/examples/perf/page.tsx: ## AI-generated summary of changes

The change in the provided diff modifies a CSS class within the `MyInput` component, specifically altering the way focus styles are applied. The original class `"group-data-[focus=true]:border-zinc-600"` has been updated to `"group-data-[focus=true]/input:border-zinc-600"`. This adjustment indicates a shift in how the focus state is handled, likely enhancing specificity in targeting input elements within a group context. The new class syntax suggests that the border color change will now apply directly to input elements when the group is focused, potentially improving the visual feedback for users interacting with the input fields. 

This change reflects a more structured approach to styling, ensuring that the focus effect is more clearly defined and likely more consistent across different states of the input component.

## Alterations to the declarations of exported or public entities

- No alterations to the declarations of exported or public entities were made in this diff.

---

apps/docs/components/theme-switch.tsx: ## AI-generated summary of changes

The diff reflects a modification in the class `ThemeSwitch` within the file `theme-switch.tsx`. Specifically, the change involves an update to a CSS class string that alters the styling behavior of a component based on its selected state. The original class `"group-data-[selected=true]:bg-transparent"` has been changed to `"group-data-[selected=true]/toggle:bg-transparent"`. This adjustment suggests a shift in how the component's background transparency is applied when it is in a selected state, potentially indicating a more nuanced control over the styling that may involve a toggle mechanism. This change could impact the visual representation of the component in different states, enhancing user experience through improved styling logic.

## Alterations to the declarations of exported or public entities

- No alterations to the declarations of exported or public entities were made in `theme-switch.tsx`.

---

apps/docs/content/components/input/custom-styles.ts: ## AI-generated summary of changes

The diff reflects a modification in the class or function responsible for rendering styles in a React component. Specifically, the changes involve the alteration of class names associated with focus states for input elements. The previous class names, which utilized a more verbose syntax for focus states, have been streamlined to a more concise format. The original class names `"group-data-[focus=true]:bg-default-200/50"` and `"dark:group-data-[focus=true]:bg-default/60"` have been replaced with `"group-data-[focus=true]/input:bg-default-200/50"` and `"dark:group-data-[focus=true]/input:bg-default/60"`, respectively. This change likely aims to enhance readability and maintainability of the code while preserving the intended styling behavior for focused input elements in both light and dark themes.

## Alterations to the declarations of exported or public entities

- No alterations to the declarations of exported or public entities were made in this diff.

---

apps/docs/content/components/select/custom-styles.ts: ## AI-generated summary of changes

The change in the provided diff modifies the class name for the `label` property within a component's classNames object. The original class name `"group-data-[filled=true]:-translate-y-5"` has been updated to `"group-data-[filled=true]/select:-translate-y-5"`. This alteration introduces a new selector that likely enhances the specificity of the styling applied to the label when the `filled` state is true, potentially affecting how the label behaves in relation to the select component. The change suggests a refinement in the styling logic, possibly to ensure that the label's transformation is correctly applied in the context of the select component's state.

## Alterations to the declarations of exported or public entities

- No alterations to the declarations of exported or public entities were made in this diff.

---

apps/docs/content/components/switch/custom-styles.ts: ## AI-generated summary of changes

The diff reflects modifications to the styling classes applied to a switch component in a React application. The changes primarily involve the use of a new syntax for applying conditional styles based on the state of the switch. Specifically, the original class names that utilized a straightforward conditional approach have been updated to incorporate a new `/toggle:` syntax, which appears to enhance the specificity of the styles based on the component's state. 

For instance, the class for the thumb element's hover state has been changed from `"group-data-[hover=true]:border-primary"` to `"group-data-[hover=true]/toggle:border-primary"`, indicating a shift towards a more structured way of managing styles that may improve readability and maintainability. Similarly, the selected and pressed states have undergone analogous transformations, with the addition of `/toggle:` in their respective class names. 

These changes suggest a refinement in how styles are applied based on the component's interaction states, potentially leading to a more consistent and predictable styling behavior. Overall, the modifications enhance the clarity of the styling logic without altering the fundamental functionality of the switch component.

## Alterations to the declarations of exported or public entities

- No alterations to the declarations of exported or public entities were made in this diff.

---

apps/docs/content/customization/custom-variants/slots-component.ts: ## AI-generated summary of changes

The diff reflects a modification in the class `MyInput`, specifically in the way a CSS class is applied for styling focus states. The original class `"group-data-[focus=true]:border-zinc-600"` has been changed to `"group-data-[focus=true]/input:border-zinc-600"`. This alteration indicates a shift in the CSS selector's specificity, suggesting that the border color change on focus is now more explicitly tied to an input element within a group context. This change may enhance the clarity of the styling rules and ensure that the intended focus effect is applied correctly to the input elements, potentially improving the user interface's responsiveness to user interactions.

## Alterations to the declarations of exported or public entities

- No alterations to the declarations of exported or public entities were made in this diff.

---

apps/docs/content/docs/customization/custom-variants.mdx: ## AI-generated summary of changes

The change in the provided diff modifies a CSS class definition within a JavaScript object that extends variants of an `Input` component. Specifically, the alteration involves updating a class string from `"group-data-[focus=true]:border-zinc-600"` to `"group-data-[focus=true]/input:border-zinc-600"`. This change refines the specificity of the focus state styling, indicating that the border color should apply to the input element within a group when the group is focused. This adjustment enhances the clarity of the styling rules, ensuring that the intended visual effect is more accurately applied to the correct element in the DOM structure.

## Alterations to the declarations of exported or public entities

- No alterations to the declarations of exported or public entities were made in this diff.

---

packages/components/select/stories/select.stories.tsx: ## AI-generated summary of changes

The change in the provided diff modifies the class name for the `label` property within the `classNames` object of the `Select` component in the `CustomStylesTemplate`. The original class name `"group-data-[filled=true]:-translate-y-5"` has been updated to `"group-data-[filled=true]/select:-translate-y-5"`. This alteration likely affects the styling behavior of the label when the `Select` component is in a filled state, potentially altering how the label is positioned or animated in relation to the select input. The change suggests a more specific targeting of the label's styling in conjunction with the `select` class, which may enhance the visual consistency or interaction of the component.

## Alterations to the declarations of exported or public entities

- No alterations to the declarations of exported or public entities were made in this diff.

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR Summary

The pull request titled "fix(docs): missing tw nested groups in docs" was created by the user wingkwong and is identified by the number 3751. The purpose of this PR is to address documentation issues related to missing Tailwind CSS (tw) nested groups within the NextUI documentation.

The PR template includes sections for a brief description, current behavior, new behavior, and whether the changes introduce any breaking changes. However, specific details regarding the current and new behavior, as well as any potential breaking changes, have not been filled out in the provided description. The PR does not reference a specific GitHub issue number that it closes.

The author has followed the guidelines for submitting a pull request, which emphasize keeping the PR focused on a single type of change, in this case, documentation. The PR aims to enhance the clarity and completeness of the documentation related to nested groups in Tailwind CSS, which is relevant for users of the NextUI framework. 

For further details, the pull request can be accessed at the provided URL: [NextUI PR #3751](https://github.com/nextui-org/nextui/pull/3751).

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- announcements_start -->

> [!TIP]
> <details>
> <summary>OpenAI O1 model for chat</summary>
> 
> - We have deployed OpenAI's latest O1 model for chat.
> - OpenAI claims that this model has superior reasoning capabilities than their GPT-4o model.
> - Please share any feedback with us in the [discussions post](https://discord.com/channels/1134356397673414807/1283929536186155099).
> 
> </details>

<!-- announcements_end --><!-- commit_ids_reviewed_start -->

<!-- eb30879b8b9e8ab60760494aca2c79906a6b09c8 -->

<!-- commit_ids_reviewed_end -->

---

<details>
<summary>Recent review details</summary>

**Configuration used: .coderabbit.yaml**
**Review profile: CHILL**

<details>
<summary>Commits</summary>

Files that changed from the base of the PR and between def45d4d7a3a7911d5d6a634a439edb25679022f and eb30879b8b9e8ab60760494aca2c79906a6b09c8.

</details>


<details>
<summary>Files selected for processing (8)</summary>

* apps/docs/app/examples/perf/page.tsx (1 hunks)
* apps/docs/components/theme-switch.tsx (1 hunks)
* apps/docs/content/components/input/custom-styles.ts (1 hunks)
* apps/docs/content/components/select/custom-styles.ts (1 hunks)
* apps/docs/content/components/switch/custom-styles.ts (1 hunks)
* apps/docs/content/customization/custom-variants/slots-component.ts (1 hunks)
* apps/docs/content/docs/customization/custom-variants.mdx (1 hunks)
* packages/components/select/stories/select.stories.tsx (1 hunks)

</details>













<details>
<summary>Additional comments not posted (11)</summary><blockquote>

<details>
<summary>apps/docs/content/components/switch/custom-styles.ts (4)</summary><blockquote>

`14-14`: **Improved styling specificity for hover state.**

The change enhances the clarity of the styling logic by using a more structured approach (`/toggle:` syntax) to manage styles based on the component's hover state. This improves readability and maintainability without altering the functionality.

---

`16-16`: **Improved styling specificity for selected state.**

The change enhances the clarity of the styling logic by using a more structured approach (`/toggle:` syntax) to manage styles based on the component's selected state. This improves readability and maintainability without altering the functionality.

---

`18-18`: **Improved styling specificity for pressed state.**

The change enhances the clarity of the styling logic by using a more structured approach (`/toggle:` syntax) to manage styles based on the component's pressed state. This improves readability and maintainability without altering the functionality.

---

`19-19`: **Improved styling specificity for selected and pressed state.**

The change enhances the clarity of the styling logic by using a more structured approach (`/toggle:` syntax) to manage styles based on the component's selected and pressed state. This improves readability and maintainability without altering the functionality.

</blockquote></details>
<details>
<summary>apps/docs/components/theme-switch.tsx (1)</summary><blockquote>

`60-60`: **LGTM!**

The change introduces a more specific selector `/toggle` to the existing class, which suggests that the background transparency should only be applied to a child element with the class `toggle` when the component is in the selected state.

This change enhances the specificity of the styling without altering the underlying functionality and is unlikely to introduce any breaking changes.

</blockquote></details>
<details>
<summary>apps/docs/content/components/input/custom-styles.ts (1)</summary><blockquote>

`55-56`: **LGTM!**

The changes to the CSS class names for the focus state of the input wrapper element are a good improvement. The new syntax is more concise and enhances the readability and maintainability of the code while preserving the intended styling behavior.

The changes do not introduce any breaking changes or alter the functionality of the component.

</blockquote></details>
<details>
<summary>apps/docs/content/customization/custom-variants/slots-component.ts (1)</summary><blockquote>

`50-50`: **Improved CSS selector specificity for focus state.**

The change from `"group-data-[focus=true]:border-zinc-600"` to `"group-data-[focus=true]/input:border-zinc-600"` enhances the clarity of the styling rules by explicitly targeting the input element within the group context when applying the border color change on focus.

This ensures that the intended focus effect is applied correctly to the input elements, potentially improving the user interface's responsiveness to user interactions without introducing any breaking changes or negatively impacting the functionality.

</blockquote></details>
<details>
<summary>apps/docs/content/components/select/custom-styles.ts (1)</summary><blockquote>

`215-215`: **LGTM!**

The change enhances the specificity of the styling applied to the label when the `filled` state is true. This refinement in the styling logic ensures that the label's transformation is correctly applied in the context of the select component's state.

</blockquote></details>
<details>
<summary>apps/docs/content/docs/customization/custom-variants.mdx (1)</summary><blockquote>

`136-136`: **LGTM!**

The change enhances the specificity of the focus state styling for the `Input` component's `stone` color variant. By updating the class from `"group-data-[focus=true]:border-zinc-600"` to `"group-data-[focus=true]/input:border-zinc-600"`, it ensures that the border color is applied to the input element within a group when the group is focused. This improves the clarity of the styling rules and ensures that the intended visual effect is accurately applied to the correct element in the DOM structure.

The change is consistent with the Tailwind CSS syntax and the existing code style in the file.

</blockquote></details>
<details>
<summary>apps/docs/app/examples/perf/page.tsx (1)</summary><blockquote>

`109-109`: **Improved focus state styling for the input element.**

The change enhances the specificity of the focus state styling by targeting the input element directly when the group is focused. This approach provides clearer visual feedback and reflects a more structured styling methodology.

</blockquote></details>
<details>
<summary>packages/components/select/stories/select.stories.tsx (1)</summary><blockquote>

`508-508`: **Approve the label class name update for improved specificity.**

The change enhances the specificity of the label styling by tying it to the `select` class in the filled state. This refinement likely improves the visual consistency and interaction of the label in relation to the select component's state.

</blockquote></details>

</blockquote></details>

</details><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>



<!-- tips_end -->\n

Files Changed:
- apps/docs/app/examples/perf/page.tsx (modified, 2 changes)\n  Patch: @@ -106,7 +106,7 @@ const MyInput = extendVariants(Input, {
           "focus-within:bg-zinc-100",
           "data-[hover=true]:border-zinc-600",
           "data-[hover=true]:bg-zinc-100",
-          "group-data-[focus=true]:border-zinc-600",
+          "group-data-[focus=true]/input:border-zinc-600",
           // dark theme
           "dark:bg-zinc-900",
           "dark:border-zinc-800",\n- apps/docs/components/theme-switch.tsx (modified, 2 changes)\n  Patch: @@ -57,7 +57,7 @@ export const ThemeSwitch: FC<ThemeSwitchProps> = ({className, classNames}) => {
               "bg-transparent",
               "rounded-lg",
               "flex items-center justify-center",
-              "group-data-[selected=true]:bg-transparent",
+              "group-data-[selected=true]/toggle:bg-transparent",
               "!text-default-600 dark:!text-default-500",
               "pt-px",
               "px-0",\n- apps/docs/content/components/input/custom-styles.ts (modified, 4 changes)\n  Patch: @@ -52,8 +52,8 @@ export default function App() {
             "backdrop-saturate-200",
             "hover:bg-default-200/70",
             "dark:hover:bg-default/70",
-            "group-data-[focus=true]:bg-default-200/50",
-            "dark:group-data-[focus=true]:bg-default/60",
+            "group-data-[focus=true]/input:bg-default-200/50",
+            "dark:group-data-[focus=true]/input:bg-default/60",
             "!cursor-text",
           ],
         }}\n- apps/docs/content/components/select/custom-styles.ts (modified, 2 changes)\n  Patch: @@ -212,7 +212,7 @@ export default function App() {
       className="max-w-xs"
       variant="bordered"
       classNames={{
-        label: "group-data-[filled=true]:-translate-y-5",
+        label: "group-data-[filled=true]/select:-translate-y-5",
         trigger: "min-h-16",
         listboxWrapper: "max-h-[400px]",
       }}\n- apps/docs/content/components/switch/custom-styles.ts (modified, 8 changes)\n  Patch: @@ -11,12 +11,12 @@ export default function App() {
         ),
         wrapper: "p-0 h-4 overflow-visible",
         thumb: cn("w-6 h-6 border-2 shadow-lg",
-          "group-data-[hover=true]:border-primary",
+          "group-data-[hover=true]/toggle:border-primary",
           //selected
-          "group-data-[selected=true]:ml-6",
+          "group-data-[selected=true]/toggle:ml-6",
           // pressed
-          "group-data-[pressed=true]:w-7",
-          "group-data-[selected]:group-data-[pressed]:ml-4",
+          "group-data-[pressed=true]/toggle:w-7",
+          "group-data-[selected]:group-data-[pressed]/toggle:ml-4",
         ),
       }}
     >\n- apps/docs/content/customization/custom-variants/slots-component.ts (modified, 2 changes)\n  Patch: @@ -47,7 +47,7 @@ const MyInput = extendVariants(Input, {
           "focus-within:bg-zinc-100",
           "data-[hover=true]:border-zinc-600",
           "data-[hover=true]:bg-zinc-100",
-          "group-data-[focus=true]:border-zinc-600",
+          "group-data-[focus=true]/input:border-zinc-600",
           "dark:bg-zinc-900",
           "dark:border-zinc-800",
           "dark:data-[hover=true]:bg-zinc-900",\n- apps/docs/content/docs/customization/custom-variants.mdx (modified, 2 changes)\n  Patch: @@ -133,7 +133,7 @@ const MyInput = extendVariants(Input, {
           "focus-within:bg-zinc-100",
           "data-[hover=true]:border-zinc-600",
           "data-[hover=true]:bg-zinc-100",
-          "group-data-[focus=true]:border-zinc-600",
+          "group-data-[focus=true]/input:border-zinc-600",
           // dark theme
           "dark:bg-zinc-900",
           "dark:border-zinc-800",\n- packages/components/select/stories/select.stories.tsx (modified, 2 changes)\n  Patch: @@ -505,7 +505,7 @@ const CustomStylesTemplate = ({color, variant, ...args}: SelectProps<User>) => {
     <Select
       className="max-w-xs"
       classNames={{
-        label: "group-data-[filled=true]:-translate-y-5",
+        label: "group-data-[filled=true]/select:-translate-y-5",
         trigger: "min-h-16",
         listboxWrapper: "max-h-[400px]",
       }}\n
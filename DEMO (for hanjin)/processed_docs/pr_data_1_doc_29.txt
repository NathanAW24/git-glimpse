Pull Request Number: 4168
Title: fix: missing li tag when href is specified
Base Branch: beta/release-next
Head Branch: macci001/eng-1612
Author: macci001
URL: https://github.com/nextui-org/nextui/pull/4168
State: MERGED
Created At: 2024-11-29T11:54:43Z
Merged At: 2024-11-29T18:41:24Z
Participants: macci001, jrgarciadev

Description:
Closes #4147
üìù Description
Fixes missing <li> wrapper when href prop is passed in ListboxItem, MenuItem, and PaginationItem
‚õ≥Ô∏è Current behavior (updates)
The <li> element was missing when href prop was passed.
üöÄ New behavior
<li> element wraps the <a> element.

Summary by CodeRabbit


New Features

Introduced FragmentWrapper prop in ListboxItem, MenuItem, and PaginationItem components for improved rendering structure.
Added support for href property in ListboxItem, MenuItem, and PaginationItem, allowing these components to render as links when applicable.



Bug Fixes

Resolved missing <li> wrapper issue in ListboxItem, MenuItem, and PaginationItem when using the href property.



Enhancements

Improved flexibility in rendering child components within pagination items and menu items.

Commits:
- fix(items): items in list should wrapped in li in case of a\n- chore: adding the tests\n

Labels:


Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-1612/[bug]-dropdownitem-missing-li-tag-when-using-href">ENG-1612 [BUG] - DropdownItem missing &lt;li&gt; tag when using href</a></p>\n- vercel: [vc]: #CO9ivGBnxGLBxq56TXA+QWZ9hULvsZnmkYedzXtZqGc=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9FTEZmb1lhbkJEWHFMOGdBMmtXaTdqcDhtcllSIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1tYWNjaTAwMS1lbmctMTYxMi1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LW1hY2NpMDAxLWVuZy0xNjEyLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvNW8xeVpTVGVOcTJrd1BBSDE5RENXMkY2RzlLVSIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1tYWNjaTAwMS1lbmctMTYxMi1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtbWFjY2kwMDEtZW5nLTE2MTItbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/ELFfoYanBDXqL8gA2kWi7jp8mrYR)) | [Visit Preview](https://nextui-docs-v2-git-macci001-eng-1612-nextui-org.vercel.app) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-macci001-eng-1612-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 29, 2024 2:09pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/5o1yZSTeNq2kwPAH19DCW2F6G9KU)) | [Visit Preview](https://nextui-storybook-v2-git-macci001-eng-1612-nextui-org.vercel.app) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-macci001-eng-1612-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 29, 2024 2:09pm |


\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: bd28852a484fb9f6a7dd18b8fc75fe1dae6d2779

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 7 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/listbox      | Patch |
| @nextui-org/menu         | Patch |
| @nextui-org/pagination   | Patch |
| @nextui-org/autocomplete | Patch |
| @nextui-org/select       | Patch |
| @nextui-org/react        | Patch |
| @nextui-org/dropdown     | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/macci001/eng-1612?filename=.changeset/neat-ducks-smell.md&value=---%0A%22%40nextui-org%2Flistbox%22%3A%20patch%0A%22%40nextui-org%2Fmenu%22%3A%20patch%0A%22%40nextui-org%2Fpagination%22%3A%20patch%0A---%0A%0Afix%3A%20missing%20li%20tag%20when%20href%20is%20specified%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: skip review by coderabbit.ai -->

> [!IMPORTANT]
> ## Review skipped
> 
> Auto reviews are disabled on base/target branches other than the default branch.
> 
> <details>
> <summary>üóÇÔ∏è Base branches to auto review (5)</summary>
> 
> * main
> * canary
> * fix/.*
> * chore/.*
> * feat/.*
> 
> </details>
> 
> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.
> 
> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.

<!-- end of auto-generated comment: skip review by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
This pull request introduces a patch for the `ListboxItem`, `MenuItem`, and `PaginationItem` components from the `@nextui-org` library. The primary change ensures that when the `href` property is used, the components properly render a `<li>` wrapper around the `<a>` tag, thus maintaining the correct HTML structure. Additionally, new props such as `FragmentWrapper` and `fragmentWrapperProps` are introduced to enhance the rendering logic and flexibility of these components.

## Changes

| File Path                                      | Change Summary                                                                                                                                                                                                                       |
|------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| .changeset/nasty-bees-sniff.md                | Introduced a patch for `ListboxItem`, `MenuItem`, and `PaginationItem` to include `<li>` wrappers when `href` is used.                                                                                                           |
| packages/components/listbox/src/listbox-item.tsx | Added `FragmentWrapper` prop to `ListboxItem`, updated rendering logic to wrap content within `FragmentWrapper`.                                                                                                                  |
| packages/components/listbox/src/use-listbox-item.ts | Enhanced `useListboxItem` hook by adding `href` prop and adjusting rendering logic to conditionally use `FragmentWrapper`.                                                                                                        |
| packages/components/menu/src/menu-item.tsx     | Added `FragmentWrapper` prop to `MenuItem`, modified rendering structure to wrap content within `FragmentWrapper`.                                                                                                                 |
| packages/components/menu/src/use-menu-item.ts   | Enhanced `useMenuItem` hook by adding `href` prop and adjusting rendering logic to conditionally use `FragmentWrapper`.                                                                                                            |
| packages/components/pagination/src/pagination-item.tsx | Updated `PaginationItem` to include `FragmentWrapper` and `fragmentWrapperProps` in its rendering logic.                                                                                                                           |
| packages/components/pagination/src/use-pagination-item.ts | Enhanced `usePaginationItem` hook by adding `FragmentWrapper` and `fragmentWrapperProps`, allowing for flexible rendering based on the `href` prop.                                                                                |

## Assessment against linked issues

| Objective                                                      | Addressed | Explanation                                      |
|---------------------------------------------------------------|-----------|--------------------------------------------------|
| The DropdownItem should render an `<li>` element that wraps the `<a>` tag (#[4147](#)) | ‚úÖ         |                                                  |

## Possibly related PRs
- **#2943**: Fixes missing `useHref` logic in the `@nextui-org/system` package, relevant to link handling in components.
- **#3229**: Addresses link logic in `useMenuItem`, directly related to changes in the `MenuItem` component.
- **#3240**: Updates React Aria dependencies, potentially impacting the functionality of list components.
- **#3486**: Fixes card shadow clipping in `ListboxItem`, relevant to changes in the `ListboxItem` component.
- **#4105**: Addresses overflow text in menu items, relevant to `MenuItem` changes.
- **#4156**: Fixes class name application issues in menu items, directly related to changes in the `MenuItem` component.

## Suggested labels
`üìã Scope : Docs`, `üëÄ Status: To Review`

## Suggested reviewers
- wingkwong
- jrgarciadev

<!-- walkthrough_end -->

<!-- internal state start -->


<!-- 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 -->

<!-- internal state end -->
<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/nasty-bees-sniff.md (added, 7 changes)\n  Patch: @@ -0,0 +1,7 @@
+---
+"@nextui-org/listbox": patch
+"@nextui-org/menu": patch
+"@nextui-org/pagination": patch
+---
+
+Fixes missing `<li>` wrapper when `href` prop is passed in `ListboxItem`, `MenuItem`, and `PaginationItem` (#4147)
\ No newline at end of file\n- packages/components/listbox/__tests__/listbox.test.tsx (modified, 34 changes)\n  Patch: @@ -124,6 +124,40 @@ describe("Listbox", () => {
     expect(() => wrapper.unmount()).not.toThrow();
   });
 
+  it("should not have anchor tag when href prop is not passed", () => {
+    render(
+      <Listbox disallowEmptySelection aria-label="Actions" selectionMode="multiple">
+        <ListboxItem key="new">New file</ListboxItem>
+        <ListboxItem key="copy">Copy link</ListboxItem>
+        <ListboxItem key="edit">Edit file</ListboxItem>
+      </Listbox>,
+    );
+
+    let anchorTag = document.getElementsByTagName("a")[0];
+
+    expect(anchorTag).toBeFalsy();
+  });
+
+  it("should have anchor tag when href prop is passed", () => {
+    const href = "http://www.nextui.org/";
+
+    render(
+      <Listbox disallowEmptySelection aria-label="Actions" selectionMode="multiple">
+        <ListboxItem key="new" href={href}>
+          New file
+        </ListboxItem>
+        <ListboxItem key="copy">Copy link</ListboxItem>
+        <ListboxItem key="edit">Edit file</ListboxItem>
+      </Listbox>,
+    );
+
+    let anchorTag = document.getElementsByTagName("a")[0];
+
+    expect(anchorTag).toBeTruthy();
+
+    expect(anchorTag).toHaveProperty("href", href);
+  });
+
   it("should work with single selection (controlled)", async () => {
     let onSelectionChange = jest.fn();
 \n- packages/components/listbox/src/listbox-item.tsx (modified, 28 changes)\n  Patch: @@ -12,6 +12,7 @@ export interface ListboxItemProps<T extends object = object> extends UseListboxI
 const ListboxItem = forwardRef<"li", ListboxItemProps>((props, _) => {
   const {
     Component,
+    FragmentWrapper,
     rendered,
     description,
     isSelectable,
@@ -22,6 +23,7 @@ const ListboxItem = forwardRef<"li", ListboxItemProps>((props, _) => {
     endContent,
     hideSelectedIcon,
     disableAnimation,
+    fragmentWrapperProps,
     getItemProps,
     getLabelProps,
     getWrapperProps,
@@ -45,19 +47,21 @@ const ListboxItem = forwardRef<"li", ListboxItemProps>((props, _) => {
 
   return (
     <Component {...getItemProps()}>
-      {startContent}
-      {description ? (
-        <div {...getWrapperProps()}>
+      <FragmentWrapper {...fragmentWrapperProps}>
+        {startContent}
+        {description ? (
+          <div {...getWrapperProps()}>
+            <span {...getLabelProps()}>{rendered}</span>
+            <span {...getDescriptionProps()}>{description}</span>
+          </div>
+        ) : (
           <span {...getLabelProps()}>{rendered}</span>
-          <span {...getDescriptionProps()}>{description}</span>
-        </div>
-      ) : (
-        <span {...getLabelProps()}>{rendered}</span>
-      )}
-      {isSelectable && !hideSelectedIcon && (
-        <span {...getSelectedIconProps()}>{selectedContent}</span>
-      )}
-      {endContent}
+        )}
+        {isSelectable && !hideSelectedIcon && (
+          <span {...getSelectedIconProps()}>{selectedContent}</span>
+        )}
+        {endContent}
+      </FragmentWrapper>
     </Component>
   );
 });\n- packages/components/listbox/src/use-listbox-item.ts (modified, 10 changes)\n  Patch: @@ -1,6 +1,6 @@
 import type {ListboxItemBaseProps} from "./base/listbox-item-base";
 
-import {useMemo, useRef, useCallback} from "react";
+import {useMemo, useRef, useCallback, Fragment} from "react";
 import {listboxItem} from "@nextui-org/theme";
 import {
   HTMLNextUIProps,
@@ -48,6 +48,7 @@ export function useListboxItem<T extends object>(originalProps: UseListboxItemPr
     shouldHighlightOnFocus,
     hideSelectedIcon = false,
     isReadOnly = false,
+    href,
     ...otherProps
   } = props;
 
@@ -56,9 +57,12 @@ export function useListboxItem<T extends object>(originalProps: UseListboxItemPr
 
   const domRef = useRef<HTMLLIElement>(null);
 
-  const Component = as || (originalProps.href ? "a" : "li");
+  const Component = as || "li";
   const shouldFilterDOMProps = typeof Component === "string";
 
+  const FragmentWrapper = href ? "a" : Fragment;
+  const fragmentWrapperProps = href ? {href} : {};
+
   const {rendered, key} = item;
 
   const isDisabled = state.disabledKeys.has(key) || originalProps.isDisabled;
@@ -165,6 +169,7 @@ export function useListboxItem<T extends object>(originalProps: UseListboxItemPr
 
   return {
     Component,
+    FragmentWrapper,
     domRef,
     slots,
     classNames,
@@ -178,6 +183,7 @@ export function useListboxItem<T extends object>(originalProps: UseListboxItemPr
     selectedIcon,
     hideSelectedIcon,
     disableAnimation,
+    fragmentWrapperProps,
     getItemProps,
     getLabelProps,
     getWrapperProps,\n- packages/components/menu/__tests__/menu.test.tsx (modified, 40 changes)\n  Patch: @@ -125,6 +125,46 @@ describe("Menu", () => {
     expect(() => wrapper.unmount()).not.toThrow();
   });
 
+  it("should not have anchor tag when href prop is not passed", () => {
+    render(
+      <Menu disallowEmptySelection aria-label="Actions" selectionMode="multiple">
+        <MenuItem key="new">New file</MenuItem>
+        <MenuItem key="copy">Copy link</MenuItem>
+        <MenuItem key="edit">Edit file</MenuItem>
+        <MenuItem key="delete" color="danger">
+          Delete file
+        </MenuItem>
+      </Menu>,
+    );
+
+    let anchorTag = document.getElementsByTagName("a")[0];
+
+    expect(anchorTag).toBeFalsy();
+  });
+
+  it("should have anchor tag when href prop is passed", () => {
+    const href = "http://www.nextui.org/";
+
+    render(
+      <Menu disallowEmptySelection aria-label="Actions" selectionMode="multiple">
+        <MenuItem key="new" href={href}>
+          New file
+        </MenuItem>
+        <MenuItem key="copy">Copy link</MenuItem>
+        <MenuItem key="edit">Edit file</MenuItem>
+        <MenuItem key="delete" color="danger">
+          Delete file
+        </MenuItem>
+      </Menu>,
+    );
+
+    let anchorTag = document.getElementsByTagName("a")[0];
+
+    expect(anchorTag).toBeTruthy();
+
+    expect(anchorTag).toHaveProperty("href", href);
+  });
+
   it("should work with single selection (controlled)", async () => {
     let onSelectionChange = jest.fn();
 \n- packages/components/menu/src/menu-item.tsx (modified, 31 changes)\n  Patch: @@ -1,5 +1,6 @@
 import {useMemo, ReactNode} from "react";
 import {forwardRef} from "@nextui-org/system";
+import * as React from "react";
 
 import {UseMenuItemProps, useMenuItem} from "./use-menu-item";
 import {MenuSelectedIcon} from "./menu-selected-icon";
@@ -12,6 +13,7 @@ export interface MenuItemProps<T extends object = object> extends UseMenuItemPro
 const MenuItem = forwardRef<"li", MenuItemProps>((props, _) => {
   const {
     Component,
+    FragmentWrapper,
     slots,
     classNames,
     rendered,
@@ -25,6 +27,7 @@ const MenuItem = forwardRef<"li", MenuItemProps>((props, _) => {
     endContent,
     disableAnimation,
     hideSelectedIcon,
+    fragmentWrapperProps,
     getItemProps,
     getLabelProps,
     getDescriptionProps,
@@ -48,20 +51,22 @@ const MenuItem = forwardRef<"li", MenuItemProps>((props, _) => {
 
   return (
     <Component {...getItemProps()}>
-      {startContent}
-      {description ? (
-        <div className={slots.wrapper({class: classNames?.wrapper})}>
+      <FragmentWrapper {...fragmentWrapperProps}>
+        {startContent}
+        {description ? (
+          <div className={slots.wrapper({class: classNames?.wrapper})}>
+            <span {...getLabelProps()}>{rendered}</span>
+            <span {...getDescriptionProps()}>{description}</span>
+          </div>
+        ) : (
           <span {...getLabelProps()}>{rendered}</span>
-          <span {...getDescriptionProps()}>{description}</span>
-        </div>
-      ) : (
-        <span {...getLabelProps()}>{rendered}</span>
-      )}
-      {shortcut && <kbd {...getKeyboardShortcutProps()}>{shortcut}</kbd>}
-      {isSelectable && !hideSelectedIcon && (
-        <span {...getSelectedIconProps()}>{selectedContent}</span>
-      )}
-      {endContent}
+        )}
+        {shortcut && <kbd {...getKeyboardShortcutProps()}>{shortcut}</kbd>}
+        {isSelectable && !hideSelectedIcon && (
+          <span {...getSelectedIconProps()}>{selectedContent}</span>
+        )}
+        {endContent}
+      </FragmentWrapper>
     </Component>
   );
 });\n- packages/components/menu/src/use-menu-item.ts (modified, 10 changes)\n  Patch: @@ -1,7 +1,7 @@
 import type {MenuItemBaseProps} from "./base/menu-item-base";
 import type {Node} from "@react-types/shared";
 
-import {useMemo, useRef, useCallback} from "react";
+import {useMemo, useRef, useCallback, Fragment} from "react";
 import {menuItem} from "@nextui-org/theme";
 import {
   HTMLNextUIProps,
@@ -57,6 +57,7 @@ export function useMenuItem<T extends object>(originalProps: UseMenuItemProps<T>
     isReadOnly = false,
     closeOnSelect,
     onClose,
+    href,
     ...otherProps
   } = props;
 
@@ -65,9 +66,12 @@ export function useMenuItem<T extends object>(originalProps: UseMenuItemProps<T>
 
   const domRef = useRef<HTMLLIElement>(null);
 
-  const Component = as || (otherProps?.href ? "a" : "li");
+  const Component = as || "li";
   const shouldFilterDOMProps = typeof Component === "string";
 
+  const FragmentWrapper = href ? "a" : Fragment;
+  const fragmentWrapperProps = href ? {href} : {};
+
   const {rendered, key} = item;
 
   const isDisabledProp = state.disabledKeys.has(key) || originalProps.isDisabled;
@@ -190,6 +194,7 @@ export function useMenuItem<T extends object>(originalProps: UseMenuItemProps<T>
 
   return {
     Component,
+    FragmentWrapper,
     domRef,
     slots,
     classNames,
@@ -203,6 +208,7 @@ export function useMenuItem<T extends object>(originalProps: UseMenuItemProps<T>
     endContent,
     selectedIcon,
     disableAnimation,
+    fragmentWrapperProps,
     getItemProps,
     getLabelProps,
     hideSelectedIcon,\n- packages/components/pagination/__tests__/pagination.test.tsx (modified, 21 changes)\n  Patch: @@ -1,7 +1,7 @@
 import * as React from "react";
 import {render} from "@testing-library/react";
 
-import {Pagination} from "../src";
+import {Pagination, PaginationItem} from "../src";
 
 describe("Pagination", () => {
   it("should render correctly", () => {
@@ -37,6 +37,25 @@ describe("Pagination", () => {
     expect(prevButton).toBeNull();
   });
 
+  it("should not have anchor tag when href prop is not passed", () => {
+    render(<PaginationItem />);
+    let anchorTag = document.getElementsByTagName("a")[0];
+
+    expect(anchorTag).toBeFalsy();
+  });
+
+  it("should have anchor tag when href prop is passed", () => {
+    const href = "http://www.nextui.org/";
+
+    render(<PaginationItem href={href} />);
+
+    let anchorTag = document.getElementsByTagName("a")[0];
+
+    expect(anchorTag).toBeTruthy();
+
+    expect(anchorTag).toHaveProperty("href", href);
+  });
+
   it("should show dots when total is greater than 10", () => {
     const wrapper = render(<Pagination total={10} />);
 \n- packages/components/pagination/src/pagination-item.tsx (modified, 9 changes)\n  Patch: @@ -5,9 +5,14 @@ import {usePaginationItem, UsePaginationItemProps} from "./use-pagination-item";
 export interface PaginationItemProps extends UsePaginationItemProps {}
 
 const PaginationItem = forwardRef<"li", PaginationItemProps>((props, ref) => {
-  const {Component, children, getItemProps} = usePaginationItem({...props, ref});
+  const {Component, FragmentWrapper, fragmentWrapperProps, children, getItemProps} =
+    usePaginationItem({...props, ref});
 
-  return <Component {...getItemProps()}>{children}</Component>;
+  return (
+    <Component {...getItemProps()}>
+      <FragmentWrapper {...fragmentWrapperProps}>{children}</FragmentWrapper>
+    </Component>
+  );
 });
 
 PaginationItem.displayName = "NextUI.PaginationItem";\n- packages/components/pagination/src/use-pagination-item.ts (modified, 11 changes)\n  Patch: @@ -2,7 +2,7 @@ import type {Ref} from "react";
 import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 import type {LinkDOMProps, PressEvent} from "@react-types/shared";
 
-import {useMemo} from "react";
+import {Fragment, useMemo} from "react";
 import {PaginationItemValue} from "@nextui-org/use-pagination";
 import {clsx, dataAttr} from "@nextui-org/shared-utils";
 import {chain, mergeProps, shouldClientNavigate, useRouter} from "@react-aria/utils";
@@ -64,10 +64,13 @@ export function usePaginationItem(props: UsePaginationItemProps) {
   } = props;
 
   const isLink = !!props?.href;
-  const Component = as || isLink ? "a" : "li";
+  const Component = as || "li";
   const shouldFilterDOMProps = typeof Component === "string";
-  const domRef = useDOMRef(ref);
 
+  const FragmentWrapper = isLink ? "a" : Fragment;
+  const fragmentWrapperProps = isLink ? {href: props.href} : {};
+
+  const domRef = useDOMRef(ref);
   const router = useRouter();
 
   const ariaLabel = useMemo(
@@ -129,6 +132,8 @@ export function usePaginationItem(props: UsePaginationItemProps) {
 
   return {
     Component,
+    FragmentWrapper,
+    fragmentWrapperProps,
     children,
     ariaLabel,
     isFocused,\n
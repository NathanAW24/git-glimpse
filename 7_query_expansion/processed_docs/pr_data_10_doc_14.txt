Pull Request Number: 3111
Title: fix(avatar): avoid passing `disableAnimation` prop to a DOM element
Base Branch: canary
Head Branch: fix/eng-912
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/3111
State: MERGED
Created At: 2024-05-28T13:35:15Z
Merged At: 2024-05-31T02:14:41Z
Participants: wingkwong, AmazingTurtle, paperdiamond, jrgarciadev

Description:
Closes #3109
üìù Description

Add a brief description

‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


Bug Fixes

Resolved an issue in the avatar component to prevent passing the disableAnimation prop to a DOM element, ensuring better compatibility and performance.



Improvements

Enhanced the avatar component with improved logic for filtering DOM properties based on the type of image component, leading to more robust and flexible behavior.

Commits:
- fix(avatar): avoid passing `disableAnimation` prop to a DOM element\n- refactor(avatar): use filterDOMProps approach\n- chore(avatar): remove to type import\n- chore(avatar): change to shouldFilterDOMProps\n

Labels:


Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-912/[bug]-react-does-not-recognize-the-disableanimation-prop-on-a-dom">ENG-912 [BUG] - React does not recognize the `disableAnimation` prop on a DOM element.</a></p>\n- vercel: [vc]: #m5ZTQ/x+WVcasT8cjOXDcO9OQVWIjNhMCvn95Ep/Zkk=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi84d3F4TWF1OW84Q3RvcVNCQ0E3WWVtc0RHSDNmIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtZW5nLTkxMi1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWZpeC1lbmctOTEyLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvNEQ3R3FzWnVHdnUyUUJMUmlZM2pZQ2g5U2pOYiIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1maXgtZW5nLTkxMi1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LWVuZy05MTItbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/8wqxMau9o8CtoqSBCA7YemsDGH3f)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-912-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-912-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 30, 2024 2:15am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/4D7GqsZuGvu2QBLRiY3jYCh9SjNb)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-912-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-912-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 30, 2024 2:15am |


\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: a972ecceffe52589bb8c8f7b6293e9c9047b95f8

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 3 packages</summary>

  | Name               | Type  |
| ------------------ | ----- |
| @nextui-org/avatar | Patch |
| @nextui-org/user   | Patch |
| @nextui-org/react  | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/eng-912?filename=.changeset/silent-owls-study.md&value=---%0A%22%40nextui-org%2Favatar%22%3A%20patch%0A---%0A%0Afix(avatar)%3A%20avoid%20passing%20%60disableAnimation%60%20prop%20to%20a%20DOM%20element%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The recent changes address a bug in the `@nextui-org/avatar` package where the `disableAnimation` prop was incorrectly passed to a DOM element, causing React warnings. The solution involves filtering out this prop when it is not needed. The changes include importing necessary utilities and conditionally filtering DOM props based on the type of `ImgComponent`.

## Changes

| File Path                                  | Summary                                                                                     |
|--------------------------------------------|---------------------------------------------------------------------------------------------|
| .../components/avatar/src/use-avatar.ts    | Added imports for `DOMAttributes`, `DOMElement`, `HTMLNextUIProps`, and `PropGetter`. Modified `useAvatar` to filter DOM props based on `ImgComponent` type. Introduced `shouldFilterDOMProps` to conditionally filter DOM props. |

## Assessment against linked issues

| Objective (Issue #)                                                                 | Addressed | Explanation                                                                                  |
|-------------------------------------------------------------------------------------|-----------|----------------------------------------------------------------------------------------------|
| Avoid passing `disableAnimation` prop to DOM element (#3109)                        | ‚úÖ         |                                                                                              |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

# Existing changesets

# Existing changesets

.changeset/hungry-garlics-kiss.md: ## Summary

The file `hungry-garlics-kiss.md` introduces a patch for the `@nextui-org/avatar` package to address an issue related to avoiding passing the `disableAnimation` prop to a DOM element.

---

packages/components/avatar/src/use-avatar.ts: ### Summary

The changes in `use-avatar.ts` include:

- Added imports for `DOMAttributes`, `DOMElement`, and `filterDOMProps`.
- Modified the `useAvatar` function to include logic for filtering DOM props based on the type of `ImgComponent`.

# New changesets

packages/components/avatar/src/use-avatar.ts: ### Summary

The changes in `use-avatar.ts` include:

- Added imports for `DOMAttributes`, `DOMElement`, `HTMLNextUIProps`, and `PropGetter`.
- Modified the `useAvatar` function to include logic for filtering DOM props based on the type of `ImgComponent`.

# New changesets

packages/components/avatar/src/use-avatar.ts: ### Summary

The changes in `use-avatar.ts` include:

- Added imports for `DOMAttributes`, `DOMElement`, `HTMLNextUIProps`, and `PropGetter`.
- Modified the `useAvatar` function to include logic for filtering DOM props based on the type of `ImgComponent`.
- Added a new variable `shouldFilterDOMProps` to conditionally filter DOM props.

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

### PR Summary

**Title:** fix(avatar): avoid passing `disableAnimation` prop to a DOM element  
**User:** wingkwong  
**Number:** 3111  

**Description:**  
This pull request addresses the issue where the `disableAnimation` prop was being passed to a DOM element, which React does not recognize. The fix ensures that this prop is no longer passed to DOM elements, thereby preventing the related error.

**Closes:** #3109

### Objectives from Linked Issues

**Issue #3109:**  
**Title:** [BUG] - React does not recognize the `disableAnimation` prop on a DOM element.  

**Description:**  
In NextUI version 2.4.0, there is a bug where React does not recognize the `disableAnimation` prop when it is passed to a DOM element. This issue occurs when creating an avatar with an image, leading to an error. The expected behavior is that no such error should occur when using the `disableAnimation` prop. The issue was observed on macOS using the Chrome browser.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated summary of generated summaries

The changes primarily focus on the `@nextui-org/avatar` package, specifically within the `use-avatar.ts` file. The updates include:

1. **Imports**: New imports for `DOMAttributes`, `DOMElement`, `HTMLNextUIProps`, and `PropGetter` have been added.
2. **Function Modification**: The `useAvatar` function has been modified to incorporate logic for filtering DOM props based on the type of `ImgComponent`.
3. **New Variable**: Introduction of a new variable `shouldFilterDOMProps` to conditionally filter DOM props.

Additionally, a patch has been introduced to prevent the `disableAnimation` prop from being passed to a DOM element.

### Alterations to the declarations of exported or public entities

#### Before Changes

```typescript
// Imports
import { DOMAttributes, DOMElement, filterDOMProps } from 'some-module';

// Function
function useAvatar(props: AvatarProps): AvatarResult {
  // Existing logic
}
```

#### After Changes

```typescript
// Imports
import { DOMAttributes, DOMElement, HTMLNextUIProps, PropGetter, filterDOMProps } from 'some-module';

// Function
function useAvatar(props: AvatarProps): AvatarResult {
  const shouldFilterDOMProps = // logic to determine if DOM props should be filtered
  // Modified logic to filter DOM props based on ImgComponent type
}
```
- **Feedback from the user on the previous review**: undefined

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- d482b61982440cf1b6defbe7a779045245ec8162 -->
<!-- 09d10f0a11ac6ba36d4098a4f12db990d4d3cdd9 -->
<!-- a972ecceffe52589bb8c8f7b6293e9c9047b95f8 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- AmazingTurtle: I am on 2.4.2 and the error persists. Anyone else?\n- wingkwong: @AmazingTurtle Sorry about that. I can confirm that there is an extra `disableAnimation` introduced during resolving the merge conflict. I've made another PR [here](https://github.com/nextui-org/nextui/pull/3260).\n- paperdiamond: Thank you! Yes I'm experiencing it on 2.4.2 as well. Hope the new PR gets merged soon =)\n- wingkwong: @AmazingTurtle @paperdiamond The PR has been merged. You guys can use the canary version `0.0.0-canary-20240616172522` as a temp fix at the moment.\n- paperdiamond: Thank you @wingkwong that did resolve the issue =)\n

Files Changed:
- .changeset/hungry-garlics-kiss.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/avatar": patch
+---
+
+avoid passing `disableAnimation` prop to a DOM element (#3109)\n- packages/components/avatar/src/use-avatar.ts (modified, 19 changes)\n  Patch: @@ -1,11 +1,11 @@
 import type {AvatarSlots, AvatarVariantProps, SlotsToClasses} from "@nextui-org/theme";
+import type {DOMElement, DOMAttributes, HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 
 import {avatar} from "@nextui-org/theme";
-import {HTMLNextUIProps, PropGetter, useProviderContext} from "@nextui-org/system";
+import {useProviderContext} from "@nextui-org/system";
 import {mergeProps} from "@react-aria/utils";
-import {useDOMRef} from "@nextui-org/react-utils";
+import {ReactRef, useDOMRef, filterDOMProps} from "@nextui-org/react-utils";
 import {clsx, safeText, dataAttr} from "@nextui-org/shared-utils";
-import {ReactRef} from "@nextui-org/react-utils";
 import {useFocusRing} from "@react-aria/focus";
 import {useMemo, useCallback} from "react";
 import {useImage} from "@nextui-org/use-image";
@@ -141,6 +141,8 @@ export function useAvatar(originalProps: UseAvatarProps = {}) {
 
   const isImgLoaded = imageStatus === "loaded";
 
+  const shouldFilterDOMProps = typeof ImgComponent === "string";
+
   /**
    * Fallback avatar applies under 2 conditions:
    * - If `src` was passed and the image has not loaded or failed to load
@@ -199,12 +201,17 @@ export function useAvatar(originalProps: UseAvatarProps = {}) {
     (props = {}) => ({
       ref: imgRef,
       src: src,
-      disableAnimation,
       "data-loaded": dataAttr(isImgLoaded),
       className: slots.img({class: classNames?.img}),
-      ...mergeProps(imgProps, props),
+      ...mergeProps(
+        imgProps,
+        props,
+        filterDOMProps({disableAnimation} as DOMAttributes<DOMElement>, {
+          enabled: shouldFilterDOMProps,
+        }),
+      ),
     }),
-    [slots, isImgLoaded, imgProps, disableAnimation, src, imgRef],
+    [slots, isImgLoaded, imgProps, disableAnimation, src, imgRef, shouldFilterDOMProps],
   );
 
   return {\n
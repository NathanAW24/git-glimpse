Pull Request Number: 3106
Title: chore: supplement validation behavior
Base Branch: main
Head Branch: chore/validationBehavior
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/3106
State: MERGED
Created At: 2024-05-28T08:56:19Z
Merged At: 2024-05-31T02:15:44Z
Participants: wingkwong, jrgarciadev, ryo-manba

Description:
Closes # 
üìù Description

Add a brief description

‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


New Features

Introduced isInvalid prop for real-time validation across various components.
Updated validate property to include additional information on displaying validation errors based on validationBehavior setting.



Improvements

Enhanced doctor command to check and display incorrect peerDependencies.
Default validation behavior changed to aria for better accessibility.



Documentation

Updated documentation for input, date-input, date-picker, date-range-picker, radio-group, range-calendar, textarea, time-input, and checkbox-group components to reflect new validation behavior and usage of isInvalid prop.

Commits:
- chore(input): set validationBehavior to native\n- chore(docs): revise validate content in input\n- chore(input): set validationBehavior to native\n- chore(docs): add Validation Behavior to breaking change\n- chore(docs): revise content in cli\n- chore(docs): fix typo\n- chore(docs): update validate in other components\n- chore(docs): update validate content\n- chore(input): undo validationBehavior\n- refactor(docs): revise validate content\n

Labels:


Comments:
- vercel: [vc]: #0rYEgEPB42kr9bEweP6sml8LGLneK6e3kMJW8J3Nr8U=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9HMlFMN0xWOFg0czVydFBoNnV3dW43cm5ka0xNIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1jaG9yZS12YWxpZGF0aW9uYmVoYXZpb3ItbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1kb2NzLXYyLWdpdC1jaG9yZS12YWxpZGF0aW9uYmVoYXZpb3ItbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19LHsibmFtZSI6Im5leHR1aS1zdG9yeWJvb2stdjIiLCJyb290RGlyZWN0b3J5IjoicGFja2FnZXMvc3Rvcnlib29rIiwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi9FeFR3cVFuQWhNNHF2WERYRXpaaFlGVnpOdHFnIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWNob3JlLXZhbGlkYXRpb25iZWhhdmlvci1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtY2hvcmUtdmFsaWRhdGlvbmJlaGF2aW9yLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/G2QL7LV8X4s5rtPh6uwun7rndkLM)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-chore-validationbehavior-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-chore-validationbehavior-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 30, 2024 7:08am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/ExTwqQnAhM4qvXDXEzZhYFVzNtqg)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-chore-validationbehavior-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-chore-validationbehavior-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 30, 2024 7:08am |


\n- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: 1e84b98ce68aeff13b6a8e4db0750618837b2bd9

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/nextui-org/nextui/new/chore/validationBehavior?filename=.changeset/kind-shoes-accept.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A---%0A%0Achore%3A%20supplement%20validation%20behavior%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

In version 2.4.0 of the NextUI library, significant updates were made to the validation behavior across various components. The default validation behavior now follows the `aria` standard, requiring the use of the `isInvalid` prop for real-time validation. Additionally, the `doctor` command was enhanced to check for peerDependencies without providing a specific link. These changes ensure more consistent and accessible validation handling within the library.

## Changes

| Files/Path(s)                                   | Change Summary                                                                                                            |
|-------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------|
| `apps/docs/content/blog/v2.4.0.mdx`             | Updated `doctor` command to check peerDependencies without a specific link. Changed default validation to `aria`.          |
| `apps/docs/content/docs/components/input.mdx`, `apps/docs/content/docs/components/date-input.mdx`, `apps/docs/content/docs/components/date-picker.mdx`, `apps/docs/content/docs/components/date-range-picker.mdx`, `apps/docs/content/docs/components/radio-group.mdx`, `apps/docs/content/docs/components/range-calendar.mdx`, `apps/docs/content/docs/components/textarea.mdx`, `apps/docs/content/docs/components/time-input.mdx`, `apps/docs/content/docs/components/checkbox-group.mdx` | Updated `validate` property to include information on displaying validation errors based on `validationBehavior` setting. |
| `packages/components/input/stories/input.stories.tsx` | Added `validationBehavior: "native"` to `Required`, `WithErrorMessageFunction`, and `WithValidation` components.           |

## Sequence Diagram(s) (Beta)

```mermaid
sequenceDiagram
    participant User
    participant Component
    participant Form
    participant Validation

    User->>Component: Enter data
    Component->>Validation: Validate data in real-time
    Validation->>Component: Return validation status (isInvalid)
    Component->>User: Display validation status
    User->>Form: Submit form
    Form->>Validation: Validate data on submit
    Validation->>Form: Return validation status (native)
    Form->>User: Display validation errors if any
```

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

apps/docs/content/blog/v2.4.0.mdx: ## Short Summary

In version 2.4.0 of the NextUI library, changes were made to the `doctor` command to check for peerDependencies and display incorrect ones. Additionally, the default validation behavior was updated to `aria`, requiring a switch to using the `isInvalid` prop instead of `validate`.

## Alterations to the Declarations of Exported or Public Entities

- `doctor` command in NextUI library:
  - Before: Checked for peerDependencies and displayed incorrect ones with a link.
  - After: Checks for peerDependencies and displays incorrect ones without a specific link.

- Validation Behavior in NextUI library:
  - Before: Default validation behavior unspecified.
  - After: Default validation behavior changed to `aria`, requiring the use of `isInvalid` prop instead of `validate`.

---

apps/docs/content/docs/components/input.mdx: ## Short Summary

The `validate` property in the input component now includes additional information about when validation errors are displayed to the user based on the `validationBehavior` setting.

## Alterations to the declarations of exported or public entities

- `validate` property in the input component:
  - Before: `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
  - After: `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
    - Additional: Validation errors are displayed to the user when the form is submitted if `validationBehavior` is set to `native`. For realtime validation, use the `isInvalid` prop instead.

---

packages/components/input/stories/input.stories.tsx: ### Summary

The changes in the `input.stories.tsx` file involve adding the `validationBehavior: "native"` property to three different storybook components: `Required`, `WithErrorMessageFunction`, and `WithValidation`.

### Alterations to the declarations of exported or public entities

- `Required`, `WithErrorMessageFunction`, `WithValidation` in `input.stories.tsx`:
  - Added `validationBehavior: "native"`

---

apps/docs/content/docs/components/date-input.mdx: ## Short Summary

The `validate` property in the `DateInput` component now includes additional information about how validation errors are displayed to the user based on the `validationBehavior` setting.

## Alterations to the declarations of exported or public entities

- `validate: (value: MappedDateValue<DateValue>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined` in `DateInput` component in `date-input.mdx`
  - Updated to include details on displaying validation errors based on the `validationBehavior` setting.

---

apps/docs/content/docs/components/date-picker.mdx: ## Short Summary

The change in functionality for the `date-picker` component involves an update to the `validate` property. The modification now includes additional information on how validation errors are displayed to the user based on the `validationBehavior` setting.

## Alterations to the declarations of exported or public entities

- `validate` property in `date-picker` component:
  - Before: `(value: MappedDateValue<DateValue>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
  - After: `(value: MappedDateValue<DateValue>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
    - Additional: Validation errors are displayed to the user when the form is submitted if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop instead.

---

apps/docs/content/docs/components/date-range-picker.mdx: ## Short Summary

The change in functionality for the `date-range-picker` component involves an update to the `validate` prop. The modification now includes additional information about how validation errors are displayed to the user based on the `validationBehavior` setting.

## Alterations to the declarations of exported or public entities

- `validate` in `date-range-picker` component:
  - Before: `(value: RangeValue<MappedDateValue<DateValue>>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
  - After: `(value: RangeValue<MappedDateValue<DateValue>>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
    - Additional: Validation errors are displayed to the user when the form is submitted if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop instead.

---

apps/docs/content/docs/components/radio-group.mdx: ## Short Summary

The `validate` property in the radio group component now includes additional functionality for displaying validation errors to the user when the form is submitted, based on the `validationBehavior` setting. Real-time validation is now recommended using the `isInvalid` prop.

## Alterations to the declarations of exported or public entities

- `validate: (value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined` in `radio-group.mdx`
  - Updated to include information about displaying validation errors based on `validationBehavior` setting and recommendation for real-time validation using the `isInvalid` prop.

---

apps/docs/content/docs/components/range-calendar.mdx: ## Short Summary

The change in functionality involves enhancing the `validate` function in the `range-calendar` component to display validation errors to the user when the form is submitted based on the `validationBehavior` setting. Real-time validation is now recommended using the `isInvalid` prop instead.

## Alterations to the declarations of exported or public entities

- `validate` in `range-calendar.mdx`
  - Before: `(value: { inputValue: string, selectedKey: React.Key }) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
  - After: `(value: { inputValue: string, selectedKey: React.Key }) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
    - Additional: Validation errors are displayed to the user when the form is submitted if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop instead.

---

apps/docs/content/docs/components/textarea.mdx: ## Short Summary

The change in functionality for the `textarea` component involves extending the `validate` property to handle validation errors and introducing the `validationBehavior` property to control how validation errors are displayed to the user.

## Alterations to the declarations of exported or public entities

- `validate` in `textarea` component:
  - Before: `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
  - After: `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
    - Additional: Validation errors are displayed to the user when the form is submitted if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop instead.

- `validationBehavior` in `textarea` component:
  - Before: `native` \| `aria`
  - After: `native` \| `aria`

---

apps/docs/content/docs/components/time-input.mdx: ## Short Summary

The `validate` property in the `TimeInput` component now includes additional functionality to display validation errors to the user when the form is submitted, based on the `validationBehavior` setting. Real-time validation is now recommended using the `isInvalid` prop instead.

## Alterations to the declarations of exported or public entities

- `validate: (value: MappedTimeValue<TimeValue>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined` in `TimeInput` component in `apps/docs/content/docs/components/time-input.mdx`
  - Updated to include information about displaying validation errors based on the `validationBehavior` setting and recommending the use of the `isInvalid` prop for real-time validation.

---

apps/docs/content/docs/components/checkbox-group.mdx: ## Short Summary

The `validate` function in the `CheckboxGroup` component now includes additional behavior for displaying validation errors upon form submission based on the `validationBehavior` setting. Real-time validation is now facilitated through the `isInvalid` prop.

## Alterations to the declarations of exported or public entities

- `validate` function in `CheckboxGroup` component in `apps/docs/content/docs/components/checkbox-group.mdx`:
  - Before: `(value: string[]) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
  - After: `(value: string[]) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
    - Additional behavior: Validation errors are displayed upon form submission if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop.

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

### PR Summary

**Title:** chore: supplement validation behavior  
**User:** wingkwong  
**Number:** 3106  

**Description:**  
This pull request aims to supplement the validation behavior. The description fields in the PR template are placeholders for the following information:
- A brief description of the changes.
- The current behavior being modified.
- The new behavior or changes introduced by this PR.
- Whether this is a breaking change and its impact on existing NextUI users.
- Any additional information relevant to the PR.

The PR does not specify the exact details of the changes or the issue it closes.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated Summary of Generated Summaries

In version 2.4.0 of the NextUI library, significant updates were made to the validation behavior and the `doctor` command. The `doctor` command now checks for peerDependencies and displays incorrect ones without a specific link. The default validation behavior has been updated to `aria`, necessitating the use of the `isInvalid` prop for real-time validation instead of the `validate` prop.

Several components, including `input`, `DateInput`, `date-picker`, `date-range-picker`, `radio-group`, `range-calendar`, `textarea`, `TimeInput`, and `CheckboxGroup`, have been updated to reflect this new validation behavior. The `validate` property in these components now includes additional information on how validation errors are displayed based on the `validationBehavior` setting. Specifically, validation errors are shown to the user upon form submission if `validationBehavior` is set to `native`, while real-time validation requires the `isInvalid` prop.

In the `input.stories.tsx` file, the `validationBehavior: "native"` property has been added to the `Required`, `WithErrorMessageFunction`, and `WithValidation` storybook components.

### Alterations to the Declarations of Exported or Public Entities

#### `doctor` Command in NextUI Library
- **Before**: Checked for peerDependencies and displayed incorrect ones with a link.
- **After**: Checks for peerDependencies and displays incorrect ones without a specific link.

#### Validation Behavior in NextUI Library
- **Before**: Default validation behavior unspecified.
- **After**: Default validation behavior changed to `aria`, requiring the use of `isInvalid` prop instead of `validate`.

#### `validate` Property in Various Components

1. **Input Component**
   - **Before**: `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
   - **After**: `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
     - Additional: Validation errors are displayed to the user when the form is submitted if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop instead.

2. **DateInput Component**
   - **Before**: `(value: MappedDateValue<DateValue>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
   - **After**: `(value: MappedDateValue<DateValue>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
     - Additional: Validation errors are displayed to the user when the form is submitted if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop instead.

3. **DatePicker Component**
   - **Before**: `(value: MappedDateValue<DateValue>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
   - **After**: `(value: MappedDateValue<DateValue>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
     - Additional: Validation errors are displayed to the user when the form is submitted if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop instead.

4. **DateRangePicker Component**
   - **Before**: `(value: RangeValue<MappedDateValue<DateValue>>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
   - **After**: `(value: RangeValue<MappedDateValue<DateValue>>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
     - Additional: Validation errors are displayed to the user when the form is submitted if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop instead.

5. **RadioGroup Component**
   - **Before**: `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
   - **After**: `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
     - Additional: Validation errors are displayed to the user when the form is submitted if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop instead.

6. **RangeCalendar Component**
   - **Before**: `(value: { inputValue: string, selectedKey: React.Key }) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
   - **After**: `(value: { inputValue: string, selectedKey: React.Key }) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
     - Additional: Validation errors are displayed to the user when the form is submitted if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop instead.

7. **Textarea Component**
   - **Before**: `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
   - **After**: `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
     - Additional: Validation errors are displayed to the user when the form is submitted if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop instead.

   - **Before**: `validationBehavior` not specified.
   - **After**: `validationBehavior` property added with values `native` \| `aria`.

8. **TimeInput Component**
   - **Before**: `(value: MappedTimeValue<TimeValue>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
   - **After**: `(value: MappedTimeValue<TimeValue>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
     - Additional: Validation errors are displayed to the user when the form is submitted if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop instead.

9. **CheckboxGroup Component**
   - **Before**: `(value: string[]) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
   - **After**: `(value: string[]) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`
     - Additional: Validation errors are displayed to the user when the form is submitted if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop instead.

#### `input.stories.tsx` File
- **Required**, **WithErrorMessageFunction**, **WithValidation**:
  - Added `validationBehavior: "native"` property.
- **Feedback from the user on the previous review**: undefined

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 6bd9af82722799058ec66a16dc95f077c9a98562 -->
<!-- 2447a1528d18cda404dfb3ff49623b9454175614 -->
<!-- c00316edf610d72105446bd83fa30b1e6c241bb6 -->
<!-- 1e84b98ce68aeff13b6a8e4db0750618837b2bd9 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- apps/docs/content/blog/v2.4.0.mdx (modified, 17 changes)\n  Patch: @@ -230,7 +230,7 @@ The disabled option(s) will be displayed in the bottom of the list.
 
 ### Doctor Command add peerDependencies check
 
-The `doctor` command now checks for peerDependencies and displays the incorrect peerDependencies, relation: [nextui-org/nextui#2954](https://github.com/nextui-org/nextui/issues/2954).
+The `doctor` command now checks for peerDependencies and displays the incorrect peerDependencies. (See [nextui-org/nextui#2954](https://github.com/nextui-org/nextui/issues/2954) for more).
 
 <Spacer y={4} />
 
@@ -266,8 +266,20 @@ you need to update the import as follows:
 + import {cn} from "@nextui-org/theme"
 ```
 
-<Spacer y={4} />
+### Validation Behavior
+
+Since v2.4.0, we've changed the default validation behavior to `aria` which means no native validation is applied. If you wish to use the native validation, you can set `validationBehavior` to `native` to the input components or set it to the Provider as stated above.
+
+For those who use `validationBehavior="aria"`, `validate` will be no longer applied since it is only for native validation. Therefore, you need to switch to use `isInvalid` prop instead.
+
+```tsx
+<form onSubmit={onSubmit}>
+  <Input errorMessage={formErrors?.field1} isInvalid={!!formErrors?.field1} name="field1" />
+  <Button type="submit">Submit</Button>
+</form>
+```
 
+<Spacer y={4} />
 
 ## Other Changes
 
@@ -307,6 +319,7 @@ you need to update the import as follows:
 - Refactored the useScrollPosition hook to improve performance and stability by using useCallback for the handler function and useRef for throttleTimeout. [PR](https://github.com/nextui-org/nextui/pull/3049) - [@Gaic4o](https://github.com/Gaic4o)
 
 **Documentation**:
+
 - Updated documentation to reflect the new features and changes in the components, API references, and CLI.
 
 Special thanks to NextUI Team members [@kuri-sun](https://github.com/kuri-sun), [@ryo-manba](https://github.com/ryo-manba), \n- apps/docs/content/docs/components/checkbox-group.mdx (modified, 2 changes)\n  Patch: @@ -109,7 +109,7 @@ In case you need to customize the checkbox even further, you can use the `useChe
 | validationState    | `valid` \| `invalid`                                                        | Whether the inputs should display its "valid" or "invalid" visual styling. (**Deprecated**) use **isInvalid** instead.                                        | -          |
 | description        | `ReactNode`                                                                 | The checkbox group description.                                                                                                                               | -          |
 | errorMessage       | `ReactNode` \| `((v: ValidationResult) => ReactNode)`                       | The checkbox group error message.                                                                                                                             | -          |
-| validate           | `(value: string[]) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`          | Validate input values when committing (e.g. on blur), and return error messages for invalid values.                                                           | -          |
+| validate           | `(value: string[]) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`          | Validate input values when committing (e.g. on blur), returning error messages for invalid values. Validation errors are displayed upon form submission if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop.| -          |
 | validationBehavior | `native` \| `aria`                                                          | Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.| `aria`     |
 | isDisabled         | `boolean`                                                                   | Whether the checkbox group is disabled.                                                                                                                       | `false`    |
 | isRequired         | `boolean`                                                                   | Whether user checkboxes are required on the input before form submission.                                                                                     | `false`    |\n- apps/docs/content/docs/components/date-input.mdx (modified, 2 changes)\n  Patch: @@ -299,7 +299,7 @@ import {parseZonedDateTime} from "@internationalized/date";
 | locale                  | `string`                                                                                                                          | The locale to display and edit the value according to.                                                                                                        | -         |
 | description             | `ReactNode`                                                                                                                       | A description for the date input. Provides a hint such as specific requirements for what to choose.                                                           | -         |
 | errorMessage            | `ReactNode \| (v: ValidationResult) => ReactNode`                                                                                 | An error message for the date input.                                                                                                                          | -         |
-| validate                | `(value: MappedDateValue<DateValue>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                                              | Validate input values when committing (e.g., on blur), and return error messages for invalid values.                                                          | -         |
+| validate                | `(value: MappedDateValue<DateValue>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                                              | Validate input values when committing (e.g. on blur), returning error messages for invalid values. Display validation errors upon form submission if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop.| -         |
 | validationBehavior      | `native` \| `aria`                                                                                                                | Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.| `aria`    |
 | startContent            | `ReactNode`                                                                                                                       | Element to be rendered in the left side of the date input.                                                                                                    | -         |
 | endContent              | `ReactNode`                                                                                                                       | Element to be rendered in the right side of the date input.                                                                                                   | -         |\n- apps/docs/content/docs/components/date-picker.mdx (modified, 2 changes)\n  Patch: @@ -313,7 +313,7 @@ import {I18nProvider} from "@react-aria/i18n";
 | placeholderValue        | `ZonedDateTime` \| `CalendarDate` \| `CalendarDateTime` \| `undefined` \| `null`                                                                         | The placeholder of the date-picker.                                                                                                                           | -                                                                    |
 | description             | `ReactNode`                                                                                                                                              | A description for the date-picker. Provides a hint such as specific requirements for what to choose.                                                          | -                                                                    |
 | errorMessage            | `ReactNode \| (v: ValidationResult) => ReactNode`                                                                                                        | An error message for the date input.                                                                                                                          | -                                                                    |
-| validate                | `(value: MappedDateValue<DateValue>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                                                                     | Validate input values when committing (e.g., on blur), and return error messages for invalid values.                                                          | -                                                                    |
+| validate                | `(value: MappedDateValue<DateValue>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                                                                     | Validate input values when committing (e.g. on blur), returning error messages for invalid values. Display validation errors upon form submission if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop.| -                                                                    |
 | validationBehavior      | `native` \| `aria`                                                                                                                                       | Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.| `aria`                                                               |
 | startContent            | `ReactNode`                                                                                                                                              | Element to be rendered in the left side of the date-picker.                                                                                                   | -                                                                    |
 | endContent              | `ReactNode`                                                                                                                                              | Element to be rendered in the right side of the date-picker.                                                                                                  | -                                                                    |\n- apps/docs/content/docs/components/date-range-picker.mdx (modified, 2 changes)\n  Patch: @@ -354,7 +354,7 @@ import {I18nProvider} from "@react-aria/i18n";
 | placeholderValue          | `ZonedDateTime` \| `CalendarDate` \| `CalendarDateTime` \| `undefined` \| `null`                                                                         | The placeholder of the date-range-picker.                                                                                                                               | -                                                                    |
 | description               | `ReactNode`                                                                                                                                              | A description for the date-range-picker. Provides a hint such as specific requirements for what to choose.                                                              | -                                                                    |
 | errorMessage              | `ReactNode \| (v: ValidationResult) => ReactNode`                                                                                                        | An error message for the date input.                                                                                                                                    | -                                                                    |
-| validate                  | `(value: RangeValue<MappedDateValue<DateValue>>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                                                         | Validate input values when committing (e.g., on blur), and return error messages for invalid values.                                                                    | -                                                                    |
+| validate                  | `(value: RangeValue<MappedDateValue<DateValue>>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                                                         | Validate input values when committing (e.g. on blur), returning error messages for invalid values. Display validation errors upon form submission if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop.| -                                                                    |
 | validationBehavior        | `native` \| `aria`                                                                                                                                       | Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.          | `aria`                                                               |
 | startContent              | `ReactNode`                                                                                                                                              | Element to be rendered in the left side of the date-range-picker.                                                                                                       | -                                                                    |
 | endContent                | `ReactNode`                                                                                                                                              | Element to be rendered in the right side of the date-range-picker.                                                                                                      | -                                                                    |\n- apps/docs/content/docs/components/input.mdx (modified, 2 changes)\n  Patch: @@ -207,7 +207,7 @@ In case you need to customize the input even further, you can use the `useInput`
 | placeholder        | `string`                                                                                                                                                               | The placeholder of the input.                                                                                                                                 | -         |
 | description        | `ReactNode`                                                                                                                                                            | A description for the input. Provides a hint such as specific requirements for what to choose.                                                                | -         |
 | errorMessage       | `ReactNode` \| `((v: ValidationResult) => ReactNode)`                                                                                                                  | An error message for the input. It is only shown when `isInvalid` is set to `true`                                                                            | -         |
-| validate           | `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                                                                                                       | Validate input values when committing (e.g. on blur), and return error messages for invalid values.                                                           | -         |
+| validate           | `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                                                                                                       | Validate input values when committing (e.g. on blur), returning error messages for invalid values. Validation errors are displayed upon form submission if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop.| -         |
 | validationBehavior | `native` \| `aria`                                                                                                                                                     | Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.| `aria`    |
 | startContent       | `ReactNode`                                                                                                                                                            | Element to be rendered in the left side of the input.                                                                                                         | -         |
 | endContent         | `ReactNode`                                                                                                                                                            | Element to be rendered in the right side of the input.                                                                                                        | -         |\n- apps/docs/content/docs/components/radio-group.mdx (modified, 2 changes)\n  Patch: @@ -159,7 +159,7 @@ In case you need to customize the radio group even further, you can use the `use
 | defaultValue       | `string[]`                                                                  | The default selected value. (uncontrolled).                                                                                                                                                                             | -          |
 | description        | `ReactNode`                                                                 | Radio group description .                                                                                                                                                                                               | -          |
 | errorMessage       | `ReactNode` \| `((v: ValidationResult) => ReactNode)`                       | Radio group error message.                                                                                                                                                                                              | -          |
-| validate           | `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`            | Validate input values when committing (e.g. on blur), and return error messages for invalid values.                                                                                                                     | -          |
+| validate           | `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`            | Validate input values when committing (e.g. on blur), returning error messages for invalid values. Validation errors are displayed upon form submission if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop.| -          |
 | validationBehavior | `native` \| `aria`                                                                                                                    | Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.| `aria`     |
 | isDisabled         | `boolean`                                                                   | Whether the radio group is disabled.                                                                                                                                                                                    | `false`    |
 | isRequired         | `boolean`                                                                   | Whether user checkboxes are required on the input before form submission.                                                                                                                                               | `false`    |\n- apps/docs/content/docs/components/range-calendar.mdx (modified, 2 changes)\n  Patch: @@ -226,7 +226,7 @@ Here's the example to customize `topContent` and `bottomContent` to have some pr
 | isDateUnavailable         | `(date: DateValue) => boolean`                                                                                                                                                                                                                                                                                                                                                                | Callback that is called for each date of the calendar. If it returns true, then the date is unavailable.                                                                                  | -                                 |   |
 | createCalendar            | `(calendar: SupportedCalendars) => Calendar \| null`                                                                                                                                                                                                                                                                                                                                          | This function helps to reduce the bundle size by providing a custom calendar system. You can also use the NextUIProvider to provide the createCalendar function to all nested components. | `all<br> calendars`               |   |
 | errorMessage              | `ReactNode \| (v: ValidationResult) => ReactNode`                                                                                                                                                                                                                                                                                                                                             | An error message for the field.                                                                                                                                                           | -                                 |   |
-| validate                  | `(value: { inputValue: string, selectedKey: React.Key }) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                                                                                                                                                                                                                                                                                     | Validate time input values when committing (e.g. on blur), and return error messages for invalid values.                                                                                  | -                                 |   |
+| validate                  | `(value: { inputValue: string, selectedKey: React.Key }) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                                                                                                                                                                                                                                                                                     | Validate input values when committing (e.g. on blur), returning error messages for invalid values. Validation errors are displayed upon form submission if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop.| -                                 |   |
 | hideDisabledDates         | `boolean`                                                                                                                                                                                                                                                                                                                                                                                     | Whether to hide the disabled or invalid dates.                                                                                                                                            | `false`                           |   |
 | disableAnimation          | `boolean`                                                                                                                                                                                                                                                                                                                                                                                     | Whether to disable the animation of the calendar.                                                                                                                                         | `false`                           |   |
 | classNames                | `Record<"base"ÔΩú "prevButton"ÔΩú "nextButton"ÔΩú "headerWrapper" \| "header" \| "title" \| "content" \| "gridWrapper" \| "grid" \| "gridHeader" \| "gridHeaderRow" \| "gridHeaderCell" \| "gridBody" \| "gridBodyRow" \| "cell" \| "cellButton" \| "pickerWrapper" \| "pickerMonthList" \| "pickerYearList" \| "pickerHighlight" \| "pickerItem" \| "helperWrapper" \| "errorMessage", string>` | Allows to set custom class names for the calendar slots.                                                                                                                                  | -                                 |   |\n- apps/docs/content/docs/components/textarea.mdx (modified, 2 changes)\n  Patch: @@ -157,7 +157,7 @@ You can use the `value` and `onValueChange` properties to control the input valu
 | endContent         | `ReactNode`                                                                                                        | Element to be rendered in the right side of the input.                                                                                                        | -         |
 | description        | `ReactNode`                                                                                                        | A description for the textarea. Provides a hint such as specific requirements for what to choose.                                                             | -         |
 | errorMessage       | `ReactNode` \| `((v: ValidationResult) => ReactNode)`                                                              | An error message for the textarea.                                                                                                                            | -         |
-| validate           | `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                                                   | Validate input values when committing (e.g. on blur), and return error messages for invalid values.                                                           | -         |
+| validate           | `(value: string) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                                                   | Validate input values when committing (e.g. on blur), returning error messages for invalid values. Validation errors are displayed upon form submission if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop.| -         |
 | validationBehavior | `native` \| `aria`                                                                                                 | Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.| `aria`    |
 | labelPlacement     | `inside` \| `outside` \| `outside-left`                                                                            | The position of the label.                                                                                                                                    | `inside`  |
 | fullWidth          | `boolean`                                                                                                          | Whether the textarea should take up the width of its parent.                                                                                                  | `true`    |\n- apps/docs/content/docs/components/time-input.mdx (modified, 2 changes)\n  Patch: @@ -223,7 +223,7 @@ By default, `TimeInput` displays times in either 12 or 24 hour hour format depen
 | autoFocus               | `boolean`                                                                                                                                          | Whether the element should receive focus on render.                                                                                                                | -         |
 | description             | `ReactNode`                                                                                                                                        | A description for the field. Provides a hint such as specific requirements for what to choose.                                                                     | -         |
 | errorMessage            | `ReactNode \| (v: ValidationResult) => ReactNode`                                                                                                  | An error message for the field.                                                                                                                                    | -         |
-| validate                | `(value: MappedTimeValue<TimeValue>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                                                               | Validate time input values when committing (e.g. on blur), and return error messages for invalid values.                                                           | -         |
+| validate                | `(value: MappedTimeValue<TimeValue>) => ValidationError ÔΩú true ÔΩú null ÔΩú undefined`                                                               | Validate input values when committing (e.g. on blur), returning error messages for invalid values. Validation errors are displayed upon form submission if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop.| -         |
 | validationBehavior      | `native` \| `aria`                                                                                                                                 | Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.     | `aria`    |
 | disableAnimation        | `boolean`                                                                                                                                          | Whether to disable the animation of the time input.                                                                                                                | -         |
 | classNames              | `Record<"base"ÔΩú "label"ÔΩú "inputWrapper"ÔΩú "innerWrapper" ÔΩú "segment" ÔΩú "helperWrapper" ÔΩú "input" ÔΩú "description" ÔΩú "errorMessage", string>` | Allows to set custom class names for the time input slots.                                                                                                           | -         |\n
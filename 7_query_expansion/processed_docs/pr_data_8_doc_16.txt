Pull Request Number: 3370
Title: Fix(user): avatar icon not shown in user, when passed
Base Branch: canary
Head Branch: fix/avatar-icon-not-shown-in-user
Author: awesome-pro
URL: https://github.com/nextui-org/nextui/pull/3370
State: CLOSED
Created At: 2024-06-30T05:42:18Z
Merged At: None
Participants: awesome-pro, wingkwong

Description:
Closes #3369
üìù Description
Added name prop in avatarProps, changed name(of avatarProps) to be same as name(of User)
‚õ≥Ô∏è Current behavior (updates)

üöÄ New behavior


üí£ Is this a breaking change (Yes/No):
No

üìù Additional Information

Summary by CodeRabbit


New Features

Footer now includes "All rights reserved." after the company name.



Refactor

Modified test cases in User component for more accurate assertions.



Chores

Updated various layout components to include new ScriptProviders. Removed ScriptProviders from the root layout component.
Expanded useUser function to accept a name property.

Commits:
- chore(docs): update footer text (#3350)\n- fix(doc): migrated ScriptProvider component from the root level to each decendant folder\n- fix(user): avatar icon not shown in user component\n- Merge branch 'nextui-org:canary' into fix/avatar-icon-not-shown-in-user\n

Labels:


Comments:
- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: 0fc9f53e54bbc6dbe58f0390a07e4e47d31d0e4a

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/abhinandan-verma/nextui/new/fix/avatar-icon-not-shown-in-user?filename=.changeset/lazy-adults-join.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Fuser%22%3A%20patch%0A---%0A%0AFix(user)%3A%20avatar%20icon%20not%20shown%20in%20user%2C%20when%20passed%0A)

\n- vercel: [vc]: #1DVL71NI1PWgEaqp3x60UonfANA6drb0erBpOd2Psng=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvRmJ0TFdYUkdRZEhtQTNack1QajZTQ1BqdnFLUyIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWFiaGluYW5kYW4tdmVybWEtN2NlNTI0LW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWFiaGluYW5kYW4tdmVybWEtN2NlNTI0LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/FbtLWXRGQdHmA3ZrMPj6SCPjvqKS)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-abhinandan-verma-7ce524-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-abhinandan-verma-7ce524-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 30, 2024 6:01am |

\n- vercel: @abhinandan-verma is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%222280c2a31c69611465820b1181d2e9a1df2c8d9c%22%7D%2C%22id%22%3A%22QmaJJ5BtuQS6oNKQuDv9UjS6vLFT1a17AyL7XuxzVQGYtz%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A3370%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The changes focus on integrating the `ScriptProviders` component into specific layouts, enhancing the `Footer` with an additional text, and refining the `User` component test and `useUser` function. These modifications improve component functionality and fix a bug related to avatar handling in the `User` component.

## Changes

| Files                                   | Change Summaries                                                                                                                |
|-----------------------------------------|---------------------------------------------------------------------------------------------------------------------------------|
| `apps/docs/app/blog/layout.tsx`<br>`apps/docs/app/docs/layout.tsx`<br>`apps/docs/app/figma/page.tsx` | Added import and usage of `ScriptProviders` component.                                                                             |
| `apps/docs/app/layout.tsx`               | Removed import and usage of `ScriptProviders` component.                                                                         |
| `apps/docs/components/footer.tsx`        | Added ‚ÄúAll rights reserved.‚Äù text to the footer.                                                                                 |
| `packages/components/user/__tests__/user.test.tsx` | Changed test case to use `getByText` instead of querying container directly for finding the name element.                                            |
| `packages/components/user/src/use-user.ts` | Added `name` property to `avatarProps` in the `useUser` function, allowing it to accept a string or undefined value for the name. |

## Assessment against linked issues

| Objective (Issue #3369) | Addressed | Explanation |
|-------------------------|-----------|-------------|
| Correct avatar icon display logic by allowing `name` to be passed through `avatarProps` | ‚úÖ         |             |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

apps/docs/app/blog/layout.tsx, apps/docs/app/docs/layout.tsx, apps/docs/app/figma/page.tsx: ## Short Summary

The changes introduce the import of `ScriptProviders` from `@/components/scripts/script-providers` and include `<ScriptProviders />` within the respective components.

## Alterations to the declarations of exported or public entities
- Import of `ScriptProviders` from `@/components/scripts/script-providers` added in `apps/docs/app/blog/layout.tsx`, `apps/docs/app/docs/layout.tsx`, and `apps/docs/app/figma/page.tsx`

---

apps/docs/app/layout.tsx: ## Short Summary
The change involves removing the import and usage of `ScriptProviders` component, affecting the structure of the layout in the `RootLayout` function.

## Alterations to the declarations of exported or public entities
- Removed: `import {ScriptProviders} from "@/components/scripts/script-providers";`
- Removed: `<ScriptProviders />`

---

apps/docs/components/footer.tsx: ## Short Summary

The change involves adding the phrase "All rights reserved." after the company name in the footer text.

## Alterations to the declarations of exported or public entities

- `export const Footer = () => {` in `apps/docs/components/footer.tsx`
- `p className="text-sm text-default-400">¬© {getCurrentYear()} NextUI Inc. All rights reserved.` in `apps/docs/components/footer.tsx`

---

packages/components/user/__tests__/user.test.tsx: ## Short Summary

The change in functionality involves modifying the test case for the `User` component to use `getByText` instead of querying the container directly to find the name element. The assertion is also changed to check if the name element is in the document.

## Alterations to the declarations of exported or public entities

- `const {container} = render(<User name="Test" />);` in `packages/components/user/__tests__/user.test.tsx` ‚Üí `const {getByText} = render(<User name="Test" />);`
- `const name = container.querySelector("span");` in `packages/components/user/__tests__/user.test.tsx` ‚Üí `const name = getByText("Test");`
- `expect(name).toHaveTextContent("Test");` in `packages/components/user/__tests__/user.test.tsx` ‚Üí `expect(name).toBeInTheDocument();`

---

packages/components/user/src/use-user.ts: ## Short Summary

The change in functionality involves adding a `name` property to `avatarProps` in the `useUser` function, allowing it to accept a string or undefined value for the name.

## Alterations to the declarations of exported or public entities

- `avatarProps?: Partial<AvatarProps>` in function `useUser` in `packages/components/user/src/use-user.ts` ‚Üí `avatarProps?: Partial<AvatarProps> & {name?: string | undefined}`

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

### PR Summary

**Title:** Fix(user): avatar icon not shown in user, when passed  
**User:** abhinandan-verma  
**Number:** 3370  

**Description:**  
This pull request addresses issue #3369. The changes include adding the `name` prop in `avatarProps` and ensuring that the `name` of `avatarProps` is the same as the `name` of the `User` component. This adjustment ensures that the avatar icon is displayed correctly when passed. The PR includes before and after screenshots demonstrating the resolved issue.

**Current Behavior:**  
The avatar icon is not shown in the User component when passed through `avatarProps`.

**New Behavior:**  
The avatar icon is now correctly displayed in the User component when passed through `avatarProps`.

**Breaking Change:**  
No.

### Objectives from Linked Issues

**Linked Issue:** #3369  

**Title:** [BUG] - avatar icon not shown in User component  

**Description:**  
In NextUI version 2.4.2, there is a bug in the User component where passing an `icon` to `avatarProps` does not display the icon. Instead, the `name` defined in the User component is passed to the Avatar component, causing the initial to be shown instead of the icon. The expected behavior is that if `name` is not passed to `avatarProps`, the initial should not be shown, and the icon should be displayed correctly.

**Steps to Reproduce:**  
1. Pass `avatarProps` with an `icon` to the User component.
2. Define a `name` in the User component.
3. Observe that the initial is shown instead of the icon.

**Expected Behavior:**  
If `name` is not passed to `avatarProps`, the initial should not be shown, and the icon should be displayed correctly.

**Operating System:**  
macOS

**Browser:**  
Chrome

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated Summary of Generated Summaries

The recent code changes involve updates to various components and tests across several files. The primary modifications include:

1. **Introduction and Removal of `ScriptProviders`**:
   - Added `ScriptProviders` import and component usage in `apps/docs/app/blog/layout.tsx`, `apps/docs/app/docs/layout.tsx`, and `apps/docs/app/figma/page.tsx`.
   - Removed `ScriptProviders` import and component usage from `apps/docs/app/layout.tsx`.

2. **Footer Component Update**:
   - Updated the `Footer` component in `apps/docs/components/footer.tsx` to include the phrase "All rights reserved." after the company name in the footer text.

3. **User Component Test Modification**:
   - Updated the test for the `User` component in `packages/components/user/__tests__/user.test.tsx` to use `getByText` instead of querying the container directly, and changed the assertion to check if the name element is in the document.

4. **UseUser Hook Enhancement**:
   - Enhanced the `useUser` function in `packages/components/user/src/use-user.ts` by adding a `name` property to `avatarProps`, allowing it to accept a string or undefined value.

### Alterations to the Declarations of Exported or Public Entities

#### `apps/docs/app/blog/layout.tsx`
**Before:**
```typescript
// No import or usage of `ScriptProviders`
```
**After:**
```typescript
import { ScriptProviders } from "@/components/scripts/script-providers";
// <ScriptProviders /> included within the component
```

#### `apps/docs/app/docs/layout.tsx`
**Before:**
```typescript
// No import or usage of `ScriptProviders`
```
**After:**
```typescript
import { ScriptProviders } from "@/components/scripts/script-providers";
// <ScriptProviders /> included within the component
```

#### `apps/docs/app/figma/page.tsx`
**Before:**
```typescript
// No import or usage of `ScriptProviders`
```
**After:**
```typescript
import { ScriptProviders } from "@/components/scripts/script-providers";
// <ScriptProviders /> included within the component
```

#### `apps/docs/app/layout.tsx`
**Before:**
```typescript
import { ScriptProviders } from "@/components/scripts/script-providers";
// <ScriptProviders /> used within the RootLayout function
```
**After:**
```typescript
// Removed import and usage of `ScriptProviders`
```

#### `apps/docs/components/footer.tsx`
**Before:**
```typescript
export const Footer = () => {
  // Footer component code without "All rights reserved."
  <p className="text-sm text-default-400">¬© {getCurrentYear()} NextUI Inc.</p>
}
```
**After:**
```typescript
export const Footer = () => {
  // Footer component code with "All rights reserved."
  <p className="text-sm text-default-400">¬© {getCurrentYear()} NextUI Inc. All rights reserved.</p>
}
```

#### `packages/components/user/__tests__/user.test.tsx`
**Before:**
```typescript
const {container} = render(<User name="Test" />);
const name = container.querySelector("span");
expect(name).toHaveTextContent("Test");
```
**After:**
```typescript
const {getByText} = render(<User name="Test" />);
const name = getByText("Test");
expect(name).toBeInTheDocument();
```

#### `packages/components/user/src/use-user.ts`
**Before:**
```typescript
function useUser(avatarProps?: Partial<AvatarProps>) {
  // Function implementation
}
```
**After:**
```typescript
function useUser(avatarProps?: Partial<AvatarProps> & {name?: string | undefined}) {
  // Function implementation
}
```

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 2280c2a31c69611465820b1181d2e9a1df2c8d9c -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

> [!TIP]
> <details>
> <summary>Early access features: enabled</summary>
> 
> We are currently testing the following features in early access:
> 
> - **OpenAI `gpt-4o` model for code reviews and chat**: OpenAI claims that this model is better at understanding and generating code than the previous models. We seek your feedback over the next few weeks before making it generally available.
> 
> Note:
> - You can enable or disable early access features from the CodeRabbit UI or by updating the CodeRabbit configuration file.
> - Please join our [Discord Community](https://discord.com/invite/GsXnASn26c) to provide feedback and report issues.
> - OSS projects are always opted into early access features.
> 
> </details>

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- apps/docs/components/footer.tsx (modified, 4 changes)\n  Patch: @@ -14,7 +14,9 @@ export const Footer = () => {
   return (
     <footer className="container mx-auto max-w-7xl pb-12 px-12">
       <div className="flex flex-col justify-center items-center gap-1">
-        <p className="text-sm text-default-400">¬© {getCurrentYear()} NextUI Inc.</p>
+        <p className="text-sm text-default-400">
+          ¬© {getCurrentYear()} NextUI Inc. All rights reserved.
+        </p>
       </div>
     </footer>
   );\n- packages/components/user/__tests__/user.test.tsx (modified, 6 changes)\n  Patch: @@ -19,10 +19,10 @@ describe("User", () => {
   });
 
   it("should have the passed name", () => {
-    const {container} = render(<User name="Test" />);
-    const name = container.querySelector("span");
+    const {getByText} = render(<User name="Test" />);
+    const name = getByText("Test");
 
-    expect(name).toHaveTextContent("Test");
+    expect(name).toBeInTheDocument();
   });
 
   it("should have the passed description", () => {\n- packages/components/user/src/use-user.ts (modified, 3 changes)\n  Patch: @@ -31,7 +31,7 @@ interface Props {
    * The user avatar props
    * @see https://nextui.org/docs/components/avatar
    */
-  avatarProps?: Partial<AvatarProps>;
+  avatarProps?: Partial<AvatarProps> & {name?: string | undefined};
   /**
    * Classname or List of classes to change the classNames of the avatar.
    * if `className` is passed, it will be added to the base slot.
@@ -66,7 +66,6 @@ export function useUser(props: UseUserProps) {
 
   const avatarProps = {
     isFocusable: false,
-    name: typeof name === "string" ? name : undefined,
     ...userAvatarProps,
   };
 \n
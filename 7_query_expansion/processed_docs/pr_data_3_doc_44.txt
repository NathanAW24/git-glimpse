Pull Request Number: 3987
Title: Fix/avatar flashing
Base Branch: canary
Head Branch: fix/avatar-flashing
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/3987
State: MERGED
Created At: 2024-11-04T20:55:34Z
Merged At: 2024-11-04T20:57:28Z
Participants: jrgarciadev, rkkautsar

Description:
Original PR: #3444
Closes #3437  
üìù Description
As mentioned in #3437, avatars may flicker even if its already cached. The fix was to check the image loading status immediately after creating the image to see if it's instantly loaded (when the image is cached), and use it to initialize the state. This will affect Avatar, AvatarGroup, and Image components.
Also added test for use-image too since it doesn't exist before.



Before
After









‚õ≥Ô∏è Current behavior (updates)
Image flickers due to use-image initializes with pending and only updated the status in useLayoutEffect.
üöÄ New behavior
Initialize image loading status with loaded if possible.
üí£ Is this a breaking change (Yes/No):  No
üìù Additional Information

Commits:
- fix(use-image): cached image flashing\n- chore: merged with canary\n- chore: merged with canary\n

Labels:


Comments:
- vercel: [vc]: #WgSIjaVNZFT0lkzDLOR9K4Gbc6TmO8aNf/dHAlmCwTo=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9HUmVlcWRzRlhWTjlZekcySzRkcHlzQ3BzZmFrIiwicHJldmlld1VybCI6IiIsIm5leHRDb21taXRTdGF0dXMiOiJGQUlMRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoiIn19LHsibmFtZSI6Im5leHR1aS1zdG9yeWJvb2stdjIiLCJyb290RGlyZWN0b3J5IjoicGFja2FnZXMvc3Rvcnlib29rIiwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi81Rnh0dlJCOEY1eWpIYUhBY1RwZWhackxrTFFzIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZpeC1hdmF0YXItZmxhc2hpbmctbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZpeC1hdmF0YXItZmxhc2hpbmctbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚ùå Failed ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/GReeqdsFXVN9YzG2K4dpysCpsfak)) |  |  | Nov 4, 2024 9:13pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/5FxtvRB8F5yjHaHAcTpehZrLkLQs)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-avatar-flashing-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-avatar-flashing-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 4, 2024 9:13pm |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: rate limited by coderabbit.ai -->

> [!WARNING]
> ## Rate limit exceeded
> 
> @jrgarciadev has exceeded the limit for the number of commits or files that can be reviewed per hour. Please wait **11 minutes and 44 seconds** before requesting another review.
> 
> <details>
> <summary>‚åõ How to resolve this issue?</summary>
> 
> After the wait time has elapsed, a review can be triggered using the `@coderabbitai review` command as a PR comment. Alternatively, push new commits to this PR.
> 
> We recommend that you space out your commits to avoid hitting the rate limit.
> 
> </details>
> 
> 
> <details>
> <summary>üö¶ How do rate limits work?</summary>
> 
> CodeRabbit enforces hourly rate limits for each developer per organization.
> 
> Our paid plans have higher rate limits than the trial, open-source and free plans. In all cases, we re-allow further reviews after a brief timeout.
> 
> Please see our [FAQ](https://coderabbit.ai/docs/faq) for further information.
> 
> </details>
> 
> <details>
> <summary>üì• Commits</summary>
> 
> Reviewing files that changed from the base of the PR and between ad7e2615d3cbc8044a8acc3a6adb35a653bdfbeb and 6d616dd584896f971e061a70459030eb77ab7093.
> 
> </details>

<!-- end of auto-generated comment: rate limited by coderabbit.ai -->

<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 6d616dd584896f971e061a70459030eb77ab7093

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 6 packages</summary>

  | Name                   | Type  |
| ---------------------- | ----- |
| @nextui-org/use-image  | Patch |
| @nextui-org/test-utils | Patch |
| @nextui-org/avatar     | Patch |
| @nextui-org/image      | Patch |
| @nextui-org/user       | Patch |
| @nextui-org/react      | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/avatar-flashing?filename=.changeset/neat-crabs-wait.md&value=---%0A%22%40nextui-org%2Fuse-image%22%3A%20patch%0A%22%40nextui-org%2Ftest-utils%22%3A%20patch%0A---%0A%0AFix%2Favatar%20flashing%0A)

\n

Files Changed:
- .changeset/pink-beans-sit.md (added, 6 changes)\n  Patch: @@ -0,0 +1,6 @@
+---
+"@nextui-org/use-image": patch
+"@nextui-org/test-utils": patch
+---
+
+fix cached image flashing due to use-image always returning pending initially. The fix was to check if the image is loaded instantly through HTMLImageElement.complete attribute and use that to initialize the state.\n- packages/hooks/use-image/__tests__/use-image.test.tsx (added, 44 changes)\n  Patch: @@ -0,0 +1,44 @@
+import {renderHook} from "@testing-library/react-hooks";
+import {mocks} from "@nextui-org/test-utils";
+
+import {useImage} from "../src";
+
+describe("use-image hook", () => {
+  let mockImage: {restore: any; simulate: (value: "loaded" | "error") => void};
+
+  beforeEach(() => {
+    mockImage = mocks.image();
+  });
+  afterEach(() => {
+    mockImage.restore();
+  });
+
+  it("can handle missing src", () => {
+    const rendered = renderHook(() => useImage({}));
+
+    expect(rendered.result.current).toEqual("pending");
+  });
+
+  it("can handle loading image", async () => {
+    const rendered = renderHook(() => useImage({src: "/test.png"}));
+
+    expect(rendered.result.current).toEqual("loading");
+    mockImage.simulate("loaded");
+    await rendered.waitForValueToChange(() => rendered.result.current === "loaded");
+  });
+
+  it("can handle error image", async () => {
+    mockImage.simulate("error");
+    const rendered = renderHook(() => useImage({src: "/test.png"}));
+
+    expect(rendered.result.current).toEqual("loading");
+    await rendered.waitForValueToChange(() => rendered.result.current === "failed");
+  });
+
+  it("can handle cached image", async () => {
+    mockImage.simulate("loaded");
+    const rendered = renderHook(() => useImage({src: "/test.png"}));
+
+    expect(rendered.result.current).toEqual("loaded");
+  });
+});\n- packages/hooks/use-image/package.json (modified, 5 changes)\n  Patch: @@ -41,7 +41,8 @@
   },
   "devDependencies": {
     "clean-package": "2.2.0",
-    "react": "^18.0.0"
+    "react": "^18.0.0",
+    "@nextui-org/test-utils": "workspace:*"
   },
   "clean-package": "../../../clean-package.config.json",
   "tsup": {
@@ -52,4 +53,4 @@
       "esm"
     ]
   }
-}
\ No newline at end of file
+}\n- packages/hooks/use-image/src/index.ts (modified, 82 changes)\n  Patch: @@ -1,9 +1,9 @@
 /**
  * Part of this code is taken from @chakra-ui/react package ‚ù§Ô∏è
  */
-import type {ImgHTMLAttributes, SyntheticEvent} from "react";
+import type {ImgHTMLAttributes, MutableRefObject, SyntheticEvent} from "react";
 
-import {useCallback, useEffect, useRef, useState} from "react";
+import {useEffect, useRef, useState} from "react";
 import {useSafeLayoutEffect} from "@nextui-org/use-safe-layout-effect";
 
 type NativeImageProps = ImgHTMLAttributes<HTMLImageElement>;
@@ -66,40 +66,37 @@ type ImageEvent = SyntheticEvent<HTMLImageElement, Event>;
 export function useImage(props: UseImageProps = {}) {
   const {loading, src, srcSet, onLoad, onError, crossOrigin, sizes, ignoreFallback} = props;
 
-  const [status, setStatus] = useState<Status>("pending");
-
-  useEffect(() => {
-    setStatus(src ? "loading" : "pending");
-  }, [src]);
-
   const imageRef = useRef<HTMLImageElement | null>();
+  const firstMount = useRef<boolean>(true);
+  const [status, setStatus] = useState<Status>(() => setImageAndGetInitialStatus(props, imageRef));
 
-  const load = useCallback(() => {
-    if (!src) return;
+  useSafeLayoutEffect(() => {
+    if (firstMount.current) {
+      firstMount.current = false;
 
-    flush();
+      return;
+    }
 
-    const img = new Image();
+    setStatus(setImageAndGetInitialStatus(props, imageRef));
 
-    img.src = src;
-    if (crossOrigin) img.crossOrigin = crossOrigin;
-    if (srcSet) img.srcset = srcSet;
-    if (sizes) img.sizes = sizes;
-    if (loading) img.loading = loading;
+    return () => {
+      flush();
+    };
+  }, [src, crossOrigin, srcSet, sizes, loading]);
 
-    img.onload = (event) => {
+  useEffect(() => {
+    if (!imageRef.current) return;
+    imageRef.current.onload = (event) => {
       flush();
       setStatus("loaded");
       onLoad?.(event as unknown as ImageEvent);
     };
-    img.onerror = (error) => {
+    imageRef.current.onerror = (error) => {
       flush();
       setStatus("failed");
       onError?.(error as any);
     };
-
-    imageRef.current = img;
-  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);
+  }, [imageRef.current]);
 
   const flush = () => {
     if (imageRef.current) {
@@ -109,29 +106,38 @@ export function useImage(props: UseImageProps = {}) {
     }
   };
 
-  useSafeLayoutEffect(() => {
-    /**
-     * If user opts out of the fallback/placeholder
-     * logic, let's bail out.
-     */
-    if (ignoreFallback) return undefined;
-
-    if (status === "loading") {
-      load();
-    }
-
-    return () => {
-      flush();
-    };
-  }, [status, load, ignoreFallback]);
-
   /**
    * If user opts out of the fallback/placeholder
    * logic, let's just return 'loaded'
    */
   return ignoreFallback ? "loaded" : status;
 }
 
+function setImageAndGetInitialStatus(
+  props: UseImageProps,
+  imageRef: MutableRefObject<HTMLImageElement | null | undefined>,
+): Status {
+  const {loading, src, srcSet, crossOrigin, sizes, ignoreFallback} = props;
+
+  if (!src) return "pending";
+  if (ignoreFallback) return "loaded";
+
+  const img = new Image();
+
+  img.src = src;
+  if (crossOrigin) img.crossOrigin = crossOrigin;
+  if (srcSet) img.srcset = srcSet;
+  if (sizes) img.sizes = sizes;
+  if (loading) img.loading = loading;
+
+  imageRef.current = img;
+  if (img.complete && img.naturalWidth) {
+    return "loaded";
+  }
+
+  return "loading";
+}
+
 export const shouldShowFallbackImage = (status: Status, fallbackStrategy: FallbackStrategy) =>
   (status !== "loaded" && fallbackStrategy === "beforeLoadOrError") ||
   (status === "failed" && fallbackStrategy === "onError");\n- packages/utilities/test-utils/src/mocks/image.ts (modified, 4 changes)\n  Patch: @@ -14,6 +14,10 @@ export function mockImage() {
     onerror: VoidFunction = () => {};
     src = "";
     alt = "";
+    naturalWidth = 100;
+    get complete() {
+      return status === "loaded";
+    }
     hasAttribute(name: string) {
       return name in this;
     }\n- pnpm-lock.yaml (modified, 11078 changes)\n  Patch: No patch available\n
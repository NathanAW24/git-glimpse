Pull Request Number: 4108
Title: refactor(docs): alert dx
Base Branch: refactor/overall-dx
Head Branch: refactor/alert-dx
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/4108
State: MERGED
Created At: 2024-11-18T03:02:03Z
Merged At: 2024-11-22T21:06:57Z
Participants: wingkwong, jrgarciadev

Description:
Closes # 
üìù Description

‚õ≥Ô∏è Current behavior (updates)

üöÄ New behavior

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Commits:
- refactor(docs): alert dx\n- refactor(docs): alert dx\n

Labels:


Comments:
- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: 5a109880a2c6eea81a32566dfb8debb13032adbf

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/nextui-org/nextui/new/refactor/alert-dx?filename=.changeset/tricky-rabbits-own.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A---%0A%0Arefactor(docs)%3A%20alert%20dx%0A)

\n- vercel: [vc]: #ILbCGB+10vKSqspWtjvxIklfLYwAP/mLlkAGAFftA/8=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LXJlZmFjdG9yLWFsZXJ0LWR4LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9LCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi81RGhhNkFXS0ZCd0xQcUh1ZEVwWHlzVHQ3S1RKIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1yZWZhY3Rvci1hbGVydC1keC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQifSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1yZWZhY3Rvci1hbGVydC1keC1uZXh0dWktb3JnLnZlcmNlbC5hcHAifSwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi8zZ0tGaVNTZUh2ZVJVVlRCU25QZnZvejJFM3ZhIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LXJlZmFjdG9yLWFsZXJ0LWR4LW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCJ9XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/5Dha6AWKFBwLPqHudEpXysTt7KTJ)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-refactor-alert-dx-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-refactor-alert-dx-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 18, 2024 3:11am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/3gKFiSSeHveRUVTBSnPfvoz2E3va)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-refactor-alert-dx-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-refactor-alert-dx-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 18, 2024 3:11am |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: skip review by coderabbit.ai -->

> [!IMPORTANT]
> ## Review skipped
> 
> Auto reviews are disabled on base/target branches other than the default branch.
> 
> <details>
> <summary>üóÇÔ∏è Base branches to auto review (5)</summary>
> 
> * main
> * canary
> * fix/.*
> * chore/.*
> * feat/.*
> 
> </details>
> 
> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.
> 
> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.

<!-- end of auto-generated comment: skip review by coderabbit.ai -->

<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- apps/docs/content/components/alert/colors.raw.jsx (added, 15 changes)\n  Patch: @@ -0,0 +1,15 @@
+import {Alert} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex items-center justify-center w-full">
+      <div className="flex flex-col w-full">
+        {["default", "primary", "secondary", "success", "warning", "danger"].map((color) => (
+          <div key={color} className="w-full flex items-center my-3">
+            <Alert color={color} title={`This is a ${color} alert`} />
+          </div>
+        ))}
+      </div>
+    </div>
+  );
+}\n- apps/docs/content/components/alert/colors.ts (modified, 19 changes)\n  Patch: @@ -1,21 +1,4 @@
-const App = `import {Alert} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <div className="flex items-center justify-center w-full">
-      <div className="flex flex-col w-full">
-        {["default", "primary", "secondary", "success", "warning", "danger"].map((color) => (
-          <div key={color} className="w-full flex items-center my-3">
-            <Alert 
-              color={color} 
-              title={\`This is a \${color} alert\`}
-            />
-          </div>
-        ))}
-      </div>
-    </div>
-  );
-}`;
+import App from "./colors.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/alert/controlled.raw.jsx (added, 28 changes)\n  Patch: @@ -0,0 +1,28 @@
+import {Alert, Button} from "@nextui-org/react";
+
+export default function App() {
+  const [isVisible, setIsVisible] = React.useState(true);
+
+  const title = "Success Notification";
+  const description =
+    "Your action has been completed successfully. We'll notify you when updates are available.";
+
+  return (
+    <div className="flex flex-col gap-4">
+      {isVisible ? (
+        <Alert
+          color="success"
+          description={description}
+          isVisible={isVisible}
+          title={title}
+          variant="faded"
+          onClose={() => setIsVisible(false)}
+        />
+      ) : (
+        <Button variant="bordered" onPress={() => setIsVisible(true)}>
+          Show Alert
+        </Button>
+      )}
+    </div>
+  );
+}\n- apps/docs/content/components/alert/controlled.ts (modified, 31 changes)\n  Patch: @@ -1,33 +1,4 @@
-const App = `import {Alert, Button} from "@nextui-org/react";
-
-export default function App() {
-  const [isVisible, setIsVisible] = React.useState(true);
-
-  const title = "Success Notification";
-  const description = "Your action has been completed successfully. We'll notify you when updates are available.";
-
-  return (
-    <div className="flex flex-col gap-4">
-      {isVisible ? (
-        <Alert 
-          title={title}
-          description={description}
-          isVisible={isVisible} 
-          variant="faded"
-          color="success"
-          onClose={() => setIsVisible(false)}
-        />
-      ) : (
-        <Button 
-          variant="bordered" 
-          onPress={() => setIsVisible(true)}
-        >
-          Show Alert
-        </Button>
-      )}
-    </div>
-  );
-}`;
+import App from "./controlled.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/alert/custom-impl.raw.jsx (added, 124 changes)\n  Patch: @@ -0,0 +1,124 @@
+import React, {forwardRef, useMemo} from "react";
+import {useAlert} from "@nextui-org/react";
+
+export const InfoCircleIcon = (props) => {
+  return (
+    <svg
+      fill="none"
+      height="24"
+      viewBox="0 0 24 24"
+      width="24"
+      xmlns="http://www.w3.org/2000/svg"
+      {...props}
+    >
+      <path d="M12 22C17.51 22 22 17.51 22 12C22 6.49 17.51 2 12 2C6.49 2 2 6.49 2 12C2 17.51 6.49 22 12 22ZM12.75 16C12.75 16.41 12.41 16.75 12 16.75C11.59 16.75 11.25 16.41 11.25 16L11.25 11C11.25 10.59 11.59 10.25 12 10.25C12.41 10.25 12.75 10.59 12.75 11L12.75 16ZM11.08 7.62C11.13 7.49 11.2 7.39 11.29 7.29C11.39 7.2 11.5 7.13 11.62 7.08C11.74 7.03 11.87 7 12 7C12.13 7 12.26 7.03 12.38 7.08C12.5 7.13 12.61 7.2 12.71 7.29C12.8 7.39 12.87 7.49 12.92 7.62C12.97 7.74 13 7.87 13 8C13 8.13 12.97 8.26 12.92 8.38C12.87 8.5 12.8 8.61 12.71 8.71C12.61 8.8 12.5 8.87 12.38 8.92C12.14 9.02 11.86 9.02 11.62 8.92C11.5 8.87 11.39 8.8 11.29 8.71C11.2 8.61 11.13 8.5 11.08 8.38C11.03 8.26 11 8.13 11 8C11 7.87 11.03 7.74 11.08 7.62Z" />
+    </svg>
+  );
+};
+
+export const CloseIcon = (props) => {
+  return (
+    <svg
+      aria-hidden="true"
+      fill="none"
+      focusable="false"
+      height="1em"
+      role="presentation"
+      stroke="currentColor"
+      strokeLinecap="round"
+      strokeLinejoin="round"
+      strokeWidth={2}
+      viewBox="0 0 24 24"
+      width="1em"
+      {...props}
+    >
+      <path d="M18 6L6 18M6 6l12 12" />
+    </svg>
+  );
+};
+
+const styles = {
+  base: [
+    "bg-slate-100",
+    "border",
+    "shadow",
+    "hover:bg-slate-200",
+    "focus-within:!bg-slate-100",
+    "dark:bg-slate-900",
+    "dark:hover:bg-slate-800",
+    "dark:border-slate-800",
+    "dark:focus-within:!bg-slate-900",
+    "cursor-pointer",
+  ],
+  title: ["text-base", "text-slate-500", "font-bold"],
+  description: ["text-base", "text-slate-500"],
+};
+
+const MyAlert = forwardRef((props, ref) => {
+  const {
+    title,
+    description,
+    isClosable,
+    domRef,
+    handleClose,
+    getBaseProps,
+    getMainWrapperProps,
+    getDescriptionProps,
+    getTitleProps,
+    getCloseButtonProps,
+    color,
+    isVisible,
+    onClose,
+    getAlertIconProps,
+  } = useAlert({
+    ...props,
+    ref,
+    // this is just for the example, the props bellow should be passed by the parent component
+    title: "Email Sent!!",
+    description: "You will get a reply soon",
+    // custom styles
+    classNames: {
+      ...styles,
+    },
+  });
+
+  const mainWrapper = useMemo(() => {
+    return (
+      <div {...getMainWrapperProps()}>
+        {title && <div {...getTitleProps()}>{title}</div>}
+        <div {...getDescriptionProps()}>{description}</div>
+      </div>
+    );
+  }, [title, description, getMainWrapperProps, getTitleProps, getDescriptionProps]);
+
+  const baseWrapper = useMemo(() => {
+    return isVisible ? (
+      <div ref={domRef} {...getBaseProps()}>
+        <InfoCircleIcon {...getAlertIconProps()} />
+        {mainWrapper}
+        {(isClosable || onClose) && (
+          <button onClick={handleClose} {...getCloseButtonProps()}>
+            <CloseIcon />
+          </button>
+        )}
+      </div>
+    ) : null;
+  }, [
+    mainWrapper,
+    isClosable,
+    getCloseButtonProps,
+    isVisible,
+    domRef,
+    getBaseProps,
+    handleClose,
+    color,
+    onClose,
+    getAlertIconProps,
+  ]);
+
+  return <>{baseWrapper}</>;
+});
+
+MyAlert.displayName = "MyAlert";
+
+export default MyAlert;\n- apps/docs/content/components/alert/custom-impl.ts (modified, 135 changes)\n  Patch: @@ -1,140 +1,7 @@
-const InfoCircleIcon = `export const InfoCircleIcon = (props) => (
-  <svg
-    fill="none"
-    height="24"
-    viewBox="0 0 24 24"
-    width="24"
-    xmlns="http://www.w3.org/2000/svg"
-    {...props}
-  >
-    <path
-      d="M12 22C17.51 22 22 17.51 22 12C22 6.49 17.51 2 12 2C6.49 2 2 6.49 2 12C2 17.51 6.49 22 12 22ZM12.75 16C12.75 16.41 12.41 16.75 12 16.75C11.59 16.75 11.25 16.41 11.25 16L11.25 11C11.25 10.59 11.59 10.25 12 10.25C12.41 10.25 12.75 10.59 12.75 11L12.75 16ZM11.08 7.62C11.13 7.49 11.2 7.39 11.29 7.29C11.39 7.2 11.5 7.13 11.62 7.08C11.74 7.03 11.87 7 12 7C12.13 7 12.26 7.03 12.38 7.08C12.5 7.13 12.61 7.2 12.71 7.29C12.8 7.39 12.87 7.49 12.92 7.62C12.97 7.74 13 7.87 13 8C13 8.13 12.97 8.26 12.92 8.38C12.87 8.5 12.8 8.61 12.71 8.71C12.61 8.8 12.5 8.87 12.38 8.92C12.14 9.02 11.86 9.02 11.62 8.92C11.5 8.87 11.39 8.8 11.29 8.71C11.2 8.61 11.13 8.5 11.08 8.38C11.03 8.26 11 8.13 11 8C11 7.87 11.03 7.74 11.08 7.62Z"
-    />
-  </svg>
-);`;
-
-const CloseIcon = `export const CloseIcon = (props) => (
-  <svg
-    aria-hidden="true"
-    fill="none"
-    focusable="false"
-    height="1em"
-    role="presentation"
-    stroke="currentColor"
-    strokeLinecap="round"
-    strokeLinejoin="round"
-    strokeWidth={2}
-    viewBox="0 0 24 24"
-    width="1em"
-    {...props}
-  >
-    <path d="M18 6L6 18M6 6l12 12" />
-  </svg>
-);`;
-
-const App = `import React, {forwardRef, useMemo} from "react";
-import {useAlert} from "@nextui-org/react";
-import {InfoCircleIcon} from "./InfoCircleIcon";
-import {CloseIcon} from "./CloseIcon"
-
-const styles = {
-  base: [
-    "bg-slate-100",
-    "border",
-    "shadow",
-    "hover:bg-slate-200",
-    "focus-within:!bg-slate-100",
-    "dark:bg-slate-900",
-    "dark:hover:bg-slate-800",
-    "dark:border-slate-800",
-    "dark:focus-within:!bg-slate-900",
-    "cursor-pointer"
-  ],
-  title: [
-    "text-base",
-    "text-slate-500",
-    "font-bold"
-  ],
-  description: [
-    "text-base",
-    "text-slate-500",
-  ],
-}
-
-const MyAlert = forwardRef((props, ref) => {
-  const {
-    title,
-    description,
-    isClosable,
-    domRef,
-    handleClose,
-    getBaseProps,
-    getMainWrapperProps,
-    getDescriptionProps,
-    getTitleProps,
-    getCloseButtonProps,
-    color,
-    isVisible,
-    onClose,
-    getCloseIconProps,
-    getAlertIconProps,
-  } = useAlert({
-      ...props,
-      ref,
-      // this is just for the example, the props bellow should be passed by the parent component
-      title: "Email Sent!!",
-      description: "You will get a reply soon",
-      // custom styles
-      classNames: {
-        ...styles,
-      },
-    });
-
-  const mainWrapper = useMemo(() => {
-    return (
-      <div {...getMainWrapperProps()}>
-        {title && <div {...getTitleProps()}>{title}</div>}
-        <div {...getDescriptionProps()}>{description}</div>
-      </div>
-    );
-  }, [title, description, getMainWrapperProps, getTitleProps, getDescriptionProps]);
-
-  const baseWrapper = useMemo(() => {
-    return isVisible ? (
-      <div ref={domRef} {...getBaseProps()}>
-        <InfoCircleIcon {...getAlertIconProps()} />
-        {mainWrapper}
-        {(isClosable || onClose) && (
-          <button onClick={handleClose} {...getCloseButtonProps()}>
-            <CloseIcon />
-          </button>
-        )}
-      </div>
-    ) : null;
-  }, [
-    mainWrapper,
-    isClosable,
-    getCloseButtonProps,
-    isVisible,
-    domRef,
-    getBaseProps,
-    handleClose,
-    color,
-    onClose,
-    getAlertIconProps,
-  ]);
-
-  return <>{baseWrapper}</>;
-});
-
-MyAlert.displayName = "MyAlert";
-
-export default MyAlert;`;
+import App from "./custom-impl.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,
-  "/InfoCircleIcon": InfoCircleIcon,
-  "/CloseIcon": CloseIcon,
 };
 
 export default {\n- apps/docs/content/components/alert/custom-styles.raw.jsx (added, 91 changes)\n  Patch: @@ -0,0 +1,91 @@
+import {Alert, Button} from "@nextui-org/react";
+
+const CustomAlert = React.forwardRef(
+  (
+    {title, children, variant = "faded", color = "secondary", className, classNames = {}, ...props},
+    ref,
+  ) => {
+    const colorClass = React.useMemo(() => {
+      switch (color) {
+        case "default":
+          return "before:bg-default-300";
+        case "primary":
+          return "before:bg-primary";
+        case "secondary":
+          return "before:bg-secondary";
+        case "success":
+          return "before:bg-success";
+        case "warning":
+          return "before:bg-warning";
+        case "danger":
+          return "before:bg-danger";
+        default:
+          return "before:bg-default-200";
+      }
+    }, []);
+
+    return (
+      <Alert
+        ref={ref}
+        classNames={{
+          ...classNames,
+          base: cn(
+            [
+              "bg-default-50 dark:bg-background shadow-sm",
+              "border-1 border-default-200 dark:border-default-100",
+              "relative before:content-[''] before:absolute before:z-10",
+              "before:left-0 before:top-[-1px] before:bottom-[-1px] before:w-1",
+              "rounded-l-none border-l-0",
+              colorClass,
+            ],
+            classNames.base,
+            className,
+          ),
+          mainWrapper: cn("pt-1", classNames.mainWrapper),
+          iconWrapper: cn("dark:bg-transparent", classNames.iconWrapper),
+        }}
+        color={color}
+        title={title}
+        variant={variant}
+        {...props}
+      >
+        {children}
+      </Alert>
+    );
+  },
+);
+
+CustomAlert.displayName = "CustomAlert";
+
+export default function App() {
+  const colors = ["default", "primary", "secondary", "success", "warning", "danger"];
+
+  return (
+    <div className="flex flex-col w-full gap-y-6">
+      {colors.map((color) => (
+        <CustomAlert
+          key={color}
+          color={color}
+          title="The documents you requested are ready to be viewed"
+        >
+          <div className="flex items-center gap-1 mt-3">
+            <Button
+              className="bg-background text-default-700 font-medium border-1 shadow-small"
+              size="sm"
+              variant="bordered"
+            >
+              View documents
+            </Button>
+            <Button
+              className="text-default-500 font-medium underline underline-offset-4"
+              size="sm"
+              variant="light"
+            >
+              Maybe later
+            </Button>
+          </div>
+        </CustomAlert>
+      ))}
+    </div>
+  );
+}\n- apps/docs/content/components/alert/custom-styles.raw.tsx (added, 94 changes)\n  Patch: @@ -0,0 +1,94 @@
+import type {AlertProps} from "@nextui-org/react";
+
+import React from "react";
+import {Alert, Button, cn} from "@nextui-org/react";
+
+const CustomAlert = React.forwardRef<HTMLDivElement, AlertProps>(
+  (
+    {title, children, variant = "faded", color = "secondary", className, classNames, ...props},
+    ref,
+  ) => {
+    const colorClass = React.useMemo(() => {
+      switch (color) {
+        case "default":
+          return "before:bg-default-300";
+        case "primary":
+          return "before:bg-primary";
+        case "secondary":
+          return "before:bg-secondary";
+        case "success":
+          return "before:bg-success";
+        case "warning":
+          return "before:bg-warning";
+        case "danger":
+          return "before:bg-danger";
+        default:
+          return "before:bg-default-200";
+      }
+    }, []);
+
+    return (
+      <Alert
+        ref={ref}
+        classNames={{
+          ...classNames,
+          base: cn(
+            [
+              "bg-default-50 dark:bg-background shadow-sm",
+              "border-1 border-default-200 dark:border-default-100",
+              "relative before:content-[''] before:absolute before:z-10",
+              "before:left-0 before:top-[-1px] before:bottom-[-1px] before:w-1",
+              "rounded-l-none border-l-0",
+              colorClass,
+            ],
+            classNames?.base,
+            className,
+          ),
+          mainWrapper: cn("pt-1", classNames?.mainWrapper),
+          iconWrapper: cn("dark:bg-transparent", classNames?.iconWrapper),
+        }}
+        color={color}
+        title={title}
+        variant={variant}
+        {...props}
+      >
+        {children}
+      </Alert>
+    );
+  },
+);
+
+CustomAlert.displayName = "CustomAlert";
+
+export default function App() {
+  const colors = ["default", "primary", "secondary", "success", "warning", "danger"];
+
+  return (
+    <div className="flex flex-col w-full gap-y-6">
+      {colors.map((color) => (
+        <CustomAlert
+          key={color}
+          color={color}
+          title="The documents you requested are ready to be viewed"
+        >
+          <div className="flex items-center gap-1 mt-3">
+            <Button
+              className="bg-background text-default-700 font-medium border-1 shadow-small"
+              size="sm"
+              variant="bordered"
+            >
+              View documents
+            </Button>
+            <Button
+              className="text-default-500 font-medium underline underline-offset-4"
+              size="sm"
+              variant="light"
+            >
+              Maybe later
+            </Button>
+          </div>
+        </CustomAlert>
+      ))}
+    </div>
+  );
+}\n- apps/docs/content/components/alert/custom-styles.ts (modified, 189 changes)\n  Patch: @@ -1,192 +1,15 @@
-const AppTs = `import {Alert, Button} from "@nextui-org/react";
-
-const CustomAlert = React.forwardRef<HTMLDivElement, AlertProps>(
-  (
-    {title, children, variant = "faded", color = "secondary", className, classNames, ...props},
-    ref,
-  ) => {
-    const colorClass = React.useMemo(() => {
-      switch (color) {
-        case "default":
-          return "before:bg-default-300";
-        case "primary":
-          return "before:bg-primary";
-        case "secondary":
-          return "before:bg-secondary";
-        case "success":
-          return "before:bg-success";
-        case "warning":
-          return "before:bg-warning";
-        case "danger":
-          return "before:bg-danger";
-        default:
-          return "before:bg-default-200";
-      }
-    }, []);
-
-    return (
-      <Alert
-        ref={ref}
-        classNames={{
-          ...classNames,
-          base: cn(
-            [
-              "bg-default-50 dark:bg-background shadow-sm",
-              "border-1 border-default-200 dark:border-default-100",
-              "relative before:content-[''] before:absolute before:z-10",
-              "before:left-0 before:top-[-1px] before:bottom-[-1px] before:w-1",
-              "rounded-l-none border-l-0",
-              colorClass,
-            ],
-            classNames?.base,
-            className,
-          ),
-          mainWrapper: cn("pt-1", classNames?.mainWrapper),
-          iconWrapper: cn("dark:bg-transparent", classNames?.iconWrapper),
-        }}
-        color={color}
-        title={title}
-        variant={variant}
-        {...props}
-      >
-        {children}
-      </Alert>
-    );
-  },
-);
-
-CustomAlert.displayName = "CustomAlert";
-
-export default function App() {
-  const colors = ["default", "primary", "secondary", "success", "warning", "danger"];
-
-  return (
-    <div className="flex flex-col w-full gap-y-6">
-      {colors.map((color) => (
-        <CustomAlert
-          key={color}
-          color={color}
-          title="The documents you requested are ready to be viewed"
-        >
-          <div className="flex items-center gap-1 mt-3">
-            <Button
-              className="bg-background text-default-700 font-medium border-1 shadow-small"
-              size="sm"
-              variant="bordered"
-            >
-              View documents
-            </Button>
-            <Button
-              className="text-default-500 font-medium underline underline-offset-4"
-              size="sm"
-              variant="light"
-            >
-              Maybe later
-            </Button>
-          </div>
-        </CustomAlert>
-      ))}
-    </div>
-  );
-}`;
-
-const App = `import {Alert, Button} from "@nextui-org/react";
-
-const CustomAlert = React.forwardRef(
-  (
-    {title, children, variant = "faded", color = "secondary", className, classNames = {}, ...props},
-    ref,
-  ) => {
-    const colorClass = React.useMemo(() => {
-      switch (color) {
-        case "default":
-          return "before:bg-default-300";
-        case "primary":
-          return "before:bg-primary";
-        case "secondary":
-          return "before:bg-secondary";
-        case "success":
-          return "before:bg-success";
-        case "warning":
-          return "before:bg-warning";
-        case "danger":
-          return "before:bg-danger";
-        default:
-          return "before:bg-default-200";
-      }
-    }, []);
-
-    return (
-      <Alert
-        ref={ref}
-        classNames={{
-          ...classNames,
-          base: cn(
-            [
-              "bg-default-50 dark:bg-background shadow-sm",
-              "border-1 border-default-200 dark:border-default-100",
-              "relative before:content-[''] before:absolute before:z-10",
-              "before:left-0 before:top-[-1px] before:bottom-[-1px] before:w-1",
-              "rounded-l-none border-l-0",
-              colorClass,
-            ],
-            classNames.base,
-            className,
-          ),
-          mainWrapper: cn("pt-1", classNames.mainWrapper),
-          iconWrapper: cn("dark:bg-transparent", classNames.iconWrapper),
-        }}
-        color={color}
-        title={title}
-        variant={variant}
-        {...props}
-      >
-        {children}
-      </Alert>
-    );
-  },
-);
-
-CustomAlert.displayName = "CustomAlert";
-
-export default function App() {
-  const colors = ["default", "primary", "secondary", "success", "warning", "danger"];
-
-  return (
-    <div className="flex flex-col w-full gap-y-6">
-      {colors.map((color) => (
-        <CustomAlert
-          key={color}
-          color={color}
-          title="The documents you requested are ready to be viewed"
-        >
-          <div className="flex items-center gap-1 mt-3">
-            <Button
-              className="bg-background text-default-700 font-medium border-1 shadow-small"
-              size="sm"
-              variant="bordered"
-            >
-              View documents
-            </Button>
-            <Button
-              className="text-default-500 font-medium underline underline-offset-4"
-              size="sm"
-              variant="light"
-            >
-              Maybe later
-            </Button>
-          </div>
-        </CustomAlert>
-      ))}
-    </div>
-  );
-}`;
+import App from "./custom-styles.raw.jsx?raw";
+import AppTs from "./custom-styles.raw.tsx?raw";
 
 const react = {
   "/App.jsx": App,
+};
+
+const reactTs = {
   "/App.tsx": AppTs,
 };
 
 export default {
   ...react,
+  ...reactTs,
 };\n- apps/docs/content/components/alert/radius.raw.jsx (added, 15 changes)\n  Patch: @@ -0,0 +1,15 @@
+import {Alert} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex items-center justify-center w-full">
+      <div className="flex flex-col w-full">
+        {["none", "sm", "md", "lg", "full"].map((radius) => (
+          <div key={radius} className="w-full flex items-center my-3">
+            <Alert radius={radius} title={`This is a ${radius} radius alert`} />
+          </div>
+        ))}
+      </div>
+    </div>
+  );
+}\n- apps/docs/content/components/alert/radius.ts (modified, 19 changes)\n  Patch: @@ -1,21 +1,4 @@
-const App = `import {Alert} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <div className="flex items-center justify-center w-full">
-      <div className="flex flex-col w-full">
-        {["none", "sm", "md", "lg", "full"].map((radius) => (
-          <div key={radius} className="w-full flex items-center my-3">
-            <Alert 
-              radius={radius} 
-              title={\`This is a \${radius} radius alert\`}
-            />
-          </div>
-        ))}
-      </div>
-    </div>
-  );
-}`;
+import App from "./radius.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/alert/usage.raw.jsx (added, 12 changes)\n  Patch: @@ -0,0 +1,12 @@
+import {Alert} from "@nextui-org/react";
+
+export default function App() {
+  const title = "This is an alert";
+  const description = "Thanks for subscribing to our newsletter!";
+
+  return (
+    <div className="flex items-center justify-center w-full">
+      <Alert description={description} title={title} />
+    </div>
+  );
+}\n- apps/docs/content/components/alert/usage.ts (modified, 13 changes)\n  Patch: @@ -1,15 +1,4 @@
-const App = `import {Alert} from "@nextui-org/react";
-
-export default function App() {
-  const title = "This is an alert";
-  const description = "Thanks for subscribing to our newsletter!";
-  
-  return (
-    <div className="flex items-center justify-center w-full">
-      <Alert title={title} description={description} />
-    </div>
-  );
-}`;
+import App from "./usage.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/alert/variants.raw.jsx (added, 16 changes)\n  Patch: @@ -0,0 +1,16 @@
+import {Alert} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex flex-col gap-4 w-full">
+      {["solid", "bordered", "flat", "faded"].map((variant) => (
+        <Alert
+          key={variant}
+          color="secondary"
+          title={`This is a ${variant} variant alert`}
+          variant={variant}
+        />
+      ))}
+    </div>
+  );
+}\n- apps/docs/content/components/alert/variants.ts (modified, 12 changes)\n  Patch: @@ -1,14 +1,4 @@
-const App = `import {Alert} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <div className="flex flex-col gap-4 w-full">
-      {["solid", "bordered", "flat", "faded"].map((variant) => (
-        <Alert key={variant} variant={variant} color="secondary" title={\`This is a \${variant} variant alert\`}/>
-      ))}
-    </div>
-  );
-}`;
+import App from "./variants.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/alert/with-action.raw.jsx (added, 19 changes)\n  Patch: @@ -0,0 +1,19 @@
+import {Alert, Button} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex items-center justify-center w-full">
+      <Alert
+        color="warning"
+        description="Upgrade to a paid plan to continue"
+        endContent={
+          <Button color="warning" size="sm" variant="flat">
+            Upgrade
+          </Button>
+        }
+        title="You have no credits left"
+        variant="faded"
+      />
+    </div>
+  );
+}\n- apps/docs/content/components/alert/with-action.ts (modified, 22 changes)\n  Patch: @@ -1,24 +1,4 @@
-const App = `import {Alert, Button} from "@nextui-org/react";
-
-export default function App() {
-  const [isVisible, setIsVisible] = React.useState(true);
-
-  return (
-    <div className="flex items-center justify-center w-full">
-      <Alert
-        color="warning"
-        description="Upgrade to a paid plan to continue"
-        endContent={
-          <Button color="warning" size="sm" variant="flat">
-            Upgrade
-          </Button>
-        }
-        title="You have no credits left"
-        variant="faded"
-      />
-    </div>
-  );
-}`;
+import App from "./with-action.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/alert/with-icon.raw.jsx (added, 33 changes)\n  Patch: @@ -0,0 +1,33 @@
+import {Alert} from "@nextui-org/react";
+
+const UserIcon = ({fill = "currentColor", size, height, width, ...props}) => {
+  return (
+    <svg
+      data-name="Iconly/Curved/Profile"
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      width={size || width || 24}
+      xmlns="http://www.w3.org/2000/svg"
+      {...props}
+    >
+      <g
+        fill="none"
+        stroke={fill}
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeMiterlimit={10}
+        strokeWidth={1.5}
+      >
+        <path
+          d="M11.845 21.662C8.153 21.662 5 21.088 5 18.787s3.133-4.425 6.845-4.425c3.692 0 6.845 2.1 6.845 4.4s-3.134 2.9-6.845 2.9z"
+          data-name="Stroke 1"
+        />
+        <path d="M11.837 11.174a4.372 4.372 0 10-.031 0z" data-name="Stroke 3" />
+      </g>
+    </svg>
+  );
+};
+
+export default function App() {
+  return <Alert icon={<UserIcon />}>An alert with a custom icon</Alert>;
+}\n- apps/docs/content/components/alert/with-icon.ts (modified, 47 changes)\n  Patch: @@ -1,49 +1,4 @@
-const App = `import {Alert} from "@nextui-org/react";
-
-const UserIcon = ({
-  fill = 'currentColor',
-  filled,
-  size,
-  height,
-  width,
-  label,
-  ...props
-}) => {
-  return (
-    <svg
-      data-name="Iconly/Curved/Profile"
-      xmlns="http://www.w3.org/2000/svg"
-      viewBox="0 0 24 24"
-      width={size || width || 24}
-      height={size || height || 24}
-      {...props}
-    >
-      <g
-        fill="none"
-        stroke={fill}
-        strokeLinecap="round"
-        strokeLinejoin="round"
-        strokeMiterlimit={10}
-        strokeWidth={1.5}
-      >
-        <path
-          data-name="Stroke 1"
-          d="M11.845 21.662C8.153 21.662 5 21.088 5 18.787s3.133-4.425 6.845-4.425c3.692 0 6.845 2.1 6.845 4.4s-3.134 2.9-6.845 2.9z"
-        />
-        <path
-          data-name="Stroke 3"
-          d="M11.837 11.174a4.372 4.372 0 10-.031 0z"
-        />
-      </g>
-    </svg>
-  );
-};
-
-export default function App() {
-  return (
-    <Alert icon={<UserIcon />}>An alert with a custom icon</Alert>
-  );
-}`;
+import App from "./with-icon.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/alert/without-icon.raw.jsx (added, 12 changes)\n  Patch: @@ -0,0 +1,12 @@
+import {Alert} from "@nextui-org/react";
+
+export default function App() {
+  const title = "This is an alert";
+  const description = "Thanks for subscribing to our newsletter!";
+
+  return (
+    <div className="flex items-center justify-center w-full">
+      <Alert hideIcon color="success" description={description} title={title} variant="faded" />
+    </div>
+  );
+}\n- apps/docs/content/components/alert/without-icon.ts (modified, 19 changes)\n  Patch: @@ -1,21 +1,4 @@
-const App = `import {Alert} from "@nextui-org/react";
-
-export default function App() {
-  const title = "This is an alert";
-  const description = "Thanks for subscribing to our newsletter!";
-  
-  return (
-    <div className="flex items-center justify-center w-full">
-      <Alert 
-        title={title} 
-        description={description} 
-        hideIcon 
-        color="success" 
-        variant="faded" 
-      />
-    </div>
-  );
-}`;
+import App from "./without-icon.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n
Pull Request Number: 3759
Title: chore: rollback pr3467
Base Branch: canary
Head Branch: chore/rollback-pr3467
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/3759
State: MERGED
Created At: 2024-09-15T03:38:40Z
Merged At: 2024-09-15T07:59:49Z
Participants: wingkwong, winchesHe, jrgarciadev

Description:
Closes # 
üìù Description
rollback #3467
‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


New Features

Enhanced accessibility for components such as autocomplete, date-picker, dropdown, modal, popover, and select through the addition of ARIA utilities.
Introduced a new property shouldCloseOnInteractOutside to improve user interaction handling for popovers and modals.



Bug Fixes

Improved closing behavior for popovers and dropdowns when interacting outside of them.



Chores

Removed outdated dependencies and documentation related to the @nextui-org/use-aria-overlay package.

Commits:
- chore: rollback pr3467\n- chore: rollback pr3467\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 32dd4f588d7314413471724db3949f338cd840b6

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 17 packages</summary>

  | Name                               | Type  |
| ---------------------------------- | ----- |
| @nextui-org/autocomplete           | Patch |
| @nextui-org/date-picker            | Patch |
| @nextui-org/dropdown               | Patch |
| @nextui-org/modal                  | Patch |
| @nextui-org/popover                | Patch |
| @nextui-org/select                 | Patch |
| @nextui-org/use-aria-modal-overlay | Patch |
| @nextui-org/use-aria-multiselect   | Patch |
| @nextui-org/aria-utils             | Patch |
| @nextui-org/react                  | Patch |
| @nextui-org/accordion              | Patch |
| @nextui-org/listbox                | Patch |
| @nextui-org/menu                   | Patch |
| @nextui-org/tabs                   | Patch |
| @nextui-org/tooltip                | Patch |
| @nextui-org/slider                 | Patch |
| @nextui-org/snippet                | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/chore/rollback-pr3467?filename=.changeset/happy-knives-explain.md&value=---%0A%22%40nextui-org%2Fautocomplete%22%3A%20patch%0A%22%40nextui-org%2Fdate-picker%22%3A%20patch%0A%22%40nextui-org%2Fdropdown%22%3A%20patch%0A%22%40nextui-org%2Fmodal%22%3A%20patch%0A%22%40nextui-org%2Fpopover%22%3A%20patch%0A%22%40nextui-org%2Fselect%22%3A%20patch%0A%22%40nextui-org%2Fuse-aria-modal-overlay%22%3A%20patch%0A%22%40nextui-org%2Fuse-aria-multiselect%22%3A%20patch%0A%22%40nextui-org%2Faria-utils%22%3A%20patch%0A---%0A%0Achore%3A%20rollback%20pr3467%0A)

\n- vercel: [vc]: #zIh5V6bJeBg2uS4IJgPrCun/OXEwzFDCpqDIRCtahFg=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9FODZhelpqQUUzUFE4cXA2azF5Z3F4Q0xyR2ZTIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1jaG9yZS1yb2xsYmFjay1wcjM0NjctbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1kb2NzLXYyLWdpdC1jaG9yZS1yb2xsYmFjay1wcjM0NjctbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19LHsibmFtZSI6Im5leHR1aS1zdG9yeWJvb2stdjIiLCJyb290RGlyZWN0b3J5IjoicGFja2FnZXMvc3Rvcnlib29rIiwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi9DRG0yV3VGN1dnSmM5aXNkeHlqUWFvR2U2VExuIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWNob3JlLXJvbGxiYWNrLXByMzQ2Ny1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtY2hvcmUtcm9sbGJhY2stcHIzNDY3LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/E86azZjAE3PQ8qp6k1ygqxCLrGfS)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-chore-rollback-pr3467-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-chore-rollback-pr3467-nextui-org.vercel.app?via=pr-comment-feedback-link) | Sep 15, 2024 3:52am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/CDm2WuF7WgJc9isdxyjQaoGe6TLn)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-chore-rollback-pr3467-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-chore-rollback-pr3467-nextui-org.vercel.app?via=pr-comment-feedback-link) | Sep 15, 2024 3:52am |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

This change introduces a patch update for various components in the `@nextui-org` library, focusing on accessibility improvements and interaction handling. Key modifications include the addition of the `@nextui-org/aria-utils` package as a dependency across multiple components, the implementation of a new utility function `ariaShouldCloseOnInteractOutside`, and adjustments to existing hooks to enhance the behavior of popovers, dropdowns, and other interactive elements. Additionally, some dependencies were removed, and a test case related to modal behavior was deleted.

## Changes

| File Path                                          | Change Summary                                                                                                   |
|----------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|
| `.changeset/silly-rockets-fly.md`                 | Introduced patch update for several components, rolling back PR3467 changes.                                   |
| `packages/components/*/package.json`               | Added `@nextui-org/aria-utils` as a dependency in `autocomplete`, `date-picker`, `dropdown`, and `select`.   |
| `packages/components/*/src/use-*.ts`               | Modified to include `shouldCloseOnInteractOutside` property and utilize `ariaShouldCloseOnInteractOutside`.    |
| `packages/components/modal/__tests__/modal.test.tsx` | Removed a test case for multiple modals.                                                                       |
| `packages/components/modal/src/use-modal.ts`       | Added `onClick` event handler to backdrop properties for closing modal.                                         |
| `packages/components/popover/package.json`         | Removed dependency on `@nextui-org/use-aria-overlay`.                                                          |
| `packages/components/popover/src/use-aria-popover.ts` | Replaced `useAriaOverlay` with `useOverlay` and refined `shouldCloseOnInteractOutside` handling.              |
| `packages/components/popover/src/use-popover.ts`   | Added `useEffect` to manage popover visibility with respect to the DOM reference.                               |
| `packages/utilities/aria-utils/src/*`              | Introduced `ariaShouldCloseOnInteractOutside` utility function and updated exports accordingly.                 |
| `packages/hooks/use-aria-modal-overlay/*`          | Removed `@nextui-org/use-aria-overlay` dependency and refactored to use `useOverlay`.                           |

## Possibly related PRs

- **#2854**: Enhances the focus behavior of popovers, related to the `shouldCloseOnInteractOutside` functionality.
- **#3137**: Addresses popover focus issues, aligning with updates to `ariaShouldCloseOnInteractOutside`.
- **#3374**: Fixes select component behavior, relevant to interaction handling improvements in this PR.
- **#3467**: Refactors overlay components, connecting to changes in interaction and focus management.
- **#3756**: Rolls back changes related to popover and tooltip components, indicating ongoing adjustments in related functionalities.

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

```
.changeset/silly-rockets-fly.md: ## AI-generated summary of changes

This change introduces a patch update for several components from the `@nextui-org` library, including `autocomplete`, `date-picker`, `dropdown`, `modal`, `popover`, `select`, `use-aria-modal-overlay`, `use-aria-multiselect`, and `aria-utils`. The update indicates a rollback of a previous pull request (PR3467), which has been rescheduled for a future version (v2.5.0). This suggests that the changes made in PR3467 are not being included in the current release cycle, and the components listed will be maintained in their previous state until the new version is ready. The patching process typically involves minor adjustments or fixes that do not introduce new features or significant changes to the existing functionality.

## Alterations to the declarations of exported or public entities

- No alterations to the declarations of exported or public entities were made.

---

packages/components/autocomplete/package.json: ## AI-generated summary of changes

The diff introduces a new dependency to the `package.json` file of the `packages/components/autocomplete` module. Specifically, the package `@nextui-org/aria-utils` is added as a dependency with the version specified as `workspace:*`. This change indicates that the module will now utilize functionality from `@nextui-org/aria-utils`, which may enhance accessibility features or provide utility functions related to ARIA (Accessible Rich Internet Applications) standards. The addition of this dependency suggests a potential improvement in the component's compliance with accessibility guidelines, although the specific functionalities it introduces are not detailed in the diff.

## Alterations to the declarations of exported or public entities

- Added: `@nextui-org/aria-utils` as a dependency in `packages/components/autocomplete/package.json`

---

packages/components/autocomplete/src/use-autocomplete.ts: ## AI-generated summary of changes

The diff introduces a new import statement for `ariaShouldCloseOnInteractOutside` from the `@nextui-org/aria-utils` package and modifies the `useAutocomplete` function to include a new property, `shouldCloseOnInteractOutside`, in its configuration. This property determines whether the popover should close when interacting outside of it. If the `popoverProps` object contains a `shouldCloseOnInteractOutside` property, its value is used directly; otherwise, it defaults to a function that utilizes `ariaShouldCloseOnInteractOutside`, passing in the relevant parameters. This change enhances the control over the popover's behavior in response to user interactions, potentially improving user experience by allowing for more nuanced handling of focus and interaction states.

## Alterations to the declarations of exported or public entities

- Added: `shouldCloseOnInteractOutside` in the function `useAutocomplete<T extends object>` in `packages/components/autocomplete/src/use-autocomplete.ts`

---

packages/components/date-picker/package.json: ## AI-generated summary of changes

The diff introduces a new dependency to the `package.json` file of the `date-picker` component. Specifically, the package `@nextui-org/aria-utils` is added with a version specification of `workspace:*`. This change indicates that the `date-picker` component will now utilize the `@nextui-org/aria-utils` package, which is likely intended to enhance accessibility features or provide utility functions related to ARIA (Accessible Rich Internet Applications) attributes. The addition of this dependency may impact how the component interacts with assistive technologies, potentially improving its usability for users with disabilities. Overall, this modification signifies an enhancement in the component's functionality by integrating additional tools for better accessibility.

## Alterations to the declarations of exported or public entities

- Added: Dependency on `@nextui-org/aria-utils` in `package.json` of the `date-picker` component.

---

packages/components/date-picker/src/use-date-picker.ts: ## AI-generated summary of changes

The diff introduces a new import statement for the `ariaShouldCloseOnInteractOutside` function from the `@nextui-org/aria-utils` package. This function is utilized to determine whether a popover should close when an interaction occurs outside of it. The logic for handling the `shouldCloseOnInteractOutside` property within the `useDatePicker` function has been modified to incorporate this new utility. Specifically, if `popoverProps.shouldCloseOnInteractOutside` is defined, it will be used directly; otherwise, the function will default to using `ariaShouldCloseOnInteractOutside`, passing in the relevant parameters. This change enhances the control over the popover's behavior in response to external interactions, potentially improving user experience by ensuring that the date picker behaves consistently with accessibility standards.

## Alterations to the declarations of exported or public entities

- Modified: `shouldCloseOnInteractOutside` property in the return object of the `useDatePicker` function in `packages/components/date-picker/src/use-date-picker.ts`

---

packages/components/date-picker/src/use-date-range-picker.ts: ## AI-generated summary of changes

The diff introduces a new utility function, `ariaShouldCloseOnInteractOutside`, which enhances the behavior of the date range picker component by determining whether the popover should close when interactions occur outside of it. This function is integrated into the `useDateRangePicker` hook, specifically within the `popoverProps` configuration. The logic checks if a custom `shouldCloseOnInteractOutside` property is provided; if not, it defaults to using the newly imported utility function. This change improves the component's interactivity and user experience by ensuring that the popover closes appropriately based on user interactions outside of its bounds.

## Alterations to the declarations of exported or public entities

- Added: `shouldCloseOnInteractOutside` in `useDateRangePicker<T extends DateValue>` in `packages/components/date-picker/src/use-date-range-picker.ts`

---

packages/components/dropdown/package.json: ## AI-generated summary of changes

The diff introduces a new dependency in the `package.json` file for the dropdown component. Specifically, the package `@nextui-org/aria-utils` has been added as a dependency with the version specified as `workspace:*`. This change indicates that the project will now utilize the `@nextui-org/aria-utils` package, which is likely intended to enhance accessibility features or provide utility functions related to ARIA (Accessible Rich Internet Applications) attributes. The addition of this dependency suggests an intention to improve the component's compliance with accessibility standards, potentially impacting how the dropdown interacts with assistive technologies.

## Alterations to the declarations of exported or public entities

- Added: `"@nextui-org/aria-utils": "workspace:*"` in `dependencies` section of `package.json`

---

packages/components/dropdown/src/use-dropdown.ts: ## AI-generated summary of changes

The diff introduces a new import statement for the `ariaShouldCloseOnInteractOutside` function from the `@nextui-org/aria-utils` package. This function is utilized to determine whether the dropdown should close when interactions occur outside of it. The logic for handling the `shouldCloseOnInteractOutside` property has been modified to incorporate this new function. Specifically, if the `popoverProps` object has a `shouldCloseOnInteractOutside` property, its value is used directly; otherwise, the new function is invoked with the relevant parameters (the element, `triggerRef`, and `state`). This change enhances the dropdown's behavior by providing a more flexible and potentially more robust mechanism for managing its open/close state based on user interactions outside the dropdown.

## Alterations to the declarations of exported or public entities

- Added: `shouldCloseOnInteractOutside` property in the return object of the `useDropdown` function in `packages/components/dropdown/src/use-dropdown.ts`

---

packages/components/modal/__tests__/modal.test.tsx: ## AI-generated summary of changes

The provided diff indicates the removal of a test case from the `modal.test.tsx` file, specifically the test that verifies the behavior of multiple modals. The deleted test case was designed to ensure that only the top-most modal would close when a click event occurred outside of it. The test involved rendering two modals simultaneously and checking that the `onClose` callback for the top modal was not called when clicking outside, while the bottom modal's `onClose` was triggered. The removal of this test case suggests a potential shift in focus or simplification of the modal functionality being tested, but it also eliminates a check that could help ensure the correct behavior of the modal component in scenarios involving multiple instances.

## Alterations to the declarations of exported or public entities

- No alterations to the declarations of exported or public entities were made in this diff.

---

packages/components/modal/src/use-modal.ts: ## AI-generated summary of changes

The diff introduces a modification to the `getBackdropProps` function within the `useModal` hook. Specifically, an `onClick` event handler is added to the backdrop properties, which triggers the `state.close()` method when the backdrop is clicked. This change enhances the functionality of the modal by allowing users to close the modal by clicking on the backdrop, thereby improving user interaction and experience.

## Alterations to the declarations of exported or public entities

- Added: `onClick: () => state.close()` in the function `getBackdropProps` within `useModal` in `packages/components/modal/src/use-modal.ts`

---

packages/components/popover/package.json: ## AI-generated summary of changes

The diff indicates the removal of the dependency on the package `@nextui-org/use-aria-overlay` from the `package.json` file of the `packages/components/popover` module. This change suggests that the functionality relying on this specific utility for managing aria overlays is no longer required or has been refactored to utilize alternative methods or packages. The removal may impact how overlays are handled within the component, potentially simplifying the component's dependency tree and reducing its complexity. However, without the context of the broader codebase, the specific implications on functionality cannot be fully assessed.

## Alterations to the declarations of exported or public entities

- Removed: `@nextui-org/use-aria-overlay` dependency in `packages/components/popover/package.json`

---

packages/components/popover/src/use-aria-popover.ts: ## AI-generated summary of changes

The diff introduces several modifications to the `useReactAriaPopover` function within the `use-aria-popover.ts` file. Notably, it replaces the usage of the `useAriaOverlay` hook with the `useOverlay` hook from the `@react-aria/overlays` package. This change likely enhances the functionality related to overlay management, aligning it more closely with the React Aria library's intended usage patterns. 

Additionally, the handling of the `shouldCloseOnInteractOutside` property has been refined. The previous implementation used a default function that checked if the clicked element was outside the trigger reference. The new implementation introduces a more flexible approach by allowing the `shouldCloseOnInteractOutside` property to be passed in directly, defaulting to a utility function `ariaShouldCloseOnInteractOutside` if not provided. This change improves the configurability of the popover's behavior when interacting outside of it, potentially leading to a more intuitive user experience.

Overall, these changes enhance the popover's interaction logic and its integration with the React Aria framework, suggesting a shift towards more robust and customizable overlay handling.

## Alterations to the declarations of exported or public entities

- Renamed: `const {overlayProps, underlayProps} = useAriaOverlay(...)` in `use-aria-popover.ts` ‚Üí `const {overlayProps, underlayProps} = useOverlay(...)` in `use-aria-popover.ts`

---

packages/components/popover/src/use-popover.ts: ## AI-generated summary of changes

The changes in the `use-popover.ts` file introduce a new effect that enhances the accessibility of the popover component. Specifically, the `useEffect` hook has been added to manage the visibility of the popover in relation to the DOM reference. When the popover is open (`state.isOpen` is true) and the `domRef` is defined, the `ariaHideOutside` function is invoked, which likely manages the focus and visibility of elements outside the popover. This addition improves the user experience by ensuring that when the popover is active, elements outside of it are appropriately hidden from assistive technologies, thereby preventing potential confusion for users relying on screen readers. The import statement for `ariaHideOutside` has also been included to facilitate this new functionality.

## Alterations to the declarations of exported or public entities

- Added: `useEffect` hook in the `usePopover` function in `packages/components/popover/src/use-popover.ts`

---

packages/components/select/package.json: ## AI-generated summary of changes

The diff introduces a new dependency to the `package.json` file located in the `packages/components/select` directory. Specifically, the package `@nextui-org/aria-utils` has been added as a dependency with the version specified as `workspace:*`. This change indicates that the project now relies on the `@nextui-org/aria-utils` package, which is likely intended to enhance accessibility features or provide utility functions related to ARIA (Accessible Rich Internet Applications) attributes. The addition of this dependency suggests an intention to improve the overall functionality and user experience of the components within the project, particularly in terms of accessibility compliance.

## Alterations to the declarations of exported or public entities

- Added: `@nextui-org/aria-utils` as a dependency in `packages/components/select/package.json`

---

packages/components/select/src/use-select.ts: ## AI-generated summary of changes

The diff introduces a new import statement for the `ariaShouldCloseOnInteractOutside` function from the `@nextui-org/aria-utils` package. This function is integrated into the `useSelect` function, specifically within the configuration of the `popoverProps`. The change allows for a more flexible handling of the `shouldCloseOnInteractOutside` property. If this property is provided in `popoverProps`, it will be used directly; otherwise, the function `ariaShouldCloseOnInteractOutside` will be invoked with the current element, `domRef`, and `state` as arguments. This modification enhances the logic for determining whether the popover should close when interacting outside of it, thereby improving user experience and accessibility.

## Alterations to the declarations of exported or public entities

- Added: `shouldCloseOnInteractOutside` in the `PopoverProps` configuration within the `useSelect` function in `packages/components/select/src/use-select.ts`

---

packages/hooks/use-aria-modal-overlay/package.json: ## AI-generated summary of changes

The diff indicates the removal of a dependency from the `package.json` file for the `packages/hooks/use-aria-modal-overlay` package. Specifically, the dependency on `@nextui-org/use-aria-overlay` has been eliminated. This change may affect the functionality of the package if it relied on this dependency for any of its features or behaviors. The remaining dependencies, which include `@react-aria/overlays`, `@react-aria/utils`, and `@react-stately/overlays`, remain unchanged. The removal suggests a potential shift in the package's reliance on external libraries, possibly indicating a move towards a more streamlined or self-contained implementation.

## Alterations to the declarations of exported or public entities

- Removed: Dependency on `@nextui-org/use-aria-overlay` in `package.json` for `packages/hooks/use-aria-modal-overlay`.

---

packages/hooks/use-aria-modal-overlay/src/index.ts: ## AI-generated summary of changes

The diff reflects a modification in the implementation of the `useAriaModalOverlay` function within the `index.ts` file. The primary change involves replacing the import and usage of the `useAriaOverlay` function from the `@nextui-org/use-aria-overlay` package with the `useOverlay` function from the `@react-aria/overlays` package. This change alters the way overlay properties are managed within the modal overlay functionality. The `overlayProps` and `underlayProps` are now derived from `useOverlay`, which may imply a shift in how the overlay behavior is controlled, potentially enhancing compatibility with the React Aria library's overlay management. The overall structure and parameters of the `useAriaModalOverlay` function remain unchanged, but the underlying logic for handling overlays is now dependent on a different library function.

## Alterations to the declarations of exported or public entities

- Renamed: `let {overlayProps, underlayProps} = useAriaOverlay(...)` in `useAriaModalOverlay` function in `src/index.ts` ‚Üí `let {overlayProps, underlayProps} = useOverlay(...)` in `useAriaModalOverlay` function in `src/index.ts`

---

packages/hooks/use-aria-multiselect/src/use-multiselect.ts: ## AI-generated summary of changes

The diff indicates the removal of a specific event handler within the `useMultiSelect` function in the `use-multiselect.ts` file. The deleted code block was responsible for handling the `onPressStart` event for the `menuTriggerProps`. This event handler checked the `pointerType` of the event and, if it was neither "touch" nor "keyboard" and the component was not disabled, it toggled the selection state based on the pointer type. The removal of this functionality suggests a change in how user interactions are managed, particularly regarding pointer events, which may affect the user experience by eliminating the ability to toggle selections through certain pointer interactions.

## Alterations to the declarations of exported or public entities

- No alterations to the declarations of exported or public entities were made in this diff.

---

packages/hooks/use-aria-overlay/CHANGELOG.md: ## AI-generated summary of changes

The deleted changelog file for the `@nextui-org/use-aria-overlay` package documented version 2.0.1, which included a patch change that focused on refactoring the overlay functionality. The primary goal of this refactor was to reduce the complexity of the overlay implementation while simultaneously enhancing its stability. This indicates that the previous version may have had issues related to maintainability or reliability, which were addressed in this update. The specific changes made in the code were not detailed in the diff, but the mention of a pull request suggests that the modifications were significant enough to warrant a review and discussion among contributors.

## Alterations to the declarations of exported or public entities

- No alterations to the declarations of exported or public entities were made.

---

packages/hooks/use-aria-overlay/README.md: ## AI-generated summary of changes

The deleted file `README.md` for the `@nextui-org/use-aria-overlay` package provided essential information about the component, including its purpose, installation instructions, contribution guidelines, and licensing details. The component was described as an internal utility not intended for public usage, indicating its limited scope and audience. The installation section outlined how to add the package to a project using either Yarn or npm, while the contribution section directed potential contributors to the project's guidelines. Lastly, the license section confirmed that the project was licensed under the MIT license, ensuring open-source compliance. The removal of this file signifies the discontinuation of documentation for this internal utility.

## Alterations to the declarations of exported or public entities

- Removed: Documentation for the internal utility `@nextui-org/use-aria-overlay` in `packages/hooks/use-aria-overlay/README.md

---

packages/hooks/use-aria-overlay/package.json: ## AI-generated summary of changes

The deleted `package.json` file for the `@nextui-org/use-aria-overlay` package contained metadata and configuration for a custom implementation of a React aria overlay. This file defined the package's name, version, description, keywords, author, homepage, license, main entry point, and repository details. It specified dependencies on various React Aria packages, peer dependencies for React and React DOM, and development dependencies for build tools and type checking. The scripts section included commands for building, cleaning, and type checking the package, while the `tsup` configuration outlined the build targets and formats. Overall, this file facilitated the package's integration and functionality within a React application, ensuring proper handling of overlays in a user-friendly manner.

## Alterations to the declarations of exported or public entities

- Removed: `package.json` for package `@nextui-org/use-aria-overlay`

---

packages/hooks/use-aria-overlay/src/index.ts: ## AI-generated summary of changes

The deleted file `index.ts` provided functionality for managing overlays such as dialogs, popovers, and menus in a React application. It implemented the `useAriaOverlay` hook, which facilitated the behavior of these overlays by handling interactions such as clicks outside the overlay, keyboard events (specifically the Escape key), and focus management. The hook maintained a stack of visible overlays, ensuring that only the topmost overlay could be dismissed through user interactions. 

Key features included the ability to disable interactions with elements outside the overlay, control over dismissing the overlay via keyboard or mouse interactions, and handling focus within the overlay to prevent unintended closures. The hook also provided props for customization, such as whether the overlay should close on blur or interact outside events. Overall, the functionality was centered around enhancing accessibility and user experience when dealing with overlays in a web application.

## Alterations to the declarations of exported or public entities

- Removed: `export function useAriaOverlay(props: UseAriaOverlayProps, ref: RefObject<Element>): OverlayAria` in `packages/hooks/use-aria-overlay/src/index.ts`
- Removed: `export interface UseAriaOverlayProps extends AriaOverlayProps` in `packages/hooks/use-aria-overlay/src/index.ts`

---

packages/hooks/use-aria-overlay/tsconfig.json: ## AI-generated summary of changes

The deleted `tsconfig.json` file was responsible for configuring TypeScript settings for the `use-aria-overlay` package. It extended a base configuration from a higher directory and specified which files to include in the compilation process, namely the `src` directory and the `index.ts` file. By removing this configuration, the package may no longer have a defined TypeScript environment, potentially leading to issues with type checking and compilation for the files that were previously included. This change could affect the overall functionality and maintainability of the package, as it removes the structured setup that aids in development and integration with TypeScript.

## Alterations to the declarations of exported or public entities

- Removed: `tsconfig.json` configuration for the `use-aria-overlay` package.

---

packages/utilities/aria-utils/src/index.ts: ## AI-generated summary of changes

The diff introduces a new export in the `index.ts` file located in the `packages/utilities/aria-utils/src` directory. Specifically, it adds the export of the `ariaShouldCloseOnInteractOutside` function alongside existing exports. This change enhances the module's functionality by making the `ariaShouldCloseOnInteractOutside` utility available for use in other parts of the application, potentially allowing for improved handling of ARIA attributes related to interaction outside of certain components. The addition does not alter any existing functionality but expands the module's capabilities.

## Alterations to the declarations of exported or public entities

- Added: `ariaShouldCloseOnInteractOutside` in `packages/utilities/aria-utils/src/index.ts`

---

packages/utilities/aria-utils/src/overlays/ariaShouldCloseOnInteractOutside.ts: ## AI-generated summary of changes

The newly introduced file `ariaShouldCloseOnInteractOutside.ts` provides a utility function designed to manage the behavior of popover-based components in response to interactions occurring outside of them. This function, `ariaShouldCloseOnInteractOutside`, takes three parameters: an `element` representing the outside interaction, a `triggerRef` which is a reference to the popover's trigger element, and a `state` object that controls the popover's visibility.

The function first checks if the `trigger` element exists and whether it contains the `element` that triggered the interaction. If the `trigger` does not contain the `element`, it proceeds to identify any focus scope elements within the document. These focus scope elements are defined by specific `span` elements that mark the start and end of a focus trap. The function collects these elements and checks their count.

If there is only one focus scope element detected, it indicates that the popover should close, as it suggests that the user is interacting with another popover or component. The `state.close()` method is called to close the popover, and the function returns `false` to indicate that the interaction should not result in closing the popover. If there are no focus scope elements or if the `trigger` contains the `element`, the function ultimately returns a boolean indicating whether the popover should close based on the interaction.

This logic is crucial for managing nested popover interactions and ensuring that the correct popover remains open while others close, enhancing the user experience in complex UI scenarios.

## Alterations to the declarations of exported or public entities

- Added: `export const ariaShouldCloseOnInteractOutside = (element: Element, triggerRef: RefObject<Element>, state: any) => { ... }` in `packages/utilities/aria-utils/src/overlays/ariaShouldCloseOnInteractOutside.ts`

---

packages/utilities/aria-utils/src/overlays/index.ts: ## AI-generated summary of changes

The diff introduces a new export statement in the `packages/utilities/aria-utils/src/overlays/index.ts` file. Specifically, it adds the export of the `ariaShouldCloseOnInteractOutside` function from the `./ariaShouldCloseOnInteractOutside` module. This change enhances the module's functionality by making the `ariaShouldCloseOnInteractOutside` utility available for use in other parts of the application, potentially allowing for improved handling of ARIA attributes related to interaction outside of overlays. The addition signifies an expansion of the module's capabilities, which may contribute to better accessibility features in the user interface.

## Alterations to the declarations of exported or public entities

- Added: `export {ariaShouldCloseOnInteractOutside} from "./ariaShouldCloseOnInteractOutside";` in `packages/utilities/aria-utils/src/overlays/index.ts`
```

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR Summary

The pull request titled "chore: rollback pr3467" was created by the user wingkwong and is numbered 3759. The primary purpose of this PR is to roll back the changes made in a previous pull request, specifically PR #3467. 

The description provided in the PR includes a template that outlines the expectations for submitting a pull request, such as keeping the PR small, limiting it to one type of change, and mentioning any related GitHub issues. However, the specific GitHub issue that this PR addresses is not mentioned.

The PR does not provide detailed information about the current behavior that is being modified or the new behavior that will be introduced as a result of this rollback. Additionally, it does not specify whether this change is a breaking change for existing NextUI users, nor does it include any additional information.

For further details, the PR can be accessed at the following URL: [PR #3759](https://github.com/nextui-org/nextui/pull/3759).

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 32dd4f588d7314413471724db3949f338cd840b6 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>



<!-- tips_end -->\n

Files Changed:
- .changeset/silly-rockets-fly.md (added, 13 changes)\n  Patch: @@ -0,0 +1,13 @@
+---
+"@nextui-org/autocomplete": patch
+"@nextui-org/date-picker": patch
+"@nextui-org/dropdown": patch
+"@nextui-org/modal": patch
+"@nextui-org/popover": patch
+"@nextui-org/select": patch
+"@nextui-org/use-aria-modal-overlay": patch
+"@nextui-org/use-aria-multiselect": patch
+"@nextui-org/aria-utils": patch
+---
+
+rollback pr3467. rescheduled to v2.5.0.\n- packages/components/autocomplete/package.json (modified, 1 changes)\n  Patch: @@ -41,6 +41,7 @@
     "react-dom": ">=18"
   },
   "dependencies": {
+    "@nextui-org/aria-utils": "workspace:*",
     "@nextui-org/button": "workspace:*",
     "@nextui-org/input": "workspace:*",
     "@nextui-org/listbox": "workspace:*",\n- packages/components/autocomplete/src/use-autocomplete.ts (modified, 4 changes)\n  Patch: @@ -18,6 +18,7 @@ import {chain, mergeProps} from "@react-aria/utils";
 import {ButtonProps} from "@nextui-org/button";
 import {AsyncLoadable, PressEvent} from "@react-types/shared";
 import {useComboBox} from "@react-aria/combobox";
+import {ariaShouldCloseOnInteractOutside} from "@nextui-org/aria-utils";
 
 interface Props<T> extends Omit<HTMLNextUIProps<"input">, keyof ComboBoxProps<T>> {
   /**
@@ -443,6 +444,9 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
           ),
         }),
       },
+      shouldCloseOnInteractOutside: popoverProps?.shouldCloseOnInteractOutside
+        ? popoverProps.shouldCloseOnInteractOutside
+        : (element: Element) => ariaShouldCloseOnInteractOutside(element, inputWrapperRef, state),
       // when the popover is open, the focus should be on input instead of dialog
       // therefore, we skip dialog focus here
       disableDialogFocus: true,\n- packages/components/date-picker/package.json (modified, 1 changes)\n  Patch: @@ -41,6 +41,7 @@
   },
   "dependencies": {
     "@internationalized/date": "^3.5.4",
+    "@nextui-org/aria-utils": "workspace:*",
     "@nextui-org/button": "workspace:*",
     "@nextui-org/calendar": "workspace:*",
     "@nextui-org/date-input": "workspace:*",\n- packages/components/date-picker/src/use-date-picker.ts (modified, 4 changes)\n  Patch: @@ -15,6 +15,7 @@ import {useDatePickerState} from "@react-stately/datepicker";
 import {AriaDatePickerProps, useDatePicker as useAriaDatePicker} from "@react-aria/datepicker";
 import {clsx, dataAttr, objectToDeps} from "@nextui-org/shared-utils";
 import {mergeProps} from "@react-aria/utils";
+import {ariaShouldCloseOnInteractOutside} from "@nextui-org/aria-utils";
 
 import {useDatePickerBase} from "./use-date-picker-base";
 
@@ -192,6 +193,9 @@ export function useDatePicker<T extends DateValue>({
           ),
         }),
       },
+      shouldCloseOnInteractOutside: popoverProps?.shouldCloseOnInteractOutside
+        ? popoverProps.shouldCloseOnInteractOutside
+        : (element: Element) => ariaShouldCloseOnInteractOutside(element, popoverTriggerRef, state),
     };
   };
 \n- packages/components/date-picker/src/use-date-range-picker.ts (modified, 5 changes)\n  Patch: @@ -21,6 +21,7 @@ import {useDateRangePicker as useAriaDateRangePicker} from "@react-aria/datepick
 import {clsx, dataAttr, objectToDeps} from "@nextui-org/shared-utils";
 import {mergeProps} from "@react-aria/utils";
 import {dateRangePicker, dateInput, cn} from "@nextui-org/theme";
+import {ariaShouldCloseOnInteractOutside} from "@nextui-org/aria-utils";
 
 import {useDatePickerBase} from "./use-date-picker-base";
 interface Props<T extends DateValue>
@@ -214,6 +215,10 @@ export function useDateRangePicker<T extends DateValue>({
             props.className,
           ),
         }),
+        shouldCloseOnInteractOutside: popoverProps?.shouldCloseOnInteractOutside
+          ? popoverProps.shouldCloseOnInteractOutside
+          : (element: Element) =>
+              ariaShouldCloseOnInteractOutside(element, popoverTriggerRef, state),
       },
     } as PopoverProps;
   };\n- packages/components/dropdown/package.json (modified, 1 changes)\n  Patch: @@ -41,6 +41,7 @@
     "react-dom": ">=18"
   },
   "dependencies": {
+    "@nextui-org/aria-utils": "workspace:*",
     "@nextui-org/menu": "workspace:*",
     "@nextui-org/popover": "workspace:*",
     "@nextui-org/react-utils": "workspace:*",\n- packages/components/dropdown/src/use-dropdown.ts (modified, 4 changes)\n  Patch: @@ -9,6 +9,7 @@ import {useMenuTrigger} from "@react-aria/menu";
 import {dropdown} from "@nextui-org/theme";
 import {clsx} from "@nextui-org/shared-utils";
 import {ReactRef, mergeRefs} from "@nextui-org/react-utils";
+import {ariaShouldCloseOnInteractOutside} from "@nextui-org/aria-utils";
 import {useMemo, useRef} from "react";
 import {mergeProps} from "@react-aria/utils";
 import {MenuProps} from "@nextui-org/menu";
@@ -122,6 +123,9 @@ export function useDropdown(props: UseDropdownProps) {
         ...props.classNames,
         content: clsx(classNames, classNamesProp?.content, props.className),
       },
+      shouldCloseOnInteractOutside: popoverProps?.shouldCloseOnInteractOutside
+        ? popoverProps.shouldCloseOnInteractOutside
+        : (element: Element) => ariaShouldCloseOnInteractOutside(element, triggerRef, state),
     };
   };
 \n- packages/components/modal/__tests__/modal.test.tsx (modified, 35 changes)\n  Patch: @@ -1,6 +1,5 @@
 import * as React from "react";
 import {act, render, fireEvent} from "@testing-library/react";
-import userEvent from "@testing-library/user-event";
 
 import {Modal, ModalContent, ModalBody, ModalHeader, ModalFooter} from "../src";
 
@@ -109,38 +108,4 @@ describe("Modal", () => {
     fireEvent.keyDown(modal, {key: "Escape"});
     expect(onClose).toHaveBeenCalledTimes(1);
   });
-
-  it("should only hide the top-most modal", async () => {
-    const onClose1 = jest.fn();
-    const onClose2 = jest.fn();
-
-    render(
-      <Modal isOpen onClose={onClose1}>
-        <ModalContent>
-          <ModalHeader>Modal header</ModalHeader>
-          <ModalBody>Modal body</ModalBody>
-          <ModalFooter>Modal footer</ModalFooter>
-        </ModalContent>
-      </Modal>,
-    );
-
-    const wrapper2 = render(
-      <Modal isOpen onClose={onClose2}>
-        <ModalContent>
-          <ModalHeader>Modal header</ModalHeader>
-          <ModalBody>Modal body</ModalBody>
-          <ModalFooter>Modal footer</ModalFooter>
-        </ModalContent>
-      </Modal>,
-    );
-
-    await userEvent.click(document.body);
-    expect(onClose1).not.toHaveBeenCalled();
-    expect(onClose2).toHaveBeenCalledTimes(1);
-
-    wrapper2.unmount();
-
-    await userEvent.click(document.body);
-    expect(onClose1).toHaveBeenCalledTimes(1);
-  });
 });\n- packages/components/modal/src/use-modal.ts (modified, 1 changes)\n  Patch: @@ -169,6 +169,7 @@ export function useModal(originalProps: UseModalProps) {
   const getBackdropProps = useCallback<PropGetter>(
     (props = {}) => ({
       className: slots.backdrop({class: classNames?.backdrop}),
+      onClick: () => state.close(),
       ...underlayProps,
       ...props,
     }),\n- packages/components/popover/package.json (modified, 1 changes)\n  Patch: @@ -47,7 +47,6 @@
     "@nextui-org/react-utils": "workspace:*",
     "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/use-aria-button": "workspace:*",
-    "@nextui-org/use-aria-overlay": "workspace:*",
     "@nextui-org/use-safe-layout-effect": "workspace:*",
     "@react-aria/dialog": "3.5.14",
     "@react-aria/focus": "3.17.1",\n- packages/components/popover/src/use-aria-popover.ts (modified, 17 changes)\n  Patch: @@ -1,15 +1,20 @@
 import {RefObject, useEffect} from "react";
 import {
+  useOverlay,
   AriaPopoverProps,
   PopoverAria,
   useOverlayPosition,
   AriaOverlayProps,
 } from "@react-aria/overlays";
-import {OverlayPlacement, ariaHideOutside, toReactAriaPlacement} from "@nextui-org/aria-utils";
+import {
+  OverlayPlacement,
+  ariaHideOutside,
+  toReactAriaPlacement,
+  ariaShouldCloseOnInteractOutside,
+} from "@nextui-org/aria-utils";
 import {OverlayTriggerState} from "@react-stately/overlays";
 import {mergeProps} from "@react-aria/utils";
 import {useSafeLayoutEffect} from "@nextui-org/use-safe-layout-effect";
-import {useAriaOverlay} from "@nextui-org/use-aria-overlay";
 
 export interface Props {
   /**
@@ -66,16 +71,16 @@ export function useReactAriaPopover(
 
   const isNonModal = isNonModalProp ?? true;
 
-  const {overlayProps, underlayProps} = useAriaOverlay(
+  const {overlayProps, underlayProps} = useOverlay(
     {
       isOpen: state.isOpen,
       onClose: state.close,
       shouldCloseOnBlur,
       isDismissable,
       isKeyboardDismissDisabled,
-      shouldCloseOnInteractOutside:
-        shouldCloseOnInteractOutside || ((el) => !triggerRef.current?.contains(el)),
-      disableOutsideEvents: !isNonModal,
+      shouldCloseOnInteractOutside: shouldCloseOnInteractOutside
+        ? shouldCloseOnInteractOutside
+        : (element: Element) => ariaShouldCloseOnInteractOutside(element, triggerRef, state),
     },
     popoverRef,
   );\n- packages/components/popover/src/use-popover.ts (modified, 10 changes)\n  Patch: @@ -2,11 +2,11 @@ import type {PopoverVariantProps, SlotsToClasses, PopoverSlots} from "@nextui-or
 import type {HTMLMotionProps} from "framer-motion";
 import type {PressEvent} from "@react-types/shared";
 
-import {RefObject, Ref} from "react";
+import {RefObject, Ref, useEffect} from "react";
 import {ReactRef, useDOMRef} from "@nextui-org/react-utils";
 import {OverlayTriggerState, useOverlayTriggerState} from "@react-stately/overlays";
 import {useFocusRing} from "@react-aria/focus";
-import {useOverlayTrigger} from "@react-aria/overlays";
+import {ariaHideOutside, useOverlayTrigger} from "@react-aria/overlays";
 import {OverlayTriggerProps} from "@react-types/overlays";
 import {
   HTMLNextUIProps,
@@ -298,6 +298,12 @@ export function usePopover(originalProps: UsePopoverProps) {
     [slots, state.isOpen, classNames, underlayProps],
   );
 
+  useEffect(() => {
+    if (state.isOpen && domRef?.current) {
+      return ariaHideOutside([domRef?.current]);
+    }
+  }, [state.isOpen, domRef]);
+
   return {
     state,
     Component,\n- packages/components/select/package.json (modified, 1 changes)\n  Patch: @@ -41,6 +41,7 @@
     "react-dom": ">=18"
   },
   "dependencies": {
+    "@nextui-org/aria-utils": "workspace:*",
     "@nextui-org/listbox": "workspace:*",
     "@nextui-org/popover": "workspace:*",
     "@nextui-org/react-utils": "workspace:*",\n- packages/components/select/src/use-select.ts (modified, 4 changes)\n  Patch: @@ -28,6 +28,7 @@ import {
 } from "@nextui-org/use-aria-multiselect";
 import {SpinnerProps} from "@nextui-org/spinner";
 import {useSafeLayoutEffect} from "@nextui-org/use-safe-layout-effect";
+import {ariaShouldCloseOnInteractOutside} from "@nextui-org/aria-utils";
 import {CollectionChildren} from "@react-types/shared";
 
 export type SelectedItemProps<T = object> = {
@@ -529,6 +530,9 @@ export function useSelect<T extends object>(originalProps: UseSelectProps<T>) {
             ? // forces the popover to update its position when the selected items change
               state.selectedItems.length * 0.00000001 + (slotsProps.popoverProps?.offset || 0)
             : slotsProps.popoverProps?.offset,
+        shouldCloseOnInteractOutside: popoverProps?.shouldCloseOnInteractOutside
+          ? popoverProps.shouldCloseOnInteractOutside
+          : (element: Element) => ariaShouldCloseOnInteractOutside(element, domRef, state),
       } as PopoverProps;
     },
     [\n- packages/hooks/use-aria-modal-overlay/package.json (modified, 1 changes)\n  Patch: @@ -34,7 +34,6 @@
     "postpack": "clean-package restore"
   },
   "dependencies": {
-    "@nextui-org/use-aria-overlay": "workspace:*",
     "@react-aria/overlays": "3.22.1",
     "@react-aria/utils": "3.24.1",
     "@react-stately/overlays": "3.6.7",\n- packages/hooks/use-aria-modal-overlay/src/index.ts (modified, 4 changes)\n  Patch: @@ -1,8 +1,8 @@
-import {useAriaOverlay} from "@nextui-org/use-aria-overlay";
 import {
   ariaHideOutside,
   AriaModalOverlayProps,
   ModalOverlayAria,
+  useOverlay,
   usePreventScroll,
   useOverlayFocusContain,
 } from "@react-aria/overlays";
@@ -21,7 +21,7 @@ export function useAriaModalOverlay(
   state: OverlayTriggerState,
   ref: RefObject<HTMLElement>,
 ): ModalOverlayAria {
-  let {overlayProps, underlayProps} = useAriaOverlay(
+  let {overlayProps, underlayProps} = useOverlay(
     {
       ...props,
       isOpen: state.isOpen,\n- packages/hooks/use-aria-multiselect/src/use-multiselect.ts (modified, 6 changes)\n  Patch: @@ -112,12 +112,6 @@ export function useMultiSelect<T>(
   typeSelectProps.onKeyDown = typeSelectProps.onKeyDownCapture;
   delete typeSelectProps.onKeyDownCapture;
 
-  menuTriggerProps.onPressStart = (e) => {
-    if (e.pointerType !== "touch" && e.pointerType !== "keyboard" && !isDisabled) {
-      state.toggle(e.pointerType === "virtual" ? "first" : null);
-    }
-  };
-
   const domProps = filterDOMProps(props, {labelable: true});
   const triggerProps = mergeProps(typeSelectProps, menuTriggerProps, fieldProps);
 \n- packages/hooks/use-aria-overlay/CHANGELOG.md (removed, 7 changes)\n  Patch: @@ -1,7 +0,0 @@
-# @nextui-org/use-aria-overlay
-
-## 2.0.1
-
-### Patch Changes
-
-- [#3467](https://github.com/nextui-org/nextui/pull/3467) [`123b7fbc9`](https://github.com/nextui-org/nextui/commit/123b7fbc9fb51613d7568572a00982ad230d02ae) Thanks [@chirokas](https://github.com/chirokas)! - Refactor overlays to reduce its complexity, while improving stability.\n- packages/hooks/use-aria-overlay/README.md (removed, 24 changes)\n  Patch: @@ -1,24 +0,0 @@
-# @nextui-org/use-aria-overlay
-
-A Quick description of the component
-
-> This is an internal utility, not intended for public usage.
-
-## Installation
-
-```sh
-yarn add @nextui-org/use-aria-overlay
-# or
-npm i @nextui-org/use-aria-overlay
-```
-
-## Contribution
-
-Yes please! See the
-[contributing guidelines](https://github.com/nextui-org/nextui/blob/master/CONTRIBUTING.md)
-for details.
-
-## License
-
-This project is licensed under the terms of the
-[MIT license](https://github.com/nextui-org/nextui/blob/master/LICENSE).\n- packages/hooks/use-aria-overlay/package.json (removed, 60 changes)\n  Patch: @@ -1,60 +0,0 @@
-{
-  "name": "@nextui-org/use-aria-overlay",
-  "version": "2.0.1",
-  "description": "A custom implementation of react aria overlay",
-  "keywords": [
-    "use-aria-overlay"
-  ],
-  "author": "Junior Garcia <jrgarciadev@gmail.com>",
-  "homepage": "https://nextui.org",
-  "license": "MIT",
-  "main": "src/index.ts",
-  "sideEffects": false,
-  "files": [
-    "dist"
-  ],
-  "publishConfig": {
-    "access": "public"
-  },
-  "repository": {
-    "type": "git",
-    "url": "git+https://github.com/nextui-org/nextui.git",
-    "directory": "packages/hooks/use-aria-overlay"
-  },
-  "bugs": {
-    "url": "https://github.com/nextui-org/nextui/issues"
-  },
-  "scripts": {
-    "build": "tsup src --dts",
-    "build:fast": "tsup src",
-    "dev": "pnpm build:fast --watch",
-    "clean": "rimraf dist .turbo",
-    "typecheck": "tsc --noEmit",
-    "prepack": "clean-package",
-    "postpack": "clean-package restore"
-  },
-  "dependencies": {
-    "@react-aria/focus": "3.17.1",
-    "@react-aria/interactions": "3.21.3",
-    "@react-aria/overlays": "3.22.1",
-    "@react-types/shared": "3.23.1"
-  },
-  "peerDependencies": {
-    "react": ">=18",
-    "react-dom": ">=18"
-  },
-  "devDependencies": {
-    "clean-package": "2.2.0",
-    "react": "^18.0.0",
-    "react-dom": "^18.0.0"
-  },
-  "clean-package": "../../../clean-package.config.json",
-  "tsup": {
-    "clean": true,
-    "target": "es2019",
-    "format": [
-      "cjs",
-      "esm"
-    ]
-  }
-}\n- packages/hooks/use-aria-overlay/src/index.ts (removed, 151 changes)\n  Patch: @@ -1,151 +0,0 @@
-import type {AriaOverlayProps, OverlayAria} from "@react-aria/overlays";
-import type {RefObject} from "react";
-import type React from "react";
-
-import {isElementInChildOfActiveScope} from "@react-aria/focus";
-import {useFocusWithin, useInteractOutside} from "@react-aria/interactions";
-import {useEffect} from "react";
-
-export interface UseAriaOverlayProps extends AriaOverlayProps {
-  /**
-   * When `true`, `click/focus` interactions will be disabled on elements outside
-   * the `Overlay`. Users need to click twice on outside elements to interact with them:
-   * once to close the overlay, and again to trigger the element.
-   *
-   * @default true
-   */
-  disableOutsideEvents?: boolean;
-}
-
-const visibleOverlays: RefObject<Element | null>[] = [];
-
-/**
- * Provides the behavior for overlays such as dialogs, popovers, and menus.
- * Hides the overlay when the user interacts outside it, when the Escape key is pressed,
- * or optionally, on blur. Only the top-most overlay will close at once.
- */
-export function useAriaOverlay(props: UseAriaOverlayProps, ref: RefObject<Element>): OverlayAria {
-  const {
-    disableOutsideEvents = true,
-    isDismissable = false,
-    isKeyboardDismissDisabled = false,
-    isOpen,
-    onClose,
-    shouldCloseOnBlur,
-    shouldCloseOnInteractOutside,
-  } = props;
-
-  // Add the overlay ref to the stack of visible overlays on mount, and remove on unmount.
-  useEffect(() => {
-    if (isOpen) {
-      visibleOverlays.push(ref);
-    }
-
-    return () => {
-      const index = visibleOverlays.indexOf(ref);
-
-      if (index >= 0) {
-        visibleOverlays.splice(index, 1);
-      }
-    };
-  }, [isOpen, ref]);
-
-  // Only hide the overlay when it is the topmost visible overlay in the stack
-  const onHide = () => {
-    if (visibleOverlays[visibleOverlays.length - 1] === ref && onClose) {
-      onClose();
-    }
-  };
-
-  const onInteractOutsideStart = (e: PointerEvent) => {
-    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target as Element)) {
-      if (visibleOverlays[visibleOverlays.length - 1] === ref) {
-        if (disableOutsideEvents) {
-          e.stopPropagation();
-          e.preventDefault();
-        }
-      }
-
-      // For consistency with React Aria, toggle the combobox/menu on mouse down, but touch up.
-      if (e.pointerType !== "touch") {
-        onHide();
-      }
-    }
-  };
-
-  const onInteractOutside = (e: PointerEvent) => {
-    if (e.pointerType !== "touch") {
-      return;
-    }
-
-    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target as Element)) {
-      if (visibleOverlays[visibleOverlays.length - 1] === ref) {
-        if (disableOutsideEvents) {
-          e.stopPropagation();
-          e.preventDefault();
-        }
-      }
-
-      onHide();
-    }
-  };
-
-  // Handle the escape key
-  const onKeyDown = (e: React.KeyboardEvent) => {
-    if (e.key === "Escape" && !isKeyboardDismissDisabled && !e.nativeEvent.isComposing) {
-      e.stopPropagation();
-      e.preventDefault();
-      onHide();
-    }
-  };
-
-  // Handle clicking outside the overlay to close it
-  useInteractOutside({
-    isDisabled: !(isDismissable && isOpen),
-    onInteractOutside,
-    onInteractOutsideStart,
-    ref,
-  });
-
-  const {focusWithinProps} = useFocusWithin({
-    isDisabled: !shouldCloseOnBlur,
-    onBlurWithin: (e) => {
-      // Do not close if relatedTarget is null, which means focus is lost to the body.
-      // That can happen when switching tabs, or due to a VoiceOver/Chrome bug with Control+Option+Arrow navigation.
-      // Clicking on the body to close the overlay should already be handled by useInteractOutside.
-      // https://github.com/adobe/react-spectrum/issues/4130
-      // https://github.com/adobe/react-spectrum/issues/4922
-      //
-      // If focus is moving into a child focus scope (e.g. menu inside a dialog),
-      // do not close the outer overlay. At this point, the active scope should
-      // still be the outer overlay, since blur events run before focus.
-      if (!e.relatedTarget || isElementInChildOfActiveScope(e.relatedTarget)) {
-        return;
-      }
-
-      if (
-        !shouldCloseOnInteractOutside ||
-        shouldCloseOnInteractOutside(e.relatedTarget as Element)
-      ) {
-        onHide();
-      }
-    },
-  });
-
-  const onPointerDownUnderlay = (e: React.PointerEvent) => {
-    // fixes a firefox issue that starts text selection https://bugzilla.mozilla.org/show_bug.cgi?id=1675846
-    if (e.target === e.currentTarget) {
-      e.preventDefault();
-    }
-  };
-
-  return {
-    overlayProps: {
-      onKeyDown,
-      ...focusWithinProps,
-    },
-    underlayProps: {
-      onPointerDown: onPointerDownUnderlay,
-    },
-  };
-}\n- packages/hooks/use-aria-overlay/tsconfig.json (removed, 4 changes)\n  Patch: @@ -1,4 +0,0 @@
-{
-  "extends": "../../../tsconfig.json",
-  "include": ["src", "index.ts"]
-}\n- packages/utilities/aria-utils/src/index.ts (modified, 1 changes)\n  Patch: @@ -7,6 +7,7 @@ export {isNonContiguousSelectionModifier, isCtrlKeyPressed} from "./utils";
 
 export {
   ariaHideOutside,
+  ariaShouldCloseOnInteractOutside,
   getTransformOrigins,
   toReactAriaPlacement,
   toOverlayPlacement,\n- packages/utilities/aria-utils/src/overlays/ariaShouldCloseOnInteractOutside.ts (added, 45 changes)\n  Patch: @@ -0,0 +1,45 @@
+import {RefObject} from "react";
+
+/**
+ * Used to handle the outside interaction for popover-based components
+ * e.g. dropdown, datepicker, date-range-picker, popover, select, autocomplete etc
+ * @param element - the element outside of the popover ref, originally from `shouldCloseOnInteractOutside`
+ * @param triggerRef - The trigger ref object
+ * @param state - The state from the popover component
+ * @returns - a boolean value which is same as shouldCloseOnInteractOutside
+ */
+export const ariaShouldCloseOnInteractOutside = (
+  element: Element,
+  triggerRef: RefObject<Element>,
+  state: any,
+) => {
+  const trigger = triggerRef?.current;
+
+  if (!trigger || !trigger.contains(element)) {
+    // if there is focus scope block, there will be a pair of span[data-focus-scope-start] and span[data-focus-scope-end]
+    // the element with focus trap resides inbetween these two blocks
+    // we push all the elements in focus scope to `focusScopeElements`
+    const startElements = document.querySelectorAll("body > span[data-focus-scope-start]");
+    let focusScopeElements: Element[] = [];
+
+    startElements.forEach((startElement) => {
+      focusScopeElements.push(startElement.nextElementSibling!);
+    });
+
+    // if there is just one focusScopeElement, we close the state
+    // e.g. open a popover A -> click popover B
+    // then popover A should be closed and popover B should be open
+    // TODO: handle cases like modal > popover A -> click modal > popover B
+    // we should close the popover when it is the last opened
+    // however, currently ariaShouldCloseOnInteractOutside is called recursively
+    // and we need a way to check if there is something closed before that (i.e. nested elements)
+    // if so, popover shouldn't be closed in this case
+    if (focusScopeElements.length === 1) {
+      state.close();
+
+      return false;
+    }
+  }
+
+  return !trigger || !trigger.contains(element);
+};\n- packages/utilities/aria-utils/src/overlays/index.ts (modified, 1 changes)\n  Patch: @@ -9,3 +9,4 @@ export {
 } from "./utils";
 
 export {ariaHideOutside} from "./ariaHideOutside";
+export {ariaShouldCloseOnInteractOutside} from "./ariaShouldCloseOnInteractOutside";\n- pnpm-lock.yaml (modified, 51 changes)\n  Patch: @@ -689,6 +689,9 @@ importers:
 
   packages/components/autocomplete:
     dependencies:
+      '@nextui-org/aria-utils':
+        specifier: workspace:*
+        version: link:../../utilities/aria-utils
       '@nextui-org/button':
         specifier: workspace:*
         version: link:../button
@@ -1327,6 +1330,9 @@ importers:
       '@internationalized/date':
         specifier: ^3.5.4
         version: 3.5.4
+      '@nextui-org/aria-utils':
+        specifier: workspace:*
+        version: link:../../utilities/aria-utils
       '@nextui-org/button':
         specifier: workspace:*
         version: link:../button
@@ -1425,6 +1431,9 @@ importers:
 
   packages/components/dropdown:
     dependencies:
+      '@nextui-org/aria-utils':
+        specifier: workspace:*
+        version: link:../../utilities/aria-utils
       '@nextui-org/menu':
         specifier: workspace:*
         version: link:../menu
@@ -2008,9 +2017,6 @@ importers:
       '@nextui-org/use-aria-button':
         specifier: workspace:*
         version: link:../../hooks/use-aria-button
-      '@nextui-org/use-aria-overlay':
-        specifier: workspace:*
-        version: link:../../hooks/use-aria-overlay
       '@nextui-org/use-safe-layout-effect':
         specifier: workspace:*
         version: link:../../hooks/use-safe-layout-effect
@@ -2226,6 +2232,9 @@ importers:
 
   packages/components/select:
     dependencies:
+      '@nextui-org/aria-utils':
+        specifier: workspace:*
+        version: link:../../utilities/aria-utils
       '@nextui-org/listbox':
         specifier: workspace:*
         version: link:../listbox
@@ -3251,9 +3260,6 @@ importers:
 
   packages/hooks/use-aria-modal-overlay:
     dependencies:
-      '@nextui-org/use-aria-overlay':
-        specifier: workspace:*
-        version: link:../use-aria-overlay
       '@react-aria/overlays':
         specifier: 3.22.1
         version: 3.22.1(react-dom@18.2.0(react@18.2.0))(react@18.2.0)
@@ -3332,31 +3338,6 @@ importers:
         specifier: ^18.2.0
         version: 18.2.0(react@18.2.0)
 
-  packages/hooks/use-aria-overlay:
-    dependencies:
-      '@react-aria/focus':
-        specifier: 3.17.1
-        version: 3.17.1(react@18.2.0)
-      '@react-aria/interactions':
-        specifier: 3.21.3
-        version: 3.21.3(react@18.2.0)
-      '@react-aria/overlays':
-        specifier: 3.22.1
-        version: 3.22.1(react-dom@18.2.0(react@18.2.0))(react@18.2.0)
-      '@react-types/shared':
-        specifier: 3.23.1
-        version: 3.23.1(react@18.2.0)
-    devDependencies:
-      clean-package:
-        specifier: 2.2.0
-        version: 2.2.0
-      react:
-        specifier: ^18.2.0
-        version: 18.2.0
-      react-dom:
-        specifier: ^18.2.0
-        version: 18.2.0(react@18.2.0)
-
   packages/hooks/use-aria-toggle-button:
     dependencies:
       '@nextui-org/use-aria-button':
@@ -18120,15 +18101,13 @@ snapshots:
     transitivePeerDependencies:
       - '@parcel/core'
 
-  '@parcel/cache@2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))(@swc/helpers@0.5.9)':
+  '@parcel/cache@2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))':
     dependencies:
       '@parcel/core': 2.12.0(@swc/helpers@0.5.9)
       '@parcel/fs': 2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))(@swc/helpers@0.5.9)
       '@parcel/logger': 2.12.0
       '@parcel/utils': 2.12.0
       lmdb: 2.8.5
-    transitivePeerDependencies:
-      - '@swc/helpers'
 
   '@parcel/codeframe@2.12.0':
     dependencies:
@@ -18188,7 +18167,7 @@ snapshots:
   '@parcel/core@2.12.0(@swc/helpers@0.5.9)':
     dependencies:
       '@mischnic/json-sourcemap': 0.1.1
-      '@parcel/cache': 2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))(@swc/helpers@0.5.9)
+      '@parcel/cache': 2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))
       '@parcel/diagnostic': 2.12.0
       '@parcel/events': 2.12.0
       '@parcel/fs': 2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))(@swc/helpers@0.5.9)
@@ -18603,7 +18582,7 @@ snapshots:
 
   '@parcel/types@2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))(@swc/helpers@0.5.9)':
     dependencies:
-      '@parcel/cache': 2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))(@swc/helpers@0.5.9)
+      '@parcel/cache': 2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))
       '@parcel/diagnostic': 2.12.0
       '@parcel/fs': 2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))(@swc/helpers@0.5.9)
       '@parcel/package-manager': 2.12.0(@parcel/core@2.12.0(@swc/helpers@0.5.9))(@swc/helpers@0.5.9)\n
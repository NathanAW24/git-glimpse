Pull Request Number: 3883
Title: fix(listbox): change listBoxItem key to optional
Base Branch: canary
Head Branch: fix/select-item-key-to-optional
Author: ryo-manba
URL: https://github.com/nextui-org/nextui/pull/3883
State: MERGED
Created At: 2024-10-13T13:36:45Z
Merged At: 2024-10-14T05:39:26Z
Participants: ryo-manba, wingkwong

Description:
Closes #3880
üìù Description
In SelectBox and other collections, when items include id or key, these values are treated as the component's key.
This allows numeric values to remain as numbers. However, using key directly in the component (e.g, <SelectItem key={1} />) results in the value being converted to a string.
This PR makes key optional since id from the item object can be used directly.
Reference: ListBox ‚Äì React Aria
‚õ≥Ô∏è Current behavior (updates)
key is required and always converted to a string.
üöÄ New behavior
key is now optional.
üí£ Is this a breaking change (Yes/No):
No.
üìù Additional Information

Summary by CodeRabbit


New Features

Enhanced the Select component with improved pre-selection functionality based on numeric keys and IDs.



Bug Fixes

Updated tests to ensure correct initialization and selection behavior in the Select component.



Tests

Added new test cases for the Select component to improve functionality and coverage.
Adjusted existing tests to accommodate changes in identifier types for item selection.

Commits:
- fix(listbox): listBoxItem key to optional\n- chore: add defaultSelectedKeys test for numeric keys and ids\n- chore: add changeset\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: d89915dcf440bbd96abcefedbe6c3a267d605ab7

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 4 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/listbox      | Patch |
| @nextui-org/autocomplete | Patch |
| @nextui-org/select       | Patch |
| @nextui-org/react        | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/select-item-key-to-optional?filename=.changeset/shy-yaks-smell.md&value=---%0A%22%40nextui-org%2Flistbox%22%3A%20patch%0A%22%40nextui-org%2Fselect%22%3A%20patch%0A---%0A%0Afix(listbox)%3A%20change%20listBoxItem%20key%20to%20optional%0A)

\n- vercel: [vc]: #ReAczAczujoVpdVeX2GXVNV3+CDfG5OvfKEGIq/6jZs=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWZpeC1zZWxlY3QtaXRlbS1rZXktdG8tb3B0aW9uYWwtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn0sImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1kb2NzLXYyLzJ3NllRR1pVWjl1OHk1V3E0NmRaSnIzRENhOWgiLCJwcmV2aWV3VXJsIjoibmV4dHVpLWRvY3MtdjItZ2l0LWZpeC1zZWxlY3QtaXRlbS1rZXktdG8tb3B0aW9uYWwtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIn0seyJuYW1lIjoibmV4dHVpLXN0b3J5Ym9vay12MiIsInJvb3REaXJlY3RvcnkiOiJwYWNrYWdlcy9zdG9yeWJvb2siLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LXNlbGVjdC1pdGVtLWtleS10LTVhNjliNC1uZXh0dWktb3JnLnZlcmNlbC5hcHAifSwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi8zRUxtS1daQ1VqZ1J1VDcycmt3aUxDUlh1TFpiIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZpeC1zZWxlY3QtaXRlbS1rZXktdC01YTY5YjQtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIn1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/2w6YQGZUZ9u8y5Wq46dZJr3DCa9h)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-select-item-key-to-optional-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-select-item-key-to-optional-nextui-org.vercel.app?via=pr-comment-feedback-link) | Oct 13, 2024 2:33pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/3ELmKWZCUjgRuT72rkwiLCRXuLZb)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-select-item-key-t-5a69b4-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-select-item-key-t-5a69b4-nextui-org.vercel.app?via=pr-comment-feedback-link) | Oct 13, 2024 2:33pm |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
The pull request modifies the `ListboxItemBaseProps` type by omitting the `key` property from the `AriaOptionProps` type, which may influence how keys are used in list components. Additionally, new test cases have been added to the `Select` component to ensure proper handling of numeric keys in the `selectedKeys` prop, enhancing test coverage and functionality.

## Changes

| File Path                                   | Change Summary                                                                                       |
|---------------------------------------------|-----------------------------------------------------------------------------------------------------|
| `packages/components/listbox/src/base/listbox-item-base.tsx` | Updated `ListboxItemBaseProps` to omit `key` from `AriaOptionProps`.                              |
| `packages/components/select/__tests__/select.test.tsx`        | Added tests for `Select` component to verify handling of numeric keys in `defaultSelectedKeys`.    |

## Assessment against linked issues

| Objective                                           | Addressed | Explanation                                   |
|----------------------------------------------------|-----------|-----------------------------------------------|
| Support numeric keys in `Select` component (#3880) | ‚úÖ         |                                               |

## Possibly related PRs
- **#3336**: This PR addresses the type of the `onSelectionChange` prop in the `DropdownMenu` component, which is related to the changes in the `ListboxItemBaseProps` type in the main PR, as both involve handling selection and key properties.
- **#3368**: This PR fixes missing imports for `HiddenSelect` and `UseSelectProps` in the `Select` component, which is relevant as the main PR also modifies the `Select` component's behavior and its handling of keys.
- **#3598**: This PR resolves an issue with the `onChange` event not triggering when there are more than 300 items in the `Select` component, which relates to the changes in the `Select` component's functionality in the main PR.
- **#3726**: This PR enhances keyboard navigation in the `AutocompleteSection`, which is relevant as it relates to the handling of selection and user interaction, similar to the changes made in the main PR regarding listbox items.

## Suggested reviewers
- wingkwong
- jrgarciadev
- rettimo

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

```
packages/components/listbox/src/base/listbox-item-base.tsx:

## Summary of changes

The `ListboxItemBaseProps` type has been modified to omit the `key` property from the `AriaOptionProps` type, and the `key` property in the `ListboxItem` component has been changed to be optional. This change may affect how the component handles keys in lists, as the `key` prop is typically used for React's reconciliation process. The overall structure of the `Props` interface remains unchanged, preserving existing properties related to the listbox item, such as `children`, `title`, `description`, and various flags for item behavior and styling.

## Alterations to the declarations of exported or public entities

- Type signature updated: `export type ListboxItemBaseProps<T extends object = {}>` ‚Üí `export type ListboxItemBaseProps<T extends object = {}> = Props<T> & ListboxItemVariantProps & Omit<AriaOptionProps, "key"> & FocusableProps & PressEvents;`
- Property modified: `key` in `ListboxItem` is now optional in `@nextui-org/listbox`.

---

packages/components/select/__tests__/select.test.tsx:

## Summary of changes

Several new test cases have been added for the `Select` component, enhancing its functionality and coverage. Two tests verify the pre-selection of items based on `defaultSelectedKeys` using numeric keys and IDs. Modifications to existing tests accommodate the change from string-based identifiers to numeric identifiers for items, ensuring that the `Select` component correctly initializes with specified selected items and that the correct IDs or keys are passed to the `onSelectionChange` callback upon selection. The overall structure of the tests remains intact, with new cases integrated seamlessly into the existing suite.

## Alterations to the declarations of exported or public entities

- No alterations to the declarations of exported or public entities were made in this diff.
```

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR Summary

The pull request titled "fix(listbox): change listBoxItem key to optional" was created by user ryo-manba and is identified as PR number 3883 on GitHub. The primary objective of this PR is to address an issue related to the handling of `key` properties in the `SelectBox` and other collections within the NextUI framework. Previously, the `key` was required, and any numeric values provided were automatically converted to strings, which caused problems when using numeric keys. This PR modifies the behavior by making the `key` property optional, allowing the `id` from the item object to be used directly instead. This change is intended to improve the handling of numeric keys without introducing any breaking changes to the existing functionality. The PR closes issue #3880, which reported that numeric keys were not supported in the `Select` component.

## Objectives from Linked Issues

The linked issue #3880 describes a bug in the NextUI framework where the `selectedKeys` prop does not function correctly when numeric keys are used. The issue was reported for version 2.4.8 of NextUI. The user provided a code example demonstrating the problem, where a `Select` component with a numeric key in the `selectedKeys` prop resulted in a warning message indicating that the keys were not present in the collection. The expected behavior was for the `SelectItem` with the numeric key to be selected without any warnings. The issue highlights the need for improved support for numeric keys in the `Select` component, which the current PR aims to resolve by allowing the use of `id` as a substitute for the `key`.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- f4407c648eeab58b450bf9b17d1e434cb654c3d1 -->
<!-- d89915dcf440bbd96abcefedbe6c3a267d605ab7 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/curly-zoos-thank.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/listbox": patch
+---
+
+change ListboxItem key to optional (#3880)\n- packages/components/listbox/src/base/listbox-item-base.tsx (modified, 2 changes)\n  Patch: @@ -91,7 +91,7 @@ interface Props<T extends object = {}> extends Omit<ItemProps<"li", T>, "childre
 
 export type ListboxItemBaseProps<T extends object = {}> = Props<T> &
   ListboxItemVariantProps &
-  AriaOptionProps &
+  Omit<AriaOptionProps, "key"> &
   FocusableProps &
   PressEvents;
 \n- packages/components/select/__tests__/select.test.tsx (modified, 66 changes)\n  Patch: @@ -350,11 +350,61 @@ describe("Select", () => {
     });
   });
 
+  it("should pre-select items based on defaultSelectedKeys (numeric keys)", () => {
+    const items = [
+      {key: 1, value: "Penguin"},
+      {key: 2, value: "Zebra"},
+      {key: 3, value: "Shark"},
+    ];
+
+    const wrapper = render(
+      <Select
+        isOpen
+        defaultSelectedKeys={[1, 2]} // Numeric keys for selection
+        items={items}
+        label="Test Default Selected Keys"
+        selectionMode="multiple"
+      >
+        {(item) => <SelectItem>{item.value}</SelectItem>}
+      </Select>,
+    );
+
+    const selectedOptions = wrapper.getAllByRole("option", {selected: true});
+
+    expect(selectedOptions.length).toBe(2);
+    expect(selectedOptions.map((opt) => opt.textContent)).toEqual(["Penguin", "Zebra"]);
+  });
+
+  it("should pre-select items based on defaultSelectedKeys (numeric ids)", () => {
+    const items = [
+      {id: 1, value: "Penguin"},
+      {id: 2, value: "Zebra"},
+      {id: 3, value: "Shark"},
+    ];
+
+    const wrapper = render(
+      <Select
+        isOpen
+        defaultSelectedKeys={[1, 2]} // Numeric ids for selection
+        items={items}
+        label="Test Default Selected IDs"
+        selectionMode="multiple"
+      >
+        {(item) => <SelectItem>{item.value}</SelectItem>}
+      </Select>,
+    );
+
+    const selectedOptions = wrapper.getAllByRole("option", {selected: true});
+
+    expect(selectedOptions.length).toBe(2);
+    expect(selectedOptions.map((opt) => opt.textContent)).toEqual(["Penguin", "Zebra"]);
+  });
+
   it("onSelectionChange should be called with a Set of item ids upon selection", async () => {
     const itemsWithId = [
-      {id: "1", value: "penguin"},
-      {id: "2", value: "zebra"},
-      {id: "3", value: "shark"},
+      {id: 1, value: "penguin"},
+      {id: 2, value: "zebra"},
+      {id: 3, value: "shark"},
     ];
 
     const onSelectionChangeId = jest.fn();
@@ -365,7 +415,7 @@ describe("Select", () => {
         label="Test with ID"
         onSelectionChange={onSelectionChangeId}
       >
-        {(item) => <SelectItem key={item.id}>{item.value}</SelectItem>}
+        {(item) => <SelectItem>{item.value}</SelectItem>}
       </Select>,
     );
 
@@ -392,9 +442,9 @@ describe("Select", () => {
 
   it("onSelectionChange should be called with a Set of item keys upon selection", async () => {
     const itemsWithKey = [
-      {key: "1", value: "penguin"},
-      {key: "2", value: "zebra"},
-      {key: "3", value: "shark"},
+      {key: 1, value: "penguin"},
+      {key: 2, value: "zebra"},
+      {key: 3, value: "shark"},
     ];
 
     const onSelectionChangeKey = jest.fn();
@@ -405,7 +455,7 @@ describe("Select", () => {
         label="Test with Key"
         onSelectionChange={onSelectionChangeKey}
       >
-        {(item) => <SelectItem key={item.key}>{item.value}</SelectItem>}
+        {(item) => <SelectItem>{item.value}</SelectItem>}
       </Select>,
     );
 \n
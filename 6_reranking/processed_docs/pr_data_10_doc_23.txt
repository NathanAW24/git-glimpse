Pull Request Number: 3083
Title: fix(utilities): resolve TypeScript index signature issues in filterDOMProps
Base Branch: canary
Head Branch: filterdom
Author: Gaic4o
URL: https://github.com/nextui-org/nextui/pull/3083
State: CLOSED
Created At: 2024-05-26T14:43:20Z
Merged At: None
Participants: Gaic4o

Description:
üìù Description
Refactor the filterDOMProps function to properly handle TypeScript index signature issues by introducing a new type alias, DOMAndAriaProps.
type assertions are used to ensure type safety without using @ts-ignore.
‚õ≥Ô∏è Current behavior (updates)

The function filterDOMProps uses @ts-ignore to bypass TypeScript index signature issues.

üöÄ New behavior

Removed @ts-ignore by using type assertions to handle dynamic property access.
Updated filterDOMProps to use DOMAndAriaProps for both props and filteredProps.

üí£ Is this a breaking change (Yes/No):
No

Summary by CodeRabbit

Refactor

Improved TypeScript handling within the @nextui-org/react-rsc-utils package for better code quality and maintainability.

Commits:
- fix(utilities): resolve TypeScript index signature issues in filterDOMProps\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 751dab50927d52e55b0487c17cf67aa95f758b9d

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 47 packages</summary>

  | Name                        | Type  |
| --------------------------- | ----- |
| @nextui-org/react-rsc-utils | Patch |
| @nextui-org/divider         | Patch |
| @nextui-org/aria-utils      | Patch |
| @nextui-org/react-utils     | Patch |
| @nextui-org/accordion       | Patch |
| @nextui-org/listbox         | Patch |
| @nextui-org/menu            | Patch |
| @nextui-org/react           | Patch |
| @nextui-org/autocomplete    | Patch |
| @nextui-org/date-picker     | Patch |
| @nextui-org/dropdown        | Patch |
| @nextui-org/popover         | Patch |
| @nextui-org/select          | Patch |
| @nextui-org/tabs            | Patch |
| @nextui-org/tooltip         | Patch |
| @nextui-org/avatar          | Patch |
| @nextui-org/badge           | Patch |
| @nextui-org/breadcrumbs     | Patch |
| @nextui-org/button          | Patch |
| @nextui-org/calendar        | Patch |
| @nextui-org/card            | Patch |
| @nextui-org/checkbox        | Patch |
| @nextui-org/chip            | Patch |
| @nextui-org/code            | Patch |
| @nextui-org/date-input      | Patch |
| @nextui-org/image           | Patch |
| @nextui-org/input           | Patch |
| @nextui-org/kbd             | Patch |
| @nextui-org/link            | Patch |
| @nextui-org/modal           | Patch |
| @nextui-org/navbar          | Patch |
| @nextui-org/pagination      | Patch |
| @nextui-org/progress        | Patch |
| @nextui-org/radio           | Patch |
| @nextui-org/ripple          | Patch |
| @nextui-org/scroll-shadow   | Patch |
| @nextui-org/skeleton        | Patch |
| @nextui-org/slider          | Patch |
| @nextui-org/snippet         | Patch |
| @nextui-org/spacer          | Patch |
| @nextui-org/spinner         | Patch |
| @nextui-org/switch          | Patch |
| @nextui-org/table           | Patch |
| @nextui-org/user            | Patch |
| @nextui-org/system          | Patch |
| @nextui-org/use-real-shape  | Patch |
| @nextui-org/framer-utils    | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/Gaic4o/nextui/new/filterdom?filename=.changeset/cuddly-singers-trade.md&value=---%0A%22%40nextui-org%2Freact-rsc-utils%22%3A%20patch%0A---%0A%0Afix(utilities)%3A%20resolve%20TypeScript%20index%20signature%20issues%20in%20filterDOMProps%0A)

\n- vercel: [vc]: #7iIWW7ORyEOPVBfmG+42m9dSasXpNM1auwDJJDB/4QU=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvNXZWWkQzZ0xHU05TRmNpVHM5Y3dGMWdFcm1vaCIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWdhaWM0by1maWx0ZXJkb20tbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZvcmstZ2FpYzRvLWZpbHRlcmRvbS1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/5vVZD3gLGSNSFciTs9cwF1gErmoh)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-gaic4o-filterdom-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-gaic4o-filterdom-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 27, 2024 2:12pm |

\n- vercel: @Gaic4o is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%224ceea3bf2086753e14f6e91979526aecb34bedff%22%7D%2C%22id%22%3A%22Qmd6fEMfwSjPrppJzYEBZXjBn1Ym8Bjn3U1tC6o8YZo6Rj%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A3083%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The update to the `@nextui-org/react-rsc-utils` package enhances TypeScript support by replacing `@ts-ignore` with a new type alias, `DOMAndAriaProps`. This refactor improves the `filterDOMProps` function, allowing it to handle a broader range of properties more effectively by using a more generic type. This change ensures better type safety and maintainability in handling DOM and ARIA properties.

## Changes

| Files                                      | Change Summary                                                                 |
|--------------------------------------------|-------------------------------------------------------------------------------|
| `filter-dom-props.ts`                      | Refactored `filterDOMProps` to use `DOMAndAriaProps` type alias.              |
| `.../fuzzy-goats-train.md`                 | Documented changes and summary in the changeset file.                         |

## Sequence Diagram(s) (Beta)

```mermaid
sequenceDiagram
    participant Developer
    participant TypeScript
    participant filterDOMProps
    Developer->>TypeScript: Defines type alias `DOMAndAriaProps`
    TypeScript->>filterDOMProps: Uses `DOMAndAriaProps` as function parameter type
    filterDOMProps->>TypeScript: Filters properties based on `DOMAndAriaProps`
```

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

.changeset/fuzzy-goats-train.md: ## Summary

The new file introduces changes to the `@nextui-org/react-rsc-utils` package. It replaces the previous use of `@ts-ignore` with a new type alias, `DOMAndAriaProps`, to refactor the `filterDOMProps` function for proper handling of TypeScript index signature issues. The `filterDOMProps` function in `filter-dom-props.ts` now accepts a more generic `DOMAndAriaProps` type instead of specific `DOMProps & AriaLabelingProps`, allowing for a wider range of properties to be filtered out based on the provided options.

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR Summary

**Title:** fix(utilities): resolve TypeScript index signature issues in filterDOMProps  
**User:** Gaic4o  
**Number:** 3083  

**Description:**

The pull request refactors the `filterDOMProps` function to address TypeScript index signature issues. A new type alias, `DOMAndAriaProps`, is introduced to ensure type safety without using `@ts-ignore`. The current behavior involves using `@ts-ignore` to bypass TypeScript index signature issues. The new behavior removes `@ts-ignore` by employing type assertions for dynamic property access and updates `filterDOMProps` to use `DOMAndAriaProps` for both `props` and `filteredProps`. This change is not a breaking change.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated summary of generated summaries

The `@nextui-org/react-rsc-utils` package has been updated to improve TypeScript handling in the `filterDOMProps` function. The previous use of `@ts-ignore` has been replaced with a new type alias, `DOMAndAriaProps`. This refactor allows the `filterDOMProps` function to accept a more generic type, enhancing its ability to filter a wider range of properties based on the provided options.

### Alterations to the declarations of exported or public entities

#### Before Changes

```typescript
// filter-dom-props.ts
export function filterDOMProps(props: DOMProps & AriaLabelingProps, options?: FilterOptions): FilteredProps;
```

#### After Changes

```typescript
// filter-dom-props.ts
export function filterDOMProps(props: DOMAndAriaProps, options?: FilterOptions): FilteredProps;
```

### Summary of Changes

- **Type Alias Introduction**: Introduced `DOMAndAriaProps` type alias to replace the combined `DOMProps & AriaLabelingProps`.
- **Function Signature Update**: Updated the `filterDOMProps` function to use the new `DOMAndAriaProps` type, allowing for more flexible property filtering.
- **Feedback from the user on the previous review**: undefined

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 4ceea3bf2086753e14f6e91979526aecb34bedff -->
<!-- 751dab50927d52e55b0487c17cf67aa95f758b9d -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to full the review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/fuzzy-goats-train.md (added, 6 changes)\n  Patch: @@ -0,0 +1,6 @@
+---
+"@nextui-org/react-rsc-utils": patch
+---
+
+WHAT: Previously, @ts-ignore was used to bypass type errors. 
+Refactor the filterDOMProps function to properly handle TypeScript index signature issues by introducing a new type alias, DOMAndAriaProps. \n- packages/utilities/react-rsc-utils/src/filter-dom-props.ts (modified, 14 changes)\n  Patch: @@ -37,16 +37,15 @@ const propRe = /^(data-.*)$/;
 const ariaRe = /^(aria-.*)$/;
 const funcRe = /^(on[A-Z].*)$/;
 
+type DOMAndAriaProps = DOMProps & AriaLabelingProps;
+
 /**
  * Filters out all props that aren't valid DOM props or defined via override prop obj.
  * @param props - The component props to be filtered.
  * @param opts - Props to override.
  */
-export function filterDOMProps(
-  props: DOMProps & AriaLabelingProps,
-  opts: Options = {},
-): DOMProps & AriaLabelingProps {
-  let {
+export function filterDOMProps(props: DOMAndAriaProps, opts: Options = {}): DOMAndAriaProps {
+  const {
     labelable = true,
     enabled = true,
     propNames,
@@ -55,7 +54,7 @@ export function filterDOMProps(
     omitDataProps,
     omitEventProps,
   } = opts;
-  let filteredProps = {};
+  const filteredProps: Partial<DOMAndAriaProps> = {};
 
   if (!enabled) {
     return props;
@@ -89,8 +88,7 @@ export function filterDOMProps(
           propRe.test(prop))) ||
       funcRe.test(prop)
     ) {
-      // @ts-ignore
-      filteredProps[prop] = props[prop];
+      filteredProps[prop as keyof DOMAndAriaProps] = props[prop as keyof DOMAndAriaProps];
     }
   }
 \n
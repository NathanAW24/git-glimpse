Pull Request Number: 3081
Title: fix(select): placeholder text display for controlled component
Base Branch: canary
Head Branch: fix/eng-880
Author: ryo-manba
URL: https://github.com/nextui-org/nextui/pull/3081
State: MERGED
Created At: 2024-05-26T09:18:07Z
Merged At: 2024-05-26T20:07:36Z
Participants: ryo-manba, jrgarciadev, wingkwong

Description:
Closes #3062
üìù Description
Fixes the display of placeholder text when the Select component is unselected.
‚õ≥Ô∏è Current behavior (updates)
Placeholder text is not displayed.
üöÄ New behavior
Placeholder text is displayed correctly.
üí£ Is this a breaking change (Yes/No):

No.
üìù Additional Information

Summary by CodeRabbit

Bug Fixes

Fixed issue with placeholder text not displaying correctly in the Select component when unselected in controlled components.

Commits:
- fix: return placeholder when selectedItems is empty\n- chore: add test and changeset\n

Labels:


Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-880/[bug]-select">ENG-880 [BUG] - Select</a></p>\n- vercel: [vc]: #nQVKM0FZvk/LnCjDedJUyyIY2IOPXGmr05n+Fgb94C4=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi81R0ZFVEpNS1ZiaWJBSnNGeHRMV2d1WThEZ3R4IiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtZW5nLTg4MC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWZpeC1lbmctODgwLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvQlVVOXlRU1VBeXJVempvM3pNV0dNVmlpRFpuYyIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1maXgtZW5nLTg4MC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LWVuZy04ODAtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/5GFETJMKVbibAJsFxtLWguY8Dgtx)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-880-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-880-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 26, 2024 0:31am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/BUU9yQSUAyrUzjo3zMWGMViiDZnc)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-880-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-880-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 26, 2024 0:31am |


\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 6993190fb91c6b6a2cb5153327695ba74f1a6681

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name               | Type  |
| ------------------ | ----- |
| @nextui-org/select | Patch |
| @nextui-org/react  | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/eng-880?filename=.changeset/slow-fireants-enjoy.md&value=---%0A%22%40nextui-org%2Fselect%22%3A%20patch%0A---%0A%0Afix(select)%3A%20return%20placeholder%20when%20selectedItems%20is%20empty%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The update addresses a bug in the `@nextui-org/select` component where the placeholder text was not displayed when no selection was made in controlled components. The fix ensures that the placeholder is shown correctly when the state is empty. Additionally, new test cases have been added to validate this behavior.

## Changes

| File Path                                             | Change Summary                                                                                   |
|-------------------------------------------------------|--------------------------------------------------------------------------------------------------|
| .changeset/proud-baboons-cough.md                     | Introduces a patch for `@nextui-org/select` to fix the placeholder display issue in controlled components. |
| packages/components/select/__tests__/select.test.tsx  | Added test cases to ensure the placeholder text is displayed correctly when unselected in both normal and controlled states. |
| packages/components/select/src/select.tsx             | Updated the `renderSelectedItem` function to check the length of `state.selectedItems` before returning the placeholder. |

## Sequence Diagram(s) (Beta)

```mermaid
sequenceDiagram
    participant User
    participant SelectComponent
    participant State

    User->>SelectComponent: Open Select
    SelectComponent->>State: Check selectedItems length
    State-->>SelectComponent: Return empty
    SelectComponent->>User: Display placeholder

    User->>SelectComponent: Select an option
    SelectComponent->>State: Update selectedItems
    State-->>SelectComponent: Return selected option
    SelectComponent->>User: Display selected option
```

## Assessment against linked issues

| Objective                                                                                      | Addressed | Explanation                                                                 |
|------------------------------------------------------------------------------------------------|-----------|-----------------------------------------------------------------------------|
| Ensure the placeholder is displayed when no selection is made and state is empty (#3062)       | ‚úÖ        |                                                                             |
| Validate that the placeholder hides when an option is selected and displays the chosen option (#3062) | ‚úÖ        |                                                                             |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

.changeset/proud-baboons-cough.md: ## Summary

The file `proud-baboons-cough.md` introduces a patch for `@nextui-org/select` to fix the display of placeholder text when unselected for controlled components.

---

packages/components/select/__tests__/select.test.tsx: ## Short Summary
- Added test cases to ensure placeholder text is displayed correctly in the `Select` component when unselected, both in normal and controlled states.

## Alterations to the declarations of exported or public entities
- No alterations to the declarations of exported or public entities in this diff.

---

packages/components/select/src/select.tsx: ## Short Summary
The change in functionality involves updating the condition in the `renderSelectedItem` function in the `Select` component in `select.tsx` to check for the length of `state.selectedItems` before returning the placeholder.

## Alterations to the declarations of exported or public entities
- N/A

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

### PR Summary

**Title:** fix(select): return placeholder when selectedItems is empty  
**User:** ryo-manba  
**Number:** 3081  

**Description:**  
This pull request addresses the issue where the placeholder text is not displayed when the Select component is unselected. The fix ensures that the placeholder text is displayed correctly when no items are selected.

**Current Behavior:**  
Placeholder text is not displayed when the Select component is unselected.

**New Behavior:**  
Placeholder text is displayed correctly when no items are selected.

**Breaking Change:**  
No.

### Objectives from Linked Issues

**Issue Number:** #3062  
**Title:** [BUG] - Select  

**Description:**  
The bug report describes an issue with the Select component where the placeholder text is not displayed when nothing is selected, particularly when using the `onChange` event.

**NextUI Version:**  
2.3.6

**Steps to Reproduce the Bug or Issue:**
1. When nothing is selected, the placeholder is not displayed.
2. This issue occurs when using the `onChange` event.

**Expected Behavior:**  
When the state associated with the Select component is empty, the placeholder should be displayed. When the user selects an option, the placeholder should be hidden, and the selected option should be displayed.

**Operating System Version:**  
Windows 11 Home V-23H2

**Browser:**  
Chrome

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated Summary of Generated Summaries

The recent patch for the `@nextui-org/select` package addresses an issue with the display of placeholder text in the `Select` component when no item is selected, particularly for controlled components. The core change involves modifying the `renderSelectedItem` function in `select.tsx` to check the length of `state.selectedItems` before deciding whether to display the placeholder. Additionally, new test cases have been added in `select.test.tsx` to verify that the placeholder text is correctly displayed in both normal and controlled states. There are no alterations to the declarations of exported or public entities in this update.

### Alterations to the Declarations of Exported or Public Entities

- No alterations to the declarations of exported or public entities in this diff.
- **Feedback from the user on the previous review**: undefined

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- announcements_start -->

> [!TIP]
> <details>
> <summary>New Features and Improvements</summary>
> 
> ## Review Settings
> 
> Introduced new personality profiles for code reviews. Users can now select between "Chill" and "Assertive" review tones to tailor feedback styles according to their preferences. The "Assertive" profile posts more comments and nitpicks the code more aggressively, while the "Chill" profile is more relaxed and posts fewer comments.
> 
> ## AST-based Instructions
> 
> CodeRabbit offers customizing reviews based on the Abstract Syntax Tree (AST) pattern matching. Read more about AST-based instructions in the [documentation](https://docs.coderabbit.ai/guides/review-instructions#ast-based).
> 
> ## Community-driven AST-based Rules
> 
> We are kicking off a community-driven initiative to create and share AST-based rules. Users can now contribute their AST-based rules to detect security vulnerabilities, code smells, and anti-patterns. Please see the [ast-grep-essentials](https://github.com/coderabbitai/ast-grep-essentials) repository for more information.
> 
> ## New Static Analysis Tools
> 
> We are continually expanding our support for static analysis tools. We have added support for `biome`, `hadolint`, and `ast-grep`. Update the settings in your `.coderabbit.yaml` file or head over to the settings page to enable or disable the tools you want to use.
> 
> ## Tone Settings
> 
> Users can now customize CodeRabbit to review code in the style of their favorite characters or personalities. Here are some of our favorite examples:
> 
> - Mr. T: "You must talk like Mr. T in all your code reviews. I pity the fool who doesn't!"
> - Pirate: "Arr, matey! Ye must talk like a pirate in all yer code reviews. Yarrr!"
> - Snarky: "You must be snarky in all your code reviews. Snark, snark, snark!"
> 
> ## Revamped Settings Page
> 
> We have redesigned the settings page for a more intuitive layout, enabling users to find and adjust settings quickly. This change was long overdue; it not only improves the user experience but also allows our development team to add more settings in the future with ease. Going forward, the changes to `.coderabbit.yaml` will be reflected in the settings page, and vice versa.
> 
> ## Miscellaneous
> 
> - Turn off free summarization: You can switch off free summarization of PRs opened by users not on a paid plan using the `enable_free_tier` setting.
> - Knowledge-base scope: You can now set the scope of the knowledge base to either the repository (`local`) or the organization (`global`) level using the `knowledge_base` setting. In addition, you can specify Jira project keys and Linear team keys to limit the knowledge base scope for those integrations.
> - High-level summary placement: You can now customize the location of the high-level summary in the PR description using the `high_level_summary_placeholder` setting (default `@coderabbitai summary`).
> - Revamped request changes workflow: You can now configure CodeRabbit to auto-approve or request changes on PRs based on the review feedback using the `request_changes_workflow` setting.
> 
> </details>

<!-- announcements_end --><!-- commit_ids_reviewed_start -->

<!-- 6993190fb91c6b6a2cb5153327695ba74f1a6681 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to full the review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/proud-baboons-cough.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/select": patch
+---
+
+Fix: display placeholder text when unselected for controlled (#3062)\n- packages/components/select/__tests__/select.test.tsx (modified, 41 changes)\n  Patch: @@ -506,6 +506,47 @@ describe("Select", () => {
     // assert that the second select listbox is open
     expect(select2).toHaveAttribute("aria-expanded", "true");
   });
+
+  it("should display placeholder text when unselected", async () => {
+    const wrapper = render(
+      <Select
+        aria-label="Favorite Animal"
+        data-testid="test-select"
+        label="Favorite Animal"
+        placeholder="Select an animal"
+      >
+        <SelectItem key="penguin">Penguin</SelectItem>
+        <SelectItem key="zebra">Zebra</SelectItem>
+        <SelectItem key="shark">Shark</SelectItem>
+      </Select>,
+    );
+
+    const select = wrapper.getByTestId("test-select");
+
+    expect(select).toHaveTextContent("Select an animal");
+  });
+
+  it("should display placeholder text when unselected (controlled)", async () => {
+    const onSelectionChange = jest.fn();
+    const wrapper = render(
+      <Select
+        isOpen
+        aria-label="Favorite Animal"
+        data-testid="test-select"
+        placeholder="Select an animal"
+        selectedKeys={[]}
+        onSelectionChange={onSelectionChange}
+      >
+        <SelectItem key="penguin">Penguin</SelectItem>
+        <SelectItem key="zebra">Zebra</SelectItem>
+        <SelectItem key="shark">Shark</SelectItem>
+      </Select>,
+    );
+
+    const select = wrapper.getByTestId("test-select");
+
+    expect(select).toHaveTextContent("Select an animal");
+  });
 });
 
 describe("Select with React Hook Form", () => {\n- packages/components/select/src/select.tsx (modified, 2 changes)\n  Patch: @@ -75,7 +75,7 @@ function Select<T extends object>(props: Props<T>, ref: ForwardedRef<HTMLSelectE
   ]);
 
   const renderSelectedItem = useMemo(() => {
-    if (!state.selectedItems) return placeholder;
+    if (!state.selectedItems?.length) return placeholder;
 
     if (renderValue && typeof renderValue === "function") {
       const mappedItems = [...state.selectedItems].map((item) => ({\n
Pull Request Number: 2186
Title: feat(autocomplete): automatically focus first non-disabled item
Base Branch: canary
Head Branch: feat/listbox-autofocus
Author: juliesaia
URL: https://github.com/nextui-org/nextui/pull/2186
State: MERGED
Created At: 2023-12-31T08:29:50Z
Merged At: 2024-10-01T08:58:59Z
Participants: juliesaia, jsonMartin, gumgumalan, daniel-esserweb, wingkwong

Description:
üìù Description
Automatically focus the first selectable item in <Autocomplete />
‚õ≥Ô∏è Current behavior (updates)
Autocomplete doesn't really work as an autocomplete because you have to hover/click/press an arrow key to focus and element.
üöÄ New behavior
This PR makes the first non-disabled item automatically focus any time the item list changes.
üí£ Is this a breaking change (Yes/No):
Not really, honestly feels like more of a bug fix but I still called it a feature
üìù Additional Information


Summary by CodeRabbit


New Features

Enhanced autocomplete functionality to automatically focus on the first non-disabled item when rendered.



Bug Fixes

Improved handling of key events to maintain expected behavior during user interactions.

Commits:
- feat(autocomplete): automatically focus first non-disabled item\n- Merge branch 'canary' into feat/listbox-autofocus\n- chore(changeset): add changeset\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 1bb0a62cd8a622c5c31b6b8f49706915f8d27727

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/autocomplete | Patch |
| @nextui-org/react        | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/juliesaia/nextui/new/feat/listbox-autofocus?filename=.changeset/lazy-shirts-tickle.md&value=---%0A%22%40nextui-org%2Fautocomplete%22%3A%20patch%0A---%0A%0Afeat(autocomplete)%3A%20automatically%20focus%20first%20non-disabled%20item%0A)

\n- vercel: [vc]: #St3/Rl8PKgTLLEL9/3aMxbTX5c9+k9akxNtqyhGFX8U=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvNGJLVlFrVHVKVmNwdWI5TkZCaWNlM01ZMUR1MiIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWp1bGllc2FpYS1mZWF0LWwtMTU0Y2ZlLW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWp1bGllc2FpYS1mZWF0LWwtMTU0Y2ZlLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/4bKVQkTuJVcpub9NFBice3MY1Du2)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-juliesaia-feat-l-154cfe-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-juliesaia-feat-l-154cfe-nextui-org.vercel.app?via=pr-comment-feedback-link) | Dec 31, 2023 8:32am |

\n- vercel: @juliesaia is attempting to deploy a commit to the **NextUI** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%22b618ac497161ada420a45b8073d26ed1f551c99b%22%7D%2C%22id%22%3A%22Qmdfhw6NtovhMqSt3oJ6tBUtrFvx33zVAHNQrQ45oUJfbF%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A2186%2C%22repo%22%3A%22nextui%22%7D).

\n- jsonMartin: Nice, I'd really like this feature implemented! I wrote my own logic to handle this in an app I'm working on, but it's cumbersome and it would be really great to have this working out of the box. 

Any updates on getting this merged? \n- gumgumalan: How do I implement this locally? Thanks.\n- jsonMartin: > How do I implement this locally? Thanks.

Hi @gumgumalan , since this feature isn't baked in, I personally created a hook to watch for every time the Autocomplete is opened and then manually invoke `focus` on the DOM element to achieve this. Here's an example:

```typescript
// AutoFocus on the NextUI search input when the modal opens
useEffect(() => {
  if (!isOpen) return

  setTimeout(() => {
    const element: HTMLElement | null = document.querySelector(*ADD DOM REF HERE*)
    if (!element) console.warn('Not available for autofocus')
    else element?.focus()
  }, 10)
}, [isOpen, label])
```

\n- daniel-esserweb: I think this could be and awesome feature @wingkwong \n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: failure by coderabbit.ai -->

> [!CAUTION]
> ## Review failed
> 
> The pull request is closed.

<!-- end of auto-generated comment: failure by coderabbit.ai --><!-- walkthrough_start -->

## Walkthrough
The changes introduce functionality in the `useAutocomplete` function to automatically focus on the first non-disabled item in the autocomplete suggestions when rendered. This is accomplished by iterating through the items and setting the focused key accordingly, while preserving the existing logic for syncing the input value with the selected item. Additionally, minor adjustments were made to the handling of the `inputProps.onKeyDown` event to maintain default behavior.

## Changes

| Files                                      | Change Summary                                                                                          |
|--------------------------------------------|--------------------------------------------------------------------------------------------------------|
| packages/components/autocomplete/src/use-autocomplete.ts | Added logic to focus on the first non-disabled item in the autocomplete list upon rendering; adjusted `inputProps.onKeyDown` handling. |

## Possibly related PRs
- **#2854**: Modifies focus behavior in the `use-autocomplete.ts` file, related to item selection and focus management.
- **#3000**: Refines focus management in the `use-autocomplete.ts` file, enhancing focus handling for non-disabled items.
- **#3311**: Introduces a new property in the `useAutocomplete` function for managing focus behavior when the popover is open.
- **#3726**: Addresses keyboard navigation highlighting in the `AutocompleteSection`, relevant to item selection and user interaction.

## Suggested reviewers
- **jrgarciadev**: Suggested reviewer for the changes made in the `use-autocomplete.ts` file.

<!-- walkthrough_end --><!-- commit_ids_reviewed_start -->

<!-- 98bb6fb806454a314a1ed095dd60748fe9b369d0 -->

<!-- commit_ids_reviewed_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

packages/components/autocomplete/src/use-autocomplete.ts:

"""
## AI-generated summary of changes

The changes introduce a patch for the `@nextui-org/autocomplete` package, which implements functionality to automatically focus on the first non-disabled item within the autocomplete suggestions when the component is rendered. This is achieved by iterating through the collection of items and setting the focused key to the first available item that is not disabled. Additionally, the existing logic for syncing the input value with the selected item has been retained. The overall structure of the `useAutocomplete` function remains intact, with the new logic integrated into the existing flow without altering the function's signature or its primary responsibilities. Minor adjustments to the handling of the `inputProps.onKeyDown` event ensure that the default behavior of stopping propagation is maintained, improving user experience by allowing users to quickly navigate to the first available option without needing to manually select it.

## Alterations to the declarations of exported or public entities

- No alterations to the declarations of exported or public entities were made.
"""

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR Summary

The pull request titled "feat(autocomplete): automatically focus first non-disabled item" was submitted by user juliesaia. The main objective of this PR is to enhance the functionality of the `<Autocomplete />` component by automatically focusing the first selectable item whenever the item list changes. Currently, users must manually hover, click, or use arrow keys to focus on an item, which limits the usability of the autocomplete feature. The proposed change aims to streamline this process, making the component more intuitive and user-friendly. The author notes that while this change feels more like a bug fix, it has been categorized as a feature. Additionally, a visual representation of the change is provided in the form of an image. The author has indicated that this change does not introduce any breaking changes to the existing functionality.

## Comments Summary

Several comments have been made regarding the pull request. User jsonMartin expressed enthusiasm for the feature, mentioning that they had implemented their own workaround in a personal project, which they found cumbersome. They inquired about the status of the PR and its potential for merging.

User gumgumalan asked for guidance on how to implement the feature locally, indicating a desire to use the functionality before it is officially merged. In response, jsonMartin provided a solution involving a custom hook that watches for the opening of the Autocomplete component. They shared a code snippet demonstrating how to use the `useEffect` hook to focus on the desired DOM element when the Autocomplete is opened. The snippet includes a timeout to ensure the focus is applied correctly, along with a warning if the element is not available.

User daniel-esserweb also expressed support for the feature, suggesting that it could be a valuable addition to the project. Overall, the comments reflect a positive reception of the proposed changes, with users eager for the feature to be implemented and available for use.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/popular-pigs-begin.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/autocomplete": patch
+---
+
+automatically focus first non-disabled item\n- packages/components/autocomplete/src/use-autocomplete.ts (modified, 10 changes)\n  Patch: @@ -317,6 +317,16 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
     }
   }, [inputRef.current]);
 
+  // focus first non-disabled item
+  useEffect(() => {
+    let key = state.collection.getFirstKey();
+
+    while (key && state.disabledKeys.has(key)) {
+      key = state.collection.getKeyAfter(key);
+    }
+    state.selectionManager.setFocusedKey(key);
+  }, [state.collection, state.disabledKeys]);
+
   useEffect(() => {
     if (isOpen) {
       // apply the same with to the popover as the select\n
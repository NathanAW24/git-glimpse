Pull Request Number: 781
Title: fix(react): id mismatch during hydration
Base Branch: next
Head Branch: fix/hydration-mismatch
Author: tianenpang
URL: https://github.com/nextui-org/nextui/pull/781
State: CLOSED
Created At: 2022-09-22T13:59:56Z
Merged At: None
Participants: tianenpang, codecov-commenter, gauravkrp, jrgarciadev

Description:
Closes #198, #605
📝 Description
Fix id mismatch during hydration in strict mode.
Component Task

 Table
#778
 Collapse
 Navbar
 Input
#198
 Checkbox Group
 Radio
 Popover
 Dropdown
#605

⛳️ Current behavior (updates)
React 17

Generate id on the client side only.
Override the id generated by react-aria useId.

React 18

The id'll be generated by react's built-in useId.

🚀 New behavior

Add useId hook for generating id.

💣 Is this a breaking change (Yes/No):
No
📝 Additional Information

Note Based on next branch.

Commits:
- feat(react): add use-id hook\n- fix(react-collapse): id hydration mismatch\n- fix(react-input): id hydration mismatch\n- fix(react-checkbox-group): id hydration mismatch\n- chore(react-hook): clean up use-id\n- fix(react-radio): id and name hydration mismatch\n- fix(react-navbar): id hydration mismatch\n- fix(react-popover): id hydration mismatch\n- fix(react-dropdown): id hydration mismatch\n

Labels:


Comments:
- vercel: **The latest updates on your projects**. Learn more about [Vercel for Git ↗︎](https://vercel.link/github-learn-more)

| Name | Status | Preview | Updated |
| :--- | :----- | :------ | :------ |
| **nextui-storybook** | ✅ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook/8ipW2M7fH2UTojWLhEiB3pb6ZeDL)) | [Visit Preview](https://nextui-storybook-git-fork-tianenpang-fix-hydr-2753cf-nextui-org.vercel.app) | Sep 24, 2022 at 5:33PM (UTC) |

\n- vercel: @tianenpang is attempting to deploy a commit to the **NextUI** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%229eeb1152d0cbd95e472a2b2c1f17a9ef65a868bd%22%7D%2C%22id%22%3A%22QmfLgixqkpxaQ471kGAppqyWxYbVdWu3SWFbXRJx3Zyefw%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A781%2C%22repo%22%3A%22nextui%22%7D).

\n- codecov-commenter: # [Codecov](https://codecov.io/gh/nextui-org/nextui/pull/781?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) Report
> Merging [#781](https://codecov.io/gh/nextui-org/nextui/pull/781?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) (9eeb115) into [main](https://codecov.io/gh/nextui-org/nextui/commit/997dff897e30043da6f404221db63d3761f1f758?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) (997dff8) will **decrease** coverage by `0.34%`.
> The diff coverage is `57.69%`.

```diff
@@            Coverage Diff             @@
##             main     #781      +/-   ##
==========================================
- Coverage   74.77%   74.43%   -0.35%     
==========================================
  Files         223      224       +1     
  Lines        3501     3532      +31     
  Branches     1105     1125      +20     
==========================================
+ Hits         2618     2629      +11     
- Misses        868      888      +20     
  Partials       15       15              
```


| [Impacted Files](https://codecov.io/gh/nextui-org/nextui/pull/781?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) | Coverage Δ | |
|---|---|---|
| [packages/react/src/checkbox/checkbox.styles.ts](https://codecov.io/gh/nextui-org/nextui/pull/781/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2NoZWNrYm94L2NoZWNrYm94LnN0eWxlcy50cw==) | `100.00% <ø> (ø)` | |
| [packages/react/src/checkbox/checkbox.tsx](https://codecov.io/gh/nextui-org/nextui/pull/781/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2NoZWNrYm94L2NoZWNrYm94LnRzeA==) | `100.00% <ø> (ø)` | |
| [packages/react/src/checkbox/use-checkbox.ts](https://codecov.io/gh/nextui-org/nextui/pull/781/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2NoZWNrYm94L3VzZS1jaGVja2JveC50cw==) | `91.66% <ø> (ø)` | |
| [packages/react/src/dropdown/dropdown.tsx](https://codecov.io/gh/nextui-org/nextui/pull/781/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2Ryb3Bkb3duL2Ryb3Bkb3duLnRzeA==) | `100.00% <ø> (ø)` | |
| [packages/react/src/input/index.ts](https://codecov.io/gh/nextui-org/nextui/pull/781/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2lucHV0L2luZGV4LnRz) | `100.00% <ø> (ø)` | |
| [packages/react/src/input/input.tsx](https://codecov.io/gh/nextui-org/nextui/pull/781/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2lucHV0L2lucHV0LnRzeA==) | `95.55% <ø> (ø)` | |
| [packages/react/src/link/link.styles.ts](https://codecov.io/gh/nextui-org/nextui/pull/781/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2xpbmsvbGluay5zdHlsZXMudHM=) | `100.00% <ø> (ø)` | |
| [packages/react/src/popover/popover.styles.ts](https://codecov.io/gh/nextui-org/nextui/pull/781/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL3BvcG92ZXIvcG9wb3Zlci5zdHlsZXMudHM=) | `100.00% <ø> (ø)` | |
| [packages/react/src/radio/radio.tsx](https://codecov.io/gh/nextui-org/nextui/pull/781/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL3JhZGlvL3JhZGlvLnRzeA==) | `100.00% <ø> (ø)` | |
| [packages/react/src/radio/use-radio-group.ts](https://codecov.io/gh/nextui-org/nextui/pull/781/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL3JhZGlvL3VzZS1yYWRpby1ncm91cC50cw==) | `100.00% <ø> (ø)` | |
| ... and [12 more](https://codecov.io/gh/nextui-org/nextui/pull/781/diff?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) | |

Help us with your feedback. Take ten seconds to tell us [how you rate us](https://about.codecov.io/nps?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None). Have a feature suggestion? [Share it here.](https://app.codecov.io/gh/feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None)
\n- gauravkrp: Can we escalate this ?\n

Files Changed:
- packages/react/src/checkbox/use-checkbox-group.ts (modified, 18 changes)\n  Patch: @@ -5,7 +5,10 @@ import type {NormalSizes, NormalColors, SimpleColors} from "../utils/prop-types"
 
 import {useCheckboxGroup as useReactAriaCheckboxGroup} from "@react-aria/checkbox";
 import {useCheckboxGroupState} from "@react-stately/checkbox";
-import React from "react";
+import {mergeProps} from "@react-aria/utils";
+import React, {useMemo} from "react";
+
+import useId from "../use-id";
 
 interface Props extends AriaCheckboxGroupProps {
   size?: NormalSizes;
@@ -31,9 +34,20 @@ export const useCheckboxGroup = (props: UseCheckboxGroupProps = {}) => {
     ...otherProps
   } = props;
 
+  const labelId = useId();
+  const id = useId(props?.id);
+
   const groupState = useCheckboxGroupState(otherProps);
 
-  const {labelProps, groupProps} = useReactAriaCheckboxGroup(otherProps, groupState);
+  const checkboxGroup = useReactAriaCheckboxGroup(otherProps, groupState);
+
+  const groupProps = useMemo(() => {
+    return mergeProps(checkboxGroup.groupProps, {id, "aria-labelledby": labelId});
+  }, [checkboxGroup.groupProps, id, labelId]);
+
+  const labelProps = useMemo(() => {
+    return mergeProps(checkboxGroup.labelProps, {id: labelId});
+  }, [checkboxGroup.labelProps, labelId]);
 
   return {
     css,\n- packages/react/src/collapse/collapse.tsx (modified, 2 changes)\n  Patch: @@ -1,6 +1,5 @@
 import React, {useEffect, useMemo} from "react";
 import {useFocusRing} from "@react-aria/focus";
-import {useId} from "@react-aria/utils";
 
 import {warn} from "../utils/console";
 import useCurrentState from "../use-current-state";
@@ -9,6 +8,7 @@ import {CSS} from "../theme/stitches.config";
 import useKeyboard, {KeyCode} from "../use-keyboard";
 import clsx from "../utils/clsx";
 import withDefaults from "../utils/with-defaults";
+import useId from "../use-id";
 
 import CollapseGroup from "./collapse-group";
 import {useCollapseContext} from "./collapse-context";\n- packages/react/src/dropdown/use-dropdown.ts (modified, 15 changes)\n  Patch: @@ -1,9 +1,10 @@
-import {useRef, useCallback} from "react";
+import {useRef, useCallback, useMemo} from "react";
 import {mergeProps} from "@react-aria/utils";
 import {MenuTriggerType} from "@react-types/menu";
 import {useMenuTrigger} from "@react-aria/menu";
 import {useMenuTriggerState} from "@react-stately/menu";
 
+import useId from "../use-id";
 import {mergeRefs} from "../utils/refs";
 import {PopoverProps} from "../popover";
 
@@ -47,6 +48,8 @@ export function useDropdown(props: UseDropdownProps = {}) {
     ...popoverProps
   } = props;
 
+  const triggerId = useId();
+
   const triggerRef = useRef<HTMLElement>(null);
   const menuTriggerRef = triggerRefProp || triggerRef;
   const menuRef = useRef<HTMLUListElement>(null);
@@ -79,13 +82,21 @@ export function useDropdown(props: UseDropdownProps = {}) {
             }
           : css,
         ...realTriggerProps,
+        id: triggerId,
       };
     },
-    [triggerRef, triggerRefProp, menuTriggerProps, disableTriggerPressedAnimation],
+    [triggerRef, triggerRefProp, menuTriggerProps, disableTriggerPressedAnimation, triggerId],
   );
 
+  const ariaProps = useMemo(() => {
+    return {
+      "aria-labelledby": triggerId,
+    };
+  }, [triggerId]);
+
   return {
     ...menuProps,
+    ...ariaProps,
     popoverProps,
     state,
     ref: menuRef,\n- packages/react/src/input/input.tsx (modified, 4 changes)\n  Patch: @@ -16,6 +16,7 @@ import {warn} from "../utils/console";
 import ClearIcon from "../utils/clear-icon";
 import clsx from "../utils/clsx";
 import {__DEV__} from "../utils/assertion";
+import useId from "../use-id";
 
 import {
   StyledInput,
@@ -98,6 +99,8 @@ const Input = React.forwardRef<FormElement, InputProps>(
 
     useImperativeHandle(ref, () => inputRef.current);
 
+    const id = useId(props?.id);
+
     const [selfValue, setSelfValue] = useState<string>(initialValue);
     const [hover, setHover] = useState<boolean>(false);
 
@@ -176,6 +179,7 @@ const Input = React.forwardRef<FormElement, InputProps>(
     const inputProps = {
       ...props,
       ...controlledValue,
+      id,
     };
 
     const {labelProps, fieldProps} = useLabel({\n- packages/react/src/navbar/navbar-item.tsx (modified, 2 changes)\n  Patch: @@ -1,14 +1,14 @@
 import React, {useMemo, useEffect} from "react";
 import {useHover} from "@react-aria/interactions";
 import {mergeProps} from "@react-aria/utils";
-import {useId} from "@react-aria/utils";
 
 import {HTMLNextUIProps, forwardRef} from "../utils/system";
 import {useDOMRef} from "../utils/dom";
 import {arrayToObject} from "../utils/object";
 import clsx from "../utils/clsx";
 import {Text} from "../index";
 import {__DEV__} from "../utils/assertion";
+import useId from "../use-id";
 
 import {useNavbarContentContext} from "./navbar-content-context";
 import {StyledNavbarItem, NavbarItemVariantsProps} from "./navbar.styles";\n- packages/react/src/popover/use-popover.ts (modified, 12 changes)\n  Patch: @@ -6,6 +6,7 @@ import {mergeProps} from "@react-aria/utils";
 import {useOverlayPosition, useOverlayTrigger} from "@react-aria/overlays";
 import {useOverlayTriggerState} from "@react-stately/overlays";
 
+import useId from "../use-id";
 import {mergeRefs} from "../utils/refs";
 import {isObject} from "../utils/object";
 
@@ -91,6 +92,8 @@ export function usePopover(props: UsePopoverProps = {}) {
     shouldCloseOnInteractOutside,
   } = props;
 
+  const id = useId();
+
   const domRef = useRef<HTMLElement>(null);
   const domTriggerRef = useRef<HTMLElement>(null);
 
@@ -140,16 +143,18 @@ export function usePopover(props: UsePopoverProps = {}) {
 
   const getTriggerProps = useCallback(
     (props = {}, _ref = null) => {
+      const aria = {"aria-controls": id};
+
       const realTriggerProps = triggerRefProp?.current
-        ? mergeProps(triggerProps, props)
-        : mergeProps(props, triggerProps);
+        ? mergeProps(triggerProps, props, aria)
+        : mergeProps(props, triggerProps, aria);
 
       return {
         ...realTriggerProps,
         ref: mergeRefs(triggerRef, _ref),
       };
     },
-    [triggerRef, triggerRefProp, triggerProps],
+    [triggerRef, triggerRefProp, triggerProps, id],
   );
 
   const getPopoverProps = useCallback(
@@ -186,6 +191,7 @@ export function usePopover(props: UsePopoverProps = {}) {
         ...realPositionProps,
         "data-state": getState,
         "data-placement": placement,
+        id,
       };
     },
     [getState, positionProps, overlayProps, placement],\n- packages/react/src/radio/use-radio-group.ts (modified, 20 changes)\n  Patch: @@ -2,9 +2,12 @@ import type {AriaRadioGroupProps} from "@react-types/radio";
 import type {NormalSizes, SimpleColors} from "../utils/prop-types";
 
 import React, {useMemo, HTMLAttributes} from "react";
+import {mergeProps} from "@react-aria/utils";
 import {useRadioGroupState} from "@react-stately/radio";
 import {useRadioGroup as useReactAriaRadioGroup} from "@react-aria/radio";
 
+import useId from "../use-id";
+
 interface Props extends AriaRadioGroupProps {
   size?: NormalSizes;
   color?: SimpleColors;
@@ -36,21 +39,33 @@ export const useRadioGroup = (props: UseRadioGroupProps) => {
     ...otherProps
   } = props;
 
+  const labelId = useId();
+  const id = useId(props?.id);
+  const name = useId(props?.name);
+
   const otherPropsWithOrientation = useMemo<AriaRadioGroupProps>(() => {
     return {
       ...otherProps,
       isRequired,
       orientation,
     };
-  }, [otherProps]);
+  }, [otherProps, isRequired, orientation]);
 
   const radioGroupState = useRadioGroupState(otherPropsWithOrientation);
 
-  const {radioGroupProps, labelProps}: IRadioGroupAria = useReactAriaRadioGroup(
+  const radioGroup: IRadioGroupAria = useReactAriaRadioGroup(
     otherPropsWithOrientation,
     radioGroupState,
   );
 
+  const radioGroupProps = useMemo(() => {
+    return mergeProps(radioGroup.radioGroupProps, {id, "aria-labelledby": labelId});
+  }, [radioGroup.radioGroupProps, id, labelId]);
+
+  const labelProps = useMemo(() => {
+    return mergeProps(radioGroup.labelProps, {id: labelId});
+  }, [radioGroup.labelProps, labelId]);
+
   return {
     size,
     color,
@@ -61,6 +76,7 @@ export const useRadioGroup = (props: UseRadioGroupProps) => {
     radioGroupState,
     radioGroupProps,
     labelProps,
+    name,
   };
 };
 \n- packages/react/src/radio/use-radio.ts (modified, 6 changes)\n  Patch: @@ -50,7 +50,7 @@ export const useRadio = (props: UseRadioProps) => {
 
   const inputRef = useRef<HTMLInputElement>(null);
 
-  const {inputProps} = useReactAriaRadio(
+  const radio = useReactAriaRadio(
     {
       ...otherProps,
       ...groupContext,
@@ -60,6 +60,10 @@ export const useRadio = (props: UseRadioProps) => {
     inputRef,
   );
 
+  const inputProps = useMemo(() => {
+    return {...radio.inputProps, name: groupContext.name};
+  }, [radio.inputProps, groupContext.name]);
+
   const isDisabled = useMemo(() => inputProps.disabled ?? false, [inputProps.disabled]);
 
   const {hoverProps, isHovered} = useHover({isDisabled});\n- packages/react/src/use-id/index.ts (added, 3 changes)\n  Patch: @@ -0,0 +1,3 @@
+import {useId} from "./use-id";
+
+export default useId;\n- packages/react/src/use-id/use-id.ts (added, 17 changes)\n  Patch: @@ -0,0 +1,17 @@
+import {useState} from "react";
+
+import {useReactId, useIsomorphicLayoutEffect, formatId} from "./utils";
+
+let identifier = 0;
+
+export const useId = (id?: string): string => {
+  const initial = useReactId();
+
+  const [clientSideId, setClientSideId] = useState<number | string | undefined>(id ?? initial);
+
+  useIsomorphicLayoutEffect(() => {
+    if (!clientSideId) setClientSideId((prevId) => prevId ?? ++identifier);
+  }, []);
+
+  return formatId(clientSideId);
+};\n- packages/react/src/use-id/utils.ts (added, 18 changes)\n  Patch: @@ -0,0 +1,18 @@
+import type {DependencyList, EffectCallback} from "react";
+
+import React, {useEffect, useLayoutEffect} from "react";
+
+const __CLIENT__ = typeof window !== "undefined" && typeof window.document !== "undefined";
+
+export const useReactId: () => string | undefined = (React as any).useId ?? (() => undefined);
+
+export const useIsomorphicLayoutEffect: (
+  effect: EffectCallback,
+  deps?: DependencyList | undefined,
+) => void = __CLIENT__ ? useLayoutEffect : useEffect;
+
+export const formatId = (value?: number | string): string => {
+  if (typeof value === "string") return value;
+
+  return value ? `:nextui-${value}:` : "";
+};\n
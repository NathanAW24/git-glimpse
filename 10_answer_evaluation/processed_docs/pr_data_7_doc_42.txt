Pull Request Number: 3442
Title: docs(table): supplement string typing in table row key 
Base Branch: canary
Head Branch: docs/react-key-in-table-aumatically-converted-to-string
Author: awesome-pro
URL: https://github.com/nextui-org/nextui/pull/3442
State: CLOSED
Created At: 2024-07-10T12:38:45Z
Merged At: None
Participants: awesome-pro, wingkwong

Description:
Closes #3238
üìù Description
Added the note to prevent possible bugs due to react key
React keys are automatically converted to strings. When using the Table component, ensure that all keys (e.g., row IDs) are treated as strings to avoid type mismatch issues.
‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

üí£ Is this a breaking change (Yes/No): No

üìù Additional Information
A very simple Docs Change

Summary by CodeRabbit


New Features

Added new event handlers for date picker component to improve focus and change events.
Updated popover placement from "right" to "top" for better usability.



Documentation

Enhanced notes on key prop matching and React key conversion for the Table component to improve developer guidance.

Commits:
- docs(table): react keys in table automatically converted to string\n- docs(table): react keys in table automatically converted to string\n- docs(table): react keys in table automatically converted to string\n- docs(table): react keys in table automatically converted to string\n- docs(table): react keys in table automatically converted to string\n- docs(table): react keys in table automatically converted to string\n- docs(table): react keys in table automatically converted to string\n- docs(table): react keys in table automatically converted to string\n

Labels:
üöß Status: Changes Requested, üìã Scope : Docs

Comments:
- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: 60e4f7640194ef14bc5a2a505cca5c25ffed1de2

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/abhinandan-verma/nextui/new/docs/react-key-in-table-aumatically-converted-to-string?filename=.changeset/wicked-turkeys-applaud.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A---%0A%0Adocs(table)%3A%20supplement%20string%20typing%20in%20table%20row%20key%20%0A)

\n- vercel: @abhinandan-verma is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%22b318194d853e0ba2381b10121853d505f7ed2b15%22%7D%2C%22id%22%3A%22QmZaXZzr1zbn9QJC5vSxcVo366BoF2mkTRgQNWWBZioHdU%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A3442%2C%22repo%22%3A%22nextui%22%7D).

\n- vercel: [vc]: #GfBT3aquwfBmlOaUpr0neHtvjM4kYxRta7WtwAU2YyA=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvREpSbXRtdTV6aWFiaUxqaExEMXVhNXVVOHlTdyIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWFiaGluYW5kYW4tdmVybWEtNTlkY2FlLW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWFiaGluYW5kYW4tdmVybWEtNTlkY2FlLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9BNHBrTDJSRjJBa3k2WnNVVmJic0JYN0pDdFBlIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1mb3JrLWFiaGluYW5kYW4tdmVybWEtZG9jcy03ODA2YzYtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1kb2NzLXYyLWdpdC1mb3JrLWFiaGluYW5kYW4tdmVybWEtZG9jcy03ODA2YzYtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/A4pkL2RF2Aky6ZsUVbbsBX7JCtPe)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fork-abhinandan-verma-docs-7806c6-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fork-abhinandan-verma-docs-7806c6-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jul 13, 2024 9:40am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/DJRmtmu5ziabiLjhLD1ua5uU8ySw)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-abhinandan-verma-59dcae-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-abhinandan-verma-59dcae-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jul 13, 2024 9:40am |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The changes involve updates and enhancements for three components: Table, Popover, and DatePicker. The Table component documentation has been clarified regarding key prop matching and React key conversions. The Popover component's default placement has been changed from "right" to "top". For the DatePicker component, new event handlers have been introduced for `onFocusChange` and `onChange`, improving its behavior in response to focus changes and value updates.

## Changes

| File(s)                                                                                   | Change Summary                                                                                                                      |
|-------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------|
| `apps/docs/content/docs/components/table.mdx`                                             | Added notes on key prop matching and React key conversion for the Table component.                                                  |
| `apps/docs/content/components/popover/usage.ts`                                           | Changed the popover placement from "right" to "top".                                                                                |
| `packages/components/date-picker/src/use-date-picker.ts`                                  | Introduced new event handlers `onFocusChange` and `onChange`, triggering `onClose()` and `state.close()`.                           |
| `packages/components/date-picker/stories/date-picker.stories.tsx`                         | Modified `ControlledTemplate` function to include `calendarProps` with `focusedValue` and `onFocusChange`.                          |

## Assessment against linked issues

| Objective                                                      | Addressed | Explanation                                                                                   |
|----------------------------------------------------------------|-----------|-----------------------------------------------------------------------------------------------|
| Clarify documentation about key prop matching and React keys (3238) | ‚úÖ         |                                                                                               |
| Ensure `Table` API respects data type of provided keys (3238)       | ‚ùì         | Documentation has been clarified, but no code changes were noted to ensure type consistency.  |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

# Existing changesets

apps/docs/content/docs/components/table.mdx: ### Summary

In `apps/docs/content/docs/components/table.mdx`, the change introduces additional notes regarding key prop matching in row selection and the conversion of React keys to strings when using the `Table` component, enhancing clarity and guidance for developers.

---

apps/docs/content/components/popover/usage.ts: ## Short summary

In the `usage.ts` file for the popover component, the placement of the popover has been changed from "right" to "top".

## Alterations to the declarations of exported or public entities

No alterations to the declarations of exported or public entities in the `usage.ts` file.

---

packages/components/date-picker/src/use-date-picker.ts: ## Short Summary

The functionality change in `use-date-picker.ts` involves introducing new event handlers for `onFocusChange` and `onChange`, which now trigger `onClose()` and `state.close()`, respectively, in addition to existing logic.

## Alterations to the declarations of exported or public entities

- `export function useDatePicker<T extends DateValue>({` in `packages/components/date-picker/src/use-date-picker.ts`
  - Added `onFocusChange: (isFocused) => void`
  - Added `onChange: (value) => void`

---

packages/components/date-picker/stories/date-picker.stories.tsx: ## Short Summary
The change in functionality involves modifying the `DatePicker` component in the `ControlledTemplate` function to include `calendarProps` with `focusedValue` and `onFocusChange`, enhancing its behavior related to date selection.

## Alterations to the declarations of exported or public entities
- `const ControlledTemplate = (args: DatePickerProps) =>` in `packages/components/date-picker/stories/date-picker.stories.tsx` 
  ‚Üí 
  `const ControlledTemplate = (args: DatePickerProps & { calendarProps: { focusedValue: any; onFocusChange: any; } }) =>`


# New changesets

apps/docs/content/docs/components/table.mdx: ### Summary

In `apps/docs/content/docs/components/table.mdx`, the change introduces additional notes regarding key prop matching in row selection and the conversion of React keys to strings when using the `Table` component, enhancing clarity and guidance for developers.

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR Summary

**Title**: docs(table): supplement string typing in table row key  
**User**: abhinandan-verma  
**Number**: 3442  
**URL**: [https://github.com/nextui-org/nextui/pull/3442](https://github.com/nextui-org/nextui/pull/3442)

**Description**:  
This pull request addresses the need to supplement string typing in table row keys within the NextUI documentation. It adds a note to prevent potential bugs due to React key handling. React keys are automatically converted to strings, and the documentation now advises that all keys (e.g., row IDs) should be treated as strings to avoid type mismatch issues. This change is intended to prevent equality comparison failures that may occur when number IDs/keys are converted to strings.

## Objectives from Linked Issues

**Linked Issue**: #3238 - [BUG] - Table Row Key forces string typing.

**Description**:  
The linked issue highlights a bug in the documentation regarding keys for Table Rows. The typing implies that keys are React.Key, which allows both numbers and strings. However, in practice, number IDs/keys are converted to strings, causing equality comparisons to fail. The issue includes a workaround to convert number IDs to strings to avoid breaking other parts of the project. The expected behavior is for the Table API to respect the data type of the provided keys or for the documentation to clearly state otherwise.

## Comments Summary

1. **abhinandan-verma**: 
   - Mentioned intent to solve all unsolved documentation bugs in the same PR and then update the title accordingly.
   
2. **abhinandan-verma**:
   - Reported an issue with `placement="right"` in the documentation for popovers, suggesting that many popovers are not working properly and indicating a workaround in this PR.
   
3. **wingkwong**:
   - Advised not to mix multiple issues into one PR and requested clarification on the popover issue.
   
4. **wingkwong**:
   - Acknowledged the popover issue and instructed abhinandan-verma to remove the changes related to popovers from this PR, stating that those changes would not be accepted.
   
5. **abhinandan-verma**:
   - Asked if wingkwong was working on the popover issues or if they should continue investigating.
   
6. **wingkwong**:
   - Suggested that abhinandan-verma could investigate the popover issue but emphasized the importance of finishing the current PR first, noting that previous comments had not yet been resolved.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

## Summary of Generated Summaries

The changes across various files primarily focus on enhancing functionality and improving documentation clarity. In the `apps/docs/content/docs/components/table.mdx` file, additional notes were added to explain key prop matching in row selection and the conversion of React keys to strings, providing better guidance for developers using the `Table` component. The `apps/docs/content/components/popover/usage.ts` file saw a change in the popover's placement from "right" to "top," with no alterations to exported or public entities.

Significant updates were made to the `packages/components/date-picker/src/use-date-picker.ts` file, where new event handlers `onFocusChange` and `onChange` were introduced. These handlers now trigger `onClose()` and `state.close()`, respectively, in addition to the existing logic. Correspondingly, the `packages/components/date-picker/stories/date-picker.stories.tsx` file was updated to modify the `DatePicker` component in the `ControlledTemplate` function. This modification includes `calendarProps` with `focusedValue` and `onFocusChange`, enhancing the component's behavior related to date selection.

## Alterations to the Declarations of Exported or Public Entities

### `packages/components/date-picker/src/use-date-picker.ts`

**Before:**
```typescript
export function useDatePicker<T extends DateValue>({ ... }): ReturnType { ... }
```

**After:**
```typescript
export function useDatePicker<T extends DateValue>({ 
  onFocusChange: (isFocused) => void, 
  onChange: (value) => void, 
  ... 
}): ReturnType { ... }
```

### `packages/components/date-picker/stories/date-picker.stories.tsx`

**Before:**
```typescript
const ControlledTemplate = (args: DatePickerProps) => { ... }
```

**After:**
```typescript
const ControlledTemplate = (args: DatePickerProps & { 
  calendarProps: { 
    focusedValue: any; 
    onFocusChange: any; 
  } 
}) => { ... }
```

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- b318194d853e0ba2381b10121853d505f7ed2b15 -->
<!-- 0a25f3177d5e163e6d4325e6d60d0e10d6ca7f3c -->
<!-- 9efc1b4cc2dff735481de0dbf91c0843aaa002f2 -->
<!-- 24bb056a87815071c71ed944f6b24141f2d06376 -->
<!-- e9158140f4791841b7b262cfbad409e82eeeb592 -->
<!-- d096343d3e0b07cb73b4912ccebeae7310850bcc -->
<!-- a8cec9a29b23230cbd1c46aa5ab5f9c4628dafd6 -->
<!-- 432f9fd78faf571ba8c2201d1b2d865082b9e5ad -->
<!-- 60e4f7640194ef14bc5a2a505cca5c25ffed1de2 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- awesome-pro: @wingkwong  I will solve all the unsolved bugs on  docs in this same PR. And then I will change the title.\n- awesome-pro: @wingkwong  Sir, there is some issue with `placement="right"` in docs for popover. This PR is just a workaround.
Many Popover are not working properly in docs.
I am working to resolve it.\n- wingkwong: > @wingkwong Sir, there is some issue with `placement="right"` in docs for popover. This PR is just a workaround. Many Popover are not working properly in docs. I am working to resolve it.

what is the issue? please don't mix multiple issues into one PR.\n- wingkwong: @abhinandan-verma Okay I got the popover issue now. Please remove your change from this PR and don't link those popover issues. That change will not be accepted\n- awesome-pro: @wingkwong  are you working on popover issues or I should work ?
\n- wingkwong: You can investigate it but first finish this PR first. My comments are not resolved yet.\n- wingkwong: Closing - inactivity\n

Files Changed:
- apps/docs/content/docs/components/table.mdx (modified, 4 changes)\n  Patch: @@ -149,7 +149,9 @@ provide a default set of selected rows.
 
 <CodeDemo title="Single Row Selection" files={tableContent.singleSelection} />
 
-> **Note**: The value of the selected keys must match the key prop of the row.
+> **Note**:
+> - The value of the selected keys must match the `key` prop of the row.
+> - React keys are automatically converted to strings. When using the `Table` component, ensure that all row keys are treated as strings to avoid type mismatch issues. For more information, refer [here](https://softwareengineering.stackexchange.com/questions/381268/why-are-react-keys-limited-to-strings/432948#432948).
 
 ### Multiple Row Selection
 \n
Pull Request Number: 2818
Title: feat(modal): add draggable modal
Base Branch: canary
Head Branch: feat/add-draggable-modal
Author: wzc520pyfm
URL: https://github.com/nextui-org/nextui/pull/2818
State: CLOSED
Created At: 2024-04-20T10:39:41Z
Merged At: None
Participants: wzc520pyfm, wingkwong, jrgarciadev, AnYiEE, ryo-manba

Description:
Closes #2647
üìù Description

Add a brief description

This pr adds dragging behavior to modal by providing useDraggable hook.
‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

No
üöÄ New behavior

Please describe the behavior or changes this PR adds

This pr adds dragging behavior to modal by providing useDraggable hook.
üí£ Is this a breaking change (Yes/No):
No

üìù Additional Information
No
üëÄPreview


  
    
    

    Screen-2024-04-20-193626.mp4
    
  

  

  



Summary by CodeRabbit


New Features

Enhanced modal components with draggable header functionality and overflow handling.
Introduced DraggableTemplate and DraggableOverflowTemplate components for improved user interaction.
Added a new draggable modal component that allows users to drag the modal around the viewport.



Documentation

Updated modal documentation to reflect new draggable features and component behavior, including descriptions and examples.



Tests

Added tests to ensure the correct functionality of draggable modals and overflow handling across different viewport sizes.

Commits:
- feat(hooks): add use-draggable hook\n- feat(components): [modal] export use-draggable\n- docs(components): [modal] add draggable modal\n- feat(components): [modal] add ref prop for modal-header\n- chore(components): [modal] add draggable modal for storybook\n- chore: add changeset for draggable modal\n- docs(hooks): [use-draggable] fix typo\n- chore: upper changeset\n- chore(components): [modal] add overflow draggable modal to sb\n- test(components): [modal] add draggable modal tests\n- build: update pnpm-lock\n- Merge branch 'main' into pr/2818\n- chore(changeset): include issue number\n- Merge branch 'nextui-org:main' into feat/add-draggable-modal\n- feat(hooks): [use-draggable] set user-select to none when during the dragging\n- docs(components): [modal] update code demo title\n- docs(components): [modal] condense description for draggable overflow\n- feat(hooks): [use-draggable] change version to 0.1.0\n- refactor(hooks): [use-draggable] use use-move implement use-draggable\n- feat(hooks): [use-draggable] remove repeated user-select\n- test(components): [modal] update test case to use-draggable base use-move\n- docs(components): [modal] update draggable examples\n- fix(hooks): [use-draggable] fix mobile device touchmove event conflict\n- refactor(hooks): [use-draggable] remove drag ref prop\n- refactor(hooks): [use-draggable] draggable2is-disabled overflow2can-overflow\n- test(components): [modal] add draggble disable test\n- chore(hooks): [use-draggable] add commant for body touchmove\n- Update packages/hooks/use-draggable/src/index.ts

Co-authored-by: Ryo Matsukawa <76232929+ryo-manba@users.noreply.github.com>\n- fix(hooks): [use-draggable] import use-callback\n- test(components): [modal] add mobile-sized test for draggable\n- chore(hooks): [use-draggable] add use-callback for func\n- Merge branch 'canary' into feat/add-draggable-modal\n- chore(hooks): [use-draggable] update version to 2.0.0\n- chore: fix typo\n- Update .changeset/soft-apricots-sleep.md\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: f3f4eab58dfebab977b78f69897eaa97e8112288

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 3 packages</summary>

  | Name                      | Type  |
| ------------------------- | ----- |
| @nextui-org/modal         | Patch |
| @nextui-org/use-draggable | Patch |
| @nextui-org/react         | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/wzc520pyfm/nextui/new/feat/add-draggable-modal?filename=.changeset/chatty-countries-rule.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Fmodal%22%3A%20patch%0A%22%40nextui-org%2Fuse-draggable%22%3A%20patch%0A---%0A%0Afeat(modal)%3A%20add%20draggable%20modal%0A)

\n- vercel: [vc]: #rO9PH1uft3J8PJ03/YMOHnpcB1WX2vv7/WuD/sHFDyo=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvQ0pIWngyM0pUOWFIdE56bWpyZ2cyVHd3OEpSNiIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLXd6YzUyMHB5Zm0tZmVhdC0yMDkwODQtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZvcmstd3pjNTIwcHlmbS1mZWF0LTIwOTA4NC1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/CJHZx23JT9aHtNzmjrgg2Tww8JR6)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-wzc520pyfm-feat-209084-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-wzc520pyfm-feat-209084-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 8, 2024 1:05pm |

\n- vercel: @wzc520pyfm is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%2224aa1ce3878f9d3255b2ed65ec7cdd90bea2c782%22%7D%2C%22id%22%3A%22QmeMZKrE7d7yRw9wyfBWuie1Ek27XbqCEs4hodgZTJErAU%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A2818%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: rate limited by coderabbit.ai -->

> [!WARNING]
> ## Rate limit exceeded
> 
> @jrgarciadev has exceeded the limit for the number of commits or files that can be reviewed per hour. Please wait **5 minutes and 43 seconds** before requesting another review.
> 
> <details>
> <summary>‚åõ How to resolve this issue?</summary>
> 
> After the wait time has elapsed, a review can be triggered using the `@coderabbitai review` command as a PR comment. Alternatively, push new commits to this PR.
> 
> We recommend that you space out your commits to avoid hitting the rate limit.
> 
> </details>
> 
> 
> <details>
> <summary>üö¶ How do rate limits work?</summary>
> 
> CodeRabbit enforces hourly rate limits for each developer per organization.
> 
> Our paid plans have higher rate limits than the trial, open-source and free plans. In all cases, we re-allow further reviews after a brief timeout.
> 
> Please see our [FAQ](https://coderabbit.ai/docs/faq) for further information.
> 
> </details>
> 
> <details>
> <summary>üì• Commits</summary>
> 
> Reviewing files that changed from the base of the PR and between 0c282dd9e975e3f3210cc869a01d20166472e007 and f3f4eab58dfebab977b78f69897eaa97e8112288.
> 
> </details>

<!-- end of auto-generated comment: rate limited by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
The recent updates enhance modal components in a React application by introducing draggable functionality using Next.js UI. This includes the addition of new hooks for dragging, updates to modal components to support draggability, and improved documentation and examples to aid developers in implementing and understanding the new features.

## Changes

| File Path                                           | Change Summary                                                                 |
|-----------------------------------------------------|--------------------------------------------------------------------------------|
| `.../modal/index.ts`<br>`.../modal/src/index.ts`    | Added imports and exports related to draggable functionality.                  |
| `.../modal.mdx`<br>`.../modal/draggable*.ts`        | Enhanced modal components with draggable features and updated documentation.   |
| `.../modal/package.json`<br>`.../use-draggable/package.json` | Added new dependencies for draggable functionality.                            |
| `.../modal/src/modal-header.tsx`<br>`.../modal/__tests__/modal.test.tsx` | Updated modal header props and tests for draggable modals.                     |
| `.../use-draggable/*`                               | Introduced new hooks and configurations for handling draggable functionality.  |

## Assessment against linked issues

| Objective                                  | Addressed | Explanation |
|--------------------------------------------|-----------|-------------|
| Make modal draggable and change position [#2647] | ‚úÖ        |             |
| Implement draggable modals with overflow handling | ‚úÖ        |             |

## Possibly related PRs
- **#3691**: This PR addresses modal positioning when the keyboard appears, which is directly related to the modal functionality being enhanced in the main PR, particularly regarding user interaction and visibility of modal content.

## Suggested labels
`üìã Scope : Docs`

## Suggested reviewers
- wingkwong
- jrgarciadev

<!-- walkthrough_end -->

<!-- internal state start -->


<!-- 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 -->

<!-- internal state end -->
<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- wzc520pyfm: > Looks good from the videos. Can you also add it in storybook and add some tests for it?

OK, I have finished. I added it in storybook and add three tests for draggable. Review pls.\n- wzc520pyfm: > please update pnpm-lock.yaml and make sure the build and tests can pass.

sorry, i don't know that i need to update lockfile.
i have updated it.
The build and test can pass at my local env.

But i don't have permission to trigger deployment on github.\n- wzc520pyfm: > I think during the dragging, the text shouldn't be highlighted.
> 
> ![image](https://private-user-images.githubusercontent.com/35857179/324336608-fb4e66c8-f91f-491d-856f-2357ba4ddd37.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTM3OTIyMTUsIm5iZiI6MTcxMzc5MTkxNSwicGF0aCI6Ii8zNTg1NzE3OS8zMjQzMzY2MDgtZmI0ZTY2YzgtZjkxZi00OTFkLTg1NmYtMjM1N2JhNGRkZDM3LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA0MjIlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNDIyVDEzMTgzNVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWViM2Q5MDliYTE1ZWU2OTA3NGZmYjFjNzE0OWVkM2Y3NGI3MzI4Y2RiNWI5NjRkOTFjODE1OWVmYTFhOGVlMmUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.b4kOuGD2qLyW1ccZ8N5Oe-SKQKK2HO6EVLjvJrNY4SQ)

Agree, I have implemented it now.\n- wzc520pyfm: > Thanks for the PR! I noticed that the dialog becomes immovable when the screen is resized to mobile dimensions. We'll need to address this behavior.
> 
>  dialog-mobile-dimensions.mov

It looks like moveend is triggered in advance. I found that this seems to be caused by the conflict between modal's touchmove behavior and document.body's touchmove behavior. Maybe it can be solved by disabling the touchmove of document.body.ü§î\n- wzc520pyfm: > > Thanks for the PR! I noticed that the dialog becomes immovable when the screen is resized to mobile dimensions. We'll need to address this behavior.
> > dialog-mobile-dimensions.mov
> 
> It looks like moveend is triggered in advance. I found that this seems to be caused by the conflict between modal's touchmove behavior and document.body's touchmove behavior. Maybe it can be solved by disabling the touchmove of document.body.ü§î

@ryo-manba I have fixed it. Review pls.\n- wzc520pyfm: > Please resolve conflicts. Thanks. 

Tonight!\n- wingkwong: Thanks. No rush. This is marked as v2.5.0. We'll have v2.4.7 release soon. I'll revisit after that.\n- jrgarciadev: Merged here https://github.com/nextui-org/nextui/pull/3983\n

Files Changed:
- .changeset/soft-apricots-sleep.md (added, 6 changes)\n  Patch: @@ -0,0 +1,6 @@
+---
+"@nextui-org/modal": patch
+"@nextui-org/use-draggable": patch
+---
+
+Add draggable modal (#2647)\n- apps/docs/content/components/modal/draggable-overflow.ts (added, 45 changes)\n  Patch: @@ -0,0 +1,45 @@
+const App = `import {Modal, ModalContent, ModalHeader, ModalBody, ModalFooter, Button, useDisclosure, useDraggable} from "@nextui-org/react";
+
+export default function App() {
+  const {isOpen, onOpen, onOpenChange} = useDisclosure();
+  const targetRef = React.useRef(null);
+  const {moveProps} = useDraggable({targetRef, canOverflow: true});
+
+  return (
+    <>
+      <Button onPress={onOpen}>Open Modal</Button>
+      <Modal ref={targetRef} isOpen={isOpen} onOpenChange={onOpenChange}>
+        <ModalContent>
+          {(onClose) => (
+            <>
+              <ModalHeader {...moveProps} className="flex flex-col gap-1">Modal Title</ModalHeader>
+              <ModalBody>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+              </ModalBody>
+              <ModalFooter>
+                <Button color="danger" variant="light" onPress={onClose}>
+                  Close
+                </Button>
+                <Button color="primary" onPress={onClose}>
+                  Action
+                </Button>
+              </ModalFooter>
+            </>
+          )}
+        </ModalContent>
+      </Modal>
+    </>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/modal/draggable.ts (added, 45 changes)\n  Patch: @@ -0,0 +1,45 @@
+const App = `import {Modal, ModalContent, ModalHeader, ModalBody, ModalFooter, Button, useDisclosure, useDraggable} from "@nextui-org/react";
+
+export default function App() {
+  const {isOpen, onOpen, onOpenChange} = useDisclosure();
+  const targetRef = React.useRef(null);
+  const {moveProps} = useDraggable({ targetRef });
+
+  return (
+    <>
+      <Button onPress={onOpen}>Open Modal</Button>
+      <Modal ref={targetRef} isOpen={isOpen} onOpenChange={onOpenChange}>
+        <ModalContent>
+          {(onClose) => (
+            <>
+              <ModalHeader {...moveProps} className="flex flex-col gap-1">Modal Title</ModalHeader>
+              <ModalBody>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+              </ModalBody>
+              <ModalFooter>
+                <Button color="danger" variant="light" onPress={onClose}>
+                  Close
+                </Button>
+                <Button color="primary" onPress={onClose}>
+                  Action
+                </Button>
+              </ModalFooter>
+            </>
+          )}
+        </ModalContent>
+      </Modal>
+    </>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/modal/index.ts (modified, 4 changes)\n  Patch: @@ -8,6 +8,8 @@ import backdrop from "./backdrop";
 import customBackdrop from "./custom-backdrop";
 import customMotion from "./custom-motion";
 import customStyles from "./custom-styles";
+import draggable from "./draggable";
+import draggableOverflow from "./draggable-overflow";
 
 export const modalContent = {
   usage,
@@ -20,4 +22,6 @@ export const modalContent = {
   customBackdrop,
   customMotion,
   customStyles,
+  draggable,
+  draggableOverflow,
 };\n- apps/docs/content/docs/components/modal.mdx (modified, 32 changes)\n  Patch: @@ -42,18 +42,18 @@ NextUI exports 5 modal-related components:
 <ImportTabs
   commands={{
     main: `import {
-  Modal, 
-  ModalContent, 
-  ModalHeader, 
-  ModalBody, 
+  Modal,
+  ModalContent,
+  ModalHeader,
+  ModalBody,
   ModalFooter
 } from "@nextui-org/react";`,
     individual:
       `import {
-  Modal, 
-  ModalContent, 
-  ModalHeader, 
-  ModalBody, 
+  Modal,
+  ModalContent,
+  ModalHeader,
+  ModalBody,
   ModalFooter
 } from "@nextui-org/modal";`,
   }}
@@ -72,9 +72,9 @@ When the modal opens:
 
 <CodeDemo title="Sizes" files={modalContent.sizes} />
 
-### Non-dissmissable
+### Non-dismissible
 
-By default, the modal can be closed by clicking on the overlay or pressing the <Kbd>Esc</Kbd> key. 
+By default, the modal can be closed by clicking on the overlay or pressing the <Kbd>Esc</Kbd> key.
 You can disable this behavior by setting the following properties:
 
 - Set the `isDismissable` property to `false` to prevent the modal from closing when clicking on the overlay.
@@ -138,6 +138,18 @@ Modal offers a `motionProps` property to customize the `enter` / `exit` animatio
 
 > Learn more about Framer motion variants [here](https://www.framer.com/motion/animation/#variants).
 
+### Draggable
+
+Try to drag the header part.
+
+<CodeDemo title="Draggable" files={modalContent.draggable} />
+
+### Draggable Overflow
+
+Set overflow to true can drag overflow the viewport.
+
+<CodeDemo title="Draggable Overflow" files={modalContent.draggableOverflow} />
+
 ## Slots
 
 - **wrapper**: The wrapper slot of the modal. It wraps the `base` and the `backdrop` slots.\n- packages/components/modal/__tests__/modal.test.tsx (modified, 107 changes)\n  Patch: @@ -1,12 +1,28 @@
 import * as React from "react";
 import {act, render, fireEvent} from "@testing-library/react";
 
-import {Modal, ModalContent, ModalBody, ModalHeader, ModalFooter} from "../src";
+import {Modal, ModalContent, ModalBody, ModalHeader, ModalFooter, useDraggable} from "../src";
 
 // e.g. console.error Warning: Function components cannot be given refs.
 // Attempts to access this ref will fail. Did you mean to use React.forwardRef()?
 const spy = jest.spyOn(console, "error").mockImplementation(() => {});
 
+const ModalDraggable = ({canOverflow = false, isDisabled = false}) => {
+  const targetRef = React.useRef(null);
+
+  const {moveProps} = useDraggable({targetRef, canOverflow, isDisabled});
+
+  return (
+    <Modal ref={targetRef} isOpen>
+      <ModalContent>
+        <ModalHeader {...moveProps}>Modal header</ModalHeader>
+        <ModalBody>Modal body</ModalBody>
+        <ModalFooter>Modal footer</ModalFooter>
+      </ModalContent>
+    </Modal>
+  );
+};
+
 describe("Modal", () => {
   afterEach(() => {
     jest.clearAllMocks();
@@ -108,4 +124,93 @@ describe("Modal", () => {
     fireEvent.keyDown(modal, {key: "Escape"});
     expect(onClose).toHaveBeenCalledTimes(1);
   });
+
+  it("should be rendered a draggable modal", () => {
+    // mock viewport size to 1920x1080
+    jest.spyOn(document.documentElement, "clientWidth", "get").mockImplementation(() => 1920);
+    jest.spyOn(document.documentElement, "clientHeight", "get").mockImplementation(() => 1080);
+
+    const wrapper = render(<ModalDraggable />);
+
+    const modal = wrapper.getByRole("dialog");
+    const modalHeader = wrapper.getByText("Modal header");
+
+    fireEvent.touchStart(modalHeader, {changedTouches: [{pageX: 0, pageY: 0}]});
+    fireEvent.touchMove(modalHeader, {changedTouches: [{pageX: 100, pageY: 50}]});
+    fireEvent.touchEnd(modalHeader, {changedTouches: [{pageX: 100, pageY: 50}]});
+
+    expect(() => wrapper.unmount()).not.toThrow();
+    expect(document.documentElement.clientWidth).toBe(1920);
+    expect(document.documentElement.clientHeight).toBe(1080);
+    expect(modalHeader.style.cursor).toBe("move");
+    expect(modal.style.transform).toBe("translate(100px, 50px)");
+  });
+
+  it("should be rendered a draggable modal on mobile", () => {
+    // mock viewport size to 375x667
+    jest.spyOn(document.documentElement, "clientWidth", "get").mockImplementation(() => 375);
+    jest.spyOn(document.documentElement, "clientHeight", "get").mockImplementation(() => 667);
+
+    const wrapper = render(<ModalDraggable />);
+
+    const modal = wrapper.getByRole("dialog");
+    const modalHeader = wrapper.getByText("Modal header");
+
+    fireEvent.touchStart(modalHeader, {changedTouches: [{pageX: 0, pageY: 0}]});
+    fireEvent.touchMove(modalHeader, {changedTouches: [{pageX: 0, pageY: 50}]});
+    fireEvent.touchEnd(modalHeader, {changedTouches: [{pageX: 0, pageY: 50}]});
+
+    expect(document.documentElement.clientWidth).toBe(375);
+    expect(document.documentElement.clientHeight).toBe(667);
+    expect(modal.style.transform).toBe("translate(0px, 50px)");
+  });
+
+  it("should not drag overflow viewport", () => {
+    // mock viewport size to 1920x1080
+    jest.spyOn(document.documentElement, "clientWidth", "get").mockImplementation(() => 1920);
+    jest.spyOn(document.documentElement, "clientHeight", "get").mockImplementation(() => 1080);
+    const wrapper = render(<ModalDraggable />);
+    const modal = wrapper.getByRole("dialog");
+    const modalHeader = wrapper.getByText("Modal header");
+
+    fireEvent.touchStart(modalHeader, {changedTouches: [{pageX: 100, pageY: 50}]});
+    fireEvent.touchMove(modalHeader, {changedTouches: [{pageX: 10000, pageY: 5000}]});
+    fireEvent.touchEnd(modalHeader, {changedTouches: [{pageX: 10000, pageY: 5000}]});
+
+    expect(modal.style.transform).toBe("translate(1920px, 1080px)");
+  });
+
+  it("should not drag when disabled", () => {
+    // mock viewport size to 1920x1080
+    jest.spyOn(document.documentElement, "clientWidth", "get").mockImplementation(() => 1920);
+    jest.spyOn(document.documentElement, "clientHeight", "get").mockImplementation(() => 1080);
+    const wrapper = render(<ModalDraggable isDisabled />);
+    const modal = wrapper.getByRole("dialog");
+    const modalHeader = wrapper.getByText("Modal header");
+
+    fireEvent.touchStart(modalHeader, {changedTouches: [{pageX: 100, pageY: 50}]});
+    fireEvent.touchMove(modalHeader, {changedTouches: [{pageX: 200, pageY: 100}]});
+    fireEvent.touchEnd(modalHeader, {changedTouches: [{pageX: 200, pageY: 100}]});
+
+    expect(modal.style.transform).toBe("");
+  });
+
+  test("should be rendered a draggable modal with overflow", () => {
+    // mock viewport size to 1920x1080
+    jest.spyOn(document.documentElement, "clientWidth", "get").mockImplementation(() => 1920);
+    jest.spyOn(document.documentElement, "clientHeight", "get").mockImplementation(() => 1080);
+
+    const wrapper = render(<ModalDraggable canOverflow />);
+
+    const modal = wrapper.getByRole("dialog");
+    const modalHeader = wrapper.getByText("Modal header");
+
+    fireEvent.touchStart(modalHeader, {changedTouches: [{pageX: 0, pageY: 0}]});
+    fireEvent.touchMove(modalHeader, {changedTouches: [{pageX: 2000, pageY: 1500}]});
+    fireEvent.touchEnd(modalHeader, {changedTouches: [{pageX: 2000, pageY: 1500}]});
+
+    expect(document.documentElement.clientWidth).toBe(1920);
+    expect(document.documentElement.clientHeight).toBe(1080);
+    expect(modal.style.transform).toBe("translate(2000px, 1500px)");
+  });
 });\n- packages/components/modal/package.json (modified, 2 changes)\n  Patch: @@ -42,6 +42,7 @@
   },
   "dependencies": {
     "@nextui-org/use-disclosure": "workspace:*",
+    "@nextui-org/use-draggable": "workspace:*",
     "@nextui-org/use-aria-button": "workspace:*",
     "@nextui-org/framer-utils": "workspace:*",
     "@nextui-org/shared-utils": "workspace:*",
@@ -63,6 +64,7 @@
     "@nextui-org/checkbox": "workspace:*",
     "@nextui-org/button": "workspace:*",
     "@nextui-org/link": "workspace:*",
+    "@nextui-org/switch": "workspace:*",
     "react-lorem-component": "0.13.0",
     "framer-motion": "^11.0.22",
     "clean-package": "2.2.0",\n- packages/components/modal/src/index.ts (modified, 1 changes)\n  Patch: @@ -15,6 +15,7 @@ export type {UseDisclosureProps} from "@nextui-org/use-disclosure";
 // export hooks
 export {useModal} from "./use-modal";
 export {useDisclosure} from "@nextui-org/use-disclosure";
+export {useDraggable} from "@nextui-org/use-draggable";
 
 // export context
 export {ModalProvider, useModalContext} from "./modal-context";\n- packages/components/modal/src/modal-header.tsx (modified, 9 changes)\n  Patch: @@ -1,11 +1,16 @@
 import {useEffect} from "react";
 import {forwardRef, HTMLNextUIProps} from "@nextui-org/system";
-import {useDOMRef} from "@nextui-org/react-utils";
+import {ReactRef, useDOMRef} from "@nextui-org/react-utils";
 import {clsx} from "@nextui-org/shared-utils";
 
 import {useModalContext} from "./modal-context";
 
-export interface ModalHeaderProps extends HTMLNextUIProps<"header"> {}
+export interface ModalHeaderProps extends HTMLNextUIProps<"header"> {
+  /**
+   * Ref to the DOM node.
+   */
+  ref?: ReactRef<HTMLElement | null>;
+}
 
 const ModalHeader = forwardRef<"header", ModalHeaderProps>((props, ref) => {
   const {as, children, className, ...otherProps} = props;\n- packages/components/modal/stories/modal.stories.tsx (modified, 72 changes)\n  Patch: @@ -6,6 +6,7 @@ import {Button} from "@nextui-org/button";
 import {Input} from "@nextui-org/input";
 import {Checkbox} from "@nextui-org/checkbox";
 import {Link} from "@nextui-org/link";
+import {Switch} from "@nextui-org/switch";
 import {MailFilledIcon, LockFilledIcon} from "@nextui-org/shared-icons";
 import Lorem from "react-lorem-component";
 
@@ -17,6 +18,7 @@ import {
   ModalFooter,
   ModalProps,
   useDisclosure,
+  useDraggable,
 } from "../src";
 
 export default {
@@ -202,6 +204,60 @@ const OpenChangeTemplate = (args: ModalProps) => {
     </div>
   );
 };
+const DraggableTemplate = (args: ModalProps) => {
+  const {isOpen, onOpen, onClose, onOpenChange} = useDisclosure();
+  const targetRef = React.useRef(null);
+
+  const {moveProps} = useDraggable({targetRef});
+
+  return (
+    <div className="flex flex-col gap-2">
+      <Button onPress={onOpen}>Open Modal</Button>
+      <Modal {...args} ref={targetRef} isOpen={isOpen} onOpenChange={onOpenChange}>
+        <ModalContent>
+          <ModalHeader {...moveProps}>Modal Title</ModalHeader>
+          <ModalBody>
+            <Lorem count={1} />
+          </ModalBody>
+          <ModalFooter>
+            <Button onPress={onClose}>Close</Button>
+          </ModalFooter>
+        </ModalContent>
+      </Modal>
+    </div>
+  );
+};
+const DraggableOverflowTemplate = (args: ModalProps) => {
+  const {isOpen, onOpen, onClose, onOpenChange} = useDisclosure();
+  const targetRef = React.useRef(null);
+  const [disableDraggable, setDisableDraggable] = React.useState(false);
+  const [canOverflow, setCanOverflow] = React.useState(true);
+
+  const {moveProps} = useDraggable({targetRef, isDisabled: disableDraggable, canOverflow});
+
+  return (
+    <div className="flex flex-col gap-2">
+      <Button onPress={onOpen}>Open Modal</Button>
+      <Switch isSelected={disableDraggable} onValueChange={setDisableDraggable}>
+        Disable Draggable
+      </Switch>
+      <Switch isSelected={canOverflow} onValueChange={setCanOverflow}>
+        Overflow viewport
+      </Switch>
+      <Modal {...args} ref={targetRef} isOpen={isOpen} onOpenChange={onOpenChange}>
+        <ModalContent>
+          <ModalHeader {...moveProps}>Modal Title</ModalHeader>
+          <ModalBody>
+            <Lorem count={1} />
+          </ModalBody>
+          <ModalFooter>
+            <Button onPress={onClose}>Close</Button>
+          </ModalFooter>
+        </ModalContent>
+      </Modal>
+    </div>
+  );
+};
 
 export const Default = {
   render: Template,
@@ -276,3 +332,19 @@ export const CustomMotion = {
     },
   },
 };
+
+export const Draggable = {
+  render: DraggableTemplate,
+
+  args: {
+    ...defaultProps,
+  },
+};
+
+export const DraggableOverflow = {
+  render: DraggableOverflowTemplate,
+
+  args: {
+    ...defaultProps,
+  },
+};\n- packages/hooks/use-draggable/README.md (added, 24 changes)\n  Patch: @@ -0,0 +1,24 @@
+# @nextui-org/use-draggable
+
+A Quick description of the component
+
+> This is an internal utility, not intended for public usage.
+
+## Installation
+
+```sh
+yarn add @nextui-org/use-draggable
+# or
+npm i @nextui-org/use-draggable
+```
+
+## Contribution
+
+Yes please! See the
+[contributing guidelines](https://github.com/nextui-org/nextui/blob/master/CONTRIBUTING.md)
+for details.
+
+## License
+
+This project is licensed under the terms of the
+[MIT license](https://github.com/nextui-org/nextui/blob/master/LICENSE).\n- packages/hooks/use-draggable/package.json (added, 55 changes)\n  Patch: @@ -0,0 +1,55 @@
+{
+  "name": "@nextui-org/use-draggable",
+  "version": "2.0.0",
+  "description": "This hook can provide drag and drop interaction",
+  "keywords": [
+    "use-draggable"
+  ],
+  "author": "Junior Garcia <jrgarciadev@gmail.com>",
+  "homepage": "https://nextui.org",
+  "license": "MIT",
+  "main": "src/index.ts",
+  "sideEffects": false,
+  "files": [
+    "dist"
+  ],
+  "publishConfig": {
+    "access": "public"
+  },
+  "repository": {
+    "type": "git",
+    "url": "git+https://github.com/nextui-org/nextui.git",
+    "directory": "packages/hooks/use-draggable"
+  },
+  "bugs": {
+    "url": "https://github.com/nextui-org/nextui/issues"
+  },
+  "scripts": {
+    "build": "tsup src --dts",
+    "build:fast": "tsup src",
+    "dev": "pnpm build:fast --watch",
+    "clean": "rimraf dist .turbo",
+    "typecheck": "tsc --noEmit",
+    "prepack": "clean-package",
+    "postpack": "clean-package restore"
+  },
+  "peerDependencies": {
+    "react": ">=18"
+  },
+  "devDependencies": {
+    "clean-package": "2.2.0",
+    "react": "^18.0.0"
+  },
+  "clean-package": "../../../clean-package.config.json",
+  "tsup": {
+    "clean": true,
+    "target": "es2019",
+    "format": [
+      "cjs",
+      "esm"
+    ]
+  },
+  "dependencies": {
+    "@react-aria/interactions": "^3.21.1"
+  }
+}\n- packages/hooks/use-draggable/src/index.ts (added, 113 changes)\n  Patch: @@ -0,0 +1,113 @@
+import type {MoveMoveEvent, MoveResult} from "@react-aria/interactions";
+
+import {useEffect, useRef, useCallback} from "react";
+import {useMove} from "@react-aria/interactions";
+
+export interface UseDraggableProps {
+  /**
+   * Ref to the moving target DOM node.
+   */
+  targetRef?: React.RefObject<HTMLElement>;
+  /**
+   * Whether to disable the target is draggable.
+   * @default false
+   */
+  isDisabled?: boolean;
+  /**
+   * Whether the target can overflow the viewport.
+   * @default false
+   */
+  canOverflow?: boolean;
+}
+
+/**
+ * A hook to make a target draggable.
+ * @param props UseDraggableProps
+ * @returns MoveResult for the drag DOM node.
+ */
+export function useDraggable(props: UseDraggableProps): MoveResult {
+  const {targetRef, isDisabled = false, canOverflow = false} = props;
+  const boundary = useRef({minLeft: 0, minTop: 0, maxLeft: 0, maxTop: 0});
+  let transform = {offsetX: 0, offsetY: 0};
+
+  const onMoveStart = useCallback(() => {
+    const {offsetX, offsetY} = transform;
+
+    const targetRect = targetRef?.current?.getBoundingClientRect();
+    const targetLeft = targetRect?.left ?? 0;
+    const targetTop = targetRect?.top ?? 0;
+    const targetWidth = targetRect?.width ?? 0;
+    const targetHeight = targetRect?.height ?? 0;
+
+    const clientWidth = document.documentElement.clientWidth;
+    const clientHeight = document.documentElement.clientHeight;
+
+    const minLeft = -targetLeft + offsetX;
+    const minTop = -targetTop + offsetY;
+    const maxLeft = clientWidth - targetLeft - targetWidth + offsetX;
+    const maxTop = clientHeight - targetTop - targetHeight + offsetY;
+
+    boundary.current = {
+      minLeft,
+      minTop,
+      maxLeft,
+      maxTop,
+    };
+  }, [transform, targetRef?.current]);
+
+  const onMove = useCallback(
+    (e: MoveMoveEvent) => {
+      if (isDisabled) {
+        return;
+      }
+      const {offsetX, offsetY} = transform;
+      const {minLeft, minTop, maxLeft, maxTop} = boundary.current;
+      let moveX = offsetX + e.deltaX;
+      let moveY = offsetY + e.deltaY;
+
+      if (!canOverflow) {
+        moveX = Math.min(Math.max(moveX, minLeft), maxLeft);
+        moveY = Math.min(Math.max(moveY, minTop), maxTop);
+      }
+
+      transform = {
+        offsetX: moveX,
+        offsetY: moveY,
+      };
+
+      if (targetRef?.current) {
+        targetRef.current.style.transform = `translate(${moveX}px, ${moveY}px)`;
+      }
+    },
+    [isDisabled, transform, boundary.current, canOverflow, targetRef?.current],
+  );
+
+  const {moveProps} = useMove({
+    onMoveStart,
+    onMove,
+  });
+
+  const preventDefault = useCallback((e: TouchEvent) => {
+    e.preventDefault();
+  }, []);
+
+  // NOTE: This process is due to the modal being displayed at the bottom instead of the center when opened on mobile sizes.
+  // It will become unnecessary once the modal is centered properly.
+  useEffect(() => {
+    if (!isDisabled) {
+      // Prevent body scroll when dragging at mobile.
+      document.body.addEventListener("touchmove", preventDefault, {passive: false});
+    }
+
+    return () => {
+      document.body.removeEventListener("touchmove", preventDefault);
+    };
+  }, [isDisabled]);
+
+  return {
+    moveProps: {
+      ...moveProps,
+      style: {cursor: !isDisabled ? "move" : undefined},
+    },
+  };
+}\n- packages/hooks/use-draggable/tsconfig.json (added, 4 changes)\n  Patch: @@ -0,0 +1,4 @@
+{
+  "extends": "../../../tsconfig.json",
+  "include": ["src", "index.ts"]
+}\n- pnpm-lock.yaml (modified, 19 changes)\n  Patch: @@ -1816,6 +1816,9 @@ importers:
       '@nextui-org/use-disclosure':
         specifier: workspace:*
         version: link:../../hooks/use-disclosure
+      '@nextui-org/use-draggable':
+        specifier: workspace:*
+        version: link:../../hooks/use-draggable
       '@react-aria/dialog':
         specifier: 3.5.14
         version: 3.5.14(react-dom@18.2.0(react@18.2.0))(react@18.2.0)
@@ -1850,6 +1853,9 @@ importers:
       '@nextui-org/link':
         specifier: workspace:*
         version: link:../link
+      '@nextui-org/switch':
+        specifier: workspace:*
+        version: link:../switch
       '@nextui-org/system':
         specifier: workspace:*
         version: link:../../core/system
@@ -3417,6 +3423,19 @@ importers:
         specifier: ^18.2.0
         version: 18.2.0
 
+  packages/hooks/use-draggable:
+    dependencies:
+      '@react-aria/interactions':
+        specifier: ^3.21.1
+        version: 3.21.1(react@18.2.0)
+    devDependencies:
+      clean-package:
+        specifier: 2.2.0
+        version: 2.2.0
+      react:
+        specifier: ^18.2.0
+        version: 18.2.0
+
   packages/hooks/use-image:
     dependencies:
       '@nextui-org/use-safe-layout-effect':\n
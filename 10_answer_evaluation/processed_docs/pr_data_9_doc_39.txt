Pull Request Number: 3187
Title: fix(popover): popover focus issue
Base Branch: fix/focus
Head Branch: fix/eng-830
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/3187
State: MERGED
Created At: 2024-06-05T16:14:56Z
Merged At: 2024-06-12T08:11:36Z
Participants: wingkwong, jrgarciadev

Description:
ref: #3171
ref: #2992

üìù Description
following the previous working pattern.

when the popover is opened, the focus should be in content (dialog)
when the popover is closed, the focus should be restored to trigger.

‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


New Features

Improved focus management when opening and closing popovers to enhance accessibility.



Refactor

Refactored popover components to use updated dialog properties, streamlining the code and improving maintainability.



Tests

Added new test cases to ensure correct focus behavior for popovers.

Commits:
- fix(popover): move useDialog to popover-content\n- fix(popover): move useDialog to free-solo-popover\n- refactor(popover): use const instead\n- feat(changset): add changeset\n- feat(popover): popover focus test\n- refactor(popover): getDialogProps\n

Labels:


Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-830/[bug]-focus-remain-outside-popover-component">ENG-830 [BUG] - Focus remain outside Popover component</a></p>\n- vercel: [vc]: #naampghF0vmmvSjHk4ZlE2ZnjS++sx0itGjB3GQYZBQ=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi83dzRYckdxNmlkOUROOTZhNlZQWFdKcnViaDY4IiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtZW5nLTgzMC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWZpeC1lbmctODMwLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvNmIyNFNkVWhZbUQ5bjRON3o1aVhZRFd3Q0xUYiIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1maXgtZW5nLTgzMC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LWVuZy04MzAtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/7w4XrGq6id9DN96a6VPXWJrubh68)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-830-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-830-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 6, 2024 8:11am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/6b24SdUhYmD9n4N7z5iXYDWwCLTb)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-830-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-830-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 6, 2024 8:11am |


\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 1667bfaa28d80bd17a269db6c96bfd1b0be4a0ab

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 6 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/popover      | Patch |
| @nextui-org/autocomplete | Patch |
| @nextui-org/date-picker  | Patch |
| @nextui-org/dropdown     | Patch |
| @nextui-org/select       | Patch |
| @nextui-org/react        | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/eng-830?filename=.changeset/fifty-hotels-push.md&value=---%0A%22%40nextui-org%2Fpopover%22%3A%20patch%0A---%0A%0Afix(popover)%3A%20popover%20focus%20issue%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The recent changes to the Popover component primarily focus on improving the handling of dialog properties by leveraging `useDialog` from `@react-aria/dialog`. This includes refactoring how dialog properties are managed and ensuring focus behavior is correct when the popover is opened and closed. These changes also address specific issues related to keyboard dismissal and focus management within the popover.

## Changes

| File Path                                        | Change Summary                                                                                                               |
|--------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------|
| `packages/components/popover/__tests__/popover.test.tsx` | Introduced new test cases to verify focus behavior when the popover is opened and closed.                                      |
| `packages/components/popover/src/free-solo-popover.tsx`  | Refactored to use `useDialog` from `@react-aria/dialog` and manage dialog properties more effectively.                         |
| `packages/components/popover/src/popover-content.tsx`    | Added `useRef` hook, imported `useDialog`, and modified dialog-related props handling within the `PopoverContent` component.   |
| `packages/components/popover/src/use-popover.ts`         | Modified `useDialog` import and usage, removed `dialogRef` and `titleProps`, and refactored how `dialogProps` are merged.      |

## Sequence Diagram(s) (Beta)

```mermaid
sequenceDiagram
    participant User
    participant PopoverTrigger
    participant Popover
    participant Dialog

    User->>PopoverTrigger: Click or Keyboard Event
    PopoverTrigger->>Popover: Open Popover
    Popover->>Dialog: Initialize with useDialog
    Dialog->>Popover: Return dialogProps
    Popover->>PopoverTrigger: Focus Popover Content

    User->>Popover: Close Event (e.g., ESC key)
    Popover->>PopoverTrigger: Close Popover
    Popover->>PopoverTrigger: Return Focus to Trigger
```

## Assessment against linked issues

| Objective                                                                                       | Addressed | Explanation                                                                                      |
|-------------------------------------------------------------------------------------------------|-----------|--------------------------------------------------------------------------------------------------|
| Ensure `isKeyboardDismissDisabled` prop works correctly in `Popover` (#3171)                    | ‚ùì         | The changes do not explicitly mention addressing `isKeyboardDismissDisabled` behavior.           |
| Ensure focus moves inside the `Popover` when opened and remains within it (#2992)               | ‚úÖ         |                                                                                                  |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

# Existing changesets

```markdown
packages/components/popover/__tests__/popover.test.tsx: ## Short Summary
The changes in the `popover.test.tsx` file introduce new test cases to ensure that focus behavior is correct when the popover is opened and closed. The tests verify that focus shifts to the dialog when the popover is opened and returns to the trigger when the popover is closed.

## Alterations to the declarations of exported or public entities
No alterations to the declarations of exported or public entities were made in this diff.

---

packages/components/popover/src/free-solo-popover.tsx: ## Short Summary

The change in `free-solo-popover.tsx` introduces the usage of `useDialog` from `@react-aria/dialog` to manage dialog-related properties and refactors the handling of dialog properties within the component.

## Alterations to the declarations of exported or public entities

- Added import: `import {useDialog} from "@react-aria/dialog"`
- Removed `titleProps` from the arguments passed to `usePopover`
- Added declaration and usage of `dialogRef` and `dialogProps` to manage dialog properties

---

packages/components/popover/src/popover-content.tsx: ### Summary

The changes in `popover-content.tsx` involve adding a `useRef` hook, importing `useDialog` from `@react-aria/dialog`, and modifying the usage of dialog-related props within the `PopoverContent` component.

### Alterations to the declarations of exported or public entities

- `import {useRef} from "react";` added
- `import {useDialog} from "@react-aria/dialog";` added
- Removed `titleProps` from `dialogProps`
- Added `const dialogRef = useRef(null);`
- Modified assignment of `dialogProps` using `useDialog` and `getDialogProps`

---

packages/components/popover/src/use-popover.ts: ### Summary

The changes in `use-popover.ts` involve modifications to the `useDialog` import and its usage within the `usePopover` function. Specifically, the `dialogRef` variable is removed, and the `dialogProps` and `titleProps` from `useDialog` are no longer used directly. Instead, a new approach is introduced where `dialogProps` are merged with other props directly in the `getDialogProps` function. Additionally, the `titleProps` are no longer part of the function's logic.

### Alterations to the declarations of exported or public entities

- `import {AriaDialogProps} from "@react-aria/dialog";` in `packages/components/popover/src/use-popover.ts`
- Removed `const dialogRef = useRef(null);` in `packages/components/popover/src/use-popover.ts`
- Removed `const {dialogProps, titleProps} = useDialog({}, dialogRef);` in `packages/components/popover/src/use-popover.ts`
- Modified `const getDialogProps: PropGetter = (props = {}) => { ... }` in `packages/components/popover/src/use-popover.ts` to incorporate changes related to `dialogProps` and `titleProps`
- Removed `titleProps` from the function parameters in `getContentProps` in `packages/components/popover/src/use-popover.ts`
```

# New changesets

packages/components/popover/src/use-popover.ts: ### Summary

The changes in `use-popover.ts` involve modifications to the `useDialog` import and its usage within the `usePopover` function. Specifically, the `dialogRef` variable is removed, and the `dialogProps` and `titleProps` from `useDialog` are no longer used directly. Instead, a new approach is introduced where `dialogProps` are merged with other props directly in the `getDialogProps` function. Additionally, the `titleProps` are no longer part of the function's logic.

### Alterations to the declarations of exported or public entities

- `import {AriaDialogProps, useDialog} from "@react-aria/dialog";` in `packages/components/popover/src/use-popover.ts` ‚Üí `import {AriaDialogProps} from "@react-aria/dialog";`
- Removed `const dialogRef = useRef(null);` in `packages/components/popover/src/use-popover.ts`
- Removed `const {dialogProps, titleProps} = useDialog({}, dialogRef);` in `packages/components/popover/src/use-popover.ts`
- Modified `const getDialogProps: PropGetter = (props = {}) => { ... }` in `packages/components/popover/src/use-popover.ts` to incorporate changes related to `dialogProps` and `titleProps`
- Removed `titleProps` from the function parameters in `getContentProps` in `packages/components/popover/src/use-popover.ts`

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

### PR Summary

**Title:** fix(popover): popover focus issue  
**User:** wingkwong  
**Number:** 3187  

**Description:**  
This pull request addresses the focus management issues in the Popover component. Specifically, it ensures that when the popover is opened, the focus is set to the content (dialog) within the popover. Conversely, when the popover is closed, the focus is restored to the trigger element. This PR closes issues #3171 and #2992.

### Objectives from Linked Issues

**Issue #3171:**  
- **Title:** [BUG] - the prop isKeyboardDismissDisabled it doesn't work in popover  
- **Description:** The `isKeyboardDismissDisabled` prop on the `<Popover>` component does not prevent the popover from being closed with the ESC key. The expected behavior is that the popover should close when the ESC key is pressed, similar to the Modal component.

**Issue #2992:**  
- **Title:** [BUG] - Focus remain outside Popover component  
- **Description:** When the popover is opened via mouse click or keyboard, the focus remains outside of the popover instead of moving inside it. This behavior is contrary to the documentation, which states that the focus should move inside the popover. The expected behavior is that when the popover opens, the focus should move to the first focusable element within the popover, and subsequent tab presses should cycle through the elements within the popover.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated summary of generated summaries

The recent changes across multiple files in the `popover` component primarily focus on improving the handling of dialog properties by integrating the `useDialog` hook from `@react-aria/dialog`. These modifications ensure better management of dialog-related properties and enhance focus behavior when the popover is opened and closed.

1. **`popover.test.tsx`**:
   - New test cases were added to verify that focus shifts correctly to the dialog when the popover is opened and returns to the trigger when closed.

2. **`free-solo-popover.tsx`**:
   - Introduced `useDialog` from `@react-aria/dialog` to manage dialog properties.
   - Refactored the component to use `dialogRef` and `dialogProps` for handling dialog properties.
   - Removed `titleProps` from the arguments passed to `usePopover`.

3. **`popover-content.tsx`**:
   - Added `useRef` hook and imported `useDialog` from `@react-aria/dialog`.
   - Modified the component to use `dialogRef` and `dialogProps` for dialog management.
   - Removed `titleProps` from `dialogProps`.

4. **`use-popover.ts`**:
   - Refactored the `usePopover` function to remove `dialogRef` and the direct usage of `dialogProps` and `titleProps` from `useDialog`.
   - Merged `dialogProps` with other props directly in the `getDialogProps` function.
   - Removed `titleProps` from the function's logic and parameters.

### Alterations to the declarations of exported or public entities

#### `packages/components/popover/src/free-solo-popover.tsx`

**Before:**
```typescript
import {usePopover} from 'some-library';
const {titleProps} = usePopover();
```

**After:**
```typescript
import {useDialog} from "@react-aria/dialog";
const dialogRef = useRef(null);
const {dialogProps} = useDialog({}, dialogRef);
```

#### `packages/components/popover/src/popover-content.tsx`

**Before:**
```typescript
import {usePopover} from 'some-library';
const {titleProps} = usePopover();
```

**After:**
```typescript
import {useRef} from "react";
import {useDialog} from "@react-aria/dialog";
const dialogRef = useRef(null);
const {dialogProps} = useDialog({}, dialogRef);
```

#### `packages/components/popover/src/use-popover.ts`

**Before:**
```typescript
import {AriaDialogProps, useDialog} from "@react-aria/dialog";
const dialogRef = useRef(null);
const {dialogProps, titleProps} = useDialog({}, dialogRef);

const getDialogProps: PropGetter = (props = {}) => {
  // logic involving dialogProps and titleProps
};

const getContentProps = (props = {}, titleProps) => {
  // logic involving titleProps
};
```

**After:**
```typescript
import {AriaDialogProps} from "@react-aria/dialog";

const getDialogProps: PropGetter = (props = {}) => {
  // logic involving merged dialogProps
};

const getContentProps = (props = {}) => {
  // logic without titleProps
};
```

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 57b7aa88ed09dbb85194a6a1a64825e3a6dce13b -->
<!-- 1667bfaa28d80bd17a269db6c96bfd1b0be4a0ab -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/clever-gifts-joke.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/popover": patch
+---
+
+Fix popover focus issue (#3171, #2992)\n- packages/components/popover/__tests__/popover.test.tsx (modified, 59 changes)\n  Patch: @@ -213,4 +213,63 @@ describe("Popover", () => {
     // assert that the second popover is open
     expect(popover2).toHaveAttribute("aria-expanded", "true");
   });
+
+  it("should focus on dialog when opened", async () => {
+    const wrapper = render(
+      <Popover>
+        <PopoverTrigger>
+          <Button disableRipple data-testid="trigger-test">
+            Open popover
+          </Button>
+        </PopoverTrigger>
+        <PopoverContent>
+          <p>This is the content of the popover.</p>
+        </PopoverContent>
+      </Popover>,
+    );
+
+    const trigger = wrapper.getByTestId("trigger-test");
+
+    // open popover
+    await act(async () => {
+      await userEvent.click(trigger);
+    });
+
+    const {getByRole} = wrapper;
+
+    let dialog = getByRole("dialog");
+
+    // assert that the focus is on the dialog
+    expect(dialog).toHaveFocus();
+  });
+
+  it("should restore focus on trigger when closed", async () => {
+    const wrapper = render(
+      <Popover>
+        <PopoverTrigger>
+          <Button disableRipple data-testid="trigger-test">
+            Open popover
+          </Button>
+        </PopoverTrigger>
+        <PopoverContent>
+          <p>This is the content of the popover.</p>
+        </PopoverContent>
+      </Popover>,
+    );
+
+    const trigger = wrapper.getByTestId("trigger-test");
+
+    // open popover
+    await act(async () => {
+      await userEvent.click(trigger);
+    });
+
+    // close popover
+    await act(async () => {
+      await userEvent.click(trigger);
+    });
+
+    // assert that the focus is restored back to trigger
+    expect(trigger).toHaveFocus();
+  });
 });\n- packages/components/popover/src/free-solo-popover.tsx (modified, 11 changes)\n  Patch: @@ -14,6 +14,7 @@ import {domAnimation, HTMLMotionProps, LazyMotion, m} from "framer-motion";
 import {mergeProps} from "@react-aria/utils";
 import {getTransformOrigins} from "@nextui-org/aria-utils";
 import {TRANSITION_VARIANTS} from "@nextui-org/framer-utils";
+import {useDialog} from "@react-aria/dialog";
 
 import {usePopover, UsePopoverProps, UsePopoverReturn} from "./use-popover";
 
@@ -92,7 +93,6 @@ const FreeSoloPopover = forwardRef<"div", FreeSoloPopoverProps>(
       state,
       placement,
       backdrop,
-      titleProps,
       portalContainer,
       disableAnimation,
       motionProps,
@@ -106,6 +106,13 @@ const FreeSoloPopover = forwardRef<"div", FreeSoloPopoverProps>(
       ref,
     });
 
+    const dialogRef = React.useRef(null);
+    const {dialogProps: ariaDialogProps, titleProps} = useDialog({}, dialogRef);
+    const dialogProps = getDialogProps({
+      ref: dialogRef,
+      ...ariaDialogProps,
+    });
+
     const backdropContent = React.useMemo(() => {
       if (backdrop === "transparent") {
         return null;
@@ -138,7 +145,7 @@ const FreeSoloPopover = forwardRef<"div", FreeSoloPopoverProps>(
             placement={placement}
             tabIndex={-1}
             transformOrigin={transformOrigin}
-            {...getDialogProps()}
+            {...dialogProps}
           >
             {!isNonModal && <DismissButton onDismiss={state.close} />}
             <div {...getContentProps()}>\n- packages/components/popover/src/popover-content.tsx (modified, 15 changes)\n  Patch: @@ -1,14 +1,15 @@
 import type {AriaDialogProps} from "@react-aria/dialog";
 import type {HTMLMotionProps} from "framer-motion";
 
-import {DOMAttributes, ReactNode, useMemo, useCallback, ReactElement} from "react";
+import {DOMAttributes, ReactNode, useMemo, useCallback, ReactElement, useRef} from "react";
 import {forwardRef} from "@nextui-org/system";
 import {DismissButton} from "@react-aria/overlays";
 import {TRANSITION_VARIANTS} from "@nextui-org/framer-utils";
 import {m, domAnimation, LazyMotion} from "framer-motion";
 import {HTMLNextUIProps} from "@nextui-org/system";
 import {RemoveScroll} from "react-remove-scroll";
 import {getTransformOrigins} from "@nextui-org/aria-utils";
+import {useDialog} from "@react-aria/dialog";
 
 import {usePopoverContext} from "./popover-context";
 
@@ -27,7 +28,6 @@ const PopoverContent = forwardRef<"div", PopoverContentProps>((props, _) => {
     placement,
     backdrop,
     motionProps,
-    titleProps,
     disableAnimation,
     shouldBlockScroll,
     getPopoverProps,
@@ -38,10 +38,13 @@ const PopoverContent = forwardRef<"div", PopoverContentProps>((props, _) => {
     onClose,
   } = usePopoverContext();
 
-  const dialogProps = getDialogProps(otherProps);
-
-  // Not needed in the popover context, the popover role comes from getPopoverProps
-  delete dialogProps.role;
+  const dialogRef = useRef(null);
+  const {dialogProps: ariaDialogProps, titleProps} = useDialog({}, dialogRef);
+  const dialogProps = getDialogProps({
+    ref: dialogRef,
+    ...ariaDialogProps,
+    ...otherProps,
+  });
 
   const Component = as || OverlayComponent || "div";
 \n- packages/components/popover/src/use-popover.ts (modified, 11 changes)\n  Patch: @@ -19,7 +19,7 @@ import {popover} from "@nextui-org/theme";
 import {mergeProps, mergeRefs} from "@react-aria/utils";
 import {clsx, dataAttr, objectToDeps} from "@nextui-org/shared-utils";
 import {useMemo, useCallback, useRef} from "react";
-import {AriaDialogProps, useDialog} from "@react-aria/dialog";
+import {AriaDialogProps} from "@react-aria/dialog";
 
 import {useReactAriaPopover, ReactAriaPopoverProps} from "./use-aria-popover";
 
@@ -131,7 +131,6 @@ export function usePopover(originalProps: UsePopoverProps) {
 
   const domTriggerRef = useRef<HTMLElement>(null);
   const wasTriggerPressedRef = useRef(false);
-  const dialogRef = useRef(null);
   const triggerRef = triggerRefProp || domTriggerRef;
 
   const disableAnimation =
@@ -179,8 +178,6 @@ export function usePopover(originalProps: UsePopoverProps) {
 
   const {isFocusVisible, isFocused, focusProps} = useFocusRing();
 
-  const {dialogProps, titleProps} = useDialog({}, dialogRef);
-
   const slots = useMemo(
     () =>
       popover({
@@ -198,14 +195,15 @@ export function usePopover(originalProps: UsePopoverProps) {
   });
 
   const getDialogProps: PropGetter = (props = {}) => ({
-    ref: dialogRef,
+    // `ref` and `dialogProps` from `useDialog` are passed from props
+    // if we use `useDialog` here, dialogRef won't be focused on mount
     "data-slot": "base",
     "data-open": dataAttr(state.isOpen),
     "data-focus": dataAttr(isFocused),
     "data-arrow": dataAttr(showArrow),
     "data-focus-visible": dataAttr(isFocusVisible),
     "data-placement": getArrowPlacement(ariaPlacement, placementProp),
-    ...mergeProps(focusProps, dialogProps, dialogPropsProp, props),
+    ...mergeProps(focusProps, dialogPropsProp, props),
     className: slots.base({class: clsx(baseStyles)}),
     style: {
       // this prevent the dialog to have a default outline
@@ -316,7 +314,6 @@ export function usePopover(originalProps: UsePopoverProps) {
     triggerRef,
     placement,
     isNonModal,
-    titleProps,
     popoverRef: domRef,
     portalContainer,
     isOpen: state.isOpen,\n
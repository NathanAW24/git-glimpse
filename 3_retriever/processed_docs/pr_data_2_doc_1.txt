Pull Request Number: 4122
Title: fix(use-image): image ReferenceError in SSR
Base Branch: canary
Head Branch: fix/ssr-img
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/4122
State: MERGED
Created At: 2024-11-20T08:49:57Z
Merged At: 2024-11-20T11:14:30Z
Participants: wingkwong, jrgarciadev

Description:
Closes # 
üìù Description
applied the same PR from beta to canary.
‚õ≥Ô∏è Current behavior (updates)

üöÄ New behavior

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


Bug Fixes

Resolved a ReferenceError related to image handling in Server-Side Rendering (SSR) contexts, enhancing the stability of the image component.



New Features

Improved image loading logic in the useImage hook, streamlining how images are managed and potentially enhancing performance.



Tests

Streamlined test structure for the useImage hook, updating methodologies for handling asynchronous state changes.

Commits:
- fix(use-image): image ReferenceError in SSR\n- fix(use-image): sync with beta\n- fix(use-image): sync with beta\n- chore(use-image): remove unnecessary comments\n

Labels:


Comments:
- vercel: [vc]: #E5WKh5zIijaCXYmXpO1kPzZds6EvigxH1t937mPyerw=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi80MThmYlR1QnhEZ1c1RlRoelhaZWlDRVFpMktUIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtc3NyLWltZy1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWZpeC1zc3ItaW1nLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvMjJNVWhvVmhyQVdKb2JzZ2JjRHBvR3duNmFQWCIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1maXgtc3NyLWltZy1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LXNzci1pbWctbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/418fbTuBxDgW5FThzXZeiCEQi2KT)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-ssr-img-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-ssr-img-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 20, 2024 9:25am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/22MUhoVhrAWJobsgbcDpoGwn6aPX)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-ssr-img-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-ssr-img-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 20, 2024 9:25am |


\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: ac3e06359d98bf0e0d9b7b66eecc98c60d238ff0

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 5 packages</summary>

  | Name                  | Type  |
| --------------------- | ----- |
| @nextui-org/use-image | Patch |
| @nextui-org/avatar    | Patch |
| @nextui-org/image     | Patch |
| @nextui-org/user      | Patch |
| @nextui-org/react     | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/ssr-img?filename=.changeset/new-queens-hunt.md&value=---%0A%22%40nextui-org%2Fuse-image%22%3A%20patch%0A---%0A%0Afix(use-image)%3A%20image%20ReferenceError%20in%20SSR%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
This pull request introduces a patch for the `@nextui-org/use-image` package, focusing on resolving a ReferenceError in Server-Side Rendering (SSR) contexts. The changes involve modifying the `useImage` React hook to improve image loading logic and management. Specifically, the initialization of the image loading status has been streamlined, and the internal logic for handling image references during SSR has been refined. No alterations were made to exported or public entity declarations.

## Changes

| File Path                               | Change Summary                                                                                          |
|-----------------------------------------|--------------------------------------------------------------------------------------------------------|
| packages/hooks/use-image/src/index.ts   | - Removed `setImageAndGetInitialStatus` function. <br> - Initialized `status` state directly in `useImage`. <br> - Encapsulated image loading logic in a new `load` function. <br> - Retained `flush` function for cleanup. <br> - Updated function signature: `export function useImage(props: UseImageProps = {})`. <br> - Added type alias: `export type UseImageReturn = ReturnType<typeof useImage>;`. |
| packages/hooks/use-image/__tests__/use-image.test.tsx | - Updated import statement to include `waitFor` from `@testing-library/react`. <br> - Changed variable handling from `rendered` to destructured assignment as `result`. <br> - Updated tests to use `waitFor` for asynchronous assertions and removed cached image test. |

## Possibly related PRs
- **#3802**: This PR modifies the `useImage` function's dependency array, which is directly related to the image handling logic in the main PR, ensuring that the image component behaves correctly during rendering.
- **#3843**: This PR updates image source URLs to reflect a new domain, which is relevant to the image handling context discussed in the main PR, focusing on ensuring images load correctly in the application.

## Suggested labels
`üü† Priority: High`, `üìã Scope : Docs`

## Suggested reviewers
- winchesHe

<!-- walkthrough_end -->





---

<details>
<summary>üìú Recent review details</summary>

**Configuration used: .coderabbit.yaml**
**Review profile: CHILL**

<details>
<summary>üì• Commits</summary>

Reviewing files that changed from the base of the PR and between d487902a676ac4e4a95200d8d66e4be3b799f1d3 and ac3e06359d98bf0e0d9b7b66eecc98c60d238ff0.

</details>

<details>
<summary>üìí Files selected for processing (1)</summary>

* `packages/hooks/use-image/src/index.ts` (3 hunks)

</details>

<details>
<summary>üöß Files skipped from review as they are similar to previous changes (1)</summary>

* packages/hooks/use-image/src/index.ts

</details>

</details>
<!-- internal state start -->


<!-- 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 -->

<!-- internal state end -->
<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/wild-jobs-explain.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/use-image": patch
+---
+
+fix Image ReferenceError in SSR
\ No newline at end of file\n- packages/hooks/use-image/__tests__/use-image.test.tsx (modified, 25 changes)\n  Patch: @@ -1,4 +1,4 @@
-import {renderHook} from "@testing-library/react-hooks";
+import {renderHook, waitFor} from "@testing-library/react";
 import {mocks} from "@nextui-org/test-utils";
 
 import {useImage} from "../src";
@@ -14,31 +14,24 @@ describe("use-image hook", () => {
   });
 
   it("can handle missing src", () => {
-    const rendered = renderHook(() => useImage({}));
+    const {result} = renderHook(() => useImage({}));
 
-    expect(rendered.result.current).toEqual("pending");
+    expect(result.current).toEqual("pending");
   });
 
   it("can handle loading image", async () => {
-    const rendered = renderHook(() => useImage({src: "/test.png"}));
+    const {result} = renderHook(() => useImage({src: "/test.png"}));
 
-    expect(rendered.result.current).toEqual("loading");
+    expect(result.current).toEqual("loading");
     mockImage.simulate("loaded");
-    await rendered.waitForValueToChange(() => rendered.result.current === "loaded");
+    await waitFor(() => expect(result.current).toBe("loaded"));
   });
 
   it("can handle error image", async () => {
     mockImage.simulate("error");
-    const rendered = renderHook(() => useImage({src: "/test.png"}));
+    const {result} = renderHook(() => useImage({src: "/test.png"}));
 
-    expect(rendered.result.current).toEqual("loading");
-    await rendered.waitForValueToChange(() => rendered.result.current === "failed");
-  });
-
-  it("can handle cached image", async () => {
-    mockImage.simulate("loaded");
-    const rendered = renderHook(() => useImage({src: "/test.png"}));
-
-    expect(rendered.result.current).toEqual("loaded");
+    expect(result.current).toEqual("loading");
+    await waitFor(() => expect(result.current).toBe("failed"));
   });
 });\n- packages/hooks/use-image/src/index.ts (modified, 91 changes)\n  Patch: @@ -1,9 +1,10 @@
 /**
  * Part of this code is taken from @chakra-ui/react package ‚ù§Ô∏è
  */
-import type {ImgHTMLAttributes, MutableRefObject, SyntheticEvent} from "react";
 
-import {useEffect, useRef, useState} from "react";
+import type {ImgHTMLAttributes, SyntheticEvent} from "react";
+
+import {useCallback, useEffect, useRef, useState} from "react";
 import {useSafeLayoutEffect} from "@nextui-org/use-safe-layout-effect";
 
 type NativeImageProps = ImgHTMLAttributes<HTMLImageElement>;
@@ -46,7 +47,6 @@ type Status = "loading" | "failed" | "pending" | "loaded";
 export type FallbackStrategy = "onError" | "beforeLoadOrError";
 
 type ImageEvent = SyntheticEvent<HTMLImageElement, Event>;
-
 /**
  * React hook that loads an image in the browser,
  * and lets us know the `status` so we can show image
@@ -63,40 +63,44 @@ type ImageEvent = SyntheticEvent<HTMLImageElement, Event>;
  * }
  * ```
  */
+
 export function useImage(props: UseImageProps = {}) {
   const {loading, src, srcSet, onLoad, onError, crossOrigin, sizes, ignoreFallback} = props;
 
+  const [status, setStatus] = useState<Status>("pending");
+
+  useEffect(() => {
+    setStatus(src ? "loading" : "pending");
+  }, [src]);
+
   const imageRef = useRef<HTMLImageElement | null>();
-  const firstMount = useRef<boolean>(true);
-  const [status, setStatus] = useState<Status>(() => setImageAndGetInitialStatus(props, imageRef));
 
-  useSafeLayoutEffect(() => {
-    if (firstMount.current) {
-      firstMount.current = false;
+  const load = useCallback(() => {
+    if (!src) return;
 
-      return;
-    }
+    flush();
 
-    setStatus(setImageAndGetInitialStatus(props, imageRef));
+    const img = new Image();
 
-    return () => {
-      flush();
-    };
-  }, [src, crossOrigin, srcSet, sizes, loading]);
+    img.src = src;
+    if (crossOrigin) img.crossOrigin = crossOrigin;
+    if (srcSet) img.srcset = srcSet;
+    if (sizes) img.sizes = sizes;
+    if (loading) img.loading = loading;
 
-  useEffect(() => {
-    if (!imageRef.current) return;
-    imageRef.current.onload = (event) => {
+    img.onload = (event) => {
       flush();
       setStatus("loaded");
       onLoad?.(event as unknown as ImageEvent);
     };
-    imageRef.current.onerror = (error) => {
+    img.onerror = (error) => {
       flush();
       setStatus("failed");
       onError?.(error as any);
     };
-  }, [imageRef.current]);
+
+    imageRef.current = img;
+  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);
 
   const flush = () => {
     if (imageRef.current) {
@@ -106,40 +110,25 @@ export function useImage(props: UseImageProps = {}) {
     }
   };
 
+  useSafeLayoutEffect(() => {
+    /**
+     * If user opts out of the fallback/placeholder
+     * logic, let's bail out.
+     */
+    if (ignoreFallback) return undefined;
+
+    if (status === "loading") {
+      load();
+    }
+
+    return () => {
+      flush();
+    };
+  }, [status, load, ignoreFallback]);
+
   /**
    * If user opts out of the fallback/placeholder
    * logic, let's just return 'loaded'
    */
   return ignoreFallback ? "loaded" : status;
 }
-
-function setImageAndGetInitialStatus(
-  props: UseImageProps,
-  imageRef: MutableRefObject<HTMLImageElement | null | undefined>,
-): Status {
-  const {loading, src, srcSet, crossOrigin, sizes, ignoreFallback} = props;
-
-  if (!src) return "pending";
-  if (ignoreFallback) return "loaded";
-
-  const img = new Image();
-
-  img.src = src;
-  if (crossOrigin) img.crossOrigin = crossOrigin;
-  if (srcSet) img.srcset = srcSet;
-  if (sizes) img.sizes = sizes;
-  if (loading) img.loading = loading;
-
-  imageRef.current = img;
-  if (img.complete && img.naturalWidth) {
-    return "loaded";
-  }
-
-  return "loading";
-}
-
-export const shouldShowFallbackImage = (status: Status, fallbackStrategy: FallbackStrategy) =>
-  (status !== "loaded" && fallbackStrategy === "beforeLoadOrError") ||
-  (status === "failed" && fallbackStrategy === "onError");
-
-export type UseImageReturn = ReturnType<typeof useImage>;\n
Pull Request Number: 91
Title: Refactor/baseline and props
Base Branch: main
Head Branch: refactor/baseline-and-props
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/91
State: MERGED
Created At: 2021-10-17T20:23:36Z
Merged At: 2021-10-17T20:31:19Z
Participants: jrgarciadev, codecov-commenter

Description:
Types of changes


 Bug fix (non-breaking change which fixes an issue)
 New feature (non-breaking change which adds functionality)
 Breaking change (fix or feature that would cause existing functionality to not work as expected)
 Documentation Only
 Refactor

Description, Motivation and Context

fix(container): box-sizing prop added to the CssBaseline component to solve this problem -> #87
feat(text): new prop added to set the text weight
feat(docs): text documentation updated
refactor(tooltip): breaking changes tooltip text prop changed to content and tooltip textColor prop changed to contentColor
feat(modal): animated prop added and example added to the docs
refactor(avatar): shadow box added to only text avatar group, borderWeight prop added

Commits:
- fix(css-baseline): Container component creates an overflow #87\n- feat(text): new prop added to set the text weight\n- feat(docs): text documentation updated\n- refactor(tooltip): breaking changes tooltip text changed to 'content' and 'textColor' changed to 'contentColor',\n- feat(modal): animated prop added\n- refactor(avatar): shadow box added to only text avatar group, borderWeight added, color warning removed\n- chore(nextui): test suites updated, tooltip text fixed\n

Labels:
ðŸ§± Type: Refactoring

Comments:
- codecov-commenter: # [Codecov](https://codecov.io/gh/nextui-org/nextui/pull/91?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) Report
> Merging [#91](https://codecov.io/gh/nextui-org/nextui/pull/91?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) (81e0bd2) into [main](https://codecov.io/gh/nextui-org/nextui/commit/4b6db7613ba828012782c03df5b871e6cb31e0a7?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) (4b6db76) will **decrease** coverage by `0.65%`.
> The diff coverage is `68.00%`.

[![Impacted file tree graph](https://codecov.io/gh/nextui-org/nextui/pull/91/graphs/tree.svg?width=650&height=150&src=pr&token=We4e5sFK8O&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None)](https://codecov.io/gh/nextui-org/nextui/pull/91?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None)

```diff
@@            Coverage Diff             @@
##             main      #91      +/-   ##
==========================================
- Coverage   85.53%   84.88%   -0.66%     
==========================================
  Files         106      106              
  Lines        1860     1866       +6     
  Branches      633      639       +6     
==========================================
- Hits         1591     1584       -7     
- Misses        262      273      +11     
- Partials        7        9       +2     
```


| [Impacted Files](https://codecov.io/gh/nextui-org/nextui/pull/91?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) | Coverage Î” | |
|---|---|---|
| [packages/nextui/src/css-baseline/css-baseline.tsx](https://codecov.io/gh/nextui-org/nextui/pull/91/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9jc3MtYmFzZWxpbmUvY3NzLWJhc2VsaW5lLnRzeA==) | `60.00% <Ã¸> (Ã¸)` | |
| [packages/nextui/src/modal/modal.tsx](https://codecov.io/gh/nextui-org/nextui/pull/91/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9tb2RhbC9tb2RhbC50c3g=) | `95.23% <Ã¸> (Ã¸)` | |
| [packages/nextui/src/text/text.tsx](https://codecov.io/gh/nextui-org/nextui/pull/91/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy90ZXh0L3RleHQudHN4) | `100.00% <Ã¸> (Ã¸)` | |
| [packages/nextui/src/tooltip/position.ts](https://codecov.io/gh/nextui-org/nextui/pull/91/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy90b29sdGlwL3Bvc2l0aW9uLnRz) | `100.00% <Ã¸> (Ã¸)` | |
| [packages/nextui/src/modal/modal-wrapper.tsx](https://codecov.io/gh/nextui-org/nextui/pull/91/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9tb2RhbC9tb2RhbC13cmFwcGVyLnRzeA==) | `82.92% <50.00%> (-8.25%)` | :arrow_down: |
| [packages/nextui/src/backdrop/index.tsx](https://codecov.io/gh/nextui-org/nextui/pull/91/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9iYWNrZHJvcC9pbmRleC50c3g=) | `58.62% <55.55%> (-5.02%)` | :arrow_down: |
| [packages/nextui/src/avatar/avatar-group.tsx](https://codecov.io/gh/nextui-org/nextui/pull/91/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9hdmF0YXIvYXZhdGFyLWdyb3VwLnRzeA==) | `100.00% <100.00%> (Ã¸)` | |
| [packages/nextui/src/avatar/avatar.tsx](https://codecov.io/gh/nextui-org/nextui/pull/91/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9hdmF0YXIvYXZhdGFyLnRzeA==) | `97.43% <100.00%> (-0.44%)` | :arrow_down: |
| [packages/nextui/src/snippet/snippet.tsx](https://codecov.io/gh/nextui-org/nextui/pull/91/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9zbmlwcGV0L3NuaXBwZXQudHN4) | `93.18% <100.00%> (Ã¸)` | |
| [packages/nextui/src/text/child.tsx](https://codecov.io/gh/nextui-org/nextui/pull/91/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy90ZXh0L2NoaWxkLnRzeA==) | `88.88% <100.00%> (-0.59%)` | :arrow_down: |
| ... and [3 more](https://codecov.io/gh/nextui-org/nextui/pull/91/diff?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nextui-org/nextui/pull/91?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None)
> `Î” = absolute <relative> (impact)`, `Ã¸ = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nextui-org/nextui/pull/91?src=pr&el=footer&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None). Last update [4b6db76...81e0bd2](https://codecov.io/gh/nextui-org/nextui/pull/91?src=pr&el=lastupdated&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None).
\n

Files Changed:
- packages/docs/content/docs/components/avatar.mdx (modified, 51 changes)\n  Patch: @@ -74,25 +74,25 @@ import { Avatar } from '@nextui-org/react';
   code={`
   <Grid.Container gap={2}>
     <Grid>
-        <Avatar text="Primary" color="primary" />
+        <Avatar text="Primary" color="primary" textColor="white" />
     </Grid>
     <Grid>
-        <Avatar text="Secondary" color="secondary" />
+        <Avatar text="Secondary" color="secondary" textColor="white" />
     </Grid>
     <Grid>
-        <Avatar text="S" color="success" />
+        <Avatar text="S" color="success" textColor="white" />
     </Grid>
     <Grid>
-        <Avatar text="Warn" color="warning" />
+        <Avatar text="Warn" color="warning" textColor="white" />
     </Grid>
     <Grid>
-        <Avatar text="Err" color="error" />
+        <Avatar text="Err" color="error" textColor="white" />
     </Grid>
     <Grid>
-        <Avatar text="Grad" color="gradient" />
+        <Avatar text="Grad" color="gradient" textColor="white" />
     </Grid>
     <Grid>
-        <Avatar text="#ff4ecd" color="#ff4ecd" />
+        <Avatar text="#ff4ecd" color="#ff4ecd" textColor="white" />
     </Grid>
  </Grid.Container>
 `}
@@ -271,21 +271,22 @@ import { Avatar } from '@nextui-org/react';
 
 #### Avatar Props
 
-| Attribute     | Type                    | Accepted values                          | Description                            | Default   |
-| ------------- | ----------------------- | ---------------------------------------- | -------------------------------------- | --------- |
-| **color**     | `NormalColors` `string` | [NormalColors](#normal-colors)           | Change avatar color                    | `default` |
-| **textColor** | `SimpleColors` `string` | [SimpleColors](#simple-colors)           | Change avatar text color               | `default` |
-| **src**       | `string`                | -                                        | Image source (local or remote)         | -         |
-| **text**      | `string`                | -                                        | Display text when image is missing     | -         |
-| **alt**       | `string`                | -                                        | Display alt text when image is missing | -         |
-| **size**      | `NormalSizes` `number`  | [NormalSizes](#normal-sizes)             | Avatar size                            | `medium`  |
-| **bordered**  | `boolean`               | `true/false`                             | Bodered avatar                         | `false`   |
-| **pointer**   | `boolean`               | `true/false`                             | Display pointer cursor on hover        | `false`   |
-| **stacked**   | `boolean`               | `true/false`                             | Stacked display group                  | `false`   |
-| **zoomed**    | `boolean`               | `true/false`                             | Zoomed avatar                          | `false`   |
-| **squared**   | `boolean`               | `true/false`                             | Squared avatar                         | `false`   |
-| **icon**      | `ReactNode`             | -                                        | Show icon in avatar                    | -         |
-| ...           | `ImgHTMLAttributes`     | `'alt', 'crossOrigin', 'className', ...` | Native props                           | -         |
+| Attribute        | Type                    | Accepted values                          | Description                            | Default   |
+| ---------------- | ----------------------- | ---------------------------------------- | -------------------------------------- | --------- |
+| **color**        | `NormalColors` `string` | [NormalColors](#normal-colors)           | Change avatar color                    | `default` |
+| **textColor**    | `SimpleColors` `string` | [SimpleColors](#simple-colors)           | Change avatar text color               | `default` |
+| **src**          | `string`                | -                                        | Image source (local or remote)         | -         |
+| **text**         | `string`                | -                                        | Display text when image is missing     | -         |
+| **alt**          | `string`                | -                                        | Display alt text when image is missing | -         |
+| **size**         | `NormalSizes` `number`  | [NormalSizes](#normal-sizes)             | Avatar size                            | `medium`  |
+| **bordered**     | `boolean`               | `true/false`                             | Bodered avatar                         | `false`   |
+| **borderWeight** | `NormalWeights`         | [NormalWeights](#normal-weights)         | Border weight for `bordered` avatar    | `normal`  |
+| **pointer**      | `boolean`               | `true/false`                             | Display pointer cursor on hover        | `false`   |
+| **stacked**      | `boolean`               | `true/false`                             | Stacked display group                  | `false`   |
+| **zoomed**       | `boolean`               | `true/false`                             | Zoomed avatar                          | `false`   |
+| **squared**      | `boolean`               | `true/false`                             | Squared avatar                         | `false`   |
+| **icon**         | `ReactNode`             | -                                        | Show icon in avatar                    | -         |
+| ...              | `ImgHTMLAttributes`     | `'alt', 'crossOrigin', 'className', ...` | Native props                           | -         |
 
 <Spacer y={2} />
 
@@ -333,3 +334,9 @@ type SimpleColors =
 ```ts
 type NormalSizes = 'mini' | 'small' | 'medium' | 'large' | 'xlarge';
 ```
+
+#### Normal Weights
+
+```ts
+type NormalWeights = 'light' | 'normal' | 'bold';
+```\n- packages/docs/content/docs/components/button-group.mdx (modified, 2 changes)\n  Patch: @@ -223,5 +223,5 @@ type NormalSizes = 'mini' | 'small' | 'medium' | 'large' | 'xlarge';
 #### Normal Weights
 
 ```ts
-type NormalWeights = 'normal' | 'light' | 'bold';
+type NormalWeights = 'light' | 'normal' | 'bold';
 ```\n- packages/docs/content/docs/components/button.mdx (modified, 2 changes)\n  Patch: @@ -488,5 +488,5 @@ type NormalLoaders =
 #### Normal Weights
 
 ```ts
-type NormalWeights = 'normal' | 'light' | 'bold';
+type NormalWeights = 'light' | 'normal' | 'bold';
 ```\n- packages/docs/content/docs/components/input.mdx (modified, 6 changes)\n  Patch: @@ -552,7 +552,7 @@ type NormalSizes = 'mini' | 'small' | 'medium' | 'large' | 'xlarge';
 #### Normal Weights
 
 ```ts
-type NormalWeights = 'normal' | 'light' | 'bold';
+type NormalWeights = 'light' | 'normal' | 'bold';
 ```
 
 #### Content Position
@@ -564,7 +564,9 @@ type ContentPosition = 'left' | 'right';
 #### useInput
 
 ```ts
-type useInput = (initialValue: string) => {
+type useInput = (
+  initialValue: string
+) => {
   value: string;
   setValue: Dispatch<SetStateAction<string>>;
   currentRef: MutableRefObject<string>;\n- packages/docs/content/docs/components/modal.mdx (modified, 76 changes)\n  Patch: @@ -728,6 +728,81 @@ return (
 }`}
 />
 
+<Playground
+  title="No Animated"
+  desc="You can disable the animation of the entire `Modal` with the property `animated={false}`."
+  code={`
+() => {
+const [visible, setVisible] = React.useState(false);
+const handler = () => setVisible(true);
+const closeHandler = () => {
+    setVisible(false);
+    console.log('closed');
+};
+return (
+<div>
+    <Button auto ghost color="success" onClick={handler}>
+       Open modal
+    </Button>
+    <Modal
+        closeButton
+        animated={false}
+        aria-labelledby="modal-title"
+        open={visible}
+        onClose={closeHandler}
+    >
+        <Modal.Header>
+            <Text id="modal-title" size={18}>
+            Welcome to
+            <Text b size={18}>
+                NextUI
+            </Text>
+            </Text>
+        </Modal.Header>
+        <Modal.Body>
+            <Input
+                clearable
+                bordered
+                fullWidth
+                color="primary"
+                size="large"
+                placeholder="Email"
+                contentLeft={<Mail />}
+            />
+            <Input
+                clearable
+                bordered
+                fullWidth
+                color="primary"
+                size="large"
+                placeholder="Password"
+                contentLeft={<Password />}
+            />
+            <Row justify="space-between">
+            <Checkbox>
+                <Text size={14}>
+                Remember me
+                </Text>
+            </Checkbox>
+            <Text size={14}>
+                Forgot password?
+            </Text>
+            </Row>
+        </Modal.Body>
+        <Modal.Footer>
+            <Button auto flat color="error" onClick={closeHandler}>
+            Close
+            </Button>
+            <Button auto onClick={closeHandler}>
+            Sign in
+            </Button>
+        </Modal.Footer>
+    </Modal>
+</div>
+);    
+}`}
+/>
+
 <Spacer y={3} />
 
 ### APIs
@@ -741,6 +816,7 @@ return (
 | **open**         | `boolean`         | `true/false`             | Determine if the modal is visible or hidden                                                   | `false` |
 | **scroll**       | `boolean`         | `true/false`             | Makes the content a maximum high and gives the possibility to overflow the content add scroll | `false` |
 | **blur**         | `boolean`         | `true/false`             | Makes all elements blur when the modal opens                                                  | `false` |
+| **animated**     | `boolean`         | `true/false`             | Display the modal with opening and close animation                                            | `true`  |
 | **noPadding**    | `boolean`         | `true/false`             | Eliminates the padding of the base elements of the modal                                      | `false` |
 | **closeButton**  | `boolean`         | `true/false`             | Determine if the modal close button is visible or hidden                                      | `false` |
 | **fullScreen**   | `boolean`         | `true/false`             | Makes the modal the size of the window                                                        | `false` |\n- packages/docs/content/docs/components/text.mdx (modified, 28 changes)\n  Patch: @@ -165,6 +165,7 @@ import { Text } from '@nextui-org/react';
 | **size**       | `string` `number`       | -                              | Text size       | `inherit` |
 | **margin**     | `string` `number`       | -                              | Text margin     | `inherit` |
 | **color**      | `NormalColors` `string` | [NormalColors](#normal-colors) | Text color      | `default` |
+| **weight**     | `TextWeights`           | [TextWeights](#text-weights)   | Text weight     | `noset`   |
 | ...            | `HTMLAttributes`        | `'id', 'className', ...`       | native props    | -         |
 
 <Spacer y={2} />
@@ -184,3 +185,30 @@ type NormalColors =
   | 'warning'
   | 'error';
 ```
+
+#### Text Weights
+
+```ts
+type TextWeights =
+  /* Keyword values */
+  | 'normal'
+  | 'bold'
+  /* Keyword values relative to the parent */
+  | 'lighter'
+  | 'bolder'
+  /* Global values */
+  | 'inherit'
+  | 'initial'
+  | 'revert'
+  | 'unset'
+  /* Numeric keyword values */
+  | 100
+  | 200
+  | 300
+  | 400 // normal
+  | 500
+  | 600
+  | 700 // bold
+  | 800
+  | 900;
+```\n- packages/docs/content/docs/components/textarea.mdx (modified, 6 changes)\n  Patch: @@ -291,13 +291,15 @@ type NormalSizes = 'mini' | 'small' | 'medium' | 'large' | 'xlarge';
 #### Normal Weights
 
 ```ts
-type NormalWeights = 'normal' | 'light' | 'bold';
+type NormalWeights = 'light' | 'normal' | 'bold';
 ```
 
 #### useInput
 
 ```ts
-type useInput = (initialValue: string) => {
+type useInput = (
+  initialValue: string
+) => {
   value: string;
   setValue: Dispatch<SetStateAction<string>>;
   currentRef: MutableRefObject<string>;\n- packages/docs/content/docs/components/tooltip.mdx (modified, 76 changes)\n  Patch: @@ -18,7 +18,7 @@ import { Tooltip } from '@nextui-org/react';
   title="Default"
   desc="The default `Tooltip` has the background color."
   code={`
-<Tooltip text={'Developers love Next.js'}>
+<Tooltip content={'Developers love Next.js'}>
     <Button auto flat>
         Do hover here
     </Button>
@@ -30,7 +30,7 @@ import { Tooltip } from '@nextui-org/react';
   title="Rounded"
   desc="You can completely round the `Tooltip` corners with the `rounded` property."
   code={`
-<Tooltip text={'Developers love Next.js'} rounded color="primary">
+<Tooltip content={'Developers love Next.js'} rounded color="primary">
     <Button auto flat>
         Do hover here
     </Button>
@@ -44,56 +44,56 @@ import { Tooltip } from '@nextui-org/react';
   code={`
 <Grid.Container gap={2}>
     <Grid>
-        <Tooltip text="Developers love Next.js">
+        <Tooltip content="Developers love Next.js">
             <Button light auto>
                 Default
             </Button>
         </Tooltip>
     </Grid>
     <Grid>
-        <Tooltip text="Developers love Next.js" color="invert">
+        <Tooltip content="Developers love Next.js" color="invert">
             <Button light auto>
                 Invert
             </Button>
         </Tooltip>
     </Grid>
     <Grid>
-        <Tooltip text="Developers love Next.js" color="primary">
+        <Tooltip content="Developers love Next.js" color="primary">
             <Button flat auto>
                 Primary
             </Button>
         </Tooltip>
     </Grid>
     <Grid>
-        <Tooltip text="Developers love Next.js" color="secondary">
+        <Tooltip content="Developers love Next.js" color="secondary">
             <Button flat auto color="secondary">
                 Secondary
             </Button>
         </Tooltip>
     </Grid>
     <Grid>
-        <Tooltip text="Developers love Next.js" color="success">
+        <Tooltip content="Developers love Next.js" color="success">
             <Button flat auto color="success">
                 Success
             </Button>
         </Tooltip>
     </Grid>
     <Grid>
-        <Tooltip text="Developers love Next.js" color="warning">
+        <Tooltip content="Developers love Next.js" color="warning">
             <Button flat auto color="warning">
                 Warning
             </Button>
         </Tooltip>
     </Grid>
     <Grid>
-        <Tooltip text="Developers love Next.js" color="error">
+        <Tooltip content="Developers love Next.js" color="error">
             <Button flat auto color="error">
                 Error
             </Button>
         </Tooltip>
     </Grid>
     <Grid>
-        <Tooltip text="Developers love Next.js" color="#ff4ecd">
+        <Tooltip content="Developers love Next.js" color="#ff4ecd">
             <Button auto flat color="#ff4ecd">
                 Custom
             </Button>
@@ -105,53 +105,53 @@ import { Tooltip } from '@nextui-org/react';
 
 <Playground
   title="Text Colors"
-  desc="You can change the `Tooltip` text color with `textColor` prop"
+  desc="You can change the `Tooltip` text color with `contentColor` prop"
   code={`
 <Grid.Container gap={2}>
     <Grid>
-        <Tooltip text="Developers love Next.js">
+        <Tooltip content="Developers love Next.js">
             <Button light auto>
                 Default
             </Button>
         </Tooltip>
     </Grid>
     <Grid>
-        <Tooltip text="Developers love Next.js" textColor="primary" color="white">
+        <Tooltip content="Developers love Next.js" contentColor="primary" color="white">
             <Button flat auto>
                 Primary
             </Button>
         </Tooltip>
     </Grid>
     <Grid>
-        <Tooltip text="Developers love Next.js" textColor="secondary" color="white">
+        <Tooltip content="Developers love Next.js" contentColor="secondary" color="white">
             <Button flat auto color="secondary">
                 Secondary
             </Button>
         </Tooltip>
     </Grid>
     <Grid>
-        <Tooltip text="Developers love Next.js" textColor="success" color="white">
+        <Tooltip content="Developers love Next.js" contentColor="success" color="white">
             <Button flat auto color="success">
                 Success
             </Button>
         </Tooltip>
     </Grid>
     <Grid>
-        <Tooltip text="Developers love Next.js" textColor="warning" color="white">
+        <Tooltip content="Developers love Next.js" contentColor="warning" color="white">
             <Button flat auto color="warning">
                 Warning
             </Button>
         </Tooltip>
     </Grid>
     <Grid>
-        <Tooltip text="Developers love Next.js" textColor="error" color="white">
+        <Tooltip content="Developers love Next.js" contentColor="error" color="white">
             <Button flat auto color="error">
                 Error
             </Button>
         </Tooltip>
     </Grid>
     <Grid>
-        <Tooltip text="Developers love Next.js" textColor="#ff4ecd" color="white">
+        <Tooltip content="Developers love Next.js" contentColor="#ff4ecd" color="white">
             <Button auto flat color="#ff4ecd">
                 Custom
             </Button>
@@ -167,7 +167,7 @@ import { Tooltip } from '@nextui-org/react';
   code={`
 <Grid.Container gap={2}>
   <Grid>
-    <Tooltip rounded color="primary" text="Developers love Next.js">
+    <Tooltip rounded color="primary" content="Developers love Next.js">
         <Button auto color="primary" flat rounded>
             Primary
         </Button>
@@ -183,14 +183,14 @@ import { Tooltip } from '@nextui-org/react';
   code={`
 <Grid.Container gap={2}>
     <Grid>
-        <Tooltip text={'Developers love Next.js'} trigger="click" color="primary">
+        <Tooltip content={'Developers love Next.js'} trigger="click" color="primary">
             <Button auto flat>
                 Click me
             </Button>
         </Tooltip>
     </Grid>
     <Grid>
-        <Tooltip text={'Developers love Next.js'} trigger="hover" color="secondary">
+        <Tooltip content={'Developers love Next.js'} trigger="hover" color="secondary">
             <Button auto flat color="secondary">
                 Hover me
             </Button>
@@ -206,87 +206,87 @@ import { Tooltip } from '@nextui-org/react';
   code={`
 <Grid.Container gap={2} justify="center" alignContent="center">
     <Grid xs={4} justify="flex-end">
-        <Tooltip color="primary" text="Developers love Next.js" position="topStart">
+        <Tooltip color="primary" content="Developers love Next.js" position="topStart">
             <Button auto color="foreground" light>
                 topStart
             </Button>
         </Tooltip>
     </Grid>
     <Grid xs={4} justify="center">
-        <Tooltip color="primary" text="Developers love Next.js" position="top">
+        <Tooltip color="primary" content="Developers love Next.js" position="top">
             <Button auto color="foreground" light>
                 top
             </Button>
         </Tooltip>
     </Grid>
     <Grid xs={4}>
-        <Tooltip color="primary" text="Developers love Next.js" position="topEnd">
+        <Tooltip color="primary" content="Developers love Next.js" position="topEnd">
             <Button auto color="foreground" light>
                 topEnd
             </Button>
         </Tooltip>
     </Grid>
     <Grid xs={3} justify="flex-end">
-        <Tooltip color="primary" text="Developers love Next.js" position="leftStart">
+        <Tooltip color="primary" content="Developers love Next.js" position="leftStart">
             <Button auto color="foreground" light>
                 leftStart
             </Button>
         </Tooltip>
     </Grid>
     <Grid xs={6} />
     <Grid xs={3}>
-        <Tooltip color="primary" text="Developers love Next.js" position="rightStart">
+        <Tooltip color="primary" content="Developers love Next.js" position="rightStart">
             <Button auto color="foreground" light>
                 rightStart
             </Button>
         </Tooltip>
     </Grid>
     <Grid xs={3} justify="flex-end">
-        <Tooltip color="primary" text="Developers love Next.js" position="left">
+        <Tooltip color="primary" content="Developers love Next.js" position="left">
             <Button auto color="foreground" light>
                 left
             </Button>
         </Tooltip>
     </Grid>
     <Grid xs={6} />
     <Grid xs={3}>
-        <Tooltip color="primary" text="Developers love Next.js" position="right">
+        <Tooltip color="primary" content="Developers love Next.js" position="right">
             <Button auto color="foreground" light>
                 right
             </Button>
         </Tooltip>
     </Grid>
     <Grid xs={3} justify="flex-end">
-        <Tooltip color="primary" text="Developers love Next.js" position="leftEnd">
+        <Tooltip color="primary" content="Developers love Next.js" position="leftEnd">
             <Button auto color="foreground" light>
                 leftEnd
             </Button>
         </Tooltip>
     </Grid>
     <Grid xs={6} />
     <Grid xs={3}>
-        <Tooltip color="primary" text="Developers love Next.js" position="rightEnd">
+        <Tooltip color="primary" content="Developers love Next.js" position="rightEnd">
             <Button auto color="foreground" light>
                 rightEnd
             </Button>
         </Tooltip>
     </Grid>
     <Grid xs={4} justify="flex-end">
-        <Tooltip color="primary" text="Developers love Next.js" position="bottomStart">
+        <Tooltip color="primary" content="Developers love Next.js" position="bottomStart">
             <Button auto color="foreground" light>
                 bottomStart
             </Button>
         </Tooltip>
     </Grid>
     <Grid xs={4} justify="center">
-        <Tooltip color="primary" text="Developers love Next.js" position="bottom">
+        <Tooltip color="primary" content="Developers love Next.js" position="bottom">
             <Button auto color="foreground" light>
                 bottom
             </Button>
         </Tooltip>
     </Grid>
     <Grid xs={4}>
-        <Tooltip color="primary" text="Developers love Next.js" position="bottomEnd">
+        <Tooltip color="primary" content="Developers love Next.js" position="bottomEnd">
             <Button auto color="foreground" light>
                 bottomEnd
             </Button>
@@ -302,7 +302,7 @@ import { Tooltip } from '@nextui-org/react';
   code={`
 <Grid.Container>
     <Grid>
-      <Tooltip text={'Developers love Next.js'} color="primary" hideArrow>
+      <Tooltip content={'Developers love Next.js'} color="primary" hideArrow>
         <Button auto flat>
           Do hover me
         </Button>
@@ -318,14 +318,14 @@ import { Tooltip } from '@nextui-org/react';
   code={`
 <Grid.Container gap={2} alignItems="center">
   <Grid>
-    <Tooltip trigger="click" color="background" text={<DeleteUser/>}>
+    <Tooltip trigger="click" color="background" content={<DeleteUser/>}>
         <Button color="error" auto flat>
             Click Delete User
         </Button>
     </Tooltip>
   </Grid>
   <Grid>
-    <Tooltip placement="bottom" color="background" text={<UserTwitterCard/>}>
+    <Tooltip placement="bottom" color="background" content={<UserTwitterCard/>}>
         <Avatar pointer size="large" src="/avatars/avatar-2.png" color="gradient" bordered squared />   
     </Tooltip>
   </Grid>
@@ -343,9 +343,9 @@ import { Tooltip } from '@nextui-org/react';
 
 | Attribute           | Type                       | Accepted values                                      | Description                                                | Default   |
 | ------------------- | -------------------------- | ---------------------------------------------------- | ---------------------------------------------------------- | --------- |
-| **text**            | `React.ReactNode` `string` | -                                                    | Tooltip content                                            | -         |
+| **content**         | `React.ReactNode` `string` | -                                                    | Tooltip content                                            | -         |
 | **color**           | `TooltipTypes` `string`    | [TooltipColors](#tooltip-colors)                     | Change tooltip background color                            | `default` |
-| **textColor**       | `SimpleColors` `string`    | [SimpleColors](#simple-colors)                       | Checkbox tooltip text color                                | `default` |
+| **contentColor**    | `SimpleColors` `string`    | [SimpleColors](#simple-colors)                       | Checkbox tooltip text color                                | `default` |
 | **position**        | `Position`                 | [Position](#position)                                | Tooltip position relative to the target                    | `top`     |
 | **initialVisible**  | `boolean`                  | `true/false`                                         | Determine if the tooltip is visible on initial             | `false`   |
 | **visible**         | `boolean`                  | `true/false`                                         | Force if the tooltip is visible or not                     | -         |\n- packages/docs/src/components/mdx/codeblock.tsx (modified, 8 changes)\n  Patch: @@ -3,7 +3,7 @@ import { Snippet, useTheme } from '@nextui-org/react';
 import makeCodeTheme from '../playground/code-theme';
 
 const Codeblock: React.FC<React.PropsWithChildren<unknown>> = ({
-  children,
+  children
 }) => {
   const theme = useTheme();
   const codeTheme = makeCodeTheme(theme);
@@ -13,6 +13,9 @@ const Codeblock: React.FC<React.PropsWithChildren<unknown>> = ({
   const punctuationColor = codeTheme.styles.find((style) =>
     style.types.includes('punctuation')
   );
+  const numberColor = codeTheme.styles.find((style) =>
+    style.types.includes('number')
+  );
   const textColor = codeTheme.styles.find((style) =>
     style.types.includes('text')
   );
@@ -57,6 +60,9 @@ const Codeblock: React.FC<React.PropsWithChildren<unknown>> = ({
         :global(.token.punctuation) {
           color: ${punctuationColor?.style.color};
         }
+        :global(.token.number) {
+          color: ${numberColor?.style.color};
+        }
         :global(.token.class-name) {
           color: ${classnameColor?.style.color};
         }\n- packages/docs/src/components/palette/item.tsx (modified, 2 changes)\n  Patch: @@ -25,7 +25,7 @@ const Item: React.FC<ItemProps> = ({ color, inverted, ...props }) => {
         background: hexColor,
         marginRight: '10px',
         marginBottom: '10px',
-        boxShadow: `0 20px 35px -10px ${hexToRGBA(shadowColor, 0.4)}`,
+        boxShadow: `0 20px 35px -10px ${hexToRGBA(shadowColor, 0.4)}`
       }}
       {...props}
     >\n- packages/docs/src/components/playground/code-theme.ts (modified, 68 changes)\n  Patch: @@ -9,7 +9,7 @@ const makeCodeTheme = (theme: NextUIThemes): PrismTheme => ({
     fontStyle: 'normal',
     fontFamily: theme.font.mono,
     fontSize: '.875rem',
-    textRendering: 'geometricPrecision',
+    textRendering: 'geometricPrecision'
   },
   styles: [
     {
@@ -19,50 +19,50 @@ const makeCodeTheme = (theme: NextUIThemes): PrismTheme => ({
           theme.type === 'light'
             ? theme.palette.accents_3
             : theme.palette.accents_6,
-        opacity: 0.5,
-      },
+        opacity: 0.5
+      }
     },
     {
       types: ['punctuation', 'symbol', 'text'],
       style: {
-        color: '#fff',
-      },
+        color: '#fff'
+      }
     },
     {
       types: ['function'],
       style: {
-        color: '#61AFEF',
-      },
+        color: '#61AFEF'
+      }
     },
     {
       types: ['namespace'],
       style: {
-        opacity: 1,
-      },
+        opacity: 1
+      }
     },
     {
       types: ['tag', 'operator', 'number'],
       style: {
-        color: '#E5C07B',
-      },
+        color: '#E5C07B'
+      }
     },
     {
       types: ['property', 'function'],
       style: {
-        color: theme.palette.success,
-      },
+        color: theme.palette.success
+      }
     },
     {
       types: ['tag-id', 'selector', 'atrule-id'],
       style: {
-        color: '#E06C75',
-      },
+        color: '#E06C75'
+      }
     },
     {
       types: ['attr-name'],
       style: {
-        color: theme.palette.warning,
-      },
+        color: theme.palette.warning
+      }
     },
     {
       types: [
@@ -79,49 +79,49 @@ const makeCodeTheme = (theme: NextUIThemes): PrismTheme => ({
         'regex',
         'at-rule',
         'placeholder',
-        'variable',
+        'variable'
       ],
       style: {
-        color: '#98C379',
-      },
+        color: '#98C379'
+      }
     },
     {
       types: ['deleted'],
       style: {
-        textDecorationLine: 'line-through',
-      },
+        textDecorationLine: 'line-through'
+      }
     },
     {
       types: ['language-javascript', 'script'],
       style: {
-        color: theme.palette.success,
-      },
+        color: theme.palette.success
+      }
     },
     {
       types: ['inserted'],
       style: {
-        textDecorationLine: 'underline',
-      },
+        textDecorationLine: 'underline'
+      }
     },
     {
       types: ['italic'],
       style: {
-        fontStyle: 'italic',
-      },
+        fontStyle: 'italic'
+      }
     },
     {
       types: ['important', 'bold'],
       style: {
-        fontWeight: 'bold',
-      },
+        fontWeight: 'bold'
+      }
     },
     {
       types: ['important'],
       style: {
-        color: '#c678dd',
-      },
-    },
-  ],
+        color: '#c678dd'
+      }
+    }
+  ]
 });
 
 export default makeCodeTheme;\n- packages/docs/src/components/playground/editor.tsx (modified, 6 changes)\n  Patch: @@ -49,7 +49,7 @@ const Editor: React.FC = () => {
     Object.assign(document.createElement('a'), {
       target: '_blank',
       rel: 'noopener noreferrer',
-      href: `${ISSUE_REPORT_URL}${componentTitle}`,
+      href: `${ISSUE_REPORT_URL}${componentTitle}`
     }).click();
   };
 
@@ -80,7 +80,7 @@ const Editor: React.FC = () => {
                 <Tooltip
                   hideArrow
                   className="action-tooltip"
-                  text={copied ? 'Copied!' : 'Copy'}
+                  content={copied ? 'Copied!' : 'Copy'}
                   onVisibleChange={handleTooltipVisibleChange}
                 >
                   <span
@@ -101,7 +101,7 @@ const Editor: React.FC = () => {
                 <Tooltip
                   hideArrow
                   className="action-tooltip"
-                  text="Report a bug"
+                  content="Report a bug"
                 >
                   <a
                     className="icon"\n- packages/nextui/src/avatar/__tests__/__snapshots__/group.test.tsx.snap (modified, 536 changes)\n  Patch: @@ -4,12 +4,12 @@ exports[`AvatarGroup should render correctly 1`] = `
 LoadedCheerio {
   "0": Node {
     "attribs": Object {
-      "class": "avatar-group ",
+      "class": "avatar-group",
     },
     "children": Array [
       Node {
         "attribs": Object {
-          "class": "avatar bordered ",
+          "class": "avatar bordered only-text-avatar",
         },
         "children": Array [
           Node {
@@ -70,7 +70,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -88,7 +88,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -112,7 +112,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -208,7 +208,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -226,7 +226,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -250,7 +250,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -338,7 +338,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -356,7 +356,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -380,7 +380,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -452,7 +452,7 @@ LoadedCheerio {
         "namespace": "http://www.w3.org/1999/xhtml",
         "next": Node {
           "attribs": Object {
-            "class": "avatar bordered ",
+            "class": "avatar bordered only-text-avatar",
           },
           "children": Array [
             Node {
@@ -513,7 +513,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -531,7 +531,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -555,7 +555,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -651,7 +651,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -669,7 +669,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -693,7 +693,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -781,7 +781,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -799,7 +799,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -823,7 +823,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -895,7 +895,7 @@ LoadedCheerio {
           "namespace": "http://www.w3.org/1999/xhtml",
           "next": Node {
             "attribs": Object {
-              "class": "avatar bordered ",
+              "class": "avatar bordered only-text-avatar",
             },
             "children": Array [
               Node {
@@ -956,7 +956,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -974,7 +974,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -998,7 +998,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -1094,7 +1094,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -1112,7 +1112,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -1136,7 +1136,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -1224,7 +1224,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -1242,7 +1242,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -1266,7 +1266,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -1338,7 +1338,7 @@ LoadedCheerio {
             "namespace": "http://www.w3.org/1999/xhtml",
             "next": Node {
               "attribs": Object {
-                "class": "avatar bordered ",
+                "class": "avatar bordered only-text-avatar",
               },
               "children": Array [
                 Node {
@@ -1399,7 +1399,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -1417,7 +1417,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -1441,7 +1441,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -1537,7 +1537,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -1555,7 +1555,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -1579,7 +1579,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -1667,7 +1667,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -1685,7 +1685,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -1709,7 +1709,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -1794,6 +1794,12 @@ LoadedCheerio {
           margin-left: -0.625rem;
           transition: transform 0.25s ease;
         }
+        .avatar-group :global(.only-text-avatar) {
+          box-shadow: -4px 0 4px rgb(0 0 0 / 5%);
+        }
+        .is-dark :global(.only-text-avatar) {
+          box-shadow: -4px 0 15px rgb(0 0 0 / 50%);
+        }
         .avatar-group :global(.avatar:hover) {
           transform: ;
         }
@@ -1862,7 +1868,7 @@ LoadedCheerio {
       },
       Node {
         "attribs": Object {
-          "class": "avatar bordered ",
+          "class": "avatar bordered only-text-avatar",
         },
         "children": Array [
           Node {
@@ -1923,7 +1929,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -1941,7 +1947,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -1965,7 +1971,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -2061,7 +2067,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -2079,7 +2085,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -2103,7 +2109,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -2191,7 +2197,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -2209,7 +2215,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -2233,7 +2239,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -2305,7 +2311,7 @@ LoadedCheerio {
         "namespace": "http://www.w3.org/1999/xhtml",
         "next": Node {
           "attribs": Object {
-            "class": "avatar bordered ",
+            "class": "avatar bordered only-text-avatar",
           },
           "children": Array [
             Node {
@@ -2366,7 +2372,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -2384,7 +2390,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -2408,7 +2414,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -2504,7 +2510,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -2522,7 +2528,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -2546,7 +2552,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -2634,7 +2640,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -2652,7 +2658,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -2676,7 +2682,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -2748,7 +2754,7 @@ LoadedCheerio {
           "namespace": "http://www.w3.org/1999/xhtml",
           "next": Node {
             "attribs": Object {
-              "class": "avatar bordered ",
+              "class": "avatar bordered only-text-avatar",
             },
             "children": Array [
               Node {
@@ -2809,7 +2815,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -2827,7 +2833,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -2851,7 +2857,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -2947,7 +2953,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -2965,7 +2971,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -2989,7 +2995,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -3077,7 +3083,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -3095,7 +3101,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -3119,7 +3125,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -3204,6 +3210,12 @@ LoadedCheerio {
           margin-left: -0.625rem;
           transition: transform 0.25s ease;
         }
+        .avatar-group :global(.only-text-avatar) {
+          box-shadow: -4px 0 4px rgb(0 0 0 / 5%);
+        }
+        .is-dark :global(.only-text-avatar) {
+          box-shadow: -4px 0 15px rgb(0 0 0 / 50%);
+        }
         .avatar-group :global(.avatar:hover) {
           transform: ;
         }
@@ -3253,7 +3265,7 @@ LoadedCheerio {
         "parent": [Circular],
         "prev": Node {
           "attribs": Object {
-            "class": "avatar bordered ",
+            "class": "avatar bordered only-text-avatar",
           },
           "children": Array [
             Node {
@@ -3314,7 +3326,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -3332,7 +3344,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -3356,7 +3368,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -3452,7 +3464,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -3470,7 +3482,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -3494,7 +3506,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -3582,7 +3594,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -3600,7 +3612,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -3624,7 +3636,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -3715,7 +3727,7 @@ LoadedCheerio {
       },
       Node {
         "attribs": Object {
-          "class": "avatar bordered ",
+          "class": "avatar bordered only-text-avatar",
         },
         "children": Array [
           Node {
@@ -3776,7 +3788,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -3794,7 +3806,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -3818,7 +3830,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -3914,7 +3926,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -3932,7 +3944,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -3956,7 +3968,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -4044,7 +4056,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -4062,7 +4074,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -4086,7 +4098,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -4158,7 +4170,7 @@ LoadedCheerio {
         "namespace": "http://www.w3.org/1999/xhtml",
         "next": Node {
           "attribs": Object {
-            "class": "avatar bordered ",
+            "class": "avatar bordered only-text-avatar",
           },
           "children": Array [
             Node {
@@ -4219,7 +4231,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -4237,7 +4249,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -4261,7 +4273,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -4357,7 +4369,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -4375,7 +4387,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -4399,7 +4411,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -4487,7 +4499,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -4505,7 +4517,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -4529,7 +4541,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -4614,6 +4626,12 @@ LoadedCheerio {
           margin-left: -0.625rem;
           transition: transform 0.25s ease;
         }
+        .avatar-group :global(.only-text-avatar) {
+          box-shadow: -4px 0 4px rgb(0 0 0 / 5%);
+        }
+        .is-dark :global(.only-text-avatar) {
+          box-shadow: -4px 0 15px rgb(0 0 0 / 50%);
+        }
         .avatar-group :global(.avatar:hover) {
           transform: ;
         }
@@ -4653,7 +4671,7 @@ LoadedCheerio {
         "parent": [Circular],
         "prev": Node {
           "attribs": Object {
-            "class": "avatar bordered ",
+            "class": "avatar bordered only-text-avatar",
           },
           "children": Array [
             Node {
@@ -4714,7 +4732,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -4732,7 +4750,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -4756,7 +4774,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -4852,7 +4870,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -4870,7 +4888,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -4894,7 +4912,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -4982,7 +5000,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -5000,7 +5018,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -5024,7 +5042,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -5098,7 +5116,7 @@ LoadedCheerio {
           "parent": [Circular],
           "prev": Node {
             "attribs": Object {
-              "class": "avatar bordered ",
+              "class": "avatar bordered only-text-avatar",
             },
             "children": Array [
               Node {
@@ -5159,7 +5177,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -5177,7 +5195,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -5201,7 +5219,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -5297,7 +5315,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -5315,7 +5333,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -5339,7 +5357,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -5427,7 +5445,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -5445,7 +5463,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -5469,7 +5487,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -5568,7 +5586,7 @@ LoadedCheerio {
       },
       Node {
         "attribs": Object {
-          "class": "avatar bordered ",
+          "class": "avatar bordered only-text-avatar",
         },
         "children": Array [
           Node {
@@ -5629,7 +5647,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -5647,7 +5665,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -5671,7 +5689,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -5767,7 +5785,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -5785,7 +5803,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -5809,7 +5827,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -5897,7 +5915,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -5915,7 +5933,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -5939,7 +5957,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -6024,6 +6042,12 @@ LoadedCheerio {
           margin-left: -0.625rem;
           transition: transform 0.25s ease;
         }
+        .avatar-group :global(.only-text-avatar) {
+          box-shadow: -4px 0 4px rgb(0 0 0 / 5%);
+        }
+        .is-dark :global(.only-text-avatar) {
+          box-shadow: -4px 0 15px rgb(0 0 0 / 50%);
+        }
         .avatar-group :global(.avatar:hover) {
           transform: ;
         }
@@ -6053,7 +6077,7 @@ LoadedCheerio {
         "parent": [Circular],
         "prev": Node {
           "attribs": Object {
-            "class": "avatar bordered ",
+            "class": "avatar bordered only-text-avatar",
           },
           "children": Array [
             Node {
@@ -6114,7 +6138,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -6132,7 +6156,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -6156,7 +6180,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -6252,7 +6276,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -6270,7 +6294,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -6294,7 +6318,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -6382,7 +6406,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -6400,7 +6424,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -6424,7 +6448,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -6498,7 +6522,7 @@ LoadedCheerio {
           "parent": [Circular],
           "prev": Node {
             "attribs": Object {
-              "class": "avatar bordered ",
+              "class": "avatar bordered only-text-avatar",
             },
             "children": Array [
               Node {
@@ -6559,7 +6583,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -6577,7 +6601,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -6601,7 +6625,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -6697,7 +6721,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -6715,7 +6739,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -6739,7 +6763,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -6827,7 +6851,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -6845,7 +6869,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -6869,7 +6893,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -6943,7 +6967,7 @@ LoadedCheerio {
             "parent": [Circular],
             "prev": Node {
               "attribs": Object {
-                "class": "avatar bordered ",
+                "class": "avatar bordered only-text-avatar",
               },
               "children": Array [
                 Node {
@@ -7004,7 +7028,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -7022,7 +7046,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -7046,7 +7070,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -7142,7 +7166,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -7160,7 +7184,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -7184,7 +7208,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -7272,7 +7296,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -7290,7 +7314,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -7314,7 +7338,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -7434,6 +7458,12 @@ LoadedCheerio {
           margin-left: -0.625rem;
           transition: transform 0.25s ease;
         }
+        .avatar-group :global(.only-text-avatar) {
+          box-shadow: -4px 0 4px rgb(0 0 0 / 5%);
+        }
+        .is-dark :global(.only-text-avatar) {
+          box-shadow: -4px 0 15px rgb(0 0 0 / 50%);
+        }
         .avatar-group :global(.avatar:hover) {
           transform: ;
         }
@@ -7457,7 +7487,7 @@ LoadedCheerio {
         "parent": [Circular],
         "prev": Node {
           "attribs": Object {
-            "class": "avatar bordered ",
+            "class": "avatar bordered only-text-avatar",
           },
           "children": Array [
             Node {
@@ -7518,7 +7548,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -7536,7 +7566,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -7560,7 +7590,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -7656,7 +7686,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -7674,7 +7704,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -7698,7 +7728,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -7786,7 +7816,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -7804,7 +7834,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -7828,7 +7858,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -7902,7 +7932,7 @@ LoadedCheerio {
           "parent": [Circular],
           "prev": Node {
             "attribs": Object {
-              "class": "avatar bordered ",
+              "class": "avatar bordered only-text-avatar",
             },
             "children": Array [
               Node {
@@ -7963,7 +7993,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -7981,7 +8011,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -8005,7 +8035,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -8101,7 +8131,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -8119,7 +8149,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -8143,7 +8173,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -8231,7 +8261,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -8249,7 +8279,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -8273,7 +8303,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -8347,7 +8377,7 @@ LoadedCheerio {
             "parent": [Circular],
             "prev": Node {
               "attribs": Object {
-                "class": "avatar bordered ",
+                "class": "avatar bordered only-text-avatar",
               },
               "children": Array [
                 Node {
@@ -8408,7 +8438,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -8426,7 +8456,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -8450,7 +8480,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -8546,7 +8576,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -8564,7 +8594,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -8588,7 +8618,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -8676,7 +8706,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -8694,7 +8724,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -8718,7 +8748,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -8792,7 +8822,7 @@ LoadedCheerio {
               "parent": [Circular],
               "prev": Node {
                 "attribs": Object {
-                  "class": "avatar bordered ",
+                  "class": "avatar bordered only-text-avatar",
                 },
                 "children": Array [
                   Node {
@@ -8853,7 +8883,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -8871,7 +8901,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -8895,7 +8925,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -8991,7 +9021,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -9009,7 +9039,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -9033,7 +9063,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -9121,7 +9151,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -9139,7 +9169,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -9163,7 +9193,7 @@ LoadedCheerio {
           user-select: none;
         }
         .bordered:hover .avatar-bg {
-          background: rgba(234, 234,234,0.8);
+          background: rgba(234, 234,234,0.6);
           filter: none;
         }
         .avatar:hover .avatar-img {
@@ -9384,12 +9414,12 @@ exports[`AvatarGroup should stacked when avatars are in a group 1`] = `
 LoadedCheerio {
   "0": Node {
     "attribs": Object {
-      "class": "avatar-group ",
+      "class": "avatar-group",
     },
     "children": Array [
       Node {
         "attribs": Object {
-          "class": "avatar  ",
+          "class": "avatar only-text-avatar",
         },
         "children": Array [
           Node {
@@ -9442,7 +9472,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -9460,7 +9490,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -9572,7 +9602,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -9590,7 +9620,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -9702,7 +9732,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -9720,7 +9750,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -9808,7 +9838,7 @@ LoadedCheerio {
         "namespace": "http://www.w3.org/1999/xhtml",
         "next": Node {
           "attribs": Object {
-            "class": "avatar  ",
+            "class": "avatar only-text-avatar",
           },
           "children": Array [
             Node {
@@ -9861,7 +9891,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -9879,7 +9909,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -9991,7 +10021,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -10009,7 +10039,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -10121,7 +10151,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -10139,7 +10169,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -10240,6 +10270,12 @@ LoadedCheerio {
           margin-left: -0.625rem;
           transition: transform 0.25s ease;
         }
+        .avatar-group :global(.only-text-avatar) {
+          box-shadow: -4px 0 4px rgb(0 0 0 / 5%);
+        }
+        .is-dark :global(.only-text-avatar) {
+          box-shadow: -4px 0 15px rgb(0 0 0 / 50%);
+        }
         .avatar-group :global(.avatar:hover) {
           transform: translate(-0.625rem);
         }
@@ -10288,7 +10324,7 @@ LoadedCheerio {
       },
       Node {
         "attribs": Object {
-          "class": "avatar  ",
+          "class": "avatar only-text-avatar",
         },
         "children": Array [
           Node {
@@ -10341,7 +10377,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -10359,7 +10395,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -10471,7 +10507,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -10489,7 +10525,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -10601,7 +10637,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -10619,7 +10655,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -10720,6 +10756,12 @@ LoadedCheerio {
           margin-left: -0.625rem;
           transition: transform 0.25s ease;
         }
+        .avatar-group :global(.only-text-avatar) {
+          box-shadow: -4px 0 4px rgb(0 0 0 / 5%);
+        }
+        .is-dark :global(.only-text-avatar) {
+          box-shadow: -4px 0 15px rgb(0 0 0 / 50%);
+        }
         .avatar-group :global(.avatar:hover) {
           transform: translate(-0.625rem);
         }
@@ -10749,7 +10791,7 @@ LoadedCheerio {
         "parent": [Circular],
         "prev": Node {
           "attribs": Object {
-            "class": "avatar  ",
+            "class": "avatar only-text-avatar",
           },
           "children": Array [
             Node {
@@ -10802,7 +10844,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -10820,7 +10862,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -10932,7 +10974,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -10950,7 +10992,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -11062,7 +11104,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -11080,7 +11122,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -11200,6 +11242,12 @@ LoadedCheerio {
           margin-left: -0.625rem;
           transition: transform 0.25s ease;
         }
+        .avatar-group :global(.only-text-avatar) {
+          box-shadow: -4px 0 4px rgb(0 0 0 / 5%);
+        }
+        .is-dark :global(.only-text-avatar) {
+          box-shadow: -4px 0 15px rgb(0 0 0 / 50%);
+        }
         .avatar-group :global(.avatar:hover) {
           transform: translate(-0.625rem);
         }
@@ -11223,7 +11271,7 @@ LoadedCheerio {
         "parent": [Circular],
         "prev": Node {
           "attribs": Object {
-            "class": "avatar  ",
+            "class": "avatar only-text-avatar",
           },
           "children": Array [
             Node {
@@ -11276,7 +11324,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -11294,7 +11342,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -11406,7 +11454,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -11424,7 +11472,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -11536,7 +11584,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -11554,7 +11602,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -11644,7 +11692,7 @@ LoadedCheerio {
           "parent": [Circular],
           "prev": Node {
             "attribs": Object {
-              "class": "avatar  ",
+              "class": "avatar only-text-avatar",
             },
             "children": Array [
               Node {
@@ -11697,7 +11745,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -11715,7 +11763,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -11827,7 +11875,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -11845,7 +11893,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -11957,7 +12005,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -11975,7 +12023,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;\n- packages/nextui/src/avatar/__tests__/__snapshots__/index.test.tsx.snap (modified, 124 changes)\n  Patch: @@ -4,7 +4,7 @@ exports[`Avatar should render component of a specified size 1`] = `
 LoadedCheerio {
   "0": Node {
     "attribs": Object {
-      "class": "avatar  ",
+      "class": "avatar only-text-avatar",
     },
     "children": Array [
       Node {
@@ -57,7 +57,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -75,7 +75,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -187,7 +187,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -205,7 +205,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -317,7 +317,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -335,7 +335,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -527,7 +527,7 @@ LoadedCheerio {
 `;
 
 exports[`Avatar should render correctly with an icon 1`] = `
-"<span class=\\"avatar  \\"><span class=\\"avatar-bg\\"></span><span class=\\"icon\\"><svg class=\\"\\"></svg></span><style>
+"<span class=\\"avatar only-text-avatar\\"><span class=\\"avatar-bg\\"></span><span class=\\"icon\\"><svg class=\\"\\"></svg></span><style>
         .avatar {
           position: relative;
           z-index: 1;
@@ -559,7 +559,7 @@ exports[`Avatar should render correctly with an icon 1`] = `
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -577,7 +577,7 @@ exports[`Avatar should render correctly with an icon 1`] = `
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -617,7 +617,7 @@ exports[`Avatar should render text element 1`] = `
 LoadedCheerio {
   "0": Node {
     "attribs": Object {
-      "class": "avatar  ",
+      "class": "avatar only-text-avatar",
     },
     "children": Array [
       Node {
@@ -670,7 +670,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -688,7 +688,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -800,7 +800,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -818,7 +818,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -930,7 +930,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -948,7 +948,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -1143,7 +1143,7 @@ exports[`Avatar should render text element 2`] = `
 LoadedCheerio {
   "0": Node {
     "attribs": Object {
-      "class": "avatar  ",
+      "class": "avatar only-text-avatar",
     },
     "children": Array [
       Node {
@@ -1204,7 +1204,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -1222,7 +1222,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -1342,7 +1342,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -1360,7 +1360,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -1472,7 +1472,7 @@ LoadedCheerio {
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -1490,7 +1490,7 @@ LoadedCheerio {
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -1690,7 +1690,7 @@ LoadedCheerio {
 `;
 
 exports[`Avatar should work correctly with different sizes 1`] = `
-"<div><span class=\\"avatar  \\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
+"<div><span class=\\"avatar only-text-avatar\\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
         .avatar {
           position: relative;
           z-index: 1;
@@ -1722,7 +1722,7 @@ exports[`Avatar should work correctly with different sizes 1`] = `
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -1740,7 +1740,7 @@ exports[`Avatar should work correctly with different sizes 1`] = `
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -1773,7 +1773,7 @@ exports[`Avatar should work correctly with different sizes 1`] = `
         .avatar:hover .avatar-bg {
           box-shadow: inset 0 0 40px 0 rgb(0 0 0 / 14%);
         }
-      </style></span><span class=\\"avatar  \\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
+      </style></span><span class=\\"avatar only-text-avatar\\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
         .avatar {
           position: relative;
           z-index: 1;
@@ -1805,7 +1805,7 @@ exports[`Avatar should work correctly with different sizes 1`] = `
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -1823,7 +1823,7 @@ exports[`Avatar should work correctly with different sizes 1`] = `
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -1856,7 +1856,7 @@ exports[`Avatar should work correctly with different sizes 1`] = `
         .avatar:hover .avatar-bg {
           box-shadow: inset 0 0 40px 0 rgb(0 0 0 / 14%);
         }
-      </style></span><span class=\\"avatar  \\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
+      </style></span><span class=\\"avatar only-text-avatar\\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
         .avatar {
           position: relative;
           z-index: 1;
@@ -1888,7 +1888,7 @@ exports[`Avatar should work correctly with different sizes 1`] = `
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -1906,7 +1906,7 @@ exports[`Avatar should work correctly with different sizes 1`] = `
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -1939,7 +1939,7 @@ exports[`Avatar should work correctly with different sizes 1`] = `
         .avatar:hover .avatar-bg {
           box-shadow: inset 0 0 40px 0 rgb(0 0 0 / 14%);
         }
-      </style></span><span class=\\"avatar  \\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
+      </style></span><span class=\\"avatar only-text-avatar\\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
         .avatar {
           position: relative;
           z-index: 1;
@@ -2022,7 +2022,7 @@ exports[`Avatar should work correctly with different sizes 1`] = `
         .avatar:hover .avatar-bg {
           box-shadow: inset 0 0 40px 0 rgb(0 0 0 / 14%);
         }
-      </style></span><span class=\\"avatar  \\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
+      </style></span><span class=\\"avatar only-text-avatar\\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
         .avatar {
           position: relative;
           z-index: 1;
@@ -2054,7 +2054,7 @@ exports[`Avatar should work correctly with different sizes 1`] = `
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 2.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -2072,7 +2072,7 @@ exports[`Avatar should work correctly with different sizes 1`] = `
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 2.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -2109,7 +2109,7 @@ exports[`Avatar should work correctly with different sizes 1`] = `
 `;
 
 exports[`Avatar should work with a gradient color 1`] = `
-"<span class=\\"avatar  \\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
+"<span class=\\"avatar only-text-avatar\\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
         .avatar {
           position: relative;
           z-index: 1;
@@ -2141,7 +2141,7 @@ exports[`Avatar should work with a gradient color 1`] = `
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -2159,7 +2159,7 @@ exports[`Avatar should work with a gradient color 1`] = `
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -2184,7 +2184,7 @@ exports[`Avatar should work with a gradient color 1`] = `
         }
         .bordered:hover .avatar-bg {
           background: linear-gradient(111.19deg,#aaffec -63.59%,#ff4ecd -20.3%,#0070f3 70.46%);
-          filter: hue-rotate(40deg);
+          filter: opacity(0.6);
         }
         .avatar:hover .avatar-img {
           transform: false;
@@ -2196,7 +2196,7 @@ exports[`Avatar should work with a gradient color 1`] = `
 `;
 
 exports[`Avatar should work with different colors 1`] = `
-"<div><span class=\\"avatar  \\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
+"<div><span class=\\"avatar only-text-avatar\\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
         .avatar {
           position: relative;
           z-index: 1;
@@ -2228,7 +2228,7 @@ exports[`Avatar should work with different colors 1`] = `
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -2246,7 +2246,7 @@ exports[`Avatar should work with different colors 1`] = `
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -2279,7 +2279,7 @@ exports[`Avatar should work with different colors 1`] = `
         .avatar:hover .avatar-bg {
           box-shadow: inset 0 0 40px 0 rgb(0 0 0 / 14%);
         }
-      </style></span><span class=\\"avatar  \\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
+      </style></span><span class=\\"avatar only-text-avatar\\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
         .avatar {
           position: relative;
           z-index: 1;
@@ -2311,7 +2311,7 @@ exports[`Avatar should work with different colors 1`] = `
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -2329,7 +2329,7 @@ exports[`Avatar should work with different colors 1`] = `
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -2362,7 +2362,7 @@ exports[`Avatar should work with different colors 1`] = `
         .avatar:hover .avatar-bg {
           box-shadow: inset 0 0 40px 0 rgb(0 0 0 / 14%);
         }
-      </style></span><span class=\\"avatar  \\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
+      </style></span><span class=\\"avatar only-text-avatar\\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
         .avatar {
           position: relative;
           z-index: 1;
@@ -2394,7 +2394,7 @@ exports[`Avatar should work with different colors 1`] = `
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -2412,7 +2412,7 @@ exports[`Avatar should work with different colors 1`] = `
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -2445,7 +2445,7 @@ exports[`Avatar should work with different colors 1`] = `
         .avatar:hover .avatar-bg {
           box-shadow: inset 0 0 40px 0 rgb(0 0 0 / 14%);
         }
-      </style></span><span class=\\"avatar  \\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
+      </style></span><span class=\\"avatar only-text-avatar\\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
         .avatar {
           position: relative;
           z-index: 1;
@@ -2477,7 +2477,7 @@ exports[`Avatar should work with different colors 1`] = `
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -2495,7 +2495,7 @@ exports[`Avatar should work with different colors 1`] = `
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -2528,7 +2528,7 @@ exports[`Avatar should work with different colors 1`] = `
         .avatar:hover .avatar-bg {
           box-shadow: inset 0 0 40px 0 rgb(0 0 0 / 14%);
         }
-      </style></span><span class=\\"avatar  \\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
+      </style></span><span class=\\"avatar only-text-avatar\\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
         .avatar {
           position: relative;
           z-index: 1;
@@ -2560,7 +2560,7 @@ exports[`Avatar should work with different colors 1`] = `
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -2578,7 +2578,7 @@ exports[`Avatar should work with different colors 1`] = `
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -2615,7 +2615,7 @@ exports[`Avatar should work with different colors 1`] = `
 `;
 
 exports[`Avatar should work with pointer 1`] = `
-"<span class=\\"avatar  \\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
+"<span class=\\"avatar only-text-avatar\\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
         .avatar {
           position: relative;
           z-index: 1;
@@ -2647,7 +2647,7 @@ exports[`Avatar should work with pointer 1`] = `
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -2665,7 +2665,7 @@ exports[`Avatar should work with pointer 1`] = `
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;
@@ -2702,7 +2702,7 @@ exports[`Avatar should work with pointer 1`] = `
 `;
 
 exports[`Avatar should work with zoomed 1`] = `
-"<span class=\\"avatar  \\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
+"<span class=\\"avatar only-text-avatar\\"><span class=\\"avatar-bg\\"></span><span class=\\"avatar-text\\"></span><style>
         .avatar {
           position: relative;
           z-index: 1;
@@ -2734,7 +2734,7 @@ exports[`Avatar should work with zoomed 1`] = `
           transition: all 0.25s ease;
         }
         .avatar.bordered {
-          padding: 1.5px;
+          padding: 2px;
         }
         .avatar:first-child {
           margin: 0;
@@ -2752,7 +2752,7 @@ exports[`Avatar should work with zoomed 1`] = `
           opacity: 1;
         }
         .bordered .avatar-img {
-          border: 1.5px solid #fff;
+          border: 2px solid #fff;
         }
         .avatar-text {
           position: absolute;\n- packages/nextui/src/avatar/__tests__/index.test.tsx (modified, 11 changes)\n  Patch: @@ -94,15 +94,4 @@ describe('Avatar', () => {
     const avatar = render(<Avatar size={20} />);
     expect(avatar).toMatchSnapshot();
   });
-
-  it('should throw error when avatar color is invalid', () => {
-    let errorMessage = '';
-    const errorSpy = jest
-      .spyOn(console, 'error')
-      .mockImplementation((msg) => (errorMessage = msg));
-    // @ts-ignore
-    mount(<Avatar color="#kajsdkl" />);
-    expect(errorMessage).toContain('is not a valid color');
-    errorSpy.mockRestore();
-  });
 });\n- packages/nextui/src/avatar/avatar-group.tsx (modified, 16 changes)\n  Patch: @@ -1,6 +1,7 @@
 import React from 'react';
 import useTheme from '../use-theme';
 import withDefaults from '../utils/with-defaults';
+import clsx from '../utils/clsx';
 
 interface Props {
   count?: number;
@@ -10,7 +11,7 @@ interface Props {
 
 const defaultProps = {
   className: '',
-  animated: true,
+  animated: true
 };
 
 type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props>;
@@ -24,9 +25,12 @@ const AvatarGroup: React.FC<React.PropsWithChildren<AvatarGroupProps>> = ({
   ...props
 }) => {
   const theme = useTheme();
-
+  const isDark = theme.type === 'dark';
   return (
-    <div className={`avatar-group ${className}`} {...props}>
+    <div
+      className={clsx('avatar-group', { 'is-dark': isDark }, className)}
+      {...props}
+    >
       {children}
       {count && <span className="count">+{count}</span>}
       <style jsx>{`
@@ -40,6 +44,12 @@ const AvatarGroup: React.FC<React.PropsWithChildren<AvatarGroupProps>> = ({
           margin-left: -0.625rem;
           transition: transform 0.25s ease;
         }
+        .avatar-group :global(.only-text-avatar) {
+          box-shadow: -4px 0 4px rgb(0 0 0 / 5%);
+        }
+        .is-dark :global(.only-text-avatar) {
+          box-shadow: -4px 0 15px rgb(0 0 0 / 50%);
+        }
         .avatar-group :global(.avatar:hover) {
           transform: ${animated ? 'translate(-0.625rem)' : ''};
         }\n- packages/nextui/src/avatar/avatar.stories.tsx (modified, 9 changes)\n  Patch: @@ -7,7 +7,7 @@ import { Lock, User, VolumeUp, Camera, Activity } from '../utils/icons';
 
 export default {
   title: 'Display/Avatar',
-  component: Avatar,
+  component: Avatar
 } as Meta;
 
 const nameUsers = ['Junior', 'Jane', 'W', 'John', 'JR'];
@@ -16,7 +16,7 @@ const pictureUsers = [
   'https://i.pravatar.cc/300?u=a042581f4e29026706d',
   'https://i.pravatar.cc/300?u=a042581f4e29026707d',
   'https://i.pravatar.cc/300?u=a042581f4e29026709d',
-  'https://i.pravatar.cc/300?u=a042581f4f29026709d',
+  'https://i.pravatar.cc/300?u=a042581f4f29026709d'
 ];
 
 // eslint-disable-next-line @typescript-eslint/no-explicit-any
@@ -27,7 +27,7 @@ const Container = ({ children }: any) => (
       justifyContent: 'space-between',
       flexWrap: 'wrap',
       width: '100%',
-      maxWidth: `${children.length * 45}px`,
+      maxWidth: `${children.length * 45}px`
     }}
   >
     {children}
@@ -59,6 +59,7 @@ export const Colors = () => {
         <Avatar color="warning" bordered src={pictureUsers[3]} squared />
         <Avatar color="error" bordered src={pictureUsers[4]} squared />
         <Avatar color="gradient" bordered src={pictureUsers[1]} squared />
+        <Avatar color="#ff4ecd" bordered src={pictureUsers[2]} squared />
       </Container>
       <Spacer />
       <Container>
@@ -95,7 +96,7 @@ export const Sizes = () => {
       style={{
         width: '100%',
         display: 'flex',
-        flexDirection: 'column',
+        flexDirection: 'column'
       }}
     >
       <Container>\n- packages/nextui/src/avatar/avatar.tsx (modified, 54 changes)\n  Patch: @@ -1,15 +1,16 @@
 import React, { useMemo, useState, useRef, useEffect } from 'react';
-import { NormalSizes, NormalColors, SimpleColors } from '../utils/prop-types';
+import {
+  NormalSizes,
+  NormalColors,
+  SimpleColors,
+  NormalWeights
+} from '../utils/prop-types';
 import useTheme from '../use-theme';
-import useWarning from '../use-warning';
 import AvatarGroup from './avatar-group';
+import { getNormalColor, addColorAlpha } from '../utils/color';
+import clsx from '../utils/clsx';
 import { __DEV__ } from '../utils/assertion';
-import {
-  isColor,
-  getNormalColor,
-  isNormalColor,
-  addColorAlpha,
-} from '../utils/color';
+import { getNormalWeight } from '../utils/dimensions';
 
 interface Props {
   src?: string;
@@ -23,6 +24,7 @@ interface Props {
   alt?: string;
   text?: string;
   size?: NormalSizes | number;
+  borderWeight?: NormalWeights;
   squared?: boolean;
   className?: string;
 }
@@ -31,10 +33,11 @@ const defaultProps = {
   text: '',
   stacked: false,
   size: 'medium' as NormalSizes | number,
+  borderWeight: 'normal' as NormalWeights,
   textColor: 'default' as SimpleColors,
   squared: false,
   zoomed: false,
-  className: '',
+  className: ''
 };
 
 type NativeAttrs = Omit<
@@ -49,24 +52,12 @@ const getSize = (size: NormalSizes | number): string => {
     small: '1.823rem',
     medium: '2.43rem',
     large: '3.23rem',
-    xlarge: '4.3rem',
+    xlarge: '4.3rem'
   };
   if (typeof size === 'number') return `${size}px`;
   return sizes[size];
 };
 
-const getBorder = (size: NormalSizes | number): string => {
-  const sizes: { [key in NormalSizes]: string } = {
-    mini: '1px',
-    small: '1px',
-    medium: '1.5px',
-    large: '2px',
-    xlarge: '2.5px',
-  };
-  if (typeof size === 'number') return `1.5px`;
-  return sizes[size];
-};
-
 const safeText = (text: string): string => {
   if (text.length <= 4) return text;
   return text.slice(0, 3);
@@ -77,6 +68,7 @@ const Avatar: React.FC<AvatarProps> = ({
   stacked,
   text,
   size,
+  borderWeight,
   squared,
   zoomed,
   bordered,
@@ -94,7 +86,7 @@ const Avatar: React.FC<AvatarProps> = ({
   const marginLeft = stacked ? '-.625rem' : 0;
   const [ready, setReady] = useState(false);
   const width = useMemo(() => getSize(size), [size]);
-  const border = useMemo(() => getBorder(size), [size]);
+  const border = useMemo(() => getNormalWeight(borderWeight), [borderWeight]);
 
   const imgRef = useRef<HTMLImageElement>(null);
 
@@ -115,24 +107,24 @@ const Avatar: React.FC<AvatarProps> = ({
     () =>
       color === 'gradient' || !bordered
         ? avatarColor
-        : addColorAlpha(avatarColor, 0.8),
+        : addColorAlpha(avatarColor, 0.6),
     [color, avatarColor, bordered]
   );
 
-  if (__DEV__ && color && !isNormalColor(color) && !isColor(color)) {
-    useWarning(`Props "color" ${color} is not a valid color.`, 'Avatar');
-  }
-
   return (
     <span
-      className={`avatar ${bordered ? 'bordered' : ''} ${className}`}
+      className={clsx(
+        'avatar',
+        { bordered, 'only-text-avatar': showText },
+        className
+      )}
       {...props}
     >
       <span className="avatar-bg" />
       {!showText && (
         <img
           ref={imgRef}
-          className={`avatar-img ${ready ? 'avatar-ready' : ''}`}
+          className={clsx('avatar-img', { 'avatar-ready': ready })}
           src={src}
           alt={alt}
           onLoad={() => setReady(true)}
@@ -217,7 +209,7 @@ const Avatar: React.FC<AvatarProps> = ({
         }
         .bordered:hover .avatar-bg {
           background: ${hoverBackground};
-          filter: ${color === 'gradient' ? 'hue-rotate(40deg)' : 'none'};
+          filter: ${color === 'gradient' ? 'opacity(0.6)' : 'none'};
         }
         .avatar:hover .avatar-img {
           transform: ${zoomed && 'scale(1.125)'};\n- packages/nextui/src/backdrop/index.tsx (modified, 40 changes)\n  Patch: @@ -1,4 +1,4 @@
-import React, { MouseEvent, useCallback } from 'react';
+import React, { MouseEvent, useCallback, useMemo } from 'react';
 import withDefaults from '../utils/with-defaults';
 import useTheme from '../use-theme';
 import CSSTransition from '../utils/css-transition';
@@ -11,13 +11,15 @@ interface Props {
   visible?: boolean;
   fullScreenContent?: boolean;
   width?: string;
+  animated?: boolean;
   blur?: boolean;
 }
 
 const defaultProps = {
   onClick: () => {},
   visible: false,
   blur: false,
+  animated: true,
   fullScreenContent: false
 };
 
@@ -31,12 +33,14 @@ const Backdrop: React.FC<React.PropsWithChildren<BackdropProps>> = React.memo(
     visible,
     width,
     blur,
+    animated,
     fullScreenContent,
     ...props
   }) => {
     const theme = useTheme();
-    const [, setIsContentMouseDown, IsContentMouseDownRef] =
-      useCurrentState(false);
+    const [, setIsContentMouseDown, IsContentMouseDownRef] = useCurrentState(
+      false
+    );
     const clickHandler = (event: MouseEvent<HTMLElement>) => {
       if (IsContentMouseDownRef.current) return;
       onClick && onClick(event);
@@ -55,14 +59,8 @@ const Backdrop: React.FC<React.PropsWithChildren<BackdropProps>> = React.memo(
       }, 0);
     };
 
-    return (
-      <CSSTransition
-        name="backdrop-wrapper"
-        visible={visible}
-        enterTime={20}
-        leaveTime={20}
-        clearTime={150}
-      >
+    const renderChildren = useMemo(() => {
+      return (
         <div
           className={cslx('backdrop', {
             fullscreen: fullScreenContent
@@ -173,7 +171,25 @@ const Backdrop: React.FC<React.PropsWithChildren<BackdropProps>> = React.memo(
             }
           `}</style>
         </div>
-      </CSSTransition>
+      );
+    }, [children]);
+
+    return (
+      <>
+        {animated ? (
+          <CSSTransition
+            name="backdrop-wrapper"
+            visible={visible}
+            enterTime={20}
+            leaveTime={20}
+            clearTime={150}
+          >
+            {renderChildren}
+          </CSSTransition>
+        ) : visible ? (
+          renderChildren
+        ) : null}
+      </>
     );
   }
 );\n- packages/nextui/src/css-baseline/css-baseline.tsx (modified, 2 changes)\n  Patch: @@ -35,7 +35,7 @@ const CssBaseline: React.FC<React.PropsWithChildren<{}>> = ({ children }) => {
         *,
         *:before,
         *:after {
-          box-sizing: inherit;
+          box-sizing: border-box;
           text-rendering: geometricPrecision;
           -webkit-tap-highlight-color: transparent;
         }\n- packages/nextui/src/index.ts (modified, 10 changes)\n  Patch: @@ -10,10 +10,20 @@ export { default as useTheme } from './use-theme';
 export { default as usePortal } from './use-portal';
 export { default as useSSR } from './use-ssr';
 export { default as useBodyScroll } from './use-body-scroll';
+export type { BodyScrollOptions } from './use-body-scroll';
 export { default as useClickAway } from './use-click-away';
+export { default as useClipboard } from './use-clipboard';
+export type { UseClipboardOptions, UseClipboardResult } from './use-clipboard';
 export { default as useClickAnywhere } from './use-click-anywhere';
 export { default as useInput } from './use-input';
 export { default as useKeyboard } from './use-keyboard';
+export type {
+  UseKeyboardHandler,
+  KeyboardOptions,
+  KeyboardResult,
+  UseKeyboard
+} from './use-keyboard';
+export { KeyMod, KeyCode } from './use-keyboard/codes';
 
 export { default as Avatar } from './avatar';
 \n- packages/nextui/src/input/__tests__/__snapshots__/index.test.tsx.snap (modified, 28 changes)\n  Patch: @@ -17,7 +17,7 @@ exports[`Input should be work with content 1`] = `
           cursor: default;
           pointer-events: none;
         }
-      </style></span><input type=\\"text\\" id=\\"next-ui-m2eneigu\\" class=\\"left-content\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
+      </style></span><input type=\\"text\\" id=\\"next-ui-6qllbov0\\" class=\\"left-content\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
           .with-label {
             width: initial;
             display: inline-flex;
@@ -185,7 +185,7 @@ exports[`Input should be work with content 1`] = `
             -webkit-box-shadow: 0 0 0 30px #fff inset !important;
             -webkit-text-fill-color: #333 !important;
           }
-        </style></div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-5hjqcukj\\" class=\\"right-content\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"><span class=\\"input-content\\"><span>test-icon</span><style>
+        </style></div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-uhcng10m\\" class=\\"right-content\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"><span class=\\"input-content\\"><span>test-icon</span><style>
         .input-content {
           box-sizing: content-box;
           display: flex;
@@ -373,7 +373,7 @@ exports[`Input should be work with content 1`] = `
 `;
 
 exports[`Input should be work with label 1`] = `
-"<div><div class=\\"with-label\\"><label id=\\"next-ui-23u2ktv3-label\\" class=\\"input-label-block\\" for=\\"next-ui-23u2ktv3\\">label<style>
+"<div><div class=\\"with-label\\"><label id=\\"next-ui-aebpp0hq-label\\" class=\\"input-label-block\\" for=\\"next-ui-aebpp0hq\\">label<style>
         .input-label-block {
           display: block;
           font-weight: normal;
@@ -430,7 +430,7 @@ exports[`Input should be work with label 1`] = `
         .as-placeholder.is-textarea.with-value {
           top: -28px;
         }
-      </style></label><div class=\\"container input-container\\"><div class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-23u2ktv3\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" aria-labelledby=\\"next-ui-23u2ktv3-label\\" value=\\"\\"></div></div><div class=\\"helper-text-container\\"></div><style>
+      </style></label><div class=\\"container input-container\\"><div class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-aebpp0hq\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" aria-labelledby=\\"next-ui-aebpp0hq-label\\" value=\\"\\"></div></div><div class=\\"helper-text-container\\"></div><style>
           .with-label {
             width: initial;
             display: inline-flex;
@@ -598,7 +598,7 @@ exports[`Input should be work with label 1`] = `
             -webkit-box-shadow: 0 0 0 30px #fff inset !important;
             -webkit-text-fill-color: #333 !important;
           }
-        </style></div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-mggl932n\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"><span class=\\"input-label right\\">label<style>
+        </style></div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-0uh7finl\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"><span class=\\"input-label right\\">label<style>
         .input-label {
           position: relative;
           display: inline-flex;
@@ -856,7 +856,7 @@ exports[`Input should be work with label 1`] = `
         .bordered:before {
           display: none;
         }
-      </style></span><input type=\\"text\\" id=\\"next-ui-k6pgo2ms\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
+      </style></span><input type=\\"text\\" id=\\"next-ui-o3sgeacp\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
           .with-label {
             width: initial;
             display: inline-flex;
@@ -1028,7 +1028,7 @@ exports[`Input should be work with label 1`] = `
 `;
 
 exports[`Input should work with different sizes 1`] = `
-"<div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-9fi0r8pn\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
+"<div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-crq29cjg\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
           .with-label {
             width: initial;
             display: inline-flex;
@@ -1196,7 +1196,7 @@ exports[`Input should work with different sizes 1`] = `
             -webkit-box-shadow: 0 0 0 30px #fff inset !important;
             -webkit-text-fill-color: #333 !important;
           }
-        </style></div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-2qg2fdgj\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
+        </style></div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-em86ucan\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
           .with-label {
             width: initial;
             display: inline-flex;
@@ -1364,7 +1364,7 @@ exports[`Input should work with different sizes 1`] = `
             -webkit-box-shadow: 0 0 0 30px #fff inset !important;
             -webkit-text-fill-color: #333 !important;
           }
-        </style></div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-npun7hji\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
+        </style></div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-qeca70fp\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
           .with-label {
             width: initial;
             display: inline-flex;
@@ -1532,7 +1532,7 @@ exports[`Input should work with different sizes 1`] = `
             -webkit-box-shadow: 0 0 0 30px #fff inset !important;
             -webkit-text-fill-color: #333 !important;
           }
-        </style></div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-0hlt6mbd\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
+        </style></div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-g0k4cj21\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
           .with-label {
             width: initial;
             display: inline-flex;
@@ -1700,7 +1700,7 @@ exports[`Input should work with different sizes 1`] = `
             -webkit-box-shadow: 0 0 0 30px #fff inset !important;
             -webkit-text-fill-color: #333 !important;
           }
-        </style></div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-sgicdf34\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
+        </style></div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-kvvj3q4v\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
           .with-label {
             width: 50%;
             display: inline-flex;
@@ -1872,7 +1872,7 @@ exports[`Input should work with different sizes 1`] = `
 `;
 
 exports[`Input should work with different status 1`] = `
-"<div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-42aun0dl\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
+"<div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-q3jnvrj0\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
           .with-label {
             width: initial;
             display: inline-flex;
@@ -2040,7 +2040,7 @@ exports[`Input should work with different status 1`] = `
             -webkit-box-shadow: 0 0 0 30px #fff inset !important;
             -webkit-text-fill-color: #333 !important;
           }
-        </style></div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-p7tho6kk\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
+        </style></div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-kf2p7adr\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
           .with-label {
             width: initial;
             display: inline-flex;
@@ -2208,7 +2208,7 @@ exports[`Input should work with different status 1`] = `
             -webkit-box-shadow: 0 0 0 30px #fff inset !important;
             -webkit-text-fill-color: #333 !important;
           }
-        </style></div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-sbrfk5pg\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
+        </style></div><div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"text\\" id=\\"next-ui-m57ib16r\\" class=\\"\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"></label></div><div class=\\"helper-text-container\\"></div><style>
           .with-label {
             width: initial;
             display: inline-flex;\n- packages/nextui/src/input/__tests__/__snapshots__/password.test.tsx.snap (modified, 2 changes)\n  Patch: @@ -1,7 +1,7 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`InputPassword should render correctly 1`] = `
-"<div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"password\\" id=\\"next-ui-bapb2j6i\\" class=\\"right-content\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"><span class=\\"input-content\\"><svg viewBox=\\"0 0 24 24\\" width=\\"16\\" height=\\"16\\" stroke=\\"currentColor\\" stroke-width=\\"1.5\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" fill=\\"none\\" shape-rendering=\\"geometricPrecision\\" style=\\"color: currentColor;\\"><path d=\\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\\"></path><circle cx=\\"12\\" cy=\\"12\\" r=\\"3\\"></circle></svg><style>
+"<div class=\\"with-label\\"><div class=\\"container input-container\\"><label class=\\"wrapper shadow input-wrapper\\"><input type=\\"password\\" id=\\"next-ui-5g6h008p\\" class=\\"right-content\\" placeholder=\\"\\" autocomplete=\\"off\\" aria-placeholder=\\"\\" aria-readonly=\\"false\\" aria-required=\\"false\\" aria-multiline=\\"false\\" value=\\"\\"><span class=\\"input-content\\"><svg viewBox=\\"0 0 24 24\\" width=\\"16\\" height=\\"16\\" stroke=\\"currentColor\\" stroke-width=\\"1.5\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" fill=\\"none\\" shape-rendering=\\"geometricPrecision\\" style=\\"color: currentColor;\\"><path d=\\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\\"></path><circle cx=\\"12\\" cy=\\"12\\" r=\\"3\\"></circle></svg><style>
         .input-content {
           box-sizing: content-box;
           display: flex;\n- packages/nextui/src/modal/modal-wrapper.tsx (modified, 34 changes)\n  Patch: @@ -1,4 +1,4 @@
-import React, { useEffect, useRef, useState } from 'react';
+import React, { useEffect, useRef, useMemo, useState } from 'react';
 import withDefaults from '../utils/with-defaults';
 import useTheme from '../use-theme';
 import CSSTransition from '../utils/css-transition';
@@ -11,6 +11,7 @@ interface Props {
   visible?: boolean;
   scroll?: boolean;
   rebound?: boolean;
+  animated?: boolean;
   onCloseButtonClick?: () => void;
   fullScreen?: boolean;
   closeButton?: boolean;
@@ -31,6 +32,7 @@ const ModalWrapper: React.FC<React.PropsWithChildren<ModalWrapperProps>> = ({
   fullScreen,
   closeButton,
   rebound,
+  animated,
   onCloseButtonClick,
   scroll,
   ...props
@@ -74,14 +76,8 @@ const ModalWrapper: React.FC<React.PropsWithChildren<ModalWrapperProps>> = ({
     onCloseButtonClick && onCloseButtonClick();
   };
 
-  return (
-    <CSSTransition
-      name="modal-wrapper"
-      visible={visible}
-      enterTime={20}
-      leaveTime={20}
-      clearTime={300}
-    >
+  const renderChildren = useMemo(() => {
+    return (
       <div
         className={cslx(
           'modal-wrapper',
@@ -214,7 +210,25 @@ const ModalWrapper: React.FC<React.PropsWithChildren<ModalWrapperProps>> = ({
           }
         `}</style>
       </div>
-    </CSSTransition>
+    );
+  }, [rebound, children]);
+
+  return (
+    <>
+      {animated ? (
+        <CSSTransition
+          name="modal-wrapper"
+          visible={visible}
+          enterTime={20}
+          leaveTime={20}
+          clearTime={300}
+        >
+          {renderChildren}
+        </CSSTransition>
+      ) : visible ? (
+        renderChildren
+      ) : null}
+    </>
   );
 };
 \n- packages/nextui/src/modal/modal.stories.tsx (modified, 63 changes)\n  Patch: @@ -235,6 +235,69 @@ export const WithUseModal = () => {
   );
 };
 
+export const NoAnimated = () => {
+  const { setVisible, bindings } = useModal();
+  const theme = useTheme();
+
+  return (
+    <div>
+      <Button auto color="secondary" onClick={() => setVisible(true)}>
+        Show Modal
+      </Button>
+      <Modal aria-labelledby="modal-title" animated={false} {...bindings}>
+        <Modal.Header>
+          <Text id="modal-title" size={18}>
+            Welcome to&nbsp;
+            <Text b size={18}>
+              NextUI
+            </Text>
+          </Text>
+        </Modal.Header>
+
+        <Modal.Body>
+          <Input
+            clearable
+            bordered
+            fullWidth
+            color="primary"
+            size="large"
+            placeholder="Email"
+            contentLeft={<Mail theme={theme} />}
+          />
+          <Input
+            clearable
+            bordered
+            fullWidth
+            color="primary"
+            size="large"
+            placeholder="Password"
+            contentLeft={<Password theme={theme} />}
+          />
+          <Row justify="space-between">
+            <Checkbox>
+              <Text size={14} color={theme.palette.text}>
+                Remember me
+              </Text>
+            </Checkbox>
+            <Text size={14} color={theme.palette.accents_4}>
+              Forgot password?
+            </Text>
+          </Row>
+        </Modal.Body>
+
+        <Modal.Footer>
+          <Button auto flat color="error" onClick={() => setVisible(false)}>
+            Close
+          </Button>
+          <Button auto onClick={() => setVisible(false)}>
+            Sign in
+          </Button>
+        </Modal.Footer>
+      </Modal>
+    </div>
+  );
+};
+
 export const LargeContent = () => {
   const { setVisible, bindings } = useModal();
 \n- packages/nextui/src/modal/modal.tsx (modified, 5 changes)\n  Patch: @@ -18,6 +18,7 @@ interface Props {
   blur?: boolean;
   noPadding?: boolean;
   closeButton?: boolean;
+  animated?: boolean;
   fullScreen?: boolean;
   autoMargin?: boolean;
   width?: string;
@@ -33,6 +34,7 @@ const defaultProps = {
   preventClose: false,
   fullScreen: false,
   closeButton: false,
+  animated: true,
   blur: false,
   scroll: false,
   noPadding: false
@@ -51,6 +53,7 @@ const Modal: React.FC<React.PropsWithChildren<ModalProps>> = ({
   className,
   preventClose,
   blur,
+  animated,
   fullScreen,
   noPadding,
   ...props
@@ -126,6 +129,7 @@ const Modal: React.FC<React.PropsWithChildren<ModalProps>> = ({
         width={wrapperWidth}
         fullScreenContent={fullScreen}
         blur={blur}
+        animated={animated}
         {...bindings}
       >
         <ModalWrapper
@@ -134,6 +138,7 @@ const Modal: React.FC<React.PropsWithChildren<ModalProps>> = ({
           className={className}
           fullScreen={fullScreen}
           rebound={rebound}
+          animated={animated}
           {...props}
         >
           {children}\n- packages/nextui/src/snippet/snippet.tsx (modified, 6 changes)\n  Patch: @@ -34,7 +34,7 @@ const defaultProps = {
   tooltipColor: 'default' as TooltipColors | string,
   tooltipCopyText: 'Copy',
   tooltipCopiedText: 'Copied',
-  className: '',
+  className: ''
 };
 
 type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props>;
@@ -72,7 +72,7 @@ const Snippet: React.FC<React.PropsWithChildren<SnippetProps>> = ({
   const style = useMemo(() => getStyles(type, theme.palette, filled), [
     type,
     theme.palette,
-    filled,
+    filled
   ]);
   const showCopyIcon = useMemo(() => copyType !== 'prevent', [copyType]);
   const childText = useMemo<string | undefined | null>(() => {
@@ -117,7 +117,7 @@ const Snippet: React.FC<React.PropsWithChildren<SnippetProps>> = ({
           hideArrow
           rounded
           color={tooltipColor}
-          text={copied ? tooltipCopiedText : tooltipCopyText}
+          content={copied ? tooltipCopiedText : tooltipCopyText}
           onVisibleChange={handleTooltipVisibleChange}
         >
           <span className="copy" onClick={clickHandler}>\n- packages/nextui/src/text/__tests__/__snapshots__/index.test.tsx.snap (modified, 24 changes)\n  Patch: @@ -5,6 +5,7 @@ exports[`Text should be able to specify the size of text 1`] = `
         p {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: 14px;
@@ -20,6 +21,7 @@ exports[`Text should be able to specify the size of text 2`] = `
         p {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: 12rem;
@@ -35,6 +37,7 @@ exports[`Text should render P element in the default 1`] = `
         p {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -50,6 +53,7 @@ exports[`Text should render default color when type missing 1`] = `
         p {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -65,6 +69,7 @@ exports[`Text should work with different styles 1`] = `
         p {
           color: #7928ca;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -76,6 +81,7 @@ exports[`Text should work with different styles 1`] = `
         p {
           color: #17c964;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -87,6 +93,7 @@ exports[`Text should work with different styles 1`] = `
         p {
           color: #f5a623;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -98,6 +105,7 @@ exports[`Text should work with different styles 1`] = `
         p {
           color: #f21361;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -113,6 +121,7 @@ exports[`Text the combined style should be rendered 1`] = `
         del {
           color: inherit;
           margin: inherit;
+          font-weight: undefined;
         }
         .custom-size {
           font-size: inherit;
@@ -124,6 +133,7 @@ exports[`Text the combined style should be rendered 1`] = `
         b {
           color: inherit;
           margin: inherit;
+          font-weight: undefined;
         }
         .custom-size {
           font-size: inherit;
@@ -135,6 +145,7 @@ exports[`Text the combined style should be rendered 1`] = `
         p {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -150,6 +161,7 @@ exports[`Text the specified element should be rendered 1`] = `
         h1 {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -161,6 +173,7 @@ exports[`Text the specified element should be rendered 1`] = `
         h2 {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -172,6 +185,7 @@ exports[`Text the specified element should be rendered 1`] = `
         h3 {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -183,6 +197,7 @@ exports[`Text the specified element should be rendered 1`] = `
         h4 {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -194,6 +209,7 @@ exports[`Text the specified element should be rendered 1`] = `
         h5 {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -205,6 +221,7 @@ exports[`Text the specified element should be rendered 1`] = `
         h6 {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -216,6 +233,7 @@ exports[`Text the specified element should be rendered 1`] = `
         p {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -227,6 +245,7 @@ exports[`Text the specified element should be rendered 1`] = `
         small {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -238,6 +257,7 @@ exports[`Text the specified element should be rendered 1`] = `
         span {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -249,6 +269,7 @@ exports[`Text the specified element should be rendered 1`] = `
         del {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -260,6 +281,7 @@ exports[`Text the specified element should be rendered 1`] = `
         i {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -271,6 +293,7 @@ exports[`Text the specified element should be rendered 1`] = `
         em {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;
@@ -282,6 +305,7 @@ exports[`Text the specified element should be rendered 1`] = `
         b {
           color: inherit;
           margin: inherit;
+          font-weight: noset;
         }
         .custom-size {
           font-size: inherit;\n- packages/nextui/src/text/child.tsx (modified, 15 changes)\n  Patch: @@ -1,7 +1,7 @@
 import React, { useMemo } from 'react';
 import withDefaults from '../utils/with-defaults';
 import useTheme from '../use-theme';
-import { NormalColors } from '../utils/prop-types';
+import { NormalColors, TextWeights } from '../utils/prop-types';
 import { getNormalColor } from '../utils/color';
 
 export interface Props {
@@ -10,13 +10,14 @@ export interface Props {
   size?: string | number;
   margin?: string | number;
   capitalize?: boolean;
+  weight?: TextWeights;
   className?: '';
 }
 
 const defaultProps = {
   color: 'default' as NormalColors | string,
   className: '',
-  capitalize: false,
+  capitalize: false
 };
 
 type NativeAttrs = Omit<React.DetailsHTMLAttributes<unknown>, keyof Props>;
@@ -29,15 +30,16 @@ const TextChild: React.FC<React.PropsWithChildren<TextChildProps>> = ({
   color: userColor,
   capitalize,
   margin: marginProp,
+  weight,
   size,
   ...props
 }) => {
   const theme = useTheme();
   const Component = tag;
-  const color = useMemo(
-    () => getNormalColor(userColor, theme.palette),
-    [userColor, theme.palette]
-  );
+  const color = useMemo(() => getNormalColor(userColor, theme.palette), [
+    userColor,
+    theme.palette
+  ]);
   const fontSize = useMemo<string>(() => {
     if (!size) return 'inherit';
     if (typeof size === 'number') return `${size}px`;
@@ -64,6 +66,7 @@ const TextChild: React.FC<React.PropsWithChildren<TextChildProps>> = ({
         ${tag} {
           color: ${color};
           margin: ${margin};
+          font-weight: ${weight};
         }
         .custom-size {
           font-size: ${fontSize};\n- packages/nextui/src/text/text.stories.tsx (modified, 8 changes)\n  Patch: @@ -10,8 +10,8 @@ export default {
       <div style={{ maxWidth: '50%' }}>
         <Story />
       </div>
-    ),
-  ],
+    )
+  ]
 } as Meta;
 
 const shortText = 'Almost before we knew it, we had left the ground.';
@@ -79,7 +79,9 @@ export const Sizes = () => (
 
 export const Composed = () => (
   <>
-    <Text p>{largeText}</Text>
+    <Text p weight={100}>
+      {largeText}
+    </Text>
     <Text>
       <Text small del>
         {shortText}\n
Pull Request Number: 3917
Title: feat(tabs): add click handling for tab items in tests and implementation
Base Branch: canary
Head Branch: fix/tab-click
Author: liaoyinglong
URL: https://github.com/nextui-org/nextui/pull/3917
State: OPEN
Created At: 2024-10-18T07:13:39Z
Merged At: None
Participants: liaoyinglong, wingkwong

Description:
üìù Description
Add click handling for tab items in tests and implementation
‚õ≥Ô∏è Current behavior (updates)
Currently, the tab component lacks specific click handling and testing for individual tab items.
üöÄ New behavior

Added a new test case to verify that tab clicks are handled correctly
Implemented click handling for individual tab items in the Tab component

üí£ Is this a breaking change (Yes/No):
No
üìù Additional Information
This change improves the interactivity and testability of the Tabs component by ensuring that clicks on individual tab items are properly handled and can be tested.
References:

Summary by CodeRabbit


New Features

Enhanced test coverage for the Tabs component, ensuring click events trigger the correct handlers.
Improved interactive behavior for tab items, allowing users to click and see immediate responses.



Bug Fixes

Improved handling of click events in the Tab component by allowing variable arguments to be passed to click handlers.

Commits:
- feat(tabs): add click handling for tab items in tests and implementation\n

Labels:
üëÄ Status: To Review

Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: fa9c23931aa24cad5ac2dd8a00c82b0236ccbbd3

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name              | Type  |
| ----------------- | ----- |
| @nextui-org/tabs  | Patch |
| @nextui-org/react | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/liaoyinglong/nextui/new/fix/tab-click?filename=.changeset/early-crabs-enjoy.md&value=---%0A%22%40nextui-org%2Ftabs%22%3A%20patch%0A---%0A%0Afeat(tabs)%3A%20add%20click%20handling%20for%20tab%20items%20in%20tests%20and%20implementation%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
The pull request introduces a new test case for the `Tabs` component, specifically verifying that click events on individual tabs invoke the correct click handlers. Additionally, it modifies the `handleClick` function in the `Tab` component to ensure that chained click handlers are executed properly. These changes enhance the functionality and test coverage of the `Tabs` component.

## Changes

| File Path                                      | Change Summary                                                                                      |
|------------------------------------------------|-----------------------------------------------------------------------------------------------------|
| `packages/components/tabs/__tests__/tabs.test.tsx` | Added a new test case to verify that tab clicks trigger the appropriate click handlers.             |
| `packages/components/tabs/src/tab.tsx`        | Modified the `handleClick` function to ensure that chained click handlers are executed correctly.   |

## Possibly related PRs
- **#2973**: This PR adds a new prop `destroyInactiveTabPanel` to the `Tabs` component, which is related to the click handling functionality introduced in the main PR, as both involve enhancing the interactive behavior of the `Tabs` component.
- **#3164**: This PR modifies the test cases in `tabs.test.tsx` to include event handling and interactions with tabs, which aligns with the new test case added in the main PR that verifies click event handling on tabs.
- **#3246**: This PR also updates the `tabs.test.tsx` file, adding new test cases and modifying existing ones, which relates to the changes made in the main PR regarding testing the `Tabs` component's click handling.

## Suggested labels
`üìã Scope : Docs`

## Suggested reviewers
- jrgarciadev

<!-- walkthrough_end -->




<!-- internal state start -->


<!--

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=

-->

<!-- internal state end -->
<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- vercel: @liaoyinglong is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%229a3550a50217d146b6923e8f2e39345656730de7%22%7D%2C%22id%22%3A%22QmVQo9aq9H2ABkrd8o4Fx9ztJ53HzqdvfJL2kDRpbXUg3D%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A3917%2C%22repo%22%3A%22nextui%22%7D).

\n

Files Changed:
- .changeset/seven-tips-help.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/tabs": patch
+---
+
+add click handling for tab items in tests and implementation\n- packages/components/tabs/__tests__/tabs.test.tsx (modified, 32 changes)\n  Patch: @@ -388,4 +388,36 @@ describe("Tabs", () => {
 
     expect(input).toHaveValue("23");
   });
+
+  it("Tab click should be handled", async () => {
+    const item1Click = jest.fn();
+    const item2Click = jest.fn();
+    const wrapper = render(
+      <Tabs>
+        <Tab key="item1" data-testid="item1" title="Item 1" onClick={item1Click}>
+          <div>Content 1</div>
+        </Tab>
+        <Tab key="item2" data-testid="item2" title="Item 2" onClick={item2Click}>
+          <div>Content 2</div>
+        </Tab>
+      </Tabs>,
+    );
+    const tab1 = wrapper.getByTestId("item1");
+    const tab2 = wrapper.getByTestId("item2");
+
+    // Test initial state
+    expect(tab1).toHaveAttribute("aria-selected", "true");
+    expect(tab2).toHaveAttribute("aria-selected", "false");
+
+    // Test clicking tab2
+    await user.click(tab2);
+    expect(item2Click).toHaveBeenCalledTimes(1);
+    expect(tab1).toHaveAttribute("aria-selected", "false");
+    expect(tab2).toHaveAttribute("aria-selected", "true");
+
+    // Test clicking tab2 again
+    await user.click(tab2);
+    expect(item2Click).toHaveBeenCalledTimes(2);
+    expect(tab2).toHaveAttribute("aria-selected", "true");
+  });
 });\n- packages/components/tabs/src/tab.tsx (modified, 2 changes)\n  Patch: @@ -79,7 +79,7 @@ const Tab = forwardRef<"button", TabItemProps>((props, ref) => {
   });
 
   const handleClick = () => {
-    chain(onClick, tabProps.onClick);
+    chain(onClick, tabProps.onClick)();
 
     if (!domRef?.current || !listRef?.current) return;
 \n
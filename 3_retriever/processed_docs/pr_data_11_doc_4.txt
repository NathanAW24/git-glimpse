Pull Request Number: 2973
Title: feat(tabs): add `destroyInactiveTabPanel` prop for Tabs component
Base Branch: canary
Head Branch: feat/eng-95
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/2973
State: MERGED
Created At: 2024-05-10T07:46:19Z
Merged At: 2024-05-13T02:00:29Z
Participants: wingkwong, jrgarciadev

Description:
Closes #1562
üìù Description

In some cases, I hope that when switching tabs, the previous TabPanel will not be destroyed in order to preserve their state and avoid re-rendering.

This PR is to cater this scenario by introducing a new prop called destroyInactiveTabPanel.
‚õ≥Ô∏è Current behavior (updates)
currently, the inactive tab panels got destroyed and re-rendered when switching tabs.
üöÄ New behavior
users can set destroyInactiveTabPanel={false} to keep the inactive tabs in DOM but inert.
üí£ Is this a breaking change (Yes/No):
No - since we set true by default.
üìù Additional Information

Summary by CodeRabbit


New Features

Added a new property destroyInactiveTabPanel to the Tabs component, allowing for automatic destruction of inactive tab panels, enhancing performance and user experience.



Tests

Introduced tests to ensure the new destroyInactiveTabPanel functionality works as expected in different scenarios.



Documentation

Updated the documentation to include details about the new destroyInactiveTabPanel property for the Tabs component.



Style

Enhanced styling for the Tabs component with new CSS rules to support visibility changes.

Commits:
- feat(tabs): add destroyInactiveTabPanel and set default to false\n- feat(tabs): integrate with destroyInactiveTabPanel\n- feat(theme): hidden inert tab panel\n- feat(changeset): add changeset\n- chore(changeset): add issue number\n- feat(docs): add `destroyInactiveTabPanel` prop to tabs page\n- chore(docs): set destroyInactiveTabPanel to true by default\n- chore(tabs): set destroyInactiveTabPanel to true by default\n- chore(tabs): revise destroyInactiveTabPanel logic\n- feat(tabs): add tests for destroyInactiveTabPanel\n- chore(tabs): change the default value of destroyInactiveTabPanel to true\n

Labels:


Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-95/[feature-request]-add-destroyinactivetabpanel-prop-for-tabs-component">ENG-95 [Feature Request] Add `destroyInactiveTabPanel` prop for Tabs component</a></p>\n- vercel: [vc]: #VtM4eHK8lP+gkvl4NaxSO8+uCvhltN9MW51xBQgHzuc=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi85RDU3YzdYYnNkZkxRQkZhMlJvWmdadzdpZXhkIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1mZWF0LWVuZy05NS1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWZlYXQtZW5nLTk1LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvOEN0TG1RbTRNcTJDRUh5WmlKVVFMSkFVdk1acyIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mZWF0LWVuZy05NS1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZmVhdC1lbmctOTUtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/9D57c7XbsdfLQBFa2RoZgZw7iexd)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-feat-eng-95-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-feat-eng-95-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 10, 2024 9:17am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/8CtLmQm4Mq2CEHyZiJUQLJAUvMZs)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-feat-eng-95-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-feat-eng-95-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 10, 2024 9:17am |


\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 266b5fc9953813a43b2472bd7aef9fdf30140b69

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 3 packages</summary>

  | Name              | Type  |
| ----------------- | ----- |
| @nextui-org/tabs  | Patch |
| @nextui-org/theme | Patch |
| @nextui-org/react | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/feat/eng-95?filename=.changeset/cuddly-kiwis-search.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Ftabs%22%3A%20patch%0A%22%40nextui-org%2Ftheme%22%3A%20patch%0A---%0A%0Afeat(tabs)%3A%20add%20%60destroyInactiveTabPanel%60%20prop%20for%20Tabs%20component%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
This update introduces a new property `destroyInactiveTabPanel` to the `Tabs` component, allowing developers to control whether inactive tab panels are destroyed when switching tabs. The default behavior is set to destroy these panels, optimizing performance and resource management in applications using this component.

## Changes

| Files | Summary |
|-------|---------|
| `.changeset/mean-parrots-cheat.md`, `apps/docs/.../tabs.mdx` | Added `destroyInactiveTabPanel` prop with a default value of `true`, updated documentation. |
| `packages/components/tabs/__tests__/tabs.test.tsx`, `packages/components/tabs/src/...` | Added handling and tests for `destroyInactiveTabPanel`. Updated `useTabs` and `Tabs` functions to support the new property. |
| `packages/core/theme/src/components/tabs.ts` | Added CSS rule `"data-[inert=true]:hidden"` for handling visibility of inactive tabs. |

## Assessment against linked issues

| Objective | Addressed | Explanation |
|-----------|-----------|-------------|
| Add `destroyInactiveTabPanel` prop to Tabs component with a default value of `false` (#1562) | ‚ùå | The default value implemented is `true`, not `false` as requested in the issue. |
| Allow control over the destruction of inactive tab panels (#1562) | ‚úÖ | |
| Provide a simpler way to manage inactive tab panels without additional encapsulation (#1562) | ‚úÖ | |

The primary change requested in the issue was implemented, although the default value for the `destroyInactiveTabPanel` prop does not match the requested `false`. This might affect users' expectations based on the issue description.

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->
<!--


.changeset/mean-parrots-cheat.md: ## Summary
The file introduces changes related to the `Tabs` component in the `@nextui-org/tabs` and `@nextui-org/theme` packages. It adds the `destroyInactiveTabPanel` prop to the `Tabs` component, addressing issue #1562.

---

apps/docs/content/docs/components/tabs.mdx: ## Short Summary

The change in functionality for the `Tabs` component involves adding a new prop `destroyInactiveTabPanel` with a default value of `true`, which controls whether inactive tab panels should be destroyed when switching tabs.

## Alterations to the declarations of exported or public entities

- `destroyInactiveTabPanel` added with type `boolean` in `Tabs` component in `apps/docs/content/docs/components/tabs.mdx`

---

packages/components/tabs/__tests__/tabs.test.tsx: ## Short Summary

The change introduces tests to verify the behavior of destroying inactive tab panels based on a boolean flag `destroyInactiveTabPanel` in the `Tabs` component.

## Alterations to the declarations of exported or public entities

- `test("should destory inactive tab panels", () => { ... }` in `packages/components/tabs/__tests__/tabs.test.tsx`

---

packages/components/tabs/src/tab-panel.tsx: ## Summary

The changes in `tab-panel.tsx` include:
- Addition of `Key` import from "@react-types/shared".
- Addition of `destroyInactiveTabPanel` and `tabKey` properties to the `Props` interface.
- Modification of the `TabPanel` component to handle `destroyInactiveTabPanel` and `tabKey` properties, managing tab panel destruction and selection state.

---

packages/components/tabs/src/tabs.tsx: ## Short Summary

The functionality change involves adding the `destroyInactiveTabPanel` parameter to the `useTabs` hook and passing it to the `TabPanel` component within the `Tabs` function in the `tabs.tsx` file. This change allows for more control over tab panel destruction.

## Alterations to the declarations of exported or public entities

- `useTabs<T>` in `tabs.tsx`:
  - Added `destroyInactiveTabPanel` parameter to the function signature.

- `Tabs<T>` function in `tabs.tsx`:
  - Added `destroyInactiveTabPanel` to the destructured object from `useTabs<T>`.
  - Updated the `TabPanel` component to include `destroyInactiveTabPanel` and `tabKey` props.

---

packages/components/tabs/src/use-tabs.ts: ## Short Summary

The change introduces a new property `destroyInactiveTabPanel` to control whether inactive tab panels should be destroyed when switching tabs in a tab component.

## Alterations to the declarations of exported or public entities

- `export interface Props` in `use-tabs.ts`
  - Added `destroyInactiveTabPanel?: boolean;` property

- `export function useTabs<T extends object>(originalProps: UseTabsProps<T>)` in `use-tabs.ts`
  - Added `destroyInactiveTabPanel = true,` to the function parameters
  - Added `destroyInactiveTabPanel` to the function return object

---

packages/core/theme/src/components/tabs.ts: ## Summary

Added the `"data-[inert=true]:hidden"` class to the list of classes for the tabs component in `packages/core/theme/src/components/tabs.ts`.

-->
<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->
<!--


### PR Summary

**Title:** feat(tabs): add `destroyInactiveTabPanel` prop for Tabs component

**PR Number:** 2973

**Description:**
This pull request introduces a new property `destroyInactiveTabPanel` to the Tabs component. The purpose of this property is to provide users with the option to either preserve or destroy the state of inactive tab panels when switching between tabs. By default, the behavior remains unchanged with the inactive tab panels being destroyed (`destroyInactiveTabPanel={true}`). However, if users set `destroyInactiveTabPanel={false}`, the inactive tabs will remain in the DOM but will be made inert, thus preserving their state and avoiding unnecessary re-renders.

This feature addresses the issue where users needed to maintain the state of tab panels between switches, which was previously not possible without additional custom code or modifications.

**Linked Issue (#1562):**
The linked issue describes a feature request related to the Tabs component. The requester highlighted a problem where switching tabs resulted in the destruction and re-rendering of tab panels, leading to a loss of their state. The proposed solution was to introduce a `destroyInactiveTabPanel` property with a default value of `false`, allowing the inactive tab panels to be hidden using `display: none` instead of being destroyed. This would enable users to preserve the state of tab panels without additional coding. The issue also included an alternative current implementation where users manually manage the rendering of tabs based on their selection state.

**Additional Information:**
The implementation of this feature does not introduce any breaking changes as the default behavior of the Tabs component remains the same. Users who require the new functionality can opt-in by setting the `destroyInactiveTabPanel` property to `false`. This enhancement aims to provide greater flexibility and efficiency in managing the rendering behavior of tab panels within applications.

-->
<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->
<!--


### AI-generated Summary of Generated Summaries

Recent updates across various components and files in the `@nextui-org/tabs` and related packages have introduced a significant new feature aimed at enhancing the functionality and performance of the `Tabs` component. The core of these updates is the addition of a new property `destroyInactiveTabPanel`, which determines whether tab panels that are not active should be destroyed when switching between tabs. This property defaults to `true`, implying that inactive tab panels will be destroyed by default unless specified otherwise.

The implementation of this feature spans several files and components:

1. **Documentation Updates**: The `tabs.mdx` file within the `apps/docs/content/docs/components` directory has been updated to include documentation for the new `destroyInactiveTabPanel` property, explaining its purpose and default behavior.

2. **Component and Hook Updates**:
   - In `tabs.tsx`, the `destroyInactiveTabPanel` parameter has been added to the `useTabs` hook and is passed down to the `TabPanel` component. This allows the `Tabs` function to control the destruction of tab panels based on the state of this new property.
   - The `tab-panel.tsx` file now includes modifications to the `TabPanel` component to handle the `destroyInactiveTabPanel` and `tabKey` properties, managing the destruction and selection state of tab panels.
   - The `use-tabs.ts` file introduces the `destroyInactiveTabPanel` property in its `Props` interface and incorporates it into the `useTabs` function, ensuring it influences the behavior of tabs at a more granular level.

3. **Testing**: New tests have been added in `tabs.test.tsx` to verify the functionality of the `destroyInactiveTabPanel` property, ensuring that it behaves as expected when toggling between active and inactive states.

4. **Styling Adjustments**: In the `tabs.ts` file within the `packages/core/theme/src/components`, a new class `"data-[inert=true]:hidden"` has been added, likely to assist in the styling and visibility management of inactive tabs that are set to be destroyed.

These changes collectively enhance the `Tabs` component's efficiency by optionally removing inactive tab panels from the DOM, which can lead to improved performance in applications with heavy content within tabs.

### Alterations to the Declarations of Exported or Public Entities

**apps/docs/content/docs/components/tabs.mdx**:
- Added: `destroyInactiveTabPanel: boolean` to `Tabs` component.

**packages/components/tabs/__tests__/tabs.test.tsx**:
- Added: `test("should destroy inactive tab panels", () => { ... })` to verify new functionality.

**packages/components/tabs/src/tab-panel.tsx**:
- Added: `destroyInactiveTabPanel: boolean` and `tabKey: Key` to `Props` interface.
- Modified: `TabPanel` component to handle new properties for managing destruction and selection state.

**packages/components/tabs/src/tabs.tsx**:
- Added: `destroyInactiveTabPanel: boolean` parameter to `useTabs<T>` function signature.
- Modified: `Tabs<T>` function to include `destroyInactiveTabPanel` in the destructured object from `useTabs<T>` and updated the `TabPanel` component to include `destroyInactiveTabPanel` and `tabKey` props.

**packages/components/tabs/src/use-tabs.ts**:
- Added: `destroyInactiveTabPanel?: boolean` to `Props` interface.
- Modified: `useTabs<T extends object>(originalProps: UseTabsProps<T>)` function to include `destroyInactiveTabPanel = true` in parameters and added to the function return object.

**packages/core/theme/src/components/tabs.ts**:
- Added: `"data-[inert=true]:hidden"` class to the list of classes for the tabs component.

-->
<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 266b5fc9953813a43b2472bd7aef9fdf30140b69 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/mean-parrots-cheat.md (added, 6 changes)\n  Patch: @@ -0,0 +1,6 @@
+---
+"@nextui-org/tabs": patch
+"@nextui-org/theme": patch
+---
+
+Add `destroyInactiveTabPanel` prop for Tabs component (#1562)\n- apps/docs/content/docs/components/tabs.mdx (modified, 25 changes)\n  Patch: @@ -274,18 +274,19 @@ You can customize the `Tabs` component by passing custom Tailwind CSS classes to
 
 ### Tab Props
 
-| Attribute             | Type                          | Description                                                                                                                                                                      | Default |
-| --------------------- | ----------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------- |
-| children\*            | `ReactNode`                   | The content of the tab.                                                                                                                                                          | -       |
-| title                 | `ReactNode`                   | The title of the tab.                                                                                                                                                            | -       |
-| titleValue            | `string`                      | A string representation of the item's contents. Use this when the `title` is not readable.                                                                                       | -       |
-| href                  | `string`                      | A URL to link to. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#href).                                                                                   | -       |
-| target                | `HTMLAttributeAnchorTarget`   | The target window for the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target).                                                                   | -       |
-| rel                   | `string`                      | The relationship between the linked resource and the current page. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel).                                  | -       |
-| download              | `boolean` \| `string`         | Causes the browser to download the linked URL. A string may be provided to suggest a file name. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#download). | -       |
-| ping                  | `string`                      | A space-separated list of URLs to ping when the link is followed. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#ping).                                   | -       |
-| referrerPolicy        | `HTMLAttributeReferrerPolicy` | How much of the referrer to send when following the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#referrerpolicy).                                 | -       |
-| shouldSelectOnPressUp | `boolean`                     | Whether the tab selection should occur on press up instead of press down.                                                                                                        | -       |
+| Attribute               | Type                          | Description                                                                                                                                                                      | Default |
+|-------------------------|-------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------|
+| children\*              | `ReactNode`                   | The content of the tab.                                                                                                                                                          | -       |
+| title                   | `ReactNode`                   | The title of the tab.                                                                                                                                                            | -       |
+| titleValue              | `string`                      | A string representation of the item's contents. Use this when the `title` is not readable.                                                                                       | -       |
+| href                    | `string`                      | A URL to link to. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#href).                                                                                   | -       |
+| target                  | `HTMLAttributeAnchorTarget`   | The target window for the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target).                                                                   | -       |
+| rel                     | `string`                      | The relationship between the linked resource and the current page. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel).                                  | -       |
+| download                | `boolean` \| `string`         | Causes the browser to download the linked URL. A string may be provided to suggest a file name. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#download). | -       |
+| ping                    | `string`                      | A space-separated list of URLs to ping when the link is followed. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#ping).                                   | -       |
+| referrerPolicy          | `HTMLAttributeReferrerPolicy` | How much of the referrer to send when following the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#referrerpolicy).                                 | -       |
+| shouldSelectOnPressUp   | `boolean`                     | Whether the tab selection should occur on press up instead of press down.                                                                                                        | -       |
+| destroyInactiveTabPanel | `boolean`                     | Whether to destroy inactive tab panel when switching tabs. Inactive tab panels are inert and cannot be interacted with.                                                          | `true`  |
 
 #### Motion Props
 \n- packages/components/tabs/__tests__/tabs.test.tsx (modified, 36 changes)\n  Patch: @@ -318,4 +318,40 @@ describe("Tabs", () => {
     expect(tabWrapper).toHaveAttribute("data-placement", "top");
     expect(tabWrapper).toHaveAttribute("data-vertical", "horizontal");
   });
+
+  test("should destory inactive tab panels", () => {
+    const {container} = render(
+      <Tabs aria-label="Tabs test (destroyInactiveTabPanel=true)">
+        <Tab key="item1" title="Item 1">
+          <div>Content 1</div>
+        </Tab>
+        <Tab key="item2" title="Item 2">
+          <div>Content 2</div>
+        </Tab>
+        <Tab key="item3" title="Item 3">
+          <div>Content 3</div>
+        </Tab>
+      </Tabs>,
+    );
+
+    expect(container.querySelectorAll("[data-slot='panel']")).toHaveLength(1);
+  });
+
+  test("should destory inactive tab panels", () => {
+    const {container} = render(
+      <Tabs aria-label="Tabs test (destroyInactiveTabPanel=false)" destroyInactiveTabPanel={false}>
+        <Tab key="item1" title="Item 1">
+          <div>Content 1</div>
+        </Tab>
+        <Tab key="item2" title="Item 2">
+          <div>Content 2</div>
+        </Tab>
+        <Tab key="item3" title="Item 3">
+          <div>Content 3</div>
+        </Tab>
+      </Tabs>,
+    );
+
+    expect(container.querySelectorAll("[data-slot='panel']")).toHaveLength(3);
+  });
 });\n- packages/components/tabs/src/tab-panel.tsx (modified, 23 changes)\n  Patch: @@ -1,5 +1,6 @@
 import type {AriaTabPanelProps} from "@react-aria/tabs";
 
+import {Key} from "@react-types/shared";
 import {forwardRef, HTMLNextUIProps} from "@nextui-org/system";
 import {useDOMRef} from "@nextui-org/react-utils";
 import {clsx} from "@nextui-org/shared-utils";
@@ -10,6 +11,15 @@ import {useFocusRing} from "@react-aria/focus";
 import {ValuesType} from "./use-tabs";
 
 interface Props extends HTMLNextUIProps<"div"> {
+  /**
+   * Whether to destroy inactive tab panel when switching tabs.
+   * Inactive tab panels are inert and cannot be interacted with.
+   */
+  destroyInactiveTabPanel: boolean;
+  /**
+   * The current tab key.
+   */
+  tabKey: Key;
   /**
    * The tab list state.
    */
@@ -30,12 +40,15 @@ export type TabPanelProps = Props & AriaTabPanelProps;
  * @internal
  */
 const TabPanel = forwardRef<"div", TabPanelProps>((props, ref) => {
-  const {as, state, className, slots, classNames, ...otherProps} = props;
+  const {as, tabKey, destroyInactiveTabPanel, state, className, slots, classNames, ...otherProps} =
+    props;
 
   const Component = as || "div";
+
   const domRef = useDOMRef(ref);
 
   const {tabPanelProps} = useTabPanel(props, state, domRef);
+
   const {focusProps, isFocused, isFocusVisible} = useFocusRing();
 
   const selectedItem = state.selectedItem;
@@ -44,7 +57,9 @@ const TabPanel = forwardRef<"div", TabPanelProps>((props, ref) => {
 
   const tabPanelStyles = clsx(classNames?.panel, className, selectedItem?.props?.className);
 
-  if (!content) {
+  const isSelected = tabKey === selectedItem?.key;
+
+  if (!content || (!isSelected && destroyInactiveTabPanel)) {
     return null;
   }
 
@@ -53,7 +68,9 @@ const TabPanel = forwardRef<"div", TabPanelProps>((props, ref) => {
       ref={domRef}
       data-focus={isFocused}
       data-focus-visible={isFocusVisible}
-      {...mergeProps(tabPanelProps, focusProps, otherProps)}
+      data-inert={!isSelected ? "true" : undefined}
+      inert={!isSelected ? "true" : undefined}
+      {...(isSelected && mergeProps(tabPanelProps, focusProps, otherProps))}
       className={slots.panel?.({class: tabPanelStyles})}
       data-slot="panel"
     >\n- packages/components/tabs/src/tabs.tsx (modified, 28 changes)\n  Patch: @@ -9,7 +9,15 @@ import TabPanel from "./tab-panel";
 interface Props<T> extends UseTabsProps<T> {}
 
 function Tabs<T extends object>(props: Props<T>, ref: ForwardedRef<HTMLDivElement>) {
-  const {Component, values, state, getBaseProps, getTabListProps, getWrapperProps} = useTabs<T>({
+  const {
+    Component,
+    values,
+    state,
+    destroyInactiveTabPanel,
+    getBaseProps,
+    getTabListProps,
+    getWrapperProps,
+  } = useTabs<T>({
     ...props,
     ref,
   });
@@ -41,12 +49,18 @@ function Tabs<T extends object>(props: Props<T>, ref: ForwardedRef<HTMLDivElemen
           {layoutGroupEnabled ? <LayoutGroup id={layoutId}>{tabs}</LayoutGroup> : tabs}
         </Component>
       </div>
-      <TabPanel
-        key={state.selectedItem?.key}
-        classNames={values.classNames}
-        slots={values.slots}
-        state={values.state}
-      />
+      {[...state.collection].map((item) => {
+        return (
+          <TabPanel
+            key={item.key}
+            classNames={values.classNames}
+            destroyInactiveTabPanel={destroyInactiveTabPanel}
+            slots={values.slots}
+            state={values.state}
+            tabKey={item.key}
+          />
+        );
+      })}
     </>
   );
 \n- packages/components/tabs/src/use-tabs.ts (modified, 7 changes)\n  Patch: @@ -57,6 +57,11 @@ export interface Props extends Omit<HTMLNextUIProps, "children"> {
    * @default false
    */
   isVertical?: boolean;
+  /**
+   * Whether to destroy inactive tab panel when switching tabs. Inactive tab panels are inert and cannot be interacted with.
+   * @default true
+   */
+  destroyInactiveTabPanel?: boolean;
 }
 
 export type UseTabsProps<T> = Props &
@@ -90,6 +95,7 @@ export function useTabs<T extends object>(originalProps: UseTabsProps<T>) {
     motionProps,
     isVertical = false,
     shouldSelectOnPressUp = true,
+    destroyInactiveTabPanel = true,
     ...otherProps
   } = props;
 
@@ -182,6 +188,7 @@ export function useTabs<T extends object>(originalProps: UseTabsProps<T>) {
     domRef,
     state,
     values,
+    destroyInactiveTabPanel,
     getBaseProps,
     getTabListProps,
     getWrapperProps,\n- packages/core/theme/src/components/tabs.ts (modified, 1 changes)\n  Patch: @@ -68,6 +68,7 @@ const tabs = tv({
       "py-3",
       "px-1",
       "outline-none",
+      "data-[inert=true]:hidden",
       // focus ring
       ...dataFocusVisibleClasses,
     ],\n
Pull Request Number: 3335
Title: fix: onSelectionChange type incorrect
Base Branch: main
Head Branch: bugfix-selection-type
Author: winchesHe
URL: https://github.com/nextui-org/nextui/pull/3335
State: CLOSED
Created At: 2024-06-26T15:23:51Z
Merged At: None
Participants: winchesHe

Description:
Closes # 
üìù Description

Add a brief description

‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


Bug Fixes

Fixed type issues related to onSelectionChange in dropdown, menu, and select components.



New Features

Enhanced dropdown and select components to support Iterable<React.Key> for selection and disabled keys.
Added more specific onSelectionChange handler signatures for dropdown, menu, and select components.



Documentation

Updated dropdown and select component documentation to reflect changes in types and handler signatures.

Commits:
- fix: onSelectionChange type incorrect\n

Labels:


Comments:
- vercel: [vc]: #8cHMBftZ6bjVol5vxuwBiGFmViHenfayrRg3oR4zrVU=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9FWlc1WlBjMmdqVkw0M29QWHQ1TGdoV1lpYVJaIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1idWdmaXgtc2VsZWN0aW9uLXR5cGUtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IlBFTkRJTkciLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWJ1Z2ZpeC1zZWxlY3Rpb24tdHlwZS1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX0seyJuYW1lIjoibmV4dHVpLXN0b3J5Ym9vay12MiIsInJvb3REaXJlY3RvcnkiOiJwYWNrYWdlcy9zdG9yeWJvb2siLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktc3Rvcnlib29rLXYyLzdKSDdnY1lCWUFhZFg3NFRMdmtWNXp4ajIya2ciLCJwcmV2aWV3VXJsIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtYnVnZml4LXNlbGVjdGlvbi10eXBlLW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJQRU5ESU5HIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWJ1Z2ZpeC1zZWxlY3Rpb24tdHlwZS1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | üîÑ Building ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/EZW5ZPc2gjVL43oPXt5LghWYiaRZ)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-bugfix-selection-type-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-bugfix-selection-type-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 26, 2024 3:23pm |
| **nextui-storybook-v2** | üîÑ Building ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/7JH7gcYBYAadX74TLvkV5zxj22kg)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-bugfix-selection-type-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-bugfix-selection-type-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 26, 2024 3:23pm |


\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 2267b00d55457071829d800180ec7732f87c83d6

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 27 packages</summary>

  | Name                           | Type  |
| ------------------------------ | ----- |
| @nextui-org/dropdown           | Patch |
| @nextui-org/menu               | Patch |
| @nextui-org/select             | Patch |
| @nextui-org/system-rsc         | Patch |
| @nextui-org/navbar             | Patch |
| @nextui-org/react              | Patch |
| @nextui-org/badge              | Patch |
| @nextui-org/code               | Patch |
| @nextui-org/divider            | Patch |
| @nextui-org/kbd                | Patch |
| @nextui-org/skeleton           | Patch |
| @nextui-org/spacer             | Patch |
| @nextui-org/spinner            | Patch |
| @nextui-org/system             | Patch |
| @nextui-org/accordion          | Patch |
| @nextui-org/listbox            | Patch |
| @nextui-org/table              | Patch |
| @nextui-org/autocomplete       | Patch |
| @nextui-org/button             | Patch |
| @nextui-org/modal              | Patch |
| @nextui-org/popover            | Patch |
| @nextui-org/slider             | Patch |
| @nextui-org/snippet            | Patch |
| @nextui-org/tabs               | Patch |
| @nextui-org/tooltip            | Patch |
| @nextui-org/aria-utils         | Patch |
| @nextui-org/framer-transitions | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/bugfix-selection-type?filename=.changeset/great-jeans-reply.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Fmenu%22%3A%20patch%0A%22%40nextui-org%2Fselect%22%3A%20patch%0A%22%40nextui-org%2Fsystem-rsc%22%3A%20patch%0A%22%40nextui-org%2Fsystem%22%3A%20patch%0A---%0A%0Afix%3A%20onSelectionChange%20type%20incorrect%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: failure by coderabbit.ai -->

> [!WARNING]
> ## Review failed
> 
> The pull request is closed.

<!-- end of auto-generated comment: failure by coderabbit.ai --><!-- walkthrough_start -->

## Walkthrough

This update introduces patches for several packages (`@nextui-org/dropdown`, `@nextui-org/menu`, `@nextui-org/select`, `@nextui-org/system-rsc`). The key change is the modification of type declarations for selection-related properties and handlers, incorporating enhanced type specificity for `onSelectionChange` and support for `Iterable<React.Key>`. This ensures more flexible and precise handling of selection events across these components.

## Changes

| File Path                                                    | Change Summary                                                                                                           |
|--------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------|
| `apps/docs/content/docs/components/dropdown.mdx`             | Updated types for `selectedKeys`, `disabledKeys`, and `defaultSelectedKeys` to accept `Iterable<React.Key>` and refined `onSelectionChange` signature. |
| `apps/docs/content/docs/components/select.mdx`               | Updated types for `selectedKeys`, `disabledKeys`, and `defaultSelectedKeys` to accept `Iterable<React.Key>` and refined `onSelectionChange` callback signature. |
| `packages/components/menu/src/use-menu.ts`                   | Added `onSelectionChange` handler to `Props` interface with type `ShardSelection`.                                        |
| `packages/components/select/src/use-select.ts`               | Introduced `onSelectionChange` handler in `Props` interface and updated `UseSelectProps<T>` type to incorporate it.        |
| `packages/core/system-rsc/src/types.ts`                      | Added import for `Selection`, introduced new `ShardSelection` type extending `AriaSharedSelection` with `anchorKey` and `currentKey`. |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

.changeset/chilled-worms-develop.md: ## Summary
The new file introduces patches for several packages (`@nextui-org/dropdown`, `@nextui-org/menu`, `@nextui-org/select`, `@nextui-org/system-rsc`) and includes a fix for an issue related to incorrect types in `onSelectionChange`.

---

apps/docs/content/docs/components/dropdown.mdx: ## Short Summary

The diff in `dropdown.mdx` file involves changes to the types of `selectedKeys`, `disabledKeys`, and `defaultSelectedKeys` from `React.Key[]` to `all` or `Iterable<React.Key>`. Additionally, the `onSelectionChange` handler signature has been updated to include more specific types.

## Alterations to the declarations of exported or public entities

- `selectedKeys` in `dropdown.mdx`: Changed from `React.Key[]` to `all` or `Iterable<React.Key>`
- `disabledKeys` in `dropdown.mdx`: Changed from `React.Key[]` to `Iterable<React.Key>`
- `defaultSelectedKeys` in `dropdown.mdx`: Changed from `React.Key[]` to `all` or `Iterable<React.Key>`
- `onSelectionChange` in `dropdown.mdx`: Handler signature updated to `(keys: "all" \| Set<React.Key> & {anchorKey?: string; currentKey?: string}) => void`

---

apps/docs/content/docs/components/select.mdx: ## Short Summary

The changes in functionality for the `select` component include modifications to the types of `selectedKeys`, `disabledKeys`, and `defaultSelectedKeys`, updating them to accept `Iterable<React.Key>` instead of specific types like `React.Key[]`. Additionally, the `onSelectionChange` callback signature has been refined to include more detailed parameters.

## Alterations to the declarations of exported or public entities

- `selectedKeys` in `select` component:
  - Before: `selectedKeys: all \| React.Key[]`
  - After: `selectedKeys: all \| Iterable<React.Key>`

- `disabledKeys` in `select` component:
  - Before: `disabledKeys: all \| React.Key[]`
  - After: `disabledKeys: Iterable<React.Key>`

- `defaultSelectedKeys` in `select` component:
  - Before: `defaultSelectedKeys: all \| React.Key[]`
  - After: `defaultSelectedKeys: all \| Iterable<React.Key>`

- `onSelectionChange` callback in `select` component:
  - Before: `(keys: React.Key[]) => void`
  - After: `(keys: "all" \| Set<React.Key> & {anchorKey?: string; currentKey?: string}) => void`

---

packages/components/menu/src/use-menu.ts: ### Summary

The `use-menu.ts` file in the `packages/components/menu/src` directory has been updated to include a new `onSelectionChange` handler in the `Props` interface. This handler is called when the selection changes and takes a parameter `keys` of type `ShardSelection`.

### Alterations to the declarations of exported or public entities

- `import type {HTMLNextUIProps, PropGetter}` in `use-menu.ts` ‚Üí `import type {HTMLNextUIProps, PropGetter, ShardSelection}` in `use-menu.ts`
- Addition of new declaration:
  ```typescript
  /**
   * Handler that is called when the selection changes.
   */
  onSelectionChange?: (keys: ShardSelection) => any;
  ```

This change introduces a new `onSelectionChange` handler to the `Props` interface in the `use-menu.ts` file.

---

packages/components/select/src/use-select.ts: ### Short Summary:
The change in functionality introduces a new `onSelectionChange` handler in the `Props` interface and `UseSelectProps` type in `use-select.ts` file. This handler is called when the selection changes, accepting keys of type `ShardSelection`.

### Alterations to the declarations of exported or public entities:
- `Props<T>` interface in `use-select.ts`:
  - Added: 
    - `onSelectionChange?: (keys: ShardSelection) => any;`

- `UseSelectProps<T>` type in `use-select.ts`:
  - Modified:
    - Before: `Omit<Props<T>, keyof MultiSelectProps<T>> & MultiSelectProps<T> & SelectVariantProps;`
    - After: `Omit<Props<T>, keyof Omit<MultiSelectProps<T>, "onSelectionChange">> & Omit<MultiSelectProps<T>, "onSelectionChange"> & SelectVariantProps;`

---

packages/core/system-rsc/src/types.ts: ### Summary

In the `types.ts` file in the `packages/core/system-rsc/src` directory:

- Added an import statement for `Selection` from `@react-types/shared`.
- Introduced a new type `ShardSelection` extending `AriaSharedSelection` with additional properties `anchorKey` and `currentKey`.

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

### PR Summary

**Title:** fix: onSelectionChange type incorrect  
**User:** winchesHe  
**Number:** 3335  

**Description:**

The pull request aims to fix the incorrect type associated with the `onSelectionChange` function. The description fields provided in the template are not filled out, so further details about the current and new behavior, as well as additional information, are not available.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated summary of generated summaries

The updates encompass several components and libraries within the project, focusing primarily on type adjustments and the introduction of new handler functionalities to improve selection management.

1. **Type Adjustments for Selection Management**:
   - The `dropdown`, `menu`, and `select` components have undergone significant type changes. Specifically, the types for `selectedKeys`, `disabledKeys`, and `defaultSelectedKeys` have been updated to accept `Iterable<React.Key>` instead of `React.Key[]`. This change allows for more flexible handling of key collections.
   - The `onSelectionChange` handler has been refined across these components. Previously, this handler accepted an array of keys (`React.Key[]`), but now it includes more specific types such as `"all"` or `Set<React.Key>` along with optional `anchorKey` and `currentKey` properties. This provides more detailed context during selection changes.

2. **New Handler Introduction**:
   - In the `menu` and `select` components, a new `onSelectionChange` handler has been added to the `Props` interface. This handler is designed to be invoked when the selection changes, accepting a parameter of type `ShardSelection`. The `ShardSelection` type extends `AriaSharedSelection` and includes additional properties `anchorKey` and `currentKey`.

3. **File-specific Changes**:
   - **`dropdown.mdx`**: The types for `selectedKeys`, `disabledKeys`, and `defaultSelectedKeys` have been changed from `React.Key[]` to `all` or `Iterable<React.Key>`. The `onSelectionChange` handler signature has been updated to include more specific types.
   - **`select.mdx`**: Similar to `dropdown.mdx`, the types for `selectedKeys`, `disabledKeys`, and `defaultSelectedKeys` have been updated to accept `Iterable<React.Key>`. The `onSelectionChange` callback signature has been refined.
   - **`use-menu.ts`**: The `Props` interface now includes a new `onSelectionChange` handler that accepts a `ShardSelection` type parameter.
   - **`use-select.ts`**: The `Props` and `UseSelectProps` interfaces have been updated to include the new `onSelectionChange` handler.
   - **`types.ts`**: A new type `ShardSelection` has been introduced, extending `AriaSharedSelection` with additional properties `anchorKey` and `currentKey`.

These changes enhance the flexibility and specificity of selection management across the components, improving the overall robustness and functionality of the library.

### Alterations to the declarations of exported or public entities

#### `dropdown.mdx`

- **`selectedKeys`**:
  - Before: `React.Key[]`
  - After: `all \| Iterable<React.Key>`

- **`disabledKeys`**:
  - Before: `React.Key[]`
  - After: `Iterable<React.Key>`

- **`defaultSelectedKeys`**:
  - Before: `React.Key[]`
  - After: `all \| Iterable<React.Key>`

- **`onSelectionChange`**:
  - Before: `(keys: React.Key[]) => void`
  - After: `(keys: "all" \| Set<React.Key> & {anchorKey?: string; currentKey?: string}) => void`

#### `select.mdx`

- **`selectedKeys`**:
  - Before: `selectedKeys: all \| React.Key[]`
  - After: `selectedKeys: all \| Iterable<React.Key>`

- **`disabledKeys`**:
  - Before: `disabledKeys: all \| React.Key[]`
  - After: `disabledKeys: Iterable<React.Key>`

- **`defaultSelectedKeys`**:
  - Before: `defaultSelectedKeys: all \| React.Key[]`
  - After: `defaultSelectedKeys: all \| Iterable<React.Key>`

- **`onSelectionChange`**:
  - Before: `(keys: React.Key[]) => void`
  - After: `(keys: "all" \| Set<React.Key> & {anchorKey?: string; currentKey?: string}) => void`

#### `use-menu.ts`

- **`Props` interface**:
  - Added: 
    - `onSelectionChange?: (keys: ShardSelection) => any;`

- **Imports**:
  - Before: `import type {HTMLNextUIProps, PropGetter}`
  - After: `import type {HTMLNextUIProps, PropGetter, ShardSelection}`

#### `use-select.ts`

- **`Props<T>` interface**:
  - Added: 
    - `onSelectionChange?: (keys: ShardSelection) => any;`

- **`UseSelectProps<T>` type**:
  - Before: `Omit<Props<T>, keyof MultiSelectProps<T>> & MultiSelectProps<T> & SelectVariantProps;`
  - After: `Omit<Props<T>, keyof Omit<MultiSelectProps<T>, "onSelectionChange">> & Omit<MultiSelectProps<T>, "onSelectionChange"> & SelectVariantProps;`

#### `types.ts`

- **Imports**:
  - Added: 
    - `import { Selection } from '@react-types/shared';`

- **New Type**:
  - Added:
    ```typescript
    export type ShardSelection = AriaSharedSelection & {
      anchorKey?: string;
      currentKey?: string;
    };
    ```

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/chilled-worms-develop.md (added, 8 changes)\n  Patch: @@ -0,0 +1,8 @@
+---
+"@nextui-org/dropdown": patch
+"@nextui-org/menu": patch
+"@nextui-org/select": patch
+"@nextui-org/system-rsc": patch
+---
+
+Fix onSelectionChange type incorrect\n- apps/docs/content/docs/components/dropdown.mdx (modified, 8 changes)\n  Patch: @@ -308,9 +308,9 @@ you to customize each item individually.
 | variant                | `solid` \| `bordered` \| `light` \| `flat` \| `faded` \| `shadow`                                      | The dropdown items appearance style.                                                                    | `solid`     |
 | color                  | `default` \| `primary` \| `secondary` \| `success` \| `warning` \| `danger`                            | The dropdown items color theme.                                                                         | `default`   |
 | selectionMode          | `none` \| `single` \| `multiple`                                                                       | The type of selection that is allowed in the collection.                                                | -           |
-| selectedKeys           | `React.Key[]`                                                                                          | The currently selected keys in the collection (controlled).                                             | -           |
-| disabledKeys           | `React.Key[]`                                                                                          | The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with. | -           |
-| defaultSelectedKeys    | `all` \| `React.Key[]`                                                                                 | The initial selected keys in the collection (uncontrolled).                                             | -           |
+| selectedKeys           | `all` \| `Iterable<React.Key>`                                                                                          | The currently selected keys in the collection (controlled).                                             | -           |
+| disabledKeys           | `Iterable<React.Key>`                                                                                          | The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with. | -           |
+| defaultSelectedKeys    | `all` \| `Iterable<React.Key>`                                                                                 | The initial selected keys in the collection (uncontrolled).                                             | -           |
 | disallowEmptySelection | `boolean`                                                                                              | Whether the collection allows empty selection.                                                          | `false`     |
 | autoFocus              | `boolean` \| `first` \| `last`                                                                         | Where the focus should be set.                                                                          | `false`     |
 | topContent             | `ReactNode`                                                                                            | The content to display above the listbox items.                                                         | -           |
@@ -329,7 +329,7 @@ you to customize each item individually.
 | Attribute         | Type                          | Description                                                                |
 | ----------------- | ----------------------------- | -------------------------------------------------------------------------- |
 | onAction          | `(key: React.Key) => void`    | Handler that is called when an item is selected.                           |
-| onSelectionChange | `(keys: React.Key[]) => void` | Handler that is called when the selection changes.                         |
+| onSelectionChange | `(keys: "all" \| Set<React.Key> & {anchorKey?: string; currentKey?: string}) => void` | Handler that is called when the selection changes.                         |
 | onClose           | `() => void`                  | Handler that is called when the menu should close after selecting an item. |
 
 ---\n- apps/docs/content/docs/components/select.mdx (modified, 8 changes)\n  Patch: @@ -338,9 +338,9 @@ the popover and listbox components.
 | children\*                  | `ReactNode[]`                                                                                                                                                                                                          | The children to render. Usually a list of `SelectItem` and `SelectSection` elements.                                   | -                  |
 | items                       | [`Iterable<T>`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols)                                                                                                                 | Item objects in the select. (dynamic)                                                                                  | -                  |
 | selectionMode               | `single` \| `multiple`                                                                                                                                                                                                 | The type of selection that is allowed in the collection.                                                               | -                  |
-| selectedKeys                | `all` \| `React.Key[]`                                                                                                                                                                                                 | The currently selected keys in the collection (controlled).                                                            | -                  |
-| disabledKeys                | `all` \| `React.Key[]`                                                                                                                                                                                                 | The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.                | -                  |
-| defaultSelectedKeys         | `all` \| `React.Key[]`                                                                                                                                                                                                 | The initial selected keys in the collection (uncontrolled).                                                            | -                  |
+| selectedKeys                | `all` \| `Iterable<React.Key>`                                                                                                                                                                                                | The currently selected keys in the collection (controlled).                                                            | -                  |
+| disabledKeys                | `Iterable<React.Key>`                                                                                                                                                                                                | The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.                | -                  |
+| defaultSelectedKeys         | `all` \| `Iterable<React.Key>`                                                                                                                                                                                                 | The initial selected keys in the collection (uncontrolled).                                                            | -                  |
 | variant                     | `flat` \| `bordered` \| `faded` \| `underlined`                                                                                                                                                                        | The variant of the select.                                                                                             | `flat`             |
 | color                       | `default` \| `primary` \| `secondary` \| `success` \| `warning` \| `danger`                                                                                                                                            | The color of the select.                                                                                               | `default`          |
 | size                        | `sm` \| `md` \| `lg`                                                                                                                                                                                                   | The size of the select.                                                                                                | `md`               |
@@ -379,7 +379,7 @@ the popover and listbox components.
 | ----------------- | --------------------------------------------- | ------------------------------------------------------------------------------------ |
 | onClose           | `() => void`                                  | Callback fired when the select popover is closed.                                    |
 | onOpenChange      | `(isOpen: boolean) => void`                   | Callback fired when the select popover is opened or closed.                          |
-| onSelectionChange | `(keys: React.Key[]) => void`                 | Callback fired when the selected keys change.                                        |
+| onSelectionChange | `(keys: "all" \| Set<React.Key> & {anchorKey?: string; currentKey?: string}) => void`                 | Callback fired when the selected keys change.                                        |
 | onChange          | `React.ChangeEvent<HTMLSelectElement>`        | Native select change event, fired when the selected value changes.                   |
 | renderValue       | [RenderValueFunction](#render-value-function) | Function to render the value of the select. It renders the selected item by default. |
 \n- packages/components/menu/src/use-menu.ts (modified, 8 changes)\n  Patch: @@ -1,4 +1,4 @@
-import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
+import type {HTMLNextUIProps, PropGetter, ShardSelection} from "@nextui-org/system";
 import type {AriaMenuProps} from "@react-types/menu";
 
 import {AriaMenuOptions, useMenu as useAriaMenu} from "@react-aria/menu";
@@ -81,11 +81,15 @@ interface Props<T> {
    * The menu items classNames.
    */
   itemClasses?: MenuItemProps["classNames"];
+  /**
+   * Handler that is called when the selection changes.
+   */
+  onSelectionChange?: (keys: ShardSelection) => any;
 }
 
 export type UseMenuProps<T = object> = Props<T> &
   Omit<HTMLNextUIProps<"ul">, keyof AriaMenuProps<T>> &
-  AriaMenuProps<T> &
+  Omit<AriaMenuProps<T>, "onSelectionChange"> &
   MenuVariantProps;
 
 export function useMenu<T extends object>(props: UseMenuProps<T>) {\n- packages/components/select/src/use-select.ts (modified, 19 changes)\n  Patch: @@ -1,7 +1,13 @@
 import type {SelectSlots, SelectVariantProps, SlotsToClasses} from "@nextui-org/theme";
 import type {HiddenSelectProps} from "./hidden-select";
 
-import {DOMAttributes, HTMLNextUIProps, mapPropsVariants, PropGetter} from "@nextui-org/system";
+import {
+  DOMAttributes,
+  HTMLNextUIProps,
+  mapPropsVariants,
+  PropGetter,
+  ShardSelection,
+} from "@nextui-org/system";
 import {select} from "@nextui-org/theme";
 import {ReactRef, useDOMRef, filterDOMProps} from "@nextui-org/react-utils";
 import {useMemo, useCallback, useRef, Key, ReactNode, useEffect} from "react";
@@ -119,10 +125,17 @@ interface Props<T> extends Omit<HTMLNextUIProps<"select">, keyof SelectVariantPr
    * Classes object to style the select and its children.
    */
   classNames?: SlotsToClasses<SelectSlots>;
+  /**
+   * Handler that is called when the selection changes.
+   */
+  onSelectionChange?: (keys: ShardSelection) => any;
 }
 
-export type UseSelectProps<T> = Omit<Props<T>, keyof MultiSelectProps<T>> &
-  MultiSelectProps<T> &
+export type UseSelectProps<T> = Omit<
+  Props<T>,
+  keyof Omit<MultiSelectProps<T>, "onSelectionChange">
+> &
+  Omit<MultiSelectProps<T>, "onSelectionChange"> &
   SelectVariantProps;
 
 export function useSelect<T extends object>(originalProps: UseSelectProps<T>) {\n- packages/core/system-rsc/src/types.ts (modified, 7 changes)\n  Patch: @@ -2,6 +2,8 @@
  * Part of this code is taken from @chakra-ui/system ‚ù§Ô∏è
  */
 
+import {Selection as AriaSharedSelection} from "@react-types/shared";
+
 export type As<Props = any> = React.ElementType<Props>;
 export type DOMElements = keyof JSX.IntrinsicElements;
 export type CapitalizedDOMElements = Capitalize<DOMElements>;
@@ -79,3 +81,8 @@ export type PropGetter<P = Record<string, unknown>, R = DOMAttributes> = (
   props?: Merge<DOMAttributes, P>,
   ref?: React.Ref<any>,
 ) => R & React.RefAttributes<any>;
+
+export type ShardSelection = AriaSharedSelection & {
+  anchorKey?: string;
+  currentKey?: string;
+};\n
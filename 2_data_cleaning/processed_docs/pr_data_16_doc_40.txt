Pull Request Number: 2265
Title: fix: update accordion item heading tag to be customizable
Base Branch: canary
Head Branch: fix/customizable-accordion-item-heading-tag
Author: outputboy
URL: https://github.com/nextui-org/nextui/pull/2265
State: MERGED
Created At: 2024-01-19T01:42:35Z
Merged At: 2024-05-13T01:38:57Z
Participants: outputboy, jrgarciadev, wingkwong

Description:
üìù Description

closes: #2950


Make the Accordion Item heading tag customizable, not always h2 . This is good for a11y because it's recommended to have hierarchical headings in a web page.

‚õ≥Ô∏è Current behavior (updates)

Accordion Item heading tag is locked to h2

üöÄ New behavior

Users are able to pass in tag div or h3 via props HeadingComponent as needed

üí£ Is this a breaking change (Yes/No):
No

Summary by CodeRabbit

New Features

Enhanced the AccordionItem component with a customizable HeadingComponent prop for improved accessibility compliance and user experience.

Commits:
- fix: update accordion item heading tag to be customizable\n- Update .changeset/heavy-hairs-join.md

Co-authored-by: Junior Garcia <jrgarciadev@gmail.com>\n- Update .changeset/heavy-hairs-join.md

Co-authored-by: coderabbitai[bot] <136622811+coderabbitai[bot]@users.noreply.github.com>\n- Merge branch 'main' into pr/2265\n- chore(accordion): lint\n- Merge branch 'canary' into pr/2265\n- chore(changeset): add issue number\n- feat(docs): add HeadingComponent prop\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 72be5abc4f9ffcecd5f1c77661bbeb400c21044a

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name                  | Type  |
| --------------------- | ----- |
| @nextui-org/accordion | Patch |
| @nextui-org/react     | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/outputboy/nextui/new/fix/customizable-accordion-item-heading-tag?filename=.changeset/polite-terms-arrive.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Faccordion%22%3A%20patch%0A---%0A%0Afix%3A%20update%20accordion%20item%20heading%20tag%20to%20be%20customizable%0A)

\n- vercel: [vc]: #+GY3J7uM0vdDA7XdF1xXISXia6/E7yxrqyPy0mTgUdY=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvRUxiWjFxamtCeGF4SEN2eFRGYkRObWdhM0tvOSIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLW91dHB1dGJveS1maXgtY3UtODU2NDk1LW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLW91dHB1dGJveS1maXgtY3UtODU2NDk1LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/ELbZ1qjkBxaxHCvxTFbDNmga3Ko9)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-outputboy-fix-cu-856495-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-outputboy-fix-cu-856495-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 5, 2024 4:02am |

\n- vercel: Someone is attempting to deploy a commit to the **NextUI** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%223b09c447190ef69358db32986bafff709434c000%22%7D%2C%22id%22%3A%22QmPZTtrjQ9oKLnLNn6b5e8rT4NfkXJATuadaJMqCxQSTc7%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A2265%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
The updates aim to enhance the accessibility of the `AccordionItem` component by introducing a new `HeadingComponent` prop for customizing heading tags across various files. This improvement empowers developers to tailor heading tags for better web accessibility, aligning with standards and enriching the user experience.

## Changes

| File                                                 | Change Summary                                                                                                    |
|------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------|
| `.../accordion/src/accordion-item.tsx`               | Introduced `HeadingComponent` prop to customize heading tags for improved accessibility.                           |
| `.../accordion/src/base/accordion-item-base.tsx`     | Added `HeadingComponent` to `Props` interface for heading tag customization, imported `As` from `@nextui-org/system`.|
| `.../accordion/src/use-accordion-item.ts`            | Added `HeadingComponent` parameter with default value `"h2"` to `useAccordionItem` for customizing heading tags.     |

## Assessment against linked issues

| Objective                                                                                      | Addressed | Explanation                                                                                                       |
|-----------------------------------------------------------------------------------------------|-----------|-------------------------------------------------------------------------------------------------------------------|
| [BUG] - No option to change AccordionItem's title tag from h2 to something else (Issue #2950) | ‚úÖ       |                                                                                                                   |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->
<!--


.packages/components/accordion/src/accordion-item.tsx: 
- Added functionality: Introduces a new `HeadingComponent` prop in the `AccordionItem` component to customize the heading tag for better accessibility compliance and user experience, replacing the direct `<h2>` element usage.

.packages/components/accordion/src/base/accordion-item-base.tsx: 
- Added functionality: Imports `As` from `@nextui-org/system` and adds a new property `HeadingComponent` in the `Props` interface of `AccordionItemBase` for customizing the heading tag for web accessibility.

.packages/components/accordion/src/use-accordion-item.ts: 
- Added functionality: Adds a new parameter `HeadingComponent` with a default value of `"h2"` to the `useAccordionItem` function for customizing the heading tag, which is now returned as part of the function's result.

.changeset/heavy-hairs-join.md: 
## Summary
The file introduces a patch for the `@nextui-org/accordion` package to make the accordion item heading tag customizable, enhancing accessibility by ensuring consistent and semantic headings for better content navigation.

---

apps/docs/content/docs/components/accordion.mdx: 
## Summary
In the `Accordion` component documentation, a new attribute `HeadingComponent` of type `React.ElementType` has been added to customize the heading tag for Web accessibility, emphasizing the use of headings for content description and semantic consistency.

## Alterations to the declarations of exported or public entities
- `HeadingComponent: React.ElementType` added to `Accordion Item Props` in `apps/docs/content/docs/components/accordion.mdx`

-->
<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: short summary by coderabbit.ai -->
<!--


### PR Objectives

The primary objective of Pull Request #2265 is to enhance the accessibility and customization of the Accordion Item component within a UI library. The current implementation restricts the heading tag of the Accordion Item to an `h2` tag. This limitation is not ideal for accessibility (a11y) as web pages are recommended to have hierarchical headings that adjust dynamically according to the page structure.

The proposed update allows users to customize the heading tag of the Accordion Item by passing a new prop, `HeadingComponent`. This prop can accept different types of heading tags (like `h3`, `div`, etc.), thereby providing greater flexibility and improving web accessibility. The change is designed to be non-breaking, ensuring that existing implementations of the Accordion Item will not be adversely affected by this update.

### AI-Generated Summary of Generated Summaries

The updates across several files in the Accordion component aim to introduce a new prop, `HeadingComponent`, to the `AccordionItem` and its base implementation. This prop allows for the customization of the heading tag used in the Accordion Item, enhancing accessibility by supporting hierarchical heading structures as needed by the users. The changes include:

1. In `accordion-item.tsx`, the `AccordionItem` component is updated to utilize the new `HeadingComponent` prop, allowing for dynamic customization of the heading tag.
2. In `accordion-item-base.tsx`, the `AccordionItemBase` component is modified to include the `HeadingComponent` in its `Props` interface, supporting the customization feature. This file also handles the import of the `As` type from `@nextui-org/system`, which is used to define the type of the heading component.
3. The `useAccordionItem` function in `use-accordion-item.ts` is enhanced to accept a `HeadingComponent` parameter, with a default value of `"h2"`. This addition ensures that the heading tag can be customized through this hook, maintaining backward compatibility by defaulting to the previously used `h2` tag.

Overall, these changes collectively enable the Accordion Item's heading tag to be customizable, thereby supporting better accessibility practices and providing users with the flexibility to maintain semantic HTML structure as per their application's requirements.

-->
<!-- end of auto-generated comment: short summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- da00ab9d4f8f4781443cf7b7aa9940268e2c0b5c -->
<!-- a0c14e873fd5ef6665b58784eaebbc090dddeda0 -->
<!-- 06e9bc5fe71207f72bbc21ac1ce35af14757f0a0 -->
<!-- 72be5abc4f9ffcecd5f1c77661bbeb400c21044a -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/heavy-hairs-join.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/accordion": patch
+---
+
+Make the accordion item heading tag customizable to satisfy a11y needs. Headings on web pages need to be consistent and semantic; this will help all users better find the content they are looking for. (#2950)\n- apps/docs/content/docs/components/accordion.mdx (modified, 31 changes)\n  Patch: @@ -220,21 +220,22 @@ Here's an example of how to customize the accordion styles:
 
 ### Accordion Item Props
 
-| Attribute                 | Type                                              | Description                                                                                           | Default |
-| ------------------------- | ------------------------------------------------- | ----------------------------------------------------------------------------------------------------- | ------- |
-| children                  | `ReactNode` \| `string`                           | The content of the component.                                                                         |         |
-| title                     | `ReactNode` \| `string`                           | The accordion item title.                                                                             |         |
-| subtitle                  | `ReactNode` \| `string`                           | The accordion item subtitle.                                                                          |         |
-| indicator                 | [IndicatorProps](#accordion-item-indicator-props) | The accordion item `expanded` indicator, usually an arrow icon.                                       |         |
-| startContent              | `ReactNode`                                       | The accordion item start content, usually an icon or avatar.                                          |         |
-| motionProps               | [MotionProps](#motion-props)                      | The props to modify the framer motion animation. Use the `variants` API to create your own animation. |         |
-| isCompact                 | `boolean`                                         | Whether the AccordionItem is compact.                                                                 | `false` |
-| isDisabled                | `boolean`                                         | The current disabled status.                                                                          | `false` |
-| keepContentMounted        | `boolean`                                         | Whether the AccordionItem content is kept mounted when closed.                                        | `false` |
-| hideIndicator             | `boolean`                                         | Whether the AccordionItem indicator is hidden.                                                        | `false` |
-| disableAnimation          | `boolean`                                         | Whether the AccordionItem animation is disabled.                                                      | `false` |
-| disableIndicatorAnimation | `boolean`                                         | Whether the AccordionItem indicator animation is disabled.                                            | `false` |
-| classNames                | [Classnames](#accordion-item-classnames)          | Allows to set custom class names for the accordion item slots.                                        | -       |
+| Attribute                 | Type                                              | Description                                                                                                                  | Default |
+|---------------------------|---------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------|---------|
+| children                  | `ReactNode` \| `string`                           | The content of the component.                                                                                                |         |
+| title                     | `ReactNode` \| `string`                           | The accordion item title.                                                                                                    |         |
+| subtitle                  | `ReactNode` \| `string`                           | The accordion item subtitle.                                                                                                 |         |
+| indicator                 | [IndicatorProps](#accordion-item-indicator-props) | The accordion item `expanded` indicator, usually an arrow icon.                                                              |         |
+| startContent              | `ReactNode`                                       | The accordion item start content, usually an icon or avatar.                                                                 |         |
+| motionProps               | [MotionProps](#motion-props)                      | The props to modify the framer motion animation. Use the `variants` API to create your own animation.                        |         |
+| isCompact                 | `boolean`                                         | Whether the AccordionItem is compact.                                                                                        | `false` |
+| isDisabled                | `boolean`                                         | The current disabled status.                                                                                                 | `false` |
+| keepContentMounted        | `boolean`                                         | Whether the AccordionItem content is kept mounted when closed.                                                               | `false` |
+| hideIndicator             | `boolean`                                         | Whether the AccordionItem indicator is hidden.                                                                               | `false` |
+| disableAnimation          | `boolean`                                         | Whether the AccordionItem animation is disabled.                                                                             | `false` |
+| disableIndicatorAnimation | `boolean`                                         | Whether the AccordionItem indicator animation is disabled.                                                                   | `false` |
+| HeadingComponent          | `React.ElementType`                               | Customizable heading tag for Web accessibility. Use headings to describe content and use them consistently and semantically. | `h2`    |
+| classNames                | [Classnames](#accordion-item-classnames)          | Allows to set custom class names for the accordion item slots.                                                               | -       |
 
 ### Accordion Item Events
 \n- packages/components/accordion/src/accordion-item.tsx (modified, 5 changes)\n  Patch: @@ -11,6 +11,7 @@ export interface AccordionItemProps extends UseAccordionItemProps {}
 const AccordionItem = forwardRef<"button", AccordionItemProps>((props, ref) => {
   const {
     Component,
+    HeadingComponent,
     classNames,
     slots,
     indicator,
@@ -89,7 +90,7 @@ const AccordionItem = forwardRef<"button", AccordionItemProps>((props, ref) => {
 
   return (
     <Component {...getBaseProps()}>
-      <h2 {...getHeadingProps()}>
+      <HeadingComponent {...getHeadingProps()}>
         <button {...getButtonProps()}>
           {startContent && (
             <div className={slots.startContent({class: classNames?.startContent})}>
@@ -104,7 +105,7 @@ const AccordionItem = forwardRef<"button", AccordionItemProps>((props, ref) => {
             <span {...getIndicatorProps()}>{indicatorComponent}</span>
           )}
         </button>
-      </h2>
+      </HeadingComponent>
       {content}
     </Component>
   );\n- packages/components/accordion/src/base/accordion-item-base.tsx (modified, 7 changes)\n  Patch: @@ -4,6 +4,7 @@ import type {
   SlotsToClasses,
 } from "@nextui-org/theme";
 
+import {As} from "@nextui-org/system";
 import {ItemProps, BaseItem} from "@nextui-org/aria-utils";
 import {FocusableProps, PressEvents} from "@react-types/shared";
 import {ReactNode, MouseEventHandler} from "react";
@@ -85,6 +86,12 @@ export interface Props<T extends object = {}>
    * ```
    */
   classNames?: SlotsToClasses<AccordionItemSlots>;
+  /**
+   * Customizable heading tag for Web accessibility:
+   * use headings to describe content and use them consistently and semantically.
+   * This will help all users to better find the content they are looking for.
+   */
+  HeadingComponent?: As;
 }
 
 export type AccordionItemBaseProps<T extends object = {}> = Props<T> & AccordionItemVariantProps;\n- packages/components/accordion/src/use-accordion-item.ts (modified, 2 changes)\n  Patch: @@ -58,6 +58,7 @@ export function useAccordionItem<T extends object = {}>(props: UseAccordionItemP
     disableAnimation = false,
     keepContentMounted = false,
     disableIndicatorAnimation = false,
+    HeadingComponent = as || "h2",
     onPress,
     onPressStart,
     onPressEnd,
@@ -237,6 +238,7 @@ export function useAccordionItem<T extends object = {}>(props: UseAccordionItemP
 
   return {
     Component,
+    HeadingComponent,
     item,
     slots,
     classNames,\n
Pull Request Number: 2223
Title: feat: added drawer component
Base Branch: canary
Head Branch: feat/drawer
Author: 1111mp
URL: https://github.com/nextui-org/nextui/pull/2223
State: CLOSED
Created At: 2024-01-10T10:31:19Z
Merged At: None
Participants: 1111mp, vitalijalbu, samuelbohl, Mingyang-Li, jenslys, ohIcee, wingkwong, jrgarciadev

Description:
üìù Description
Added Drawer component.
Learned about some user feature requests from #2134 [Feature Request] Some Components Feature Suggestions, so I started to implement them from the simplest components (Because it can almost reuse Modal‚Äôs design and code).

Closes: #2620
Closes: #2376

‚õ≥Ô∏è Current behavior (updates)
There is currently no support for the Drawer component.
üöÄ New behavior
We can have the Drawer component.
üí£ Is this a breaking change (Yes/No):
No. Supports the new Drawer component, which will not have any impact on other components.
üìù Additional Information

There is currently some work yet to be completed, such as Drawer documentation and usage examples. Because I don‚Äôt know whether such code complies with the specifications of the warehouse, I initiated a PR in advance to confirm this. If all goes well I will continue with the rest of the work.
Feel free to point out my questions at any time. Of course, if you already have Drawer-related implementation plans or other questions, please let me know and I will close this PR. Thank you.
This is a continuation of the previous PR #2202.

I have read the contributing guidelines and code of conduct document.

Commits:
- feat: added drawer component

Signed-off-by: The1111mp <The1111mp@outlook.com>\n

Labels:


Comments:
- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: efbc9abd35edba120b53133becce659b642208cb

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/1111mp/nextui/new/feat/drawer?filename=.changeset/wet-timers-worry.md&value=---%0A%22%40nextui-org%2Fmodal%22%3A%20patch%0A%22%40nextui-org%2Ftheme%22%3A%20patch%0A---%0A%0Afeat%3A%20added%20drawer%20component%0A)

\n- vercel: [vc]: #0BpHvqYu/9x1uyj5FvhaPaCtBzYwNjhTP0v+c/bdV8A=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvOENFRU5uVEVaWWl6cXhUUnE0d1JNTldyc0NGUSIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLTExMTFtcC1mZWF0LWRyYXdlci1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZm9yay0xMTExbXAtZmVhdC1kcmF3ZXItbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/8CEENnTEZYizqxTRq4wRMNWrsCFQ)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-1111mp-feat-drawer-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-1111mp-feat-drawer-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jan 10, 2024 10:34am |

\n- vercel: @1111mp is attempting to deploy a commit to the **NextUI** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%22efbc9abd35edba120b53133becce659b642208cb%22%7D%2C%22id%22%3A%22QmPSo3N7UMR5Zoba46FSeeCUEmv6h3QxFcq95vA7hk8Jsi%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A2223%2C%22repo%22%3A%22nextui%22%7D).

\n- vitalijalbu: Hi, any updates on this PR ?? People are waiting... :D \n- samuelbohl: any updates on this?
\n- Mingyang-Li: Component looks great ü§©\n- jenslys: any updates on this?\n- ohIcee: Any updates?\n- wingkwong: @1111mp can you ping me at [discord](https://discordapp.com/users/495466997304262658)? \n- jrgarciadev: Hey @1111mp thanks for your contribution, we will handle this internally here https://github.com/nextui-org/nextui/pull/3986\n

Files Changed:
- packages/components/modal/src/drawer.tsx (added, 97 changes)\n  Patch: @@ -0,0 +1,97 @@
+import {ReactNode, useMemo} from "react";
+import {forwardRef} from "@nextui-org/system";
+import {TRANSITION_EASINGS} from "@nextui-org/framer-transitions";
+import {drawer} from "@nextui-org/theme";
+import {clsx} from "@nextui-org/shared-utils";
+
+import Modal from "./modal";
+import {UseModalProps} from "./use-modal";
+
+export type DrawerProps = Omit<UseModalProps, "placement" | "scrollBehavior"> & {
+  /**
+   * The content of the modal. Usually the ModalContent
+   */
+  children: ReactNode;
+  placement?: "top" | "right" | "bottom" | "left";
+  scrollBehavior?: "inside" | "outside";
+};
+
+const Drawer = forwardRef<"div", DrawerProps>(
+  (
+    {
+      className,
+      classNames,
+      placement = "right",
+      scrollBehavior = "inside",
+      size = "md",
+      motionProps: drawerMotionProps,
+      children,
+      ...props
+    },
+    ref,
+  ) => {
+    const motionProps = useMemo(() => {
+      if (drawerMotionProps !== void 0) return drawerMotionProps;
+
+      const key = placement === "left" || placement === "right" ? "x" : "y";
+
+      return {
+        variants: {
+          enter: {
+            [key]: 0,
+            transition: {
+              [key]: {
+                bounce: 0,
+                duration: 0.3,
+                ease: TRANSITION_EASINGS.ease,
+              },
+            },
+          },
+          exit: {
+            [key]: placement === "top" || placement === "left" ? "-100%" : "100%",
+            transition: {
+              [key]: {
+                bounce: 0,
+                duration: 0.6,
+                ease: TRANSITION_EASINGS.ease,
+              },
+            },
+          },
+        },
+      };
+    }, [placement, drawerMotionProps]);
+
+    const baseStyles = clsx(classNames?.base, className);
+
+    const slots = useMemo(
+      () =>
+        drawer({
+          size,
+          placement,
+        }),
+      [size, placement],
+    );
+
+    const base = slots.base({class: clsx(baseStyles, {})});
+
+    return (
+      <Modal
+        ref={ref}
+        {...props}
+        classNames={{
+          ...classNames,
+          base: base,
+        }}
+        motionProps={motionProps}
+        scrollBehavior={scrollBehavior}
+        size={size}
+      >
+        {children}
+      </Modal>
+    );
+  },
+);
+
+Drawer.displayName = "NextUI.Drawer";
+
+export default Drawer;\n- packages/components/modal/src/index.ts (modified, 4 changes)\n  Patch: @@ -1,11 +1,13 @@
 import Modal from "./modal";
+import Drawer from "./drawer";
 import ModalContent from "./modal-content";
 import ModalHeader from "./modal-header";
 import ModalBody from "./modal-body";
 import ModalFooter from "./modal-footer";
 
 // export types
 export type {ModalProps} from "./modal";
+export type {DrawerProps} from "./drawer";
 export type {ModalContentProps} from "./modal-content";
 export type {ModalHeaderProps} from "./modal-header";
 export type {ModalBodyProps} from "./modal-body";
@@ -20,4 +22,4 @@ export {useDisclosure} from "@nextui-org/use-disclosure";
 export {ModalProvider, useModalContext} from "./modal-context";
 
 // export components
-export {Modal, ModalContent, ModalHeader, ModalBody, ModalFooter};
+export {Modal, Drawer, ModalContent, ModalHeader, ModalBody, ModalFooter};\n- packages/components/modal/stories/modal.stories.tsx (modified, 23 changes)\n  Patch: @@ -12,11 +12,13 @@ import Lorem from "react-lorem-component";
 
 import {
   Modal,
+  Drawer,
   ModalContent,
   ModalHeader,
   ModalBody,
   ModalFooter,
   ModalProps,
+  DrawerProps,
   useDisclosure,
 } from "../src";
 
@@ -278,3 +280,24 @@ export const CustomMotion = {
     },
   },
 };
+
+const DrawerTemplate = (args: DrawerProps) => {
+  const {isOpen, onOpen, onOpenChange} = useDisclosure({defaultOpen: args.defaultOpen});
+
+  return (
+    <>
+      <Button onPress={onOpen}>Open Drawer</Button>
+      <Drawer {...args} isOpen={isOpen} onOpenChange={onOpenChange}>
+        {content}
+      </Drawer>
+    </>
+  );
+};
+
+export const UseAsDrawer = {
+  render: DrawerTemplate,
+
+  args: {
+    placement: "right",
+  },
+};\n- packages/core/theme/src/components/modal.ts (modified, 56 changes)\n  Patch: @@ -193,7 +193,61 @@ const modal = tv({
   ],
 });
 
+const drawer = tv({
+  slots: {
+    base: ["absolute", "m-0", "sm:m-0", "overflow-y-auto"],
+  },
+  variants: {
+    size: {
+      xs: {
+        base: "max-w-xs max-h-[20rem]",
+      },
+      sm: {
+        base: "max-w-sm max-h-[24rem]",
+      },
+      md: {
+        base: "max-w-md max-h-[28rem]",
+      },
+      lg: {
+        base: "max-w-lg max-h-[32rem]",
+      },
+      xl: {
+        base: "max-w-xl max-h-[36rem]",
+      },
+      "2xl": {
+        base: "max-w-2xl max-h-[42rem]",
+      },
+      "3xl": {
+        base: "max-w-3xl max-h-[48rem]",
+      },
+      "4xl": {
+        base: "max-w-4xl max-h-[56rem]",
+      },
+      "5xl": {
+        base: "max-w-5xl max-h-[64rem]",
+      },
+      full: {
+        base: "max-w-full max-h-full h-[100dvh] !rounded-none",
+      },
+    },
+    placement: {
+      top: {
+        base: "inset-x-0 top-0 max-w-[none] rounded-t-none",
+      },
+      right: {
+        base: "inset-y-0 right-0 max-h-[none] rounded-r-none",
+      },
+      bottom: {
+        base: "inset-x-0 bottom-0 max-w-[none] rounded-b-none",
+      },
+      left: {
+        base: "inset-y-0 left-0 max-h-[none] rounded-l-none",
+      },
+    },
+  },
+});
+
 export type ModalVariantProps = VariantProps<typeof modal>;
 export type ModalSlots = keyof ReturnType<typeof modal>;
 
-export {modal};
+export {modal, drawer};\n
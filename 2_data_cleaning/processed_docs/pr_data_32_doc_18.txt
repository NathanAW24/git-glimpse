Pull Request Number: 48
Title: Webpack test
Base Branch: main
Head Branch: webpack-test
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/48
State: MERGED
Created At: 2021-09-30T01:23:11Z
Merged At: 2021-09-30T01:45:03Z
Participants: jrgarciadev, codecov-commenter

Description:
Types of changes


 Bug fix (non-breaking change which fixes an issue)
 New feature (non-breaking change which adds functionality)
 Breaking change (fix or feature that would cause existing functionality to not work as expected)
 Documentation Only
 Refactor

Description, Motivation and Context
NextUI publishes way changed to separated files instead of a single file, project structure changed
IMPORTANT: npm publish pipeline command has the flaw "--dry-run" be sure remove it before real publishing



Screenshots - Animations

Commits:
- chore: big changes to change the way nextui is build\n- chore: big changes to change the way nextui is build\n- feat: publish esm modules implemented, project structure changed\n- fix: build stage\n- fix: main pipeline prepublish command\n- chore: import documentation updated\n

Labels:


Comments:
- codecov-commenter: # [Codecov](https://codecov.io/gh/nextui-org/nextui/pull/48?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) Report
> Merging [#48](https://codecov.io/gh/nextui-org/nextui/pull/48?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) (8960c5a) into [main](https://codecov.io/gh/nextui-org/nextui/commit/dd3e2aee37d2f407db3939c73350b8faceff47fa?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) (dd3e2ae) will **decrease** coverage by `8.30%`.
> The diff coverage is `100.00%`.

[![Impacted file tree graph](https://codecov.io/gh/nextui-org/nextui/pull/48/graphs/tree.svg?width=650&height=150&src=pr&token=We4e5sFK8O&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None)](https://codecov.io/gh/nextui-org/nextui/pull/48?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None)

```diff
@@            Coverage Diff             @@
##             main      #48      +/-   ##
==========================================
- Coverage   95.26%   86.95%   -8.31%     
==========================================
  Files          66       93      +27     
  Lines        1055     1541     +486     
  Branches      372      523     +151     
==========================================
+ Hits         1005     1340     +335     
- Misses         45      196     +151     
  Partials        5        5              
```


| [Impacted Files](https://codecov.io/gh/nextui-org/nextui/pull/48?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) | Coverage Δ | |
|---|---|---|
| [packages/nextui/src/avatar/avatar-group.tsx](https://codecov.io/gh/nextui-org/nextui/pull/48/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9hdmF0YXIvYXZhdGFyLWdyb3VwLnRzeA==) | `100.00% <ø> (ø)` | |
| [packages/nextui/src/avatar/avatar.tsx](https://codecov.io/gh/nextui-org/nextui/pull/48/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9hdmF0YXIvYXZhdGFyLnRzeA==) | `97.87% <ø> (ø)` | |
| [packages/nextui/src/avatar/index.ts](https://codecov.io/gh/nextui-org/nextui/pull/48/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9hdmF0YXIvaW5kZXgudHM=) | `100.00% <ø> (ø)` | |
| [packages/nextui/src/button/button-group-context.ts](https://codecov.io/gh/nextui-org/nextui/pull/48/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9idXR0b24vYnV0dG9uLWdyb3VwLWNvbnRleHQudHM=) | `100.00% <ø> (ø)` | |
| [packages/nextui/src/button/button-group.tsx](https://codecov.io/gh/nextui-org/nextui/pull/48/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9idXR0b24vYnV0dG9uLWdyb3VwLnRzeA==) | `100.00% <ø> (ø)` | |
| [packages/nextui/src/button/button-icon.tsx](https://codecov.io/gh/nextui-org/nextui/pull/48/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9idXR0b24vYnV0dG9uLWljb24udHN4) | `100.00% <ø> (ø)` | |
| [packages/nextui/src/button/button-loading.tsx](https://codecov.io/gh/nextui-org/nextui/pull/48/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9idXR0b24vYnV0dG9uLWxvYWRpbmcudHN4) | `100.00% <ø> (ø)` | |
| [packages/nextui/src/button/button.drip.tsx](https://codecov.io/gh/nextui-org/nextui/pull/48/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9idXR0b24vYnV0dG9uLmRyaXAudHN4) | `100.00% <ø> (ø)` | |
| [packages/nextui/src/button/button.tsx](https://codecov.io/gh/nextui-org/nextui/pull/48/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9idXR0b24vYnV0dG9uLnRzeA==) | `93.05% <ø> (ø)` | |
| [packages/nextui/src/button/index.ts](https://codecov.io/gh/nextui-org/nextui/pull/48/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvbmV4dHVpL3NyYy9idXR0b24vaW5kZXgudHM=) | `100.00% <ø> (ø)` | |
| ... and [97 more](https://codecov.io/gh/nextui-org/nextui/pull/48/diff?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nextui-org/nextui/pull/48?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nextui-org/nextui/pull/48?src=pr&el=footer&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None). Last update [dd3e2ae...8960c5a](https://codecov.io/gh/nextui-org/nextui/pull/48?src=pr&el=lastupdated&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None).
\n

Files Changed:
- .github/workflows/main.yaml (modified, 13 changes)\n  Patch: @@ -48,10 +48,6 @@ jobs:
         run: yarn install --frozen-lockfile
       - name: Build
         run: yarn build
-      - uses: actions/upload-artifact@v2
-        with:
-          name: dist
-          path: ./packages/nextui/dist
 
   tests:
     needs: [lint, build]
@@ -84,14 +80,13 @@ jobs:
           node-version: '12'
       - name: Install dependencies
         run: yarn install --frozen-lockfile
-      - uses: actions/download-artifact@v2
-        with:
-          name: dist
-          path: ./packages/nextui/dist
+      - name: Pre puiblish NextUI package
+        run: yarn pre-publish:nextui
       - uses: JS-DevTools/npm-publish@v1
         with:
           token: ${{ secrets.NPM_TOKEN }}
-          package: './packages/nextui/package.json'
+          package: './packages/nextui/lib/package.json'
+          dry-run: true
       - name: Show published version
         if: steps.publish.outputs.type != 'none'
         run: |\n- examples/create-next-app/package.json (modified, 2 changes)\n  Patch: @@ -9,7 +9,7 @@
     "lint": "next lint"
   },
   "dependencies": {
-    "@nextui-org/react": "^1.0.1-alpha.34",
+    "@nextui-org/react": "^1.0.1-alpha.36",
     "next": "11.0.0",
     "react": "17.0.2",
     "react-dom": "17.0.2"\n- examples/create-next-app/pages/index.js (modified, 2 changes)\n  Patch: @@ -3,11 +3,11 @@ import Image from 'next/image';
 import styles from '../styles/Home.module.css';
 import {
   Container,
+  Button,
   Input,
   Spacer,
   Text,
   Link,
-  Button,
 } from '@nextui-org/react';
 
 export default function Home() {\n- examples/create-react-app/package.json (modified, 1 changes)\n  Patch: @@ -3,7 +3,6 @@
   "version": "0.1.0",
   "private": true,
   "dependencies": {
-    "@geist-ui/react": "^2.2.0",
     "@nextui-org/react": "^1.0.1-alpha.32",
     "@testing-library/jest-dom": "^5.11.4",
     "@testing-library/react": "^11.1.0",\n- package.json (modified, 1 changes)\n  Patch: @@ -13,6 +13,7 @@
         "dev": "run-p dev:docs sb",
         "dev:docs": "yarn workspace @nextui-org/docs dev",
         "start:docs": "yarn workspace @nextui-org/docs start",
+        "pre-publish:nextui": "yarn workspace @nextui-org/react pre-publish",
         "build:docs": "yarn workspace @nextui-org/docs build",
         "deploy:docs": "yarn workspace @nextui-org/docs deploy",
         "deploy:stage-docs": "yarn workspace @nextui-org/docs deploy:stage",\n- packages/docs/content/docs/guide/getting-started.mdx (modified, 11 changes)\n  Patch: @@ -50,6 +50,15 @@ const Application = () => (
 Once NextUI is installed you can use any of the components as follows:
 
 ```jsx
+// import just the Button rather than the entire library.
+import Button from '@next-ui/react/button';
+
+// or less ideally
 import { Button } from '@next-ui/react';
-const Component = () => <Button>Action</Button>;
+
+const Component = () => <Button>Click me</Button>;
 ```
+
+You should import individual components like: `@next-ui/react/button` rather than the entire library.
+Doing so pulls in only the specific components that you use, which can significantly reduce the amount of code you
+end up sending to the client.\n- packages/docs/package.json (modified, 4 changes)\n  Patch: @@ -1,6 +1,6 @@
 {
   "name": "@nextui-org/docs",
-  "version": "1.0.1-alpha.35",
+  "version": "1.0.1-alpha.40",
   "private": true,
   "scripts": {
     "dev": "next dev",
@@ -14,7 +14,7 @@
   "dependencies": {
     "@mapbox/rehype-prism": "^0.6.0",
     "@mdx-js/react": "^1.6.22",
-    "@nextui-org/react": "^1.0.1-alpha.35",
+    "@nextui-org/react": "^1.0.1-alpha.40",
     "@types/lodash": "^4.14.170",
     "algoliasearch": "^4.10.3",
     "classnames": "^2.3.1",\n- packages/docs/src/components/hero/index.tsx (modified, 8 changes)\n  Patch: @@ -1,15 +1,15 @@
 import React from 'react';
 import {
   useTheme,
+  Container,
   NextUIThemes,
-  Text,
   Row,
   Col,
-  Grid,
-  Link,
+  Text,
   Spacer,
+  Grid,
   Button,
-  Container,
+  Link,
 } from '@nextui-org/react';
 import { ImageBrowser } from '@components';
 import NextLink from 'next/link';\n- packages/nextui/.gitignore (modified, 5 changes)\n  Patch: @@ -15,6 +15,11 @@
 
 # production
 /build
+lib/
+
+# Generated types
+/types
+
 
 # misc
 .DS_Store\n- packages/nextui/README.md (modified, 5 changes)\n  Patch: @@ -53,7 +53,12 @@ const Application = () => (
 3. Using NextUI components: Once NextUI is installed you can use any of the components as follows.
 
 ```jsx
+// import just the Button rather than the entire library.
+import Button from '@next-ui/react/Button';
+
+// or less ideally
 import { Button } from '@next-ui/react';
+
 const Component = () => <Button>Click me</Button>;
 ```
 \n- packages/nextui/buildconfig/babel.config.js (modified, 18 changes)\n  Patch: @@ -4,16 +4,26 @@ module.exports = {
       '@babel/preset-env',
       {
         bugfixes: true,
-        modules: true,
+        modules: false,
+      },
+    ],
+    [
+      '@babel/preset-react',
+      {
+        runtime: 'automatic',
       },
     ],
-    '@babel/preset-react',
     '@babel/preset-typescript',
   ],
   plugins: [
-    'styled-jsx/babel',
+    'babel-plugin-optimize-clsx',
+    ['styled-jsx/babel', { optimizeForSpeed: true }],
     ['@babel/plugin-proposal-object-rest-spread', { loose: true }],
     ['@babel/plugin-transform-runtime', { useESModules: true }],
   ],
-  ignore: [/@babel[\\|/]runtime/],
+  ignore: [
+    /@babel[\\|/]runtime/,
+    /\.stories\.(js|ts|tsx)$/,
+    /\.test\.(js|ts|tsx)$/,
+  ],
 };\n- packages/nextui/buildconfig/tsconfig.json (modified, 1 changes)\n  Patch: @@ -1,6 +1,5 @@
 {
     "compilerOptions": {
-      "outDir": "../dist",
       "baseUrl": "../",
       "noEmit": false,
       "declaration": true,\n- packages/nextui/buildconfig/webpack.common.js (modified, 2 changes)\n  Patch: @@ -6,7 +6,7 @@ module.exports = {
   entry: path.join(sourcePath, 'index.ts'),
   output: {
     filename: '[name].js',
-    path: path.resolve(__dirname, '../dist'),
+    path: path.resolve(__dirname, '../lib/esm'),
     libraryTarget: 'commonjs',
   },
   resolve: {\n- packages/nextui/buildconfig/webpack.config.js (added, 50 changes)\n  Patch: @@ -0,0 +1,50 @@
+module.exports = (distRoot, optimize) => ({
+  mode: 'production',
+  optimization: {
+    minimize: !!optimize,
+  },
+  entry: './src/index.ts',
+  output: {
+    path: distRoot,
+    filename: optimize ? 'nextui.min.js' : 'nextui.js',
+    library: 'NextUI',
+    libraryTarget: 'umd',
+  },
+  module: {
+    rules: [
+      {
+        test: /\.[tj]sx?$/,
+        use: {
+          loader: 'babel-loader',
+          options: {
+            cacheDirectory: true,
+            envName: `dist-${optimize ? 'prod' : 'dev'}`,
+          },
+        },
+      },
+    ],
+  },
+  resolve: {
+    extensions: ['.js', '.jsx', '.ts', '.tsx'],
+  },
+  externals: {
+    react: {
+      root: 'React',
+      commonjs2: 'react',
+      commonjs: 'react',
+      amd: 'react',
+    },
+    'react-dom': {
+      root: 'ReactDOM',
+      commonjs2: 'react-dom',
+      commonjs: 'react-dom',
+      amd: 'react-dom',
+    },
+    'styled-jsx': {
+      root: '_JSXStyle',
+      commonjs2: 'styled-jsx',
+      commonjs: 'styled-jsx',
+      amd: 'styled-jsx',
+    },
+  },
+});\n- packages/nextui/buildconfig/webpack.prod.js (modified, 2 changes)\n  Patch: @@ -11,7 +11,7 @@ module.exports = merge(common, {
   },
   output: {
     filename: '[name].js',
-    path: path.resolve(__dirname, '../dist'),
+    path: path.resolve(__dirname, '../lib/esm'),
     library: 'NextUI',
     libraryTarget: 'umd',
     globalObject: 'this',\n- packages/nextui/jest.config.js (modified, 16 changes)\n  Patch: @@ -2,21 +2,21 @@ module.exports = {
   verbose: true,
   setupFiles: ['./tests/setup.js'],
   moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx'],
-  testPathIgnorePatterns: ['/dist/'],
+  testPathIgnorePatterns: ['/dist/', '/lib/'],
   transform: {
     '^.+\\.tsx?$': ['babel-jest', { configFile: './tests/.babelrc.js' }],
   },
   testRegex: '.*\\.test\\.(j|t)sx?$',
   collectCoverageFrom: [
-    'src/components/**/*.{ts,tsx}',
-    '!src/components/**/styles.{ts,tsx}',
-    '!src/components/**/*stories.{ts,tsx}',
-    '!src/components/**/*types.{ts,tsx}',
-    '!src/components/styles/*',
-    '!src/components/index.ts',
+    'src/**/*.{ts,tsx}',
+    '!src/**/styles.{ts,tsx}',
+    '!src/**/*stories.{ts,tsx}',
+    '!src/**/*types.{ts,tsx}',
+    '!src/styles/*',
+    '!src/index.ts',
   ],
   moduleNameMapper: {
     'tests/(.*)$': '<rootDir>/tests/$1',
-    components: './src/components/index.ts',
+    components: './src/index.ts',
   },
 };\n- packages/nextui/package.json (modified, 65 changes)\n  Patch: @@ -1,9 +1,13 @@
 {
   "name": "@nextui-org/react",
-  "version": "1.0.1-alpha.35",
+  "version": "1.0.1-alpha.40",
   "license": "MIT",
   "description": "🚀 Beautiful and modern React UI library.",
   "homepage": "https://nextui.org",
+  "author": {
+    "name": "Junior Garcia",
+    "email": "jrgarciadev@gmail.com"
+  },
   "bugs": {
     "url": "https://github.com/nextui-org/nextui/issues/new/choose"
   },
@@ -19,23 +23,30 @@
     "react components",
     "react ui"
   ],
-  "types": "dist/index.d.ts",
-  "source": "src/index.ts",
-  "module": "esm/index.js",
-  "unpkg": "dist/index.min.js",
-  "main": "dist/index.js",
+  "files": [
+    "lib",
+    "dist",
+    "es"
+  ],
+  "source": "lib/src/index.ts",
+  "main": "lib/cjs/index.js",
+  "module": "lib/esm/index.js",
+  "unpkg": "lib/umd/nextui.min.js",
+  "types": "lib/esm/index.d.ts",
   "sideEffects": false,
   "scripts": {
-    "clear": "rm -rf ./dist ./esm",
-    "clear:packages": "rm -rf ./dist/packages",
-    "build:types": "tsc -p ./buildconfig",
-    "build:rollup": "rollup -c",
-    "build:webpack": "webpack --config ./buildconfig/webpack.prod.js",
+    "clear": "rimraf ./lib ./dist ./esm",
+    "pre-publish": "node ./scripts/pre-publish.js",
+    "clear:packages": "rimraf ./dist/packages",
+    "build": "node ./scripts/build.js",
+    "build:types": "yarn tsc -p ./buildconfig -d --emitDeclarationOnly --outDir types",
+    "build:dev-types": "tsc -p ./buildconfig -d --emitDeclarationOnly --outDir lib/esm",
+    "build:webpack": "webpack --config ./buildconfig/webpack.common.js",
+    "build:rollup": "yarn clear && yarn rollup -c && yarn build:types",
     "build:watch": "webpack ---config ./buildconfig/webpack.dev.js",
     "build:microbundle": "microbundle build --jsx React.createElement --jsxFragment React.Fragment --tsconfig tsconfig.build.json --strict --globals styled-jsx/style=_JSXStyle,styled-jsx/server=flush",
     "build:microbundle-watch": "microbundle watch --jsx React.createElement --jsxFragment React.Fragment --no-compress --format modern,cjs",
-    "build": "yarn clear && yarn build:webpack && yarn build:types && yarn clear:packages",
-    "watch": "yarn clear && yarn build:types && yarn build:watch",
+    "watch": "yarn clear && yarn build:dev-types && yarn build:watch",
     "storybook": "start-storybook -p 6006 --no-manager-cache",
     "lint": "eslint \"src/**/*.{js,ts,tsx}\"",
     "build-storybook": "build-storybook",
@@ -46,15 +57,19 @@
     "coverage-update": "yarn test-update --coverage",
     "coverage:codecov": "yarn test --coverage && codecov"
   },
-  "files": [
-    "/dist",
-    "/esm"
-  ],
   "dependencies": {
     "styled-jsx": "^3.4.4"
   },
+  "peerDependencies": {
+    "react": ">=16.8.0",
+    "react-dom": ">=16.8.0"
+  },
+  "publishConfig": {
+    "directory": "lib"
+  },
   "devDependencies": {
     "@babel/cli": "^7.14.5",
+    "@babel/plugin-proposal-object-rest-spread": "^7.15.6",
     "@babel/plugin-transform-runtime": "^7.14.5",
     "@babel/preset-env": "^7.14.5",
     "@babel/preset-react": "^7.14.5",
@@ -79,22 +94,30 @@
     "@wojtekmaj/enzyme-adapter-react-17": "^0.6.1",
     "babel-jest": "^26.6.3",
     "babel-plugin-module-resolver": "^4.1.0",
+    "babel-plugin-optimize-clsx": "^2.6.2",
+    "babel-plugin-syntax-dynamic-import": "^6.18.0",
+    "chalk": "^4.1.2",
+    "cherry-pick": "^0.5.0",
     "css-mediaquery": "^0.1.2",
     "enzyme": "^3.11.0",
     "eslint-plugin-import": "^2.23.4",
     "eslint-plugin-react": "^7.24.0",
+    "execa": "^5.1.1",
+    "fs-extra": "^10.0.0",
     "jest": "^26.6.3",
     "microbundle": "^0.13.0",
     "prettier": "^2.3.1",
-    "react": "^17.0.2",
-    "react-dom": "^17.0.2",
-    "rollup": "^2.52.1",
+    "rimraf": "^3.0.2",
+    "rollup": "^2.57.0",
     "rollup-plugin-babel": "^4.4.0",
     "rollup-plugin-local-resolve": "^1.0.7",
+    "rollup-plugin-peer-deps-external": "^2.2.4",
+    "rollup-plugin-terser": "^7.0.2",
     "storybook": "^6.3.7",
     "ts-jest": "^26.5.5",
     "typescript": "^4.3.4",
-    "webpack": "^4.41.6",
+    "webpack": "^5.53.0",
+    "webpack-bundle-analyzer": "^4.4.2",
     "webpack-cli": "^3.3.11",
     "webpack-merge": "^5.8.0"
   }\n- packages/nextui/rollup.config.js (modified, 103 changes)\n  Patch: @@ -1,25 +1,49 @@
 import commonjs from '@rollup/plugin-commonjs';
 import nodeResolve from '@rollup/plugin-node-resolve';
 import localResolve from 'rollup-plugin-local-resolve';
+import peerDepsExternal from 'rollup-plugin-peer-deps-external';
 import babel from 'rollup-plugin-babel';
 import fs from 'fs-extra';
+import { terser } from 'rollup-plugin-terser';
 import path from 'path';
 const componentsPath = path.join(__dirname, 'src');
 const distPath = path.join(__dirname, 'dist');
+import pkg from './package.json';
 
 const extensions = ['.js', '.jsx', '.ts', '.tsx'];
 
+// Excluded dependencies - dev dependencies
+const external = Object.keys(pkg.devDependencies);
+
 const plugins = [
   babel({
     exclude: 'node_modules/**',
     extensions,
+    runtimeHelpers: true,
     presets: [
-      '@babel/preset-env',
-      '@babel/preset-react',
+      ['@babel/preset-env'],
+      [
+        '@babel/preset-react',
+        {
+          runtime: 'automatic',
+        },
+      ],
       '@babel/preset-typescript',
     ],
-    plugins: ['styled-jsx/babel'],
+    plugins: [
+      'babel-plugin-optimize-clsx',
+      ['styled-jsx/babel', { optimizeForSpeed: true }],
+      ['@babel/plugin-proposal-object-rest-spread', { loose: true }],
+      ['@babel/plugin-transform-runtime', { useESModules: true }],
+    ],
+    ignore: [
+      /@babel[\\|/]runtime/,
+      /__tests__\.(js|ts|tsx)$/,
+      /\.stories\.(js|ts|tsx)$/,
+    ],
   }),
+  //   terser(),
+  peerDepsExternal(),
   localResolve(),
   nodeResolve({
     browser: true,
@@ -34,15 +58,7 @@ const globals = {
   'react-dom': 'ReactDOM',
 };
 
-const external = (id) => /^react|react-dom|styled-jsx|next\/link/.test(id);
-
-const cjsOutput = {
-  format: 'cjs',
-  exports: 'named',
-  entryFileNames: '[name]/index.js',
-  dir: 'dist',
-  globals,
-};
+// const external = (id) => /^react|react-dom|styled-jsx|next\/link/.test(id);
 
 export default (async () => {
   await fs.remove(distPath);
@@ -62,42 +78,51 @@ export default (async () => {
       return { name, url: entry };
     })
   );
-
-  const makeConfig = (name, url) => ({
-    input: { [name]: url },
-    output: [
-      {
-        // file: 'dist/index.js',
-        format: 'cjs',
-        exports: 'named',
-        entryFileNames: '[name]/index.js',
-        dir: 'dist',
-        globals,
-      },
-    ],
-    external,
-    plugins,
-  });
+  const componentsEntries = components
+    .filter((r) => r)
+    .reduce((pre, current) => {
+      return Object.assign({}, pre, { [current.name]: current.url });
+    }, {});
 
   return [
-    ...components
-      .filter((r) => r)
-      .map(({ name, url }) => ({
-        input: { [name]: url },
-        output: [cjsOutput],
-        external,
-        plugins,
-      })),
     {
-      input: { index: path.join(componentsPath, 'index.ts') },
+      external,
+      plugins,
+      input: {
+        index: 'src/index.ts',
+        ...componentsEntries,
+      },
       output: [
         {
-          ...cjsOutput,
-          entryFileNames: 'index.js',
+          format: 'esm',
+          exports: 'named',
+          dir: 'esm',
+          entryFileNames: '[name]/index.js',
+          globals,
+        },
+        {
+          format: 'es',
+          exports: 'named',
+          dir: 'dist',
+          entryFileNames: '[name]/index.js',
+          globals,
         },
       ],
+      experimentalOptimizeChunks: true,
+      optimizeChunks: true,
+    },
+    {
       external,
       plugins,
+      input: 'src/index.ts',
+      output: {
+        globals,
+        file: pkg.browser,
+        format: 'umd',
+        exports: 'named',
+        name: 'NextUI',
+        esModule: false,
+      },
     },
   ];
 })();\n- packages/nextui/scripts/build.js (added, 104 changes)\n  Patch: @@ -0,0 +1,104 @@
+const { green, red } = require('chalk');
+const webpack = require('webpack');
+
+const path = require('path');
+const fse = require('fs-extra');
+
+const cherryPick = require('./cherry-pick').default;
+const getConfig = require('../buildconfig/webpack.config');
+const setupPackage = require('./setup-package');
+
+const targets = process.argv.slice(2);
+
+const srcRoot = path.join(__dirname, '../src');
+const typesRoot = path.join(__dirname, '../types');
+const buildConfRoot = path.join(__dirname, '../buildconfig');
+
+const libRoot = path.join(__dirname, '../lib');
+const umdRoot = path.join(libRoot, 'umd');
+const cjsRoot = path.join(libRoot, 'cjs');
+const esRoot = path.join(libRoot, 'esm');
+
+const step = require('./utils').step;
+const shell = require('./utils').shell;
+const error = require('./utils').error;
+
+const clean = () => fse.existsSync(libRoot) && fse.removeSync(libRoot);
+
+const has = (t) => !targets.length || targets.includes(t);
+
+const buildTypes = step('generating .d.ts', () => shell(`yarn build:types`));
+
+const copyTypes = (dest) => fse.copySync(typesRoot, dest, { overwrite: true });
+
+const babel = (outDir, envName) =>
+  shell(
+    `yarn babel ${srcRoot} --config-file ${buildConfRoot}/babel.config.js -x .js,.jsx,.ts,.tsx --out-dir ${outDir} --env-name "${envName}"`
+  );
+
+/**
+ * Run babel over the src directory and output
+ * compiled common js files to ./lib.
+ */
+const buildLib = step('commonjs modules', async () => {
+  await babel(cjsRoot, 'cjs');
+  await copyTypes(cjsRoot);
+});
+
+/**
+ * Run babel over the src directory and output
+ * compiled es modules (but otherwise es5) to /es
+ */
+const buildEsm = step('es modules', async () => {
+  await babel(esRoot, 'esm');
+  await copyTypes(esRoot);
+});
+
+/**
+ * Bundles a minified and unminified version of nextui including
+ * all it's immediate dependencies (excluding React, ReactDOM, etc)
+ */
+const buildUmd = step(
+  'browser distributable',
+  () =>
+    new Promise((resolve, reject) => {
+      webpack(
+        [getConfig(umdRoot, false), getConfig(umdRoot, true)],
+        async (err, stats) => {
+          if (err || stats.hasErrors()) {
+            reject(err || stats.toJson().errors);
+            return;
+          }
+
+          resolve();
+        }
+      );
+    })
+);
+
+const buildDirectories = step('Linking directories', () =>
+  cherryPick({
+    inputDir: '../src/**',
+    cjsDir: 'cjs',
+    esmDir: 'esm',
+    cwd: libRoot,
+  })
+);
+
+console.log(
+  green(`Building targets: ${targets.length ? targets.join(', ') : 'all'}\n`)
+);
+
+clean();
+
+Promise.resolve(true)
+  .then(buildTypes)
+  .then(() =>
+    Promise.all([
+      has('lib') && buildLib(),
+      has('es') && buildEsm(),
+      has('umd') && buildUmd(),
+    ])
+  )
+  .then(buildDirectories)
+  .catch(error);\n- packages/nextui/scripts/cherry-pick.js (added, 134 changes)\n  Patch: @@ -0,0 +1,134 @@
+const fs = require('fs');
+const path = require('path');
+const { promisify } = require('util');
+const glob = require('tiny-glob');
+const readPkgUp = require('read-pkg-up');
+
+const mkDir = promisify(fs.mkdir);
+const rimraf = promisify(require('rimraf'));
+const stat = promisify(fs.stat);
+const writeFile = promisify(fs.writeFile);
+
+const isFile = (path) =>
+  stat(path)
+    .then((stats) => stats.isFile())
+    .catch(() => false);
+
+const withDefaults = (
+  { cwd = '.', ...options } = {},
+  additionalDefaults = {}
+) => ({
+  inputDir: 'src',
+  cwd: path.resolve(process.cwd(), cwd),
+  ...additionalDefaults,
+  ...options,
+});
+
+const noop = () => {};
+
+// get all folder name from a directory
+const getFoldersFromDir = async (cwd, dir) => {
+  const files = await glob(`${dir}/*`, { cwd });
+  const folders = files
+    .filter((file) => file.indexOf('.') === -1)
+    .map((file) => file.replace(`${dir}/`, ''));
+  return folders;
+};
+
+const findFiles = async ({ cwd, inputDir, esmDir }) => {
+  const filePaths = await glob(
+    path.join(inputDir, '!(index).{js,jsx,ts,tsx}'),
+    { cwd }
+  );
+
+  const componentsFolders = await getFoldersFromDir(cwd, esmDir);
+
+  const files = filePaths
+    .filter((f) => !f.endsWith('.d.ts'))
+    .filter((f) => !f.endsWith('.test.ts'))
+    .filter((f) => !f.endsWith('.test.tsx'))
+    .filter((f) => !f.endsWith('.stories.ts'))
+    .filter((f) => !f.endsWith('.stories.tsx'))
+    .map((filePath) => path.basename(filePath).replace(/\.(js|ts)x?$/, ''));
+  return files.filter((file) => componentsFolders.includes(file));
+};
+
+const pkgCache = new WeakMap();
+
+const getPkgName = async (options) => {
+  if (options.name != null) {
+    return options.name;
+  }
+  if (pkgCache.has(options)) {
+    return pkgCache.get(options);
+  }
+  const result = await readPkgUp({ cwd: options.cwd });
+  if (!result) {
+    throw new Error(
+      'Could not determine package name. No `name` option was passed and no package.json was found relative to: ' +
+        options.cwd
+    );
+  }
+  const pkgName = result.packageJson.name;
+  pkgCache.set(options, pkgName);
+  return pkgName;
+};
+
+const fileProxy = async (options, file) => {
+  const { cwd, cjsDir, esmDir, typesDir } = options;
+  //   const pkgName = await getPkgName(options);
+
+  const proxyPkg = {
+    // name: `${pkgName}/${file}`,
+    private: true,
+    sideEffects: false,
+    main: path.join('..', cjsDir, `${file}/index.js`),
+    module: path.join('..', esmDir, `${file}/index.js`),
+    types: path.join('..', esmDir, `${file}/index.d.ts`),
+  };
+
+  if (typeof typesDir === 'string') {
+    proxyPkg.types = path.join('..', typesDir, `${file}.d.ts`);
+  } else if (await isFile(path.join(cwd, `${file}.d.ts`))) {
+    proxyPkg.types = path.join('..', `${file}.d.ts`);
+    // try the esm path in case types are located with each
+  } else if (await isFile(path.join(cwd, esmDir, `${file}.d.ts`))) {
+    proxyPkg.types = path.join('..', esmDir, `${file}.d.ts`);
+  }
+
+  return JSON.stringify(proxyPkg, null, 2) + '\n';
+};
+
+const cherryPick = async (inputOptions) => {
+  const options = withDefaults(inputOptions, {
+    cjsDir: 'lib',
+    esmDir: 'es',
+  });
+
+  const files = await findFiles(options);
+
+  await Promise.all(
+    files.map(async (file) => {
+      const proxyDir = path.join(options.cwd, file);
+      await mkDir(proxyDir).catch(noop);
+      await writeFile(
+        `${proxyDir}/package.json`,
+        await fileProxy(options, file)
+      );
+    })
+  );
+
+  return files;
+};
+
+const clean = async (inputOptions) => {
+  const options = withDefaults(inputOptions);
+  const files = await findFiles(options);
+  await Promise.all(
+    files.map(async (file) => rimraf(path.join(options.cwd, file)))
+  );
+  return files;
+};
+
+module.exports.default = cherryPick;
+module.exports.clean = clean;\n- packages/nextui/scripts/pre-publish.js (added, 17 changes)\n  Patch: @@ -0,0 +1,17 @@
+const setupPackage = require('./setup-package');
+
+const shell = require('./utils').shell;
+const step = require('./utils').step;
+const error = require('./utils').error;
+
+const buildPkg = step('building...', () => shell(`yarn build`));
+
+Promise.resolve(true)
+  .then(setupPackage)
+  .then(
+    Promise.all([buildPkg()]).then(() => {
+      console.log(process.cwd());
+      //   shell('pwd');
+    })
+  )
+  .catch(error);\n- packages/nextui/scripts/setup-package.js (added, 34 changes)\n  Patch: @@ -0,0 +1,34 @@
+const fs = require('fs-extra');
+const path = require('path');
+const libRoot = path.join(__dirname, '../lib');
+
+function main() {
+  const source = fs
+    .readFileSync(__dirname + '/../package.json')
+    .toString('utf-8');
+  const sourceObj = JSON.parse(source);
+  sourceObj.scripts = {};
+  sourceObj.devDependencies = {};
+
+  if (sourceObj.main.startsWith('lib/')) {
+    sourceObj.main = sourceObj.main.replace('lib/', '');
+  }
+  if (sourceObj.module.startsWith('lib/')) {
+    sourceObj.module = sourceObj.module.replace('lib/', '');
+  }
+  if (sourceObj.unpkg.startsWith('lib/')) {
+    sourceObj.unpkg = sourceObj.unpkg.replace('lib/', '');
+  }
+  if (sourceObj.types.startsWith('lib/')) {
+    sourceObj.types = sourceObj.types.replace('lib/', '');
+  }
+  if (sourceObj.publishConfig) {
+    delete sourceObj.publishConfig;
+  }
+  fs.writeFileSync(
+    libRoot + '/package.json',
+    Buffer.from(JSON.stringify(sourceObj, null, 2), 'utf-8')
+  );
+}
+
+module.exports = main;\n- packages/nextui/scripts/utils.js (added, 21 changes)\n  Patch: @@ -0,0 +1,21 @@
+const { green, cyan, red } = require('chalk');
+const execa = require('execa');
+
+const step = (name, fn) => async () => {
+  console.log(cyan('Building: ') + green(name));
+  await fn();
+  console.log(cyan('Built: ') + green(name));
+};
+
+const shell = (cmd) =>
+  execa(cmd, { stdio: ['pipe', 'pipe', 'inherit'], shell: true });
+
+const error = (err) => {
+  if (err && Array.isArray(err))
+    console.log(red(err.map((e) => e.message).join('\n')));
+  if (err && typeof err === 'object')
+    console.error(red(err.stack || err.toString()));
+  process.exit(1);
+};
+
+module.exports = { step, shell, error };\n- packages/nextui/src/avatar/__tests__/__snapshots__/group.test.tsx.snap (renamed)\n  Previous Filename: packages/nextui/src/components/avatar/__tests__/__snapshots__/group.test.tsx.snap\n- packages/nextui/src/avatar/__tests__/__snapshots__/index.test.tsx.snap (renamed)\n  Previous Filename: packages/nextui/src/components/avatar/__tests__/__snapshots__/index.test.tsx.snap\n- packages/nextui/src/avatar/__tests__/group.test.tsx (renamed)\n  Previous Filename: packages/nextui/src/components/avatar/__tests__/group.test.tsx\n- packages/nextui/src/avatar/__tests__/index.test.tsx (renamed)\n  Previous Filename: packages/nextui/src/components/avatar/__tests__/index.test.tsx\n- packages/nextui/src/avatar/avatar-group.tsx (renamed)\n  Previous Filename: packages/nextui/src/components/avatar/avatar-group.tsx\n- packages/nextui/src/avatar/avatar.stories.tsx (renamed)\n  Previous Filename: packages/nextui/src/components/avatar/avatar.stories.tsx\n- packages/nextui/src/avatar/avatar.tsx (renamed)\n  Previous Filename: packages/nextui/src/components/avatar/avatar.tsx\n
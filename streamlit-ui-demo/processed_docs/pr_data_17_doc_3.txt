Pull Request Number: 2202
Title: feat: added drawer component
Base Branch: main
Head Branch: feat/drawer
Author: 1111mp
URL: https://github.com/nextui-org/nextui/pull/2202
State: CLOSED
Created At: 2024-01-03T09:03:38Z
Merged At: None
Participants: 1111mp, jrgarciadev

Description:
üìù Description
Added Drawer component.
Learned about some user feature requests from #2134 [Feature Request] Some Components Feature Suggestions, so I started to implement them from the simplest components (Because it can almost reuse Modal‚Äôs design and code).
‚õ≥Ô∏è Current behavior (updates)
There is currently no support for the Drawer component.
üöÄ New behavior
We can have the Drawer component.
üí£ Is this a breaking change (Yes/No):
No. Supports the new Drawer component, which will not have any impact on other components.
üìù Additional Information

There is currently some work yet to be completed, such as Drawer documentation and usage examples. Because I don‚Äôt know whether such code complies with the specifications of the warehouse, I initiated a PR in advance to confirm this. If all goes well I will continue with the rest of the work.
Feel free to point out my questions at any time. Of course, if you already have Drawer-related implementation plans or other questions, please let me know and I will close this PR. Thank you.

I have read the contributing guidelines and code of conduct document.

Commits:
- feat: added drawer component

Signed-off-by: The1111mp <The1111mp@outlook.com>\n- feat(docs): drawer docs added

Signed-off-by: The1111mp <The1111mp@outlook.com>\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: d6cc47f93bc81572fbd02c8aa87d5ec40ecbb38c

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 3 packages</summary>

  | Name               | Type  |
| ------------------ | ----- |
| @nextui-org/drawer | Major |
| @nextui-org/theme  | Minor |
| @nextui-org/react  | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/1111mp/nextui/new/feat/drawer?filename=.changeset/khaki-turkeys-exist.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Fdrawer%22%3A%20patch%0A%22%40nextui-org%2Ftheme%22%3A%20patch%0A---%0A%0Afeat%3A%20added%20drawer%20component%0A)

\n- vercel: @1111mp is attempting to deploy a commit to the **NextUI** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%22740681a94769ff2e62f23d940e0d7ddbb59347ea%22%7D%2C%22id%22%3A%22QmZqdXV67EruSsHyKP5gJpVoSCkogpxU4e6rqXR1jdRngo%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A2202%2C%22repo%22%3A%22nextui%22%7D).

\n- vercel: [vc]: #r7tW2khhma+DGJP8JWl0jLZaT0vbwULKVuyg+HdqwcY=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvMmsyY25KbzFoYnZ3N2JHV2pLcEtCa0tNSGtIeiIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLTExMTFtcC1mZWF0LWRyYXdlci1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZm9yay0xMTExbXAtZmVhdC1kcmF3ZXItbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/2k2cnJo1hbvw7bGWjKpKBkKMHkHz)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-1111mp-feat-drawer-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-1111mp-feat-drawer-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jan 4, 2024 0:43am |

\n- jrgarciadev: Hey @1111mp, thank you so much for your contribution! üöÄ. I suggest using the Modal component as the base component, given that the Drawer logic and structure are basically the same. We would primarily need to adjust the `motionProps` and introduce modifications to the `size` and `placement` variants.\n- 1111mp: @jrgarciadev I understand what you mean, and it should be so. Or this way, there is no need to develop additional Drawer components, but just add a Drawer example based on the Modal component.

I completed the following code locally and it also works well:
```typescript
import {
  Modal,
  ModalContent,
  ModalHeader,
  ModalBody,
  ModalFooter,
  ModalProps,
  useDisclosure,
} from "@nextui-org/react";

type DrawerProps = Omit<ModalProps, "placement" | "scrollBehavior"> & {
  placement?: "top" | "right" | "bottom" | "left";
  scrollBehavior?: "inside" | "outside";
};

const Drawer: React.FC<DrawerProps> = ({
  placement = "right",
  scrollBehavior = "inside",
  size = "md",
  motionProps: drawerMotionProps,
  ...props
}) => {
  const {isOpen, onOpen, onOpenChange} = useDisclosure({defaultOpen: false});

  const motionProps = React.useMemo(() => {
    if (drawerMotionProps !== void 0) return drawerMotionProps;

    const key = placement === "left" || placement === "right" ? "x" : "y";

    return {
      variants: {
        enter: {
          [key]: 0,
          transition: {
            [key]: {
              bounce: 0,
              duration: 0.3,
              ease: TRANSITION_EASINGS.ease,
            },
          },
        },
        exit: {
          [key]: placement === "top" || placement === "left" ? "-100%" : "100%",
          transition: {
            [key]: {
              bounce: 0,
              duration: 0.3,
              ease: TRANSITION_EASINGS.ease,
            },
          },
        },
      },
    };
  }, [placement, drawerMotionProps]);

  const base = useMemo(() => {
    const sizeSource = {
      xs: "max-h-[20rem]",
      sm: "max-h-[24rem]",
      md: "max-h-[28rem]",
      lg: "max-h-[32rem]",
      xl: "max-h-[36rem]",
      "2xl": "max-h-[42rem]",
      "3xl": "max-h-[48rem]",
      "4xl": "max-h-[56rem]",
      "5xl": "max-h-[64rem]",
      full: "max-h-full",
    };
    switch (placement) {
      case "right": {
        return `absolute inset-y-0 right-0 m-0 sm:m-0 max-h-[none] overflow-y-auto rounded-r-none`;
      }
      case "left": {
        return `absolute inset-y-0 left-0 m-0 sm:m-0 max-h-[none] overflow-y-auto rounded-l-none`;
      }
      case "top": {
        return `absolute inset-x-0 top-0 m-0 sm:m-0 max-w-[none] ${sizeSource[size]} overflow-y-auto rounded-t-none`;
      }
      case "bottom": {
        return `absolute inset-x-0 bottom-0 m-0 sm:m-0 max-w-[none] ${sizeSource[size]} overflow-y-auto rounded-b-none`;
      }
    }
  }, [placement, size]);

  return (
    <>
      <Button onPress={onOpen}>Open Modal</Button>
      <Modal
        isOpen={isOpen}
        onOpenChange={onOpenChange}
        {...props}
        size={size}
        scrollBehavior={scrollBehavior}
        classNames={{
          base: base,
        }}
        motionProps={motionProps}
      >
        <ModalContent>
          {(onClose) => (
            <>
              <ModalHeader className="flex flex-col gap-1">Log in</ModalHeader>
              <ModalBody>
                <p>
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam pulvinar risus non
                  risus hendrerit venenatis. Pellentesque sit amet hendrerit risus, sed porttitor
                  quam.
                </p>
                <p>
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam pulvinar risus non
                  risus hendrerit venenatis. Pellentesque sit amet hendrerit risus, sed porttitor
                  quam.
                </p>
                <p>
                  Magna exercitation reprehenderit magna aute tempor cupidatat consequat elit dolor
                  adipisicing. Mollit dolor eiusmod sunt ex incididunt cillum quis. Velit duis sit
                  officia eiusmod Lorem aliqua enim laboris do dolor eiusmod. Et mollit incididunt
                  nisi consectetur esse laborum eiusmod pariatur proident Lorem eiusmod et. Culpa
                  deserunt nostrud ad veniam.
                </p>
                <p>
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam pulvinar risus non
                  risus hendrerit venenatis. Pellentesque sit amet hendrerit risus, sed porttitor
                  quam. Magna exercitation reprehenderit magna aute tempor cupidatat consequat elit
                  dolor adipisicing. Mollit dolor eiusmod sunt ex incididunt cillum quis. Velit duis
                  sit officia eiusmod Lorem aliqua enim laboris do dolor eiusmod. Et mollit
                  incididunt nisi consectetur esse laborum eiusmod pariatur proident Lorem eiusmod
                  et. Culpa deserunt nostrud ad veniam.
                </p>
                <p>
                  Mollit dolor eiusmod sunt ex incididunt cillum quis. Velit duis sit officia
                  eiusmod Lorem aliqua enim laboris do dolor eiusmod. Et mollit incididunt nisi
                  consectetur esse laborum eiusmod pariatur proident Lorem eiusmod et. Culpa
                  deserunt nostrud ad veniam. Lorem ipsum dolor sit amet, consectetur adipiscing
                  elit. Nullam pulvinar risus non risus hendrerit venenatis. Pellentesque sit amet
                  hendrerit risus, sed porttitor quam. Magna exercitation reprehenderit magna aute
                  tempor cupidatat consequat elit dolor adipisicing. Mollit dolor eiusmod sunt ex
                  incididunt cillum quis. Velit duis sit officia eiusmod Lorem aliqua enim laboris
                  do dolor eiusmod. Et mollit incididunt nisi consectetur esse laborum eiusmod
                  pariatur proident Lorem eiusmod et. Culpa deserunt nostrud ad veniam.
                </p>
                <p>
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam pulvinar risus non
                  risus hendrerit venenatis. Pellentesque sit amet hendrerit risus, sed porttitor
                  quam.
                </p>
                <p>
                  Magna exercitation reprehenderit magna aute tempor cupidatat consequat elit dolor
                  adipisicing. Mollit dolor eiusmod sunt ex incididunt cillum quis. Velit duis sit
                  officia eiusmod Lorem aliqua enim laboris do dolor eiusmod. Et mollit incididunt
                  nisi consectetur esse laborum eiusmod pariatur proident Lorem eiusmod et. Culpa
                  deserunt nostrud ad veniam.
                </p>
                <p>
                  Mollit dolor eiusmod sunt ex incididunt cillum quis. Velit duis sit officia
                  eiusmod Lorem aliqua enim laboris do dolor eiusmod. Et mollit incididunt nisi
                  consectetur esse laborum eiusmod pariatur proident Lorem eiusmod et. Culpa
                  deserunt nostrud ad veniam. Lorem ipsum dolor sit amet, consectetur adipiscing
                  elit. Nullam pulvinar risus non risus hendrerit venenatis. Pellentesque sit amet
                  hendrerit risus, sed porttitor quam. Magna exercitation reprehenderit magna aute
                  tempor cupidatat consequat elit dolor adipisicing. Mollit dolor eiusmod sunt ex
                  incididunt cillum quis. Velit duis sit officia eiusmod Lorem aliqua enim laboris
                  do dolor eiusmod. Et mollit incididunt nisi consectetur esse laborum eiusmod
                  pariatur proident Lorem eiusmod et. Culpa deserunt nostrud ad veniam.
                </p>
              </ModalBody>
              <ModalFooter>
                <Button color="danger" variant="flat" onPress={onClose}>
                  Close
                </Button>
                <Button color="primary" onPress={onClose}>
                  Sign in
                </Button>
              </ModalFooter>
            </>
          )}
        </ModalContent>
      </Modal>
    </>
  );
};

// usage in storybook
export const Default = {
  render: Drawer,

  args: {
    // ...defaultProps,
    // size: "full",
    placement: "top",
    scrollBehavior: "outside",
  },
};
```

Just need to do some class style coverage for the Drawer use case. 

So should the final solution be to add a Drawer usage example to Modal's documentation?\n- jrgarciadev: Nice you could tested it, the final solution should be creating the Drawer component structure by based on the Modal, you'll
Need to put the drawer styles inside the theme folder to allow tailwindcss recognize the styles correctly\n- 1111mp: I ended up doing the following:

- created `packages/components/modal/drawer.tsx`
```typescript
import {ReactNode, useMemo} from "react";
import {forwardRef} from "@nextui-org/system";

import {UseModalProps} from "./use-modal";
import Modal from "./modal";
import {TRANSITION_EASINGS} from "@nextui-org/framer-transitions";
import {drawer} from "@nextui-org/theme";
import {clsx} from "@nextui-org/shared-utils";

export type DrawerProps = Omit<UseModalProps, "placement" | "scrollBehavior"> & {
  /**
   * The content of the modal. Usually the ModalContent
   */
  children: ReactNode;
  placement?: "top" | "right" | "bottom" | "left";
  scrollBehavior?: "inside" | "outside";
};

const Drawer = forwardRef<"div", DrawerProps>(
  (
    {
      className,
      classNames,
      placement = "right",
      scrollBehavior = "inside",
      size = "md",
      motionProps: drawerMotionProps,
      children,
      ...props
    },
    ref,
  ) => {
    const motionProps = useMemo(() => {
      if (drawerMotionProps !== void 0) return drawerMotionProps;

      const key = placement === "left" || placement === "right" ? "x" : "y";

      return {
        variants: {
          enter: {
            [key]: 0,
            transition: {
              [key]: {
                bounce: 0,
                duration: 0.3,
                ease: TRANSITION_EASINGS.ease,
              },
            },
          },
          exit: {
            [key]: placement === "top" || placement === "left" ? "-100%" : "100%",
            transition: {
              [key]: {
                bounce: 0,
                duration: 0.3,
                ease: TRANSITION_EASINGS.ease,
              },
            },
          },
        },
      };
    }, [placement, drawerMotionProps]);

    const baseStyles = clsx(classNames?.base, className);

    const slots = useMemo(
      () =>
        drawer({
          size,
          placement,
        }),
      [size, placement],
    );

    const base = slots.base({class: clsx(baseStyles, {})});

    console.log(base);

    return (
      <Modal
        ref={ref}
        {...props}
        size={size}
        scrollBehavior={scrollBehavior}
        classNames={{
          ...classNames,
          base: base,
        }}
        motionProps={motionProps}
      >
        {children}
      </Modal>
    );
  },
);

Drawer.displayName = "NextUI.Drawer";

export default Drawer;
```
- `packages/components/modal/index.ts`
```typescript
// ...
import Drawer from "./drawer";

// ...

// add export Drawer
export {Modal, Drawer, ModalContent, ModalHeader, ModalBody, ModalFooter};
```
- drawer styles `@nextui-org/theme/components/modal.ts`
```typescript
// .....

const drawer = tv({
  slots: {
    base: ["absolute", "m-0", "sm:m-0", "overflow-y-auto"],
  },
  variants: {
    size: {
      xs: {
        base: "max-w-xs max-h-[20rem]",
      },
      sm: {
        base: "max-w-sm max-h-[24rem]",
      },
      md: {
        base: "max-w-md max-h-[28rem]",
      },
      lg: {
        base: "max-w-lg max-h-[32rem]",
      },
      xl: {
        base: "max-w-xl max-h-[36rem]",
      },
      "2xl": {
        base: "max-w-2xl max-h-[42rem]",
      },
      "3xl": {
        base: "max-w-3xl max-h-[48rem]",
      },
      "4xl": {
        base: "max-w-4xl max-h-[56rem]",
      },
      "5xl": {
        base: "max-w-5xl max-h-[64rem]",
      },
      full: {
        base: "max-w-full max-h-full h-[100dvh] !rounded-none",
      },
    },
    placement: {
      top: {
        base: "inset-x-0 top-0 max-w-[none] rounded-t-none",
      },
      right: {
        base: "inset-y-0 right-0 max-h-[none] rounded-r-none",
      },
      bottom: {
        base: "inset-x-0 bottom-0 max-w-[none] rounded-b-none",
      },
      left: {
        base: "inset-y-0 left-0 max-h-[none] rounded-l-none",
      },
    },
  },
});

// ...

export {modal, drawer};
```

This is all the code of the Drawer component.

Usage:
```typescript
import {
  Modal,
  Drawer,
  ModalContent,
  ModalHeader,
  ModalBody,
  ModalFooter,
  ModalProps,
  useDisclosure,
} from "@nextui-org/modal";

const App = () => {
  const {isOpen, onOpen, onOpenChange} = useDisclosure({defaultOpen: false});

  return (
    <>
      <Button onPress={onOpen}>Open Modal</Button>
      <Drawer
        isOpen={isOpen}
        onOpenChange={onOpenChange}
        scrollBehavior="inside"
        size="lg"
        placement="right"
        // classNames={{
        //   base: "w-[378px]",
        // }}
      >
        <ModalContent>
          {(onClose) => (
            <>
              <ModalHeader className="flex flex-col gap-1">Log in</ModalHeader>
              <ModalBody>
                <p>
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam pulvinar risus non
                  risus hendrerit venenatis. Pellentesque sit amet hendrerit risus, sed porttitor
                  quam.
                </p>
                <p>
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam pulvinar risus non
                  risus hendrerit venenatis. Pellentesque sit amet hendrerit risus, sed porttitor
                  quam.
                </p>
                <p>
                  Magna exercitation reprehenderit magna aute tempor cupidatat consequat elit dolor
                  adipisicing. Mollit dolor eiusmod sunt ex incididunt cillum quis. Velit duis sit
                  officia eiusmod Lorem aliqua enim laboris do dolor eiusmod. Et mollit incididunt
                  nisi consectetur esse laborum eiusmod pariatur proident Lorem eiusmod et. Culpa
                  deserunt nostrud ad veniam.
                </p>
                <p>
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam pulvinar risus non
                  risus hendrerit venenatis. Pellentesque sit amet hendrerit risus, sed porttitor
                  quam. Magna exercitation reprehenderit magna aute tempor cupidatat consequat elit
                  dolor adipisicing. Mollit dolor eiusmod sunt ex incididunt cillum quis. Velit duis
                  sit officia eiusmod Lorem aliqua enim laboris do dolor eiusmod. Et mollit
                  incididunt nisi consectetur esse laborum eiusmod pariatur proident Lorem eiusmod
                  et. Culpa deserunt nostrud ad veniam.
                </p>
                <p>
                  Mollit dolor eiusmod sunt ex incididunt cillum quis. Velit duis sit officia
                  eiusmod Lorem aliqua enim laboris do dolor eiusmod. Et mollit incididunt nisi
                  consectetur esse laborum eiusmod pariatur proident Lorem eiusmod et. Culpa
                  deserunt nostrud ad veniam. Lorem ipsum dolor sit amet, consectetur adipiscing
                  elit. Nullam pulvinar risus non risus hendrerit venenatis. Pellentesque sit amet
                  hendrerit risus, sed porttitor quam. Magna exercitation reprehenderit magna aute
                  tempor cupidatat consequat elit dolor adipisicing. Mollit dolor eiusmod sunt ex
                  incididunt cillum quis. Velit duis sit officia eiusmod Lorem aliqua enim laboris
                  do dolor eiusmod. Et mollit incididunt nisi consectetur esse laborum eiusmod
                  pariatur proident Lorem eiusmod et. Culpa deserunt nostrud ad veniam.
                </p>
                <p>
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam pulvinar risus non
                  risus hendrerit venenatis. Pellentesque sit amet hendrerit risus, sed porttitor
                  quam.
                </p>
                <p>
                  Magna exercitation reprehenderit magna aute tempor cupidatat consequat elit dolor
                  adipisicing. Mollit dolor eiusmod sunt ex incididunt cillum quis. Velit duis sit
                  officia eiusmod Lorem aliqua enim laboris do dolor eiusmod. Et mollit incididunt
                  nisi consectetur esse laborum eiusmod pariatur proident Lorem eiusmod et. Culpa
                  deserunt nostrud ad veniam.
                </p>
                <p>
                  Mollit dolor eiusmod sunt ex incididunt cillum quis. Velit duis sit officia
                  eiusmod Lorem aliqua enim laboris do dolor eiusmod. Et mollit incididunt nisi
                  consectetur esse laborum eiusmod pariatur proident Lorem eiusmod et. Culpa
                  deserunt nostrud ad veniam. Lorem ipsum dolor sit amet, consectetur adipiscing
                  elit. Nullam pulvinar risus non risus hendrerit venenatis. Pellentesque sit amet
                  hendrerit risus, sed porttitor quam. Magna exercitation reprehenderit magna aute
                  tempor cupidatat consequat elit dolor adipisicing. Mollit dolor eiusmod sunt ex
                  incididunt cillum quis. Velit duis sit officia eiusmod Lorem aliqua enim laboris
                  do dolor eiusmod. Et mollit incididunt nisi consectetur esse laborum eiusmod
                  pariatur proident Lorem eiusmod et. Culpa deserunt nostrud ad veniam.
                </p>
              </ModalBody>
              <ModalFooter>
                <Button color="danger" variant="flat" onPress={onClose}>
                  Close
                </Button>
                <Button color="primary" onPress={onClose}>
                  Sign in
                </Button>
              </ModalFooter>
            </>
          )}
        </ModalContent>
      </Drawer>
    </>
  );
};
```

I tested it locally and it works fine. I don't know if this way of supporting Drawer components meets your expectations. Please feel free to let me know if you have any questions.\n- jrgarciadev: Hey @1111mp why did you close this?, I'm still reviewing your suggestion, you're on the right track \n- 1111mp: I'm very sorry that I didn't reply in time. I've rearranged the code locally and added a `UseAsDrawer` story to the storybook.

But I found that previous commit records may pollute the main branch in the future, so I decided to reopen a [PR #2223](https://github.com/nextui-org/nextui/pull/2223). Please understand. This way you can quickly synchronize your code and perform testing and evaluation.

\n

Files Changed:
- .changeset/light-drinks-agree.md (added, 6 changes)\n  Patch: @@ -0,0 +1,6 @@
+---
+"@nextui-org/drawer": major
+"@nextui-org/theme": minor
+---
+
+Added Drawer component\n- apps/docs/config/routes.json (modified, 7 changes)\n  Patch: @@ -205,6 +205,13 @@
           "keywords": "divider, boundary, separator, section divider",
           "path": "/docs/components/divider.mdx"
         },
+        {
+          "key": "drawer",
+          "title": "Drawer",
+          "keywords": "drawer, dialog box, popup, overlay, content focus",
+          "path": "/docs/components/drawer.mdx",
+          "newPost": true
+        },
         {
           "key": "dropdown",
           "title": "Dropdown",\n- apps/docs/content/components/drawer/backdrop.ts (added, 75 changes)\n  Patch: @@ -0,0 +1,75 @@
+const App = `import {Drawer, DrawerContent, DrawerHeader, DrawerBody, DrawerFooter, Button, useDisclosure} from "@nextui-org/react";
+
+export default function App() {
+  const {isOpen, onOpen, onClose} = useDisclosure();
+  const [backdrop, setBackdrop] = React.useState('opaque')
+
+  const backdrops = ["opaque", "blur", "transparent"];
+
+  const handleOpen = (backdrop) => {
+    setBackdrop(backdrop)
+    onOpen();
+  }
+
+  return (
+    <>
+      <div className="flex flex-wrap gap-3">
+        {backdrops.map((b) => (
+          <Button  
+            key={b}
+            variant="flat" 
+            color="warning" 
+            onPress={() => handleOpen(b)}
+            className="capitalize"
+          >
+           {b}
+          </Button>
+        ))}  
+      </div>
+      <Drawer backdrop={backdrop} isOpen={isOpen} onClose={onClose}>
+        <DrawerContent>
+          {(onClose) => (
+            <>
+              <DrawerHeader className="flex flex-col gap-1">Drawer Title</DrawerHeader>
+              <DrawerBody>
+                <p> 
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Magna exercitation reprehenderit magna aute tempor cupidatat consequat elit
+                  dolor adipisicing. Mollit dolor eiusmod sunt ex incididunt cillum quis. 
+                  Velit duis sit officia eiusmod Lorem aliqua enim laboris do dolor eiusmod. 
+                  Et mollit incididunt nisi consectetur esse laborum eiusmod pariatur 
+                  proident Lorem eiusmod et. Culpa deserunt nostrud ad veniam.
+                </p>
+              </DrawerBody>
+              <DrawerFooter>
+                <Button color="danger" variant="light" onPress={onClose}>
+                  Close
+                </Button>
+                <Button color="primary" onPress={onClose}>
+                  Action
+                </Button>
+              </DrawerFooter>
+            </>
+          )}
+        </DrawerContent>
+      </Drawer>
+    </>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/drawer/custom-backdrop.ts (added, 62 changes)\n  Patch: @@ -0,0 +1,62 @@
+const App = `import {Drawer, DrawerContent, DrawerHeader, DrawerBody, DrawerFooter, Button, useDisclosure} from "@nextui-org/react";
+
+export default function App() {
+  const {isOpen, onOpen, onOpenChange} = useDisclosure();
+
+  return (
+    <>
+      <Button onPress={onOpen}>Open Drawer</Button>
+      <Drawer 
+        backdrop="opaque" 
+        isOpen={isOpen} 
+        onOpenChange={onOpenChange}
+        classNames={{
+          backdrop: "bg-gradient-to-r from-zinc-900 to-zinc-900/10 backdrop-opacity-20"
+        }}
+      >
+        <DrawerContent>
+          {(onClose) => (
+            <>
+              <DrawerHeader className="flex flex-col gap-1">Drawer Title</DrawerHeader>
+              <DrawerBody>
+                <p> 
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Magna exercitation reprehenderit magna aute tempor cupidatat consequat elit
+                  dolor adipisicing. Mollit dolor eiusmod sunt ex incididunt cillum quis. 
+                  Velit duis sit officia eiusmod Lorem aliqua enim laboris do dolor eiusmod. 
+                  Et mollit incididunt nisi consectetur esse laborum eiusmod pariatur 
+                  proident Lorem eiusmod et. Culpa deserunt nostrud ad veniam.
+                </p>
+              </DrawerBody>
+              <DrawerFooter>
+                <Button color="danger" variant="light" onPress={onClose}>
+                  Close
+                </Button>
+                <Button color="primary" onPress={onClose}>
+                  Action
+                </Button>
+              </DrawerFooter>
+            </>
+          )}
+        </DrawerContent>
+      </Drawer>
+    </>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/drawer/custom-motion.ts (added, 75 changes)\n  Patch: @@ -0,0 +1,75 @@
+const App = `import {Drawer, DrawerContent, DrawerHeader, DrawerBody, DrawerFooter, Button, useDisclosure} from "@nextui-org/react";
+
+export default function App() {
+  const {isOpen, onOpen, onOpenChange} = useDisclosure();
+
+  return (
+    <>
+      <Button onPress={onOpen}>Open Drawer</Button>
+      <Drawer 
+        backdrop="opaque" 
+        isOpen={isOpen} 
+        onOpenChange={onOpenChange}
+        motionProps={{
+          variants: {
+            enter: {
+              opacity: 1,
+              transition: {
+                duration: 0.3,
+              },
+            },
+            exit: {
+              opacity: 0,
+              transition: {
+                duration: 0.3,
+              },
+            },
+          }
+        }}
+      >
+        <DrawerContent>
+          {(onClose) => (
+            <>
+              <DrawerHeader className="flex flex-col gap-1">Drawer Title</DrawerHeader>
+              <DrawerBody>
+                <p> 
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Magna exercitation reprehenderit magna aute tempor cupidatat consequat elit
+                  dolor adipisicing. Mollit dolor eiusmod sunt ex incididunt cillum quis. 
+                  Velit duis sit officia eiusmod Lorem aliqua enim laboris do dolor eiusmod. 
+                  Et mollit incididunt nisi consectetur esse laborum eiusmod pariatur 
+                  proident Lorem eiusmod et. Culpa deserunt nostrud ad veniam.
+                </p>
+              </DrawerBody>
+              <DrawerFooter>
+                <Button color="danger" variant="light" onPress={onClose}>
+                  Close
+                </Button>
+                <Button color="primary" onPress={onClose}>
+                  Action
+                </Button>
+              </DrawerFooter>
+            </>
+          )}
+        </DrawerContent>
+      </Drawer>
+    </>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/drawer/custom-styles.ts (added, 69 changes)\n  Patch: @@ -0,0 +1,69 @@
+const App = `import {Drawer, DrawerContent, DrawerHeader, DrawerBody, DrawerFooter, Button, useDisclosure} from "@nextui-org/react";
+
+export default function App() {
+  const {isOpen, onOpen, onOpenChange} = useDisclosure();
+
+  return (
+    <>
+      <Button onPress={onOpen} color="secondary">Open Drawer</Button>
+      <Drawer 
+        backdrop="opaque" 
+        isOpen={isOpen} 
+        onOpenChange={onOpenChange}
+        radius="lg"
+        classNames={{
+          body: "py-6",
+          backdrop: "bg-[#292f46]/50 backdrop-opacity-40",
+          base: "w-[378px]",
+          content: "border-[#292f46] bg-[#19172c] dark:bg-[#19172c] text-[#a8b0d3]",
+          header: "border-b-[1px] border-[#292f46]",
+          footer: "border-t-[1px] border-[#292f46]",
+          closeButton: "hover:bg-white/5 active:bg-white/10",
+        }}
+      >
+        <DrawerContent>
+          {(onClose) => (
+            <>
+              <DrawerHeader className="flex flex-col gap-1">Drawer Title</DrawerHeader>
+              <DrawerBody>
+                <p> 
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Magna exercitation reprehenderit magna aute tempor cupidatat consequat elit
+                  dolor adipisicing. Mollit dolor eiusmod sunt ex incididunt cillum quis. 
+                  Velit duis sit officia eiusmod Lorem aliqua enim laboris do dolor eiusmod. 
+                  Et mollit incididunt nisi consectetur esse laborum eiusmod pariatur 
+                  proident Lorem eiusmod et. Culpa deserunt nostrud ad veniam.
+                </p>
+              </DrawerBody>
+              <DrawerFooter>
+                <Button color="foreground" variant="light" onPress={onClose}>
+                  Close
+                </Button>
+                <Button className="bg-[#6f4ef2] shadow-lg shadow-indigo-500/20" onPress={onClose}>
+                  Action
+                </Button>
+              </DrawerFooter>
+            </>
+          )}
+        </DrawerContent>
+      </Drawer>
+    </>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/drawer/form.ts (added, 116 changes)\n  Patch: @@ -0,0 +1,116 @@
+const MailIcon = `export const MailIcon = (props) => (
+  <svg
+    aria-hidden="true"
+    fill="none"
+    focusable="false"
+    height="1em"
+    role="presentation"
+    viewBox="0 0 24 24"
+    width="1em"
+    {...props}
+  >
+    <path
+      d="M17 3.5H7C4 3.5 2 5 2 8.5V15.5C2 19 4 20.5 7 20.5H17C20 20.5 22 19 22 15.5V8.5C22 5 20 3.5 17 3.5ZM17.47 9.59L14.34 12.09C13.68 12.62 12.84 12.88 12 12.88C11.16 12.88 10.31 12.62 9.66 12.09L6.53 9.59C6.21 9.33 6.16 8.85 6.41 8.53C6.67 8.21 7.14 8.15 7.46 8.41L10.59 10.91C11.35 11.52 12.64 11.52 13.4 10.91L16.53 8.41C16.85 8.15 17.33 8.2 17.58 8.53C17.84 8.85 17.79 9.33 17.47 9.59Z"
+      fill="currentColor"
+    />
+  </svg>
+);
+`;
+
+const LockIcon = `export const LockIcon = (props) => (
+  <svg
+    aria-hidden="true"
+    fill="none"
+    focusable="false"
+    height="1em"
+    role="presentation"
+    viewBox="0 0 24 24"
+    width="1em"
+    {...props}
+  >
+    <path
+      d="M12.0011 17.3498C12.9013 17.3498 13.6311 16.6201 13.6311 15.7198C13.6311 14.8196 12.9013 14.0898 12.0011 14.0898C11.1009 14.0898 10.3711 14.8196 10.3711 15.7198C10.3711 16.6201 11.1009 17.3498 12.0011 17.3498Z"
+      fill="currentColor"
+    />
+    <path
+      d="M18.28 9.53V8.28C18.28 5.58 17.63 2 12 2C6.37 2 5.72 5.58 5.72 8.28V9.53C2.92 9.88 2 11.3 2 14.79V16.65C2 20.75 3.25 22 7.35 22H16.65C20.75 22 22 20.75 22 16.65V14.79C22 11.3 21.08 9.88 18.28 9.53ZM12 18.74C10.33 18.74 8.98 17.38 8.98 15.72C8.98 14.05 10.34 12.7 12 12.7C13.66 12.7 15.02 14.06 15.02 15.72C15.02 17.39 13.67 18.74 12 18.74ZM7.35 9.44C7.27 9.44 7.2 9.44 7.12 9.44V8.28C7.12 5.35 7.95 3.4 12 3.4C16.05 3.4 16.88 5.35 16.88 8.28V9.45C16.8 9.45 16.73 9.45 16.65 9.45H7.35V9.44Z"
+      fill="currentColor"
+    />
+  </svg>
+);`;
+
+const App = `import {Drawer, DrawerContent, DrawerHeader, DrawerBody, DrawerFooter, Button, useDisclosure, Checkbox, Input, Link} from "@nextui-org/react";
+import {MailIcon} from './MailIcon.jsx';
+import {LockIcon} from './LockIcon.jsx';
+
+export default function App() {
+  const {isOpen, onOpen, onOpenChange} = useDisclosure();
+
+  return (
+    <>
+      <Button onPress={onOpen} color="primary">Open Drawer</Button>
+      <Drawer 
+        isOpen={isOpen} 
+        onOpenChange={onOpenChange}
+      >
+        <DrawerContent>
+          {(onClose) => (
+            <>
+              <DrawerHeader className="flex flex-col gap-1">Log in</DrawerHeader>
+              <DrawerBody>
+                <Input
+                  autoFocus
+                  endContent={
+                    <MailIcon className="text-2xl text-default-400 pointer-events-none flex-shrink-0" />
+                  }
+                  label="Email"
+                  placeholder="Enter your email"
+                  variant="bordered"
+                />
+                <Input
+                  endContent={
+                    <LockIcon className="text-2xl text-default-400 pointer-events-none flex-shrink-0" />
+                  }
+                  label="Password"
+                  placeholder="Enter your password"
+                  type="password"
+                  variant="bordered"
+                />
+                <div className="flex py-2 px-1 justify-between">
+                  <Checkbox
+                    classNames={{
+                      label: "text-small",
+                    }}
+                  >
+                    Remember me
+                  </Checkbox>
+                  <Link color="primary" href="#" size="sm">
+                    Forgot password?
+                  </Link>
+                </div>
+              </DrawerBody>
+              <DrawerFooter>
+                <Button color="danger" variant="flat" onPress={onClose}>
+                  Close
+                </Button>
+                <Button color="primary" onPress={onClose}>
+                  Sign in
+                </Button>
+              </DrawerFooter>
+            </>
+          )}
+        </DrawerContent>
+      </Drawer>
+    </>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+  "/MailIcon.jsx": MailIcon,
+  "/LockIcon.jsx": LockIcon,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/drawer/index.ts (added, 23 changes)\n  Patch: @@ -0,0 +1,23 @@
+import usage from "./usage";
+import sizes from "./sizes";
+import nonDismissable from "./non-dismissable";
+import placement from "./placement";
+import overflow from "./overflow";
+import form from "./form";
+import backdrop from "./backdrop";
+import customBackdrop from "./custom-backdrop";
+import customMotion from "./custom-motion";
+import customStyles from "./custom-styles";
+
+export const drawerContent = {
+  usage,
+  sizes,
+  nonDismissable,
+  placement,
+  overflow,
+  form,
+  backdrop,
+  customBackdrop,
+  customMotion,
+  customStyles,
+};\n- apps/docs/content/components/drawer/non-dismissable.ts (added, 55 changes)\n  Patch: @@ -0,0 +1,55 @@
+const App = `import {Drawer, DrawerContent, DrawerHeader, DrawerBody, DrawerFooter, Button, useDisclosure} from "@nextui-org/react";
+
+export default function App() {
+  const {isOpen, onOpen, onOpenChange} = useDisclosure();
+
+  return (
+    <>
+      <Button onPress={onOpen}>Open Drawer</Button>
+      <Drawer isOpen={isOpen} onOpenChange={onOpenChange} isDismissable={false}>
+        <DrawerContent>
+          {(onClose) => (
+            <>
+              <DrawerHeader className="flex flex-col gap-1">Drawer Title</DrawerHeader>
+              <DrawerBody>
+                <p> 
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Magna exercitation reprehenderit magna aute tempor cupidatat consequat elit
+                  dolor adipisicing. Mollit dolor eiusmod sunt ex incididunt cillum quis. 
+                  Velit duis sit officia eiusmod Lorem aliqua enim laboris do dolor eiusmod. 
+                  Et mollit incididunt nisi consectetur esse laborum eiusmod pariatur 
+                  proident Lorem eiusmod et. Culpa deserunt nostrud ad veniam.
+                </p>
+              </DrawerBody>
+              <DrawerFooter>
+                <Button color="danger" variant="light" onPress={onClose}>
+                  Close
+                </Button>
+                <Button color="primary" onPress={onClose}>
+                  Action
+                </Button>
+              </DrawerFooter>
+            </>
+          )}
+        </DrawerContent>
+      </Drawer>
+    </>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/drawer/overflow.ts (added, 254 changes)\n  Patch: @@ -0,0 +1,254 @@
+const App = `import {Drawer, DrawerContent, DrawerHeader, DrawerBody, DrawerFooter, Button, useDisclosure, RadioGroup, Radio} from "@nextui-org/react";
+
+export default function App() {
+  const {isOpen, onOpen, onOpenChange} = useDisclosure();
+  const [scrollBehavior, setScrollBehavior] = React.useState("inside");
+
+  return (
+    <div className="flex flex-col gap-2">
+      <Button onPress={onOpen}>Open Drawer</Button>
+      <RadioGroup
+        label="Select scroll behavior"
+        orientation="horizontal"
+        value={scrollBehavior}
+        onValueChange={setScrollBehavior}
+      >
+        <Radio value="inside">inside</Radio>
+        <Radio value="outside">outside</Radio>
+      </RadioGroup>
+      <Drawer
+        isOpen={isOpen}
+        onOpenChange={onOpenChange}
+        scrollBehavior={scrollBehavior}
+      >
+        <DrawerContent>
+          {(onClose) => (
+            <>
+              <DrawerHeader className="flex flex-col gap-1">
+                Drawer Title
+              </DrawerHeader>
+              <DrawerBody>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Magna exercitation reprehenderit magna aute tempor cupidatat
+                  consequat elit dolor adipisicing. Mollit dolor eiusmod sunt ex
+                  incididunt cillum quis. Velit duis sit officia eiusmod Lorem
+                  aliqua enim laboris do dolor eiusmod. Et mollit incididunt
+                  nisi consectetur esse laborum eiusmod pariatur proident Lorem
+                  eiusmod et. Culpa deserunt nostrud ad veniam.
+                </p>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                  Magna exercitation reprehenderit magna aute tempor cupidatat
+                  consequat elit dolor adipisicing. Mollit dolor eiusmod sunt ex
+                  incididunt cillum quis. Velit duis sit officia eiusmod Lorem
+                  aliqua enim laboris do dolor eiusmod. Et mollit incididunt
+                  nisi consectetur esse laborum eiusmod pariatur proident Lorem
+                  eiusmod et. Culpa deserunt nostrud ad veniam.
+                </p>
+                <p>
+                  Mollit dolor eiusmod sunt ex incididunt cillum quis. Velit
+                  duis sit officia eiusmod Lorem aliqua enim laboris do dolor
+                  eiusmod. Et mollit incididunt nisi consectetur esse laborum
+                  eiusmod pariatur proident Lorem eiusmod et. Culpa deserunt
+                  nostrud ad veniam. Lorem ipsum dolor sit amet, consectetur
+                  adipiscing elit. Nullam pulvinar risus non risus hendrerit
+                  venenatis. Pellentesque sit amet hendrerit risus, sed
+                  porttitor quam. Magna exercitation reprehenderit magna aute
+                  tempor cupidatat consequat elit dolor adipisicing. Mollit
+                  dolor eiusmod sunt ex incididunt cillum quis. Velit duis sit
+                  officia eiusmod Lorem aliqua enim laboris do dolor eiusmod. Et
+                  mollit incididunt nisi consectetur esse laborum eiusmod
+                  pariatur proident Lorem eiusmod et. Culpa deserunt nostrud ad
+                  veniam.
+                </p>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Magna exercitation reprehenderit magna aute tempor cupidatat
+                  consequat elit dolor adipisicing. Mollit dolor eiusmod sunt ex
+                  incididunt cillum quis. Velit duis sit officia eiusmod Lorem
+                  aliqua enim laboris do dolor eiusmod. Et mollit incididunt
+                  nisi consectetur esse laborum eiusmod pariatur proident Lorem
+                  eiusmod et. Culpa deserunt nostrud ad veniam.
+                </p>
+                <p>
+                  Mollit dolor eiusmod sunt ex incididunt cillum quis. Velit
+                  duis sit officia eiusmod Lorem aliqua enim laboris do dolor
+                  eiusmod. Et mollit incididunt nisi consectetur esse laborum
+                  eiusmod pariatur proident Lorem eiusmod et. Culpa deserunt
+                  nostrud ad veniam. Lorem ipsum dolor sit amet, consectetur
+                  adipiscing elit. Nullam pulvinar risus non risus hendrerit
+                  venenatis. Pellentesque sit amet hendrerit risus, sed
+                  porttitor quam. Magna exercitation reprehenderit magna aute
+                  tempor cupidatat consequat elit dolor adipisicing. Mollit
+                  dolor eiusmod sunt ex incididunt cillum quis. Velit duis sit
+                  officia eiusmod Lorem aliqua enim laboris do dolor eiusmod. Et
+                  mollit incididunt nisi consectetur esse laborum eiusmod
+                  pariatur proident Lorem eiusmod et. Culpa deserunt nostrud ad
+                  veniam.
+                </p>
+              </DrawerBody>
+              <DrawerFooter>
+                <Button color="danger" variant="light" onPress={onClose}>
+                  Close
+                </Button>
+                <Button color="primary" onPress={onClose}>
+                  Action
+                </Button>
+              </DrawerFooter>
+            </>
+          )}
+        </DrawerContent>
+      </Drawer>
+    </div>
+  );
+}`;
+
+const AppTs = `import {Drawer, DrawerContent, DrawerHeader, DrawerBody, DrawerFooter, DrawerProps, Button, useDisclosure, RadioGroup, Radio} from "@nextui-org/react";
+
+export default function App() {
+  const {isOpen, onOpen, onOpenChange} = useDisclosure();
+  const [scrollBehavior, setScrollBehavior] = React.useState<DrawerProps["scrollBehavior"]>("inside");
+
+  return (
+    <div className="flex flex-col gap-2">
+      <Button onPress={onOpen}>Open Drawer</Button>
+      <RadioGroup
+        label="Select scroll behavior"
+        orientation="horizontal"
+        value={scrollBehavior}
+        onValueChange={setScrollBehavior}
+      >
+        <Radio value="inside">inside</Radio>
+        <Radio value="outside">outside</Radio>
+      </RadioGroup>
+      <Drawer
+        isOpen={isOpen}
+        onOpenChange={onOpenChange}
+        scrollBehavior={scrollBehavior}
+      >
+        <DrawerContent>
+          {(onClose) => (
+            <>
+              <DrawerHeader className="flex flex-col gap-1">
+                Drawer Title
+              </DrawerHeader>
+              <DrawerBody>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Magna exercitation reprehenderit magna aute tempor cupidatat
+                  consequat elit dolor adipisicing. Mollit dolor eiusmod sunt ex
+                  incididunt cillum quis. Velit duis sit officia eiusmod Lorem
+                  aliqua enim laboris do dolor eiusmod. Et mollit incididunt
+                  nisi consectetur esse laborum eiusmod pariatur proident Lorem
+                  eiusmod et. Culpa deserunt nostrud ad veniam.
+                </p>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                  Magna exercitation reprehenderit magna aute tempor cupidatat
+                  consequat elit dolor adipisicing. Mollit dolor eiusmod sunt ex
+                  incididunt cillum quis. Velit duis sit officia eiusmod Lorem
+                  aliqua enim laboris do dolor eiusmod. Et mollit incididunt
+                  nisi consectetur esse laborum eiusmod pariatur proident Lorem
+                  eiusmod et. Culpa deserunt nostrud ad veniam.
+                </p>
+                <p>
+                  Mollit dolor eiusmod sunt ex incididunt cillum quis. Velit
+                  duis sit officia eiusmod Lorem aliqua enim laboris do dolor
+                  eiusmod. Et mollit incididunt nisi consectetur esse laborum
+                  eiusmod pariatur proident Lorem eiusmod et. Culpa deserunt
+                  nostrud ad veniam. Lorem ipsum dolor sit amet, consectetur
+                  adipiscing elit. Nullam pulvinar risus non risus hendrerit
+                  venenatis. Pellentesque sit amet hendrerit risus, sed
+                  porttitor quam. Magna exercitation reprehenderit magna aute
+                  tempor cupidatat consequat elit dolor adipisicing. Mollit
+                  dolor eiusmod sunt ex incididunt cillum quis. Velit duis sit
+                  officia eiusmod Lorem aliqua enim laboris do dolor eiusmod. Et
+                  mollit incididunt nisi consectetur esse laborum eiusmod
+                  pariatur proident Lorem eiusmod et. Culpa deserunt nostrud ad
+                  veniam.
+                </p>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Magna exercitation reprehenderit magna aute tempor cupidatat
+                  consequat elit dolor adipisicing. Mollit dolor eiusmod sunt ex
+                  incididunt cillum quis. Velit duis sit officia eiusmod Lorem
+                  aliqua enim laboris do dolor eiusmod. Et mollit incididunt
+                  nisi consectetur esse laborum eiusmod pariatur proident Lorem
+                  eiusmod et. Culpa deserunt nostrud ad veniam.
+                </p>
+                <p>
+                  Mollit dolor eiusmod sunt ex incididunt cillum quis. Velit
+                  duis sit officia eiusmod Lorem aliqua enim laboris do dolor
+                  eiusmod. Et mollit incididunt nisi consectetur esse laborum
+                  eiusmod pariatur proident Lorem eiusmod et. Culpa deserunt
+                  nostrud ad veniam. Lorem ipsum dolor sit amet, consectetur
+                  adipiscing elit. Nullam pulvinar risus non risus hendrerit
+                  venenatis. Pellentesque sit amet hendrerit risus, sed
+                  porttitor quam. Magna exercitation reprehenderit magna aute
+                  tempor cupidatat consequat elit dolor adipisicing. Mollit
+                  dolor eiusmod sunt ex incididunt cillum quis. Velit duis sit
+                  officia eiusmod Lorem aliqua enim laboris do dolor eiusmod. Et
+                  mollit incididunt nisi consectetur esse laborum eiusmod
+                  pariatur proident Lorem eiusmod et. Culpa deserunt nostrud ad
+                  veniam.
+                </p>
+              </DrawerBody>
+              <DrawerFooter>
+                <Button color="danger" variant="light" onPress={onClose}>
+                  Close
+                </Button>
+                <Button color="primary" onPress={onClose}>
+                  Action
+                </Button>
+              </DrawerFooter>
+            </>
+          )}
+        </DrawerContent>
+      </Drawer>
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+const reactTs = {
+  "/App.tsx": AppTs,
+};
+
+export default {
+  ...react,
+  ...reactTs,
+};\n- apps/docs/content/components/drawer/placement.ts (added, 64 changes)\n  Patch: @@ -0,0 +1,64 @@
+const App = `import {Drawer, DrawerContent, DrawerHeader, DrawerBody, DrawerFooter, Button, useDisclosure, RadioGroup, Radio} from "@nextui-org/react";
+
+export default function App() {
+  const {isOpen, onOpen, onOpenChange} = useDisclosure();
+  const [drawerPlacement, setDrawerPlacement] = React.useState("bottom");
+
+  return (
+    <div className="flex flex-col gap-2">
+      <Button onPress={onOpen} className="max-w-fit">Open Drawer</Button>
+      <RadioGroup
+        label="Select drawer placement"
+        orientation="horizontal"
+        value={drawerPlacement}
+        onValueChange={setDrawerPlacement}
+      >
+        <Radio value="top">top</Radio>
+        <Radio value="right">right</Radio>
+        <Radio value="bottom">bottom</Radio>
+        <Radio value="left">left</Radio>
+      </RadioGroup>
+      <Drawer 
+        isOpen={isOpen}
+        placement={drawerPlacement}
+        onOpenChange={onOpenChange} 
+      >
+        <DrawerContent>
+          {(onClose) => (
+            <>
+              <DrawerHeader className="flex flex-col gap-1">Drawer Title</DrawerHeader>
+              <DrawerBody>
+                <p> 
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+              </DrawerBody>
+              <DrawerFooter>
+                <Button color="danger" variant="light" onPress={onClose}>
+                  Close
+                </Button>
+                <Button color="primary" onPress={onClose}>
+                  Action
+                </Button>
+              </DrawerFooter>
+            </>
+          )}
+        </DrawerContent>
+      </Drawer>
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/drawer/sizes.ts (added, 70 changes)\n  Patch: @@ -0,0 +1,70 @@
+const App = `import {Drawer, DrawerContent, DrawerHeader, DrawerBody, DrawerFooter, Button, useDisclosure} from "@nextui-org/react";
+
+export default function App() {
+  const {isOpen, onOpen, onClose} = useDisclosure();
+  const [size, setSize] = React.useState('md')
+
+  const sizes = ["xs", "sm", "md", "lg", "xl", "2xl", "3xl", "4xl", "5xl", "full"];
+
+
+  const handleOpen = (size) => {
+    setSize(size)
+    onOpen();
+  }
+
+  return (
+    <>
+      <div className="flex flex-wrap gap-3">
+        {sizes.map((size) => (
+          <Button key={size} onPress={() => handleOpen(size)}>Open {size}</Button>
+        ))}  
+      </div>
+      <Drawer 
+        size={size} 
+        isOpen={isOpen} 
+        onClose={onClose} 
+      >
+        <DrawerContent>
+          {(onClose) => (
+            <>
+              <DrawerHeader className="flex flex-col gap-1">Drawer Title</DrawerHeader>
+              <DrawerBody>
+                <p> 
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Magna exercitation reprehenderit magna aute tempor cupidatat consequat elit
+                  dolor adipisicing. Mollit dolor eiusmod sunt ex incididunt cillum quis. 
+                  Velit duis sit officia eiusmod Lorem aliqua enim laboris do dolor eiusmod. 
+                </p>
+              </DrawerBody>
+              <DrawerFooter>
+                <Button color="danger" variant="light" onPress={onClose}>
+                  Close
+                </Button>
+                <Button color="primary" onPress={onClose}>
+                  Action
+                </Button>
+              </DrawerFooter>
+            </>
+          )}
+        </DrawerContent>
+      </Drawer>
+    </>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/drawer/usage.ts (added, 55 changes)\n  Patch: @@ -0,0 +1,55 @@
+const App = `import {Drawer, DrawerContent, DrawerHeader, DrawerBody, DrawerFooter, Button, useDisclosure} from "@nextui-org/react";
+
+export default function App() {
+  const {isOpen, onOpen, onOpenChange} = useDisclosure();
+
+  return (
+    <>
+      <Button onPress={onOpen}>Open Drawer</Button>
+      <Drawer isOpen={isOpen} onOpenChange={onOpenChange}>
+        <DrawerContent>
+          {(onClose) => (
+            <>
+              <DrawerHeader className="flex flex-col gap-1">Drawer Title</DrawerHeader>
+              <DrawerBody>
+                <p> 
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
+                  Nullam pulvinar risus non risus hendrerit venenatis.
+                  Pellentesque sit amet hendrerit risus, sed porttitor quam.
+                </p>
+                <p>
+                  Magna exercitation reprehenderit magna aute tempor cupidatat consequat elit
+                  dolor adipisicing. Mollit dolor eiusmod sunt ex incididunt cillum quis. 
+                  Velit duis sit officia eiusmod Lorem aliqua enim laboris do dolor eiusmod. 
+                  Et mollit incididunt nisi consectetur esse laborum eiusmod pariatur 
+                  proident Lorem eiusmod et. Culpa deserunt nostrud ad veniam.
+                </p>
+              </DrawerBody>
+              <DrawerFooter>
+                <Button color="danger" variant="light" onPress={onClose}>
+                  Close
+                </Button>
+                <Button color="primary" onPress={onClose}>
+                  Action
+                </Button>
+              </DrawerFooter>
+            </>
+          )}
+        </DrawerContent>
+      </Drawer>
+    </>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/docs/components/drawer.mdx (added, 194 changes)\n  Patch: @@ -0,0 +1,194 @@
+---
+title: "Drawer"
+description: "A panel which slides in from the edge of the screen with a custom content that requires attention or provides additional information."
+---
+
+import {modalContent} from "@/content/components/modal";
+import {drawerContent} from "@/content/components/drawer";
+
+# Drawer
+
+A panel which slides in from the edge of the screen with a custom content that requires attention or provides additional information.
+
+<ComponentLinks component="drawer" reactAriaHook="useModal" />
+
+---
+
+<CarbonAd/>
+
+## Import
+
+NextUI exports 5 drawer-related components:
+
+- **Drawer**: The main component to display a drawer.
+- **DrawerContent**: The wrapper of the other drawer components.
+- **DrawerHeader**: The header of the drawer.
+- **DrawerBody**: The body of the drawer.
+- **DrawerFooter**: The footer of the drawer.
+
+<ImportTabs
+  commands={{
+    main: `import {
+  Drawer, 
+  DrawerContent, 
+  DrawerHeader, 
+  DrawerBody, 
+  DrawerFooter
+} from "@nextui-org/react";`,
+    individual:
+      `import {
+  Drawer, 
+  DrawerContent, 
+  DrawerHeader, 
+  DrawerBody, 
+  DrawerFooter
+} from "@nextui-org/drawer";`,
+  }}
+/>
+
+## Usage
+
+When the drawer opens:
+
+- Focus is bounded within the drawer and set to the first tabbable element.
+- Content behind a drawer dialog is inert, meaning that users cannot interact with it.
+
+<CodeDemo title="Usage" files={drawerContent.usage} />
+
+### Sizes
+
+<CodeDemo title="Sizes" files={drawerContent.sizes} />
+
+### Non-dissmissable
+
+By default the drawer can be closed by clicking on the overlay or pressing the <Kbd>Esc</Kbd> key.
+You can disable this behavior by setting the `isDismissable` prop to `false`.
+
+<CodeDemo title="Non-dissmissible" files={drawerContent.nonDismissable} />
+
+### Drawer placement
+
+By default the drawer is righted on screens. This placement is called `right`, but
+you can change it by using the `placement` prop.
+
+<CodeDemo title="Drawer placement" files={drawerContent.placement} />
+
+### Overflow scroll
+
+You can use the `scrollBehavior` prop to set the scroll behavior of the drawer. The default value is `inside`.
+
+- **inside**: The drawer content will be scrollable.
+- **outside**: The drawer content will be scrollable and the drawer will be fixed.
+
+<CodeDemo title="Overflow scroll" files={drawerContent.overflow} />
+
+### With Form
+
+The `Drawer` handles the focus within the drawer content. It means that you can use the drawer with
+form elements without any problem. the focus returns to the trigger when the drawer closes.
+
+<CodeDemo title="With Form" files={drawerContent.form} />
+
+> **Note**: You can add the `autoFocus` prop to the first `Input` component to focus it when the drawer opens.
+
+### Backdrop
+
+The `Drawer` component has a `backdrop` prop to show a backdrop behind the drawer. The backdrop can be
+either `transparent`, `opaque` or `blur`. The default value is `opaque`.
+
+<CodeDemo title="Backdrop" files={drawerContent.backdrop} />
+
+### Custom Backdrop
+
+You can customize the backdrop by using the `backdrop` slot.
+
+<CodeDemo title="Custom Backdrop" files={drawerContent.customBackdrop} />
+
+### Custom Motion
+
+Drawer offers a `motionProps` property to customize the `enter` / `exit` animation.
+
+<CodeDemo title="Custom Motion" highlightedLines="14-31" files={drawerContent.customMotion} />
+
+> Learn more about Framer motion variants [here](https://www.framer.com/motion/animation/#variants).
+
+## Slots
+
+- **wrapper**: The wrapper slot of the drawer. It wraps the `base` and the `backdrop` slots.
+- **base**: The base slot of the drawer container.
+- **content**: The main slot of the drawer content.
+- **backdrop**: The backdrop slot, it is displayed behind the drawer.
+- **header**: The header of the drawer, it is displayed at the top of the drawer.
+- **body**: The body of the drawer, it is displayed in the middle of the drawer.
+- **footer**: The footer of the drawer, it is displayed at the bottom of the drawer.
+- **closeButton**: The close button of the drawer.
+
+### Custom Styles
+
+You can customize the `Drawer` component by passing custom Tailwind CSS classes to the component slots.
+
+<CodeDemo title="Custom Styles" highlightedLines="15-20" files={drawerContent.customStyles} />
+
+<Spacer y={4} />
+
+## Data Attributes
+
+`Drawer` has the following attributes on the `base` element:
+
+- **data-open**:
+  When the drawer is open. Based on drawer state.
+- **data-dismissable**:
+  When the drawer is dismissable. Based on `isDismissable` prop.
+
+<Spacer y={4} />
+
+## Accessibility
+
+- Content outside the drawer is hidden from assistive technologies while it is open.
+- The drawer optionally closes when interacting outside, or pressing the <Kbd>Esc</Kbd> key.
+- Focus is moved into the drawer on mount, and restored to the trigger element on unmount.
+- While open, focus is contained within the drawer, preventing the user from tabbing outside.
+- Scrolling the page behind the drawer is prevented while it is open, including in mobile browsers.
+
+<Spacer y={4} />
+
+## API
+
+### Drawer Props
+
+| Attribute                 | Type                                                                                                | Description                                                                                           | Default         |
+| ------------------------- | --------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------- | --------------- |
+| children\*                | `ReactNode`                                                                                         | The content of the drawer. It's usually the `DrawerContent`.                                          | -               |
+| size                      | `xs` \| `sm` \| `md` \| `lg` \| `xl` \| `2xl` \| `3xl` \| `4xl` \| `5xl` \| `full`                  | The drawer size. This changes the drawer `width` or `height` (full).                                  | `md`            |
+| radius                    | `none` \| `sm` \| `md` \| `lg`                                                                      | The drawer border radius.                                                                             | `lg`            |
+| backdrop                  | `transparent` \| `opaque` \| `blur`                                                                 | The drawer backdrop type.                                                                             | `opaque`        |
+| scrollBehavior            | `inside` \| `outside`                                                                               | The drawer scroll behavior.                                                                           | `inside`        |
+| placement                 | `top` \| `right` \| `bottom` \| `left`                                                              | The drawer position.                                                                                  | `right`         |
+| isOpen                    | `boolean`                                                                                           | Whether the drawer is open by default (controlled).                                                   | -               |
+| defaultOpen               | `boolean`                                                                                           | Whether the drawer is open by default (uncontrolled).                                                 | -               |
+| isDismissable             | `boolean`                                                                                           | Whether the drawer can be closed by clicking on the overlay or pressing the <Kbd>Esc</Kbd> key.       | `true`          |
+| isKeyboardDismissDisabled | `boolean`                                                                                           | Whether pressing the <Kbd>Esc</Kbd> key to close the drawer should be disabled.                       | `false`         |
+| shouldBlockScroll         | `boolean`                                                                                           | Whether the drawer should block the scroll of the page on open.                                       | `true`          |
+| hideCloseButton           | `boolean`                                                                                           | Whether to hide the drawer close button.                                                              | `false`         |
+| closeButton               | `ReactNode`                                                                                         | Custom close button to display on top right corner.                                                   | -               |
+| motionProps               | [MotionProps](#motion-props)                                                                        | The props to modify the framer motion animation. Use the `variants` API to create your own animation. |                 |
+| portalContainer           | `HTMLElement`                                                                                       | The container element in which the overlay portal will be placed.                                     | `document.body` |
+| disableAnimation          | `boolean`                                                                                           | Whether the drawer should not have animations.                                                        | `false`         |
+| classNames                | `Record<"wrapper" ÔΩú "base" ÔΩú "backdrop" ÔΩú "content" ÔΩú "header" ÔΩú "body" ÔΩú "footer" ÔΩú "closeButton", string>`  | Allows to set custom class names for the drawer slots.                                 | -               |
+
+### Drawer Events
+
+| Attribute    | Type                        | Description                                                  |
+| ------------ | --------------------------- | ------------------------------------------------------------ |
+| onOpenChange | `(isOpen: boolean) => void` | Handler that is called when the drawer's open state changes. |
+| onClose      | `() => void`                | Handler that is called when the drawer is closed.            |
+
+<Spacer y={4} />
+
+### Drawer types
+
+#### Motion Props
+
+```ts
+export type MotionProps = HTMLMotionProps<"div">; // @see https://www.framer.com/motion/
+```\n- packages/components/drawer/README.md (added, 24 changes)\n  Patch: @@ -0,0 +1,24 @@
+# @nextui-org/drawer
+
+A panel which slides in from the edge of the screen with a custom content that requires attention or provides additional information.
+
+Please refer to the [documentation](https://nextui.org/docs/components/drawer) for more information.
+
+## Installation
+
+```sh
+yarn add @nextui-org/drawer
+# or
+npm i @nextui-org/drawer
+```
+
+## Contribution
+
+Yes please! See the
+[contributing guidelines](https://github.com/nextui-org/nextui/blob/master/CONTRIBUTING.md)
+for details.
+
+## Licence
+
+This project is licensed under the terms of the
+[MIT license](https://github.com/nextui-org/nextui/blob/master/LICENSE).\n- packages/components/drawer/__tests__/drawer.test.tsx (added, 103 changes)\n  Patch: @@ -0,0 +1,103 @@
+import * as React from "react";
+import {act, render, fireEvent} from "@testing-library/react";
+
+import {Drawer, DrawerContent, DrawerBody, DrawerHeader, DrawerFooter} from "../src";
+
+describe("Drawer", () => {
+  it("should render correctly", () => {
+    const wrapper = render(
+      <Drawer isOpen>
+        <DrawerContent>
+          <DrawerHeader>Drawer header</DrawerHeader>
+          <DrawerBody>Drawer body</DrawerBody>
+          <DrawerFooter>Drawer footer</DrawerFooter>
+        </DrawerContent>
+      </Drawer>,
+    );
+
+    expect(() => wrapper.unmount()).not.toThrow();
+  });
+
+  it("ref should be forwarded", () => {
+    const ref = React.createRef<HTMLElement>();
+
+    render(
+      <Drawer ref={ref} isOpen>
+        <DrawerContent>
+          <DrawerHeader>Drawer header</DrawerHeader>
+          <DrawerBody>Drawer body</DrawerBody>
+          <DrawerFooter>Drawer footer</DrawerFooter>
+        </DrawerContent>
+      </Drawer>,
+    );
+    expect(ref.current).not.toBeNull();
+  });
+
+  test("should have the proper 'aria' attributes", () => {
+    const {getByRole, getByText} = render(
+      <Drawer isOpen>
+        <DrawerContent>
+          <DrawerHeader>Drawer header</DrawerHeader>
+          <DrawerBody>Drawer body</DrawerBody>
+          <DrawerFooter>Drawer footer</DrawerFooter>
+        </DrawerContent>
+      </Drawer>,
+    );
+
+    const drawer = getByRole("dialog");
+
+    expect(drawer).toHaveAttribute("aria-modal", "true");
+    expect(drawer).toHaveAttribute("role", "dialog");
+
+    const drawerHeader = getByText("Drawer header");
+
+    expect(drawer).toHaveAttribute("aria-labelledby", drawerHeader.id);
+
+    const drawerBody = getByText("Drawer body");
+
+    expect(drawer).toHaveAttribute("aria-describedby", drawerBody.id);
+  });
+
+  test("should fire 'onOpenChange' callback when close button is clicked", () => {
+    const onClose = jest.fn();
+    const onOpenChange = jest.fn();
+
+    const {getByLabelText} = render(
+      <Drawer isOpen onClose={onClose} onOpenChange={onOpenChange}>
+        <DrawerContent>
+          <DrawerHeader>Drawer header</DrawerHeader>
+          <DrawerBody>Drawer body</DrawerBody>
+          <DrawerFooter>Drawer footer</DrawerFooter>
+        </DrawerContent>
+      </Drawer>,
+    );
+
+    const closeButton = getByLabelText("Close");
+
+    act(() => {
+      closeButton.click();
+    });
+
+    expect(onOpenChange).toHaveBeenCalled();
+    expect(onClose).toHaveBeenCalled();
+  });
+
+  it("should hide the Drawer when pressing the escape key", () => {
+    const onClose = jest.fn();
+
+    const wrapper = render(
+      <Drawer isOpen onClose={onClose}>
+        <DrawerContent>
+          <DrawerHeader>Drawer header</DrawerHeader>
+          <DrawerBody>Drawer body</DrawerBody>
+          <DrawerFooter>Drawer footer</DrawerFooter>
+        </DrawerContent>
+      </Drawer>,
+    );
+
+    const drawer = wrapper.getByRole("dialog");
+
+    fireEvent.keyDown(drawer, {key: "Escape"});
+    expect(onClose).toHaveBeenCalledTimes(1);
+  });
+});\n- packages/components/drawer/package.json (added, 74 changes)\n  Patch: @@ -0,0 +1,74 @@
+{
+  "name": "@nextui-org/drawer",
+  "version": "2.0.0",
+  "description": "A panel which slides in from the edge of the screen with a custom content that requires attention or provides additional information.",
+  "keywords": [
+    "drawer"
+  ],
+  "author": "Junior Garcia <jrgarciadev@gmail.com>",
+  "homepage": "https://nextui.org",
+  "license": "MIT",
+  "main": "src/index.ts",
+  "sideEffects": false,
+  "files": [
+    "dist"
+  ],
+  "publishConfig": {
+    "access": "public"
+  },
+  "repository": {
+    "type": "git",
+    "url": "git+https://github.com/nextui-org/nextui.git",
+    "directory": "packages/components/drawer"
+  },
+  "bugs": {
+    "url": "https://github.com/nextui-org/nextui/issues"
+  },
+  "scripts": {
+    "build": "tsup src --dts",
+    "build:fast": "tsup src",
+    "dev": "yarn build:fast -- --watch",
+    "clean": "rimraf dist .turbo",
+    "typecheck": "tsc --noEmit",
+    "prepack": "clean-package",
+    "postpack": "clean-package restore"
+  },
+  "peerDependencies": {
+    "react": ">=18",
+    "react-dom": ">=18",
+    "framer-motion": ">=4.0.0",
+    "@nextui-org/theme": ">=2.1.0",
+    "@nextui-org/system": ">=2.0.0"
+  },
+  "dependencies": {
+    "@nextui-org/use-disclosure": "workspace:*",
+    "@nextui-org/use-aria-button": "workspace:*",
+    "@nextui-org/framer-transitions": "workspace:*",
+    "@nextui-org/shared-utils": "workspace:*",
+    "@nextui-org/react-utils": "workspace:*",
+    "@nextui-org/shared-icons": "workspace:*",
+    "@nextui-org/use-aria-modal-overlay": "workspace:*",
+    "@react-aria/dialog": "^3.5.7",
+    "@react-aria/interactions": "^3.19.1",
+    "@react-aria/overlays": "^3.18.1",
+    "@react-aria/utils": "^3.21.1",
+    "@react-stately/overlays": "^3.6.3",
+    "@react-aria/focus": "^3.14.3",
+    "@react-types/overlays": "^3.8.3",
+    "react-remove-scroll": "^2.5.6"
+  },
+  "devDependencies": {
+    "@nextui-org/theme": "workspace:*",
+    "@nextui-org/system": "workspace:*",
+    "@nextui-org/input": "workspace:*",
+    "@nextui-org/checkbox": "workspace:*",
+    "@nextui-org/button": "workspace:*",
+    "@nextui-org/link": "workspace:*",
+    "react-lorem-component": "0.13.0",
+    "framer-motion": "^10.16.4",
+    "clean-package": "2.2.0",
+    "react": "^18.0.0",
+    "react-dom": "^18.0.0"
+  },
+  "clean-package": "../../../clean-package.config.json"
+}\n- packages/components/drawer/src/drawer-body.tsx (added, 43 changes)\n  Patch: @@ -0,0 +1,43 @@
+import {useEffect} from "react";
+import {forwardRef, HTMLNextUIProps} from "@nextui-org/system";
+import {useDOMRef} from "@nextui-org/react-utils";
+import {clsx} from "@nextui-org/shared-utils";
+
+import {useDrawerContext} from "./drawer-context";
+
+export interface DrawerBodyProps extends HTMLNextUIProps<"div"> {}
+
+const DrawerBody = forwardRef<"div", DrawerBodyProps>((props, ref) => {
+  const {as, children, className, ...otherProps} = props;
+
+  const {slots, classNames, bodyId, setBodyMounted} = useDrawerContext();
+
+  const domRef = useDOMRef(ref);
+
+  const Component = as || "div";
+
+  /**
+   * Notify us if this component was rendered or used,
+   * so we can append `aria-labelledby` automatically
+   */
+  useEffect(() => {
+    setBodyMounted(true);
+
+    return () => setBodyMounted(false);
+  }, [setBodyMounted]);
+
+  return (
+    <Component
+      ref={domRef}
+      className={slots.body({class: clsx(classNames?.body, className)})}
+      id={bodyId}
+      {...otherProps}
+    >
+      {children}
+    </Component>
+  );
+});
+
+DrawerBody.displayName = "NextUI.DrawerBody";
+
+export default DrawerBody;\n- packages/components/drawer/src/drawer-content.tsx (added, 122 changes)\n  Patch: @@ -0,0 +1,122 @@
+import type {AriaDialogProps} from "@react-aria/dialog";
+import type {HTMLMotionProps} from "framer-motion";
+
+import {cloneElement, isValidElement, ReactNode, useMemo} from "react";
+import {forwardRef} from "@nextui-org/system";
+import {DismissButton} from "@react-aria/overlays";
+import {TRANSITION_VARIANTS} from "@nextui-org/framer-transitions";
+import {CloseIcon} from "@nextui-org/shared-icons";
+import {RemoveScroll} from "react-remove-scroll";
+import {motion} from "framer-motion";
+import {useDialog} from "@react-aria/dialog";
+import {mergeProps} from "@react-aria/utils";
+import {HTMLNextUIProps} from "@nextui-org/system";
+
+import {useDrawerContext} from "./drawer-context";
+import {genTransition} from "./drawer-transition";
+
+type KeysToOmit = "children" | "role";
+
+export interface DrawerContentProps extends AriaDialogProps, HTMLNextUIProps<"div", KeysToOmit> {
+  children: ReactNode | ((onClose: () => void) => ReactNode);
+}
+
+const DrawerContent = forwardRef<"div", DrawerContentProps, KeysToOmit>((props, _) => {
+  const {as, children, role = "dialog", ...otherProps} = props;
+
+  const {
+    Component: DialogComponent,
+    domRef,
+    slots,
+    isOpen,
+    placement,
+    classNames,
+    baseClassNames,
+    motionProps,
+    backdrop,
+    closeButton,
+    hideCloseButton,
+    disableAnimation,
+    shouldBlockScroll,
+    getDialogProps,
+    getBackdropProps,
+    getCloseButtonProps,
+    onClose,
+  } = useDrawerContext();
+
+  const Component = as || DialogComponent || "div";
+
+  const {dialogProps} = useDialog(
+    {
+      role,
+    },
+    domRef,
+  );
+
+  const closeButtonContent = isValidElement(closeButton) ? (
+    cloneElement(closeButton, getCloseButtonProps())
+  ) : (
+    <button {...getCloseButtonProps()}>
+      <CloseIcon />
+    </button>
+  );
+
+  const content = (
+    <Component {...getDialogProps(mergeProps(dialogProps, otherProps))}>
+      <DismissButton onDismiss={onClose} />
+      {!hideCloseButton && closeButtonContent}
+      {typeof children === "function" ? children(onClose) : children}
+      <DismissButton onDismiss={onClose} />
+    </Component>
+  );
+
+  const backdropContent = useMemo(() => {
+    if (backdrop === "transparent") {
+      return null;
+    }
+
+    if (disableAnimation) {
+      return <div {...getBackdropProps()} />;
+    }
+
+    return (
+      <motion.div
+        animate="enter"
+        exit="exit"
+        initial="exit"
+        variants={TRANSITION_VARIANTS.fade}
+        {...(getBackdropProps() as HTMLMotionProps<"div">)}
+      />
+    );
+  }, [backdrop, disableAnimation, getBackdropProps]);
+
+  return (
+    <div tabIndex={-1}>
+      {backdropContent}
+      <RemoveScroll forwardProps enabled={shouldBlockScroll && isOpen} removeScrollBar={false}>
+        {disableAnimation ? (
+          <div className={slots.wrapper({class: classNames?.wrapper})}>
+            <div className={baseClassNames}>{content}</div>
+          </div>
+        ) : (
+          <div className={slots.wrapper({class: classNames?.wrapper})}>
+            <motion.div
+              animate="enter"
+              className={baseClassNames}
+              exit="exit"
+              initial="exit"
+              variants={genTransition(placement)}
+              {...motionProps}
+            >
+              {content}
+            </motion.div>
+          </div>
+        )}
+      </RemoveScroll>
+    </div>
+  );
+});
+
+DrawerContent.displayName = "NextUI.DrawerContent";
+
+export default DrawerContent;\n- packages/components/drawer/src/drawer-context.ts (added, 9 changes)\n  Patch: @@ -0,0 +1,9 @@
+import {createContext} from "@nextui-org/react-utils";
+
+import {UseDrawerReturn} from "./use-drawer";
+
+export const [DrawerProvider, useDrawerContext] = createContext<UseDrawerReturn>({
+  name: "DrawerContext",
+  errorMessage:
+    "useDrawerContext: `context` is undefined. Seems you forgot to wrap all popover components within `<Drawer />`",
+});\n- packages/components/drawer/src/drawer-footer.tsx (added, 31 changes)\n  Patch: @@ -0,0 +1,31 @@
+import {forwardRef, HTMLNextUIProps} from "@nextui-org/system";
+import {useDOMRef} from "@nextui-org/react-utils";
+import {clsx} from "@nextui-org/shared-utils";
+
+import {useDrawerContext} from "./drawer-context";
+
+export interface DrawerFooterProps extends HTMLNextUIProps<"footer"> {}
+
+const DrawerFooter = forwardRef<"footer", DrawerFooterProps>((props, ref) => {
+  const {as, children, className, ...otherProps} = props;
+
+  const {slots, classNames} = useDrawerContext();
+
+  const domRef = useDOMRef(ref);
+
+  const Component = as || "footer";
+
+  return (
+    <Component
+      ref={domRef}
+      className={slots.footer({class: clsx(classNames?.footer, className)})}
+      {...otherProps}
+    >
+      {children}
+    </Component>
+  );
+});
+
+DrawerFooter.displayName = "NextUI.DrawerFooter";
+
+export default DrawerFooter;\n- packages/components/drawer/src/drawer-header.tsx (added, 43 changes)\n  Patch: @@ -0,0 +1,43 @@
+import {useEffect} from "react";
+import {forwardRef, HTMLNextUIProps} from "@nextui-org/system";
+import {useDOMRef} from "@nextui-org/react-utils";
+import {clsx} from "@nextui-org/shared-utils";
+
+import {useDrawerContext} from "./drawer-context";
+
+export interface DrawerHeaderProps extends HTMLNextUIProps<"header"> {}
+
+const DrawerHeader = forwardRef<"header", DrawerHeaderProps>((props, ref) => {
+  const {as, children, className, ...otherProps} = props;
+
+  const {slots, classNames, headerId, setHeaderMounted} = useDrawerContext();
+
+  const domRef = useDOMRef(ref);
+
+  const Component = as || "header";
+
+  /**
+   * Notify us if this component was rendered or used,
+   * so we can append `aria-labelledby` automatically
+   */
+  useEffect(() => {
+    setHeaderMounted(true);
+
+    return () => setHeaderMounted(false);
+  }, [setHeaderMounted]);
+
+  return (
+    <Component
+      ref={domRef}
+      className={slots.header({class: clsx(classNames?.header, className)})}
+      id={headerId}
+      {...otherProps}
+    >
+      {children}
+    </Component>
+  );
+});
+
+DrawerHeader.displayName = "NextUI.DrawerHeader";
+
+export default DrawerHeader;\n- packages/components/drawer/src/drawer-transition.ts (added, 51 changes)\n  Patch: @@ -0,0 +1,51 @@
+import {TRANSITION_EASINGS} from "@nextui-org/framer-transitions";
+
+export function genTransition(placement: string) {
+  if (placement === "left" || placement === "right") {
+    return {
+      enter: {
+        x: 0,
+        transition: {
+          x: {
+            bounce: 0,
+            duration: 0.3,
+            ease: TRANSITION_EASINGS.ease,
+          },
+        },
+      },
+      exit: {
+        x: placement === "left" ? "-100%" : "100%",
+        transition: {
+          x: {
+            bounce: 0,
+            duration: 0.3,
+            ease: TRANSITION_EASINGS.ease,
+          },
+        },
+      },
+    };
+  }
+
+  return {
+    enter: {
+      y: 0,
+      transition: {
+        y: {
+          bounce: 0,
+          duration: 0.3,
+          ease: TRANSITION_EASINGS.ease,
+        },
+      },
+    },
+    exit: {
+      y: placement === "top" ? "-100%" : "100%",
+      transition: {
+        y: {
+          bounce: 0,
+          duration: 0.3,
+          ease: TRANSITION_EASINGS.ease,
+        },
+      },
+    },
+  };
+}\n- packages/components/drawer/src/drawer.tsx (added, 35 changes)\n  Patch: @@ -0,0 +1,35 @@
+import {ReactNode} from "react";
+import {AnimatePresence} from "framer-motion";
+import {Overlay} from "@react-aria/overlays";
+import {forwardRef} from "@nextui-org/system";
+
+import {UseDrawerProps, useDrawer} from "./use-drawer";
+import {DrawerProvider} from "./drawer-context";
+
+export interface DrawerProps extends UseDrawerProps {
+  /**
+   * The content of the drawer. Usually the DrawerContent
+   */
+  children: ReactNode;
+}
+
+const Drawer = forwardRef<"div", DrawerProps>((props, ref) => {
+  const {children, ...otherProps} = props;
+  const context = useDrawer({...otherProps, ref});
+
+  const overlay = <Overlay portalContainer={context.portalContainer}>{children}</Overlay>;
+
+  return (
+    <DrawerProvider value={context}>
+      {context.disableAnimation && context.isOpen ? (
+        overlay
+      ) : (
+        <AnimatePresence>{context.isOpen ? overlay : null}</AnimatePresence>
+      )}
+    </DrawerProvider>
+  );
+});
+
+Drawer.displayName = "NextUI.Drawer";
+
+export default Drawer;\n- packages/components/drawer/src/index.ts (added, 23 changes)\n  Patch: @@ -0,0 +1,23 @@
+import Drawer from "./drawer";
+import DrawerContent from "./drawer-content";
+import DrawerHeader from "./drawer-header";
+import DrawerBody from "./drawer-body";
+import DrawerFooter from "./drawer-footer";
+
+// export types
+export type {DrawerProps} from "./drawer";
+export type {DrawerContentProps} from "./drawer-content";
+export type {DrawerHeaderProps} from "./drawer-header";
+export type {DrawerBodyProps} from "./drawer-body";
+export type {DrawerFooterProps} from "./drawer-footer";
+export type {UseDisclosureProps} from "@nextui-org/use-disclosure";
+
+// export hooks
+export {useDrawer} from "./use-drawer";
+export {useDisclosure} from "@nextui-org/use-disclosure";
+
+// export context
+export {DrawerProvider, useDrawerContext} from "./drawer-context";
+
+// export components
+export {Drawer, DrawerContent, DrawerHeader, DrawerBody, DrawerFooter};\n- packages/components/drawer/src/use-drawer.ts (added, 213 changes)\n  Patch: @@ -0,0 +1,213 @@
+import type {DrawerVariantProps, SlotsToClasses, DrawerSlots} from "@nextui-org/theme";
+import type {HTMLMotionProps} from "framer-motion";
+
+import {AriaModalOverlayProps} from "@react-aria/overlays";
+import {useAriaModalOverlay} from "@nextui-org/use-aria-modal-overlay";
+import {useCallback, useId, useRef, useState, useMemo, ReactNode} from "react";
+import {drawer} from "@nextui-org/theme";
+import {HTMLNextUIProps, mapPropsVariants, PropGetter} from "@nextui-org/system";
+import {useAriaButton} from "@nextui-org/use-aria-button";
+import {useFocusRing} from "@react-aria/focus";
+import {clsx, dataAttr} from "@nextui-org/shared-utils";
+import {ReactRef, useDOMRef} from "@nextui-org/react-utils";
+import {useOverlayTriggerState} from "@react-stately/overlays";
+import {OverlayTriggerProps} from "@react-stately/overlays";
+import {mergeRefs, mergeProps} from "@react-aria/utils";
+
+interface Props extends HTMLNextUIProps<"section"> {
+  /**
+   * Ref to the DOM node.
+   */
+  ref?: ReactRef<HTMLElement | null>;
+  /**
+   * The props to modify the framer motion animation. Use the `variants` API to create your own animation.
+   */
+  motionProps?: HTMLMotionProps<"section">;
+  /**
+   * Determines whether to hide the drawer close button.
+   * @default false
+   */
+  hideCloseButton?: boolean;
+  /**
+   * Custom drawer close button element.
+   */
+  closeButton?: ReactNode;
+  /**
+   * Whether the animation should be disabled.
+   * @default false
+   */
+  disableAnimation?: boolean;
+  /**
+   * The container element in which the overlay portal will be placed.
+   * @default document.body
+   */
+  portalContainer?: Element;
+  /**
+   * Whether the scroll should be blocked when the drawer is open.
+   * @default true
+   */
+  shouldBlockScroll?: boolean;
+  /**
+   *  Callback fired when the drawer is closed.
+   */
+  onClose?: () => void;
+  /**
+   * Classname or List of classes to change the classNames of the element.
+   * if `className` is passed, it will be added to the base slot.
+   *
+   * @example
+   * ```ts
+   * <Drawer classNames={{
+   *    wrapper: "wrapper-classes", // main drawer wrapper
+   *    backdrop: "backdrop-classes",
+   *    base:"base-classes", // drawer content wrapper
+   *    base:"content-classes", // drawer content
+   *    header: "header-classes", // drawer header
+   *    body: "body-classes", // drawer body
+   *    footer: "footer-classes", // drawer footer
+   *    closeButton: "close-button-classes", // drawer close button
+   * }} />
+   * ```
+   */
+  classNames?: SlotsToClasses<DrawerSlots>;
+}
+
+export type UseDrawerProps = Props &
+  OverlayTriggerProps &
+  AriaModalOverlayProps &
+  DrawerVariantProps;
+
+export function useDrawer(originalProps: UseDrawerProps) {
+  const {placement = "right"} = originalProps;
+  const [props, variantProps] = mapPropsVariants(originalProps, drawer.variantKeys);
+  const {
+    ref,
+    as,
+    className,
+    classNames,
+    disableAnimation = false,
+    isOpen,
+    defaultOpen,
+    onOpenChange,
+    motionProps,
+    closeButton,
+    isDismissable = true,
+    hideCloseButton = false,
+    shouldBlockScroll = true,
+    portalContainer,
+    isKeyboardDismissDisabled = false,
+    onClose,
+    ...otherProps
+  } = props;
+
+  const Component = as || "section";
+
+  const domRef = useDOMRef(ref);
+  const closeButtonRef = useRef<HTMLElement>(null);
+
+  const [headerMounted, setHeaderMounted] = useState(false);
+  const [bodyMounted, setBodyMounted] = useState(false);
+
+  const dialogId = useId();
+  const headerId = useId();
+  const bodyId = useId();
+
+  const state = useOverlayTriggerState({
+    isOpen,
+    defaultOpen,
+    onOpenChange: (isOpen) => {
+      onOpenChange?.(isOpen);
+      if (!isOpen) {
+        onClose?.();
+      }
+    },
+  });
+
+  const {modalProps: drawerProps, underlayProps} = useAriaModalOverlay(
+    {
+      isDismissable,
+      isKeyboardDismissDisabled,
+    },
+    state,
+    domRef,
+  );
+
+  const {buttonProps: closeButtonProps} = useAriaButton({onPress: state.close}, closeButtonRef);
+  const {isFocusVisible: isCloseButtonFocusVisible, focusProps: closeButtonFocusProps} =
+    useFocusRing();
+
+  const baseStyles = clsx(classNames?.base, className);
+
+  const slots = useMemo(
+    () =>
+      drawer({
+        ...variantProps,
+      }),
+    [...Object.values(variantProps)],
+  );
+
+  slots.base();
+
+  const baseClassNames = slots.base({class: clsx(baseStyles, props.className)});
+
+  const getDialogProps: PropGetter = (props = {}, ref = null) => ({
+    ref: mergeRefs(ref, domRef),
+    ...mergeProps(drawerProps, otherProps, props),
+    className: slots.content({class: clsx(classNames?.content, props.className)}),
+    id: dialogId,
+    "data-open": dataAttr(state.isOpen),
+    "data-dismissable": dataAttr(isDismissable),
+    "aria-modal": dataAttr(true),
+    "aria-labelledby": headerMounted ? headerId : undefined,
+    "aria-describedby": bodyMounted ? bodyId : undefined,
+  });
+
+  const getBackdropProps = useCallback<PropGetter>(
+    (props = {}) => ({
+      className: slots.backdrop({class: classNames?.backdrop}),
+      onClick: () => state.close(),
+      ...underlayProps,
+      ...props,
+    }),
+    [slots, classNames, underlayProps],
+  );
+
+  const getCloseButtonProps: PropGetter = () => {
+    return {
+      role: "button",
+      tabIndex: 0,
+      "aria-label": "Close",
+      "data-focus-visible": dataAttr(isCloseButtonFocusVisible),
+      className: slots.closeButton({class: classNames?.closeButton}),
+      ...mergeProps(closeButtonProps, closeButtonFocusProps),
+    };
+  };
+
+  return {
+    Component,
+    slots,
+    domRef,
+    headerId,
+    bodyId,
+    placement,
+    motionProps,
+    classNames,
+    baseClassNames,
+    isDismissable,
+    closeButton,
+    hideCloseButton,
+    portalContainer,
+    shouldBlockScroll,
+    backdrop: originalProps.backdrop ?? "opaque",
+    isOpen: state.isOpen,
+    onClose: state.close,
+    disableAnimation,
+    setBodyMounted,
+    setHeaderMounted,
+    getDialogProps,
+    getBackdropProps,
+    getCloseButtonProps,
+  };
+}
+
+export type UseDrawerReturn = ReturnType<typeof useDrawer>;\n- packages/components/drawer/stories/drawer.stories.tsx (added, 305 changes)\n  Patch: @@ -0,0 +1,305 @@
+/* eslint-disable jsx-a11y/anchor-is-valid */
+/* eslint-disable jsx-a11y/no-autofocus */
+import React from "react";
+import {Meta} from "@storybook/react";
+import {drawer} from "@nextui-org/theme";
+import {Button} from "@nextui-org/button";
+import {Input} from "@nextui-org/input";
+import {Checkbox} from "@nextui-org/checkbox";
+import {Link} from "@nextui-org/link";
+import {MailFilledIcon, LockFilledIcon} from "@nextui-org/shared-icons";
+import Lorem from "react-lorem-component";
+
+import {
+  Drawer,
+  DrawerContent,
+  DrawerHeader,
+  DrawerBody,
+  DrawerFooter,
+  DrawerProps,
+  useDisclosure,
+} from "../src";
+
+export default {
+  title: "Components/Drawer",
+  component: Drawer,
+  argTypes: {
+    size: {
+      control: {
+        type: "select",
+      },
+      options: ["xs", "sm", "md", "lg", "xl", "2xl", "3xl", "4xl", "5xl", "6xl", "full"],
+    },
+    radius: {
+      control: {
+        type: "select",
+      },
+      options: ["none", "sm", "md", "lg"],
+    },
+    backdrop: {
+      control: {
+        type: "select",
+      },
+      options: ["transparent", "blur", "opaque"],
+    },
+    disableAnimation: {
+      control: {
+        type: "boolean",
+      },
+    },
+    isDismissable: {
+      control: {
+        type: "boolean",
+      },
+    },
+    isKeyboardDismissDisabled: {
+      control: {
+        type: "boolean",
+      },
+    },
+    children: {
+      control: {
+        disable: true,
+      },
+    },
+  },
+  decorators: [
+    (Story) => (
+      <div className="flex items-center justify-center w-screen h-screen">
+        <Story />
+      </div>
+    ),
+  ],
+} as Meta<typeof Drawer>;
+
+const defaultProps = {
+  ...drawer.defaultVariants,
+  disableAnimation: false,
+  isDismissable: true,
+  isKeyboardDismissDisabled: false,
+};
+
+const content = (
+  <DrawerContent>
+    {(onClose) => (
+      <>
+        <DrawerHeader className="flex flex-col gap-1">Log in</DrawerHeader>
+        <DrawerBody>
+          <Input
+            autoFocus
+            endContent={
+              <MailFilledIcon className="text-2xl text-default-400 pointer-events-none flex-shrink-0" />
+            }
+            label="Email"
+            placeholder="Enter your email"
+            variant="bordered"
+          />
+          <Input
+            endContent={
+              <LockFilledIcon className="text-2xl text-default-400 pointer-events-none flex-shrink-0" />
+            }
+            label="Password"
+            placeholder="Enter your password"
+            type="password"
+            variant="bordered"
+          />
+          <div className="flex py-2 px-1 justify-between">
+            <Checkbox
+              classNames={{
+                label: "text-sm",
+              }}
+            >
+              Remember me
+            </Checkbox>
+            <Link color="primary" href="#" size="sm">
+              Forgot password?
+            </Link>
+          </div>
+        </DrawerBody>
+        <DrawerFooter>
+          <Button color="danger" variant="flat" onPress={onClose}>
+            Close
+          </Button>
+          <Button color="primary" onPress={onClose}>
+            Sign in
+          </Button>
+        </DrawerFooter>
+      </>
+    )}
+  </DrawerContent>
+);
+
+const Template = (args: DrawerProps) => {
+  const {isOpen, onOpen, onOpenChange} = useDisclosure({defaultOpen: args.defaultOpen});
+
+  return (
+    <>
+      <Button onPress={onOpen}>Open Drawer</Button>
+      <Drawer {...args} isOpen={isOpen} onOpenChange={onOpenChange}>
+        {content}
+      </Drawer>
+    </>
+  );
+};
+
+const InsideScrollTemplate = (args: DrawerProps) => {
+  const {isOpen, onOpen, onClose, onOpenChange} = useDisclosure();
+
+  return (
+    <>
+      <Button onPress={onOpen}>Open Drawer</Button>
+      <Drawer {...args} isOpen={isOpen} onOpenChange={onOpenChange}>
+        <DrawerContent>
+          <DrawerHeader>Drawer Title</DrawerHeader>
+          <DrawerBody>
+            <Lorem count={5} />
+          </DrawerBody>
+          <DrawerFooter>
+            <Button onPress={onClose}>Close</Button>
+          </DrawerFooter>
+        </DrawerContent>
+      </Drawer>
+    </>
+  );
+};
+
+const OutsideScrollTemplate = (args: DrawerProps) => {
+  const {isOpen, onOpen, onClose, onOpenChange} = useDisclosure();
+
+  return (
+    <>
+      <Button onPress={onOpen}>Open Drawer</Button>
+      <Drawer {...args} isOpen={isOpen} scrollBehavior="outside" onOpenChange={onOpenChange}>
+        <DrawerContent>
+          <DrawerHeader>Drawer Title</DrawerHeader>
+          <DrawerBody>
+            <Lorem count={5} />
+          </DrawerBody>
+          <DrawerFooter>
+            <Button onPress={onClose}>Close</Button>
+          </DrawerFooter>
+        </DrawerContent>
+      </Drawer>
+    </>
+  );
+};
+const OpenChangeTemplate = (args: DrawerProps) => {
+  const {isOpen, onOpen, onClose, onOpenChange} = useDisclosure();
+
+  return (
+    <div className="flex flex-col gap-2">
+      <Button onPress={onOpen}>Open Drawer</Button>
+      <Drawer {...args} isOpen={isOpen} onOpenChange={onOpenChange}>
+        <DrawerContent>
+          <DrawerHeader>Drawer Title</DrawerHeader>
+          <DrawerBody>
+            <Lorem count={5} />
+          </DrawerBody>
+          <DrawerFooter>
+            <Button onPress={onClose}>Close</Button>
+          </DrawerFooter>
+        </DrawerContent>
+      </Drawer>
+      <p className="text-sm">isOpen: {isOpen ? "true" : "false"}</p>
+    </div>
+  );
+};
+
+export const Default = {
+  render: Template,
+
+  args: {
+    ...defaultProps,
+  },
+};
+
+export const PlacementTop = {
+  render: Template,
+
+  args: {
+    ...defaultProps,
+    placement: "top",
+  },
+};
+
+export const PlacementLeft = {
+  render: Template,
+
+  args: {
+    ...defaultProps,
+    placement: "left",
+  },
+};
+
+export const PlacementBottom = {
+  render: Template,
+
+  args: {
+    ...defaultProps,
+    placement: "bottom",
+  },
+};
+
+export const DefaultOpen = {
+  render: Template,
+
+  args: {
+    ...defaultProps,
+    defaultOpen: true,
+  },
+};
+
+export const OpenChange = {
+  render: OpenChangeTemplate,
+
+  args: {
+    ...defaultProps,
+    scrollBehavior: "inside",
+  },
+};
+
+export const InsideScroll = {
+  render: InsideScrollTemplate,
+
+  args: {
+    ...defaultProps,
+    scrollBehavior: "inside",
+  },
+};
+
+export const OutsideScroll = {
+  render: OutsideScrollTemplate,
+
+  args: {
+    ...defaultProps,
+  },
+};
+
+export const DisableAnimation = {
+  render: Template,
+
+  args: {
+    ...defaultProps,
+    disableAnimation: true,
+  },
+};
+
+export const CustomMotion = {
+  render: Template,
+
+  args: {
+    ...defaultProps,
+    motionProps: {
+      variants: {
+        enter: {
+          opacity: 1,
+          duration: 0.3,
+        },
+        exit: {
+          opacity: 0,
+          duration: 0.3,
+        },
+      },
+    },
+  },
+};\n- packages/components/drawer/tsconfig.json (added, 10 changes)\n  Patch: @@ -0,0 +1,10 @@
+{
+  "extends": "../../../tsconfig.json",
+  "compilerOptions": {
+    "baseUrl": ".",
+    "paths": {
+      "tailwind-variants": ["../../../node_modules/tailwind-variants"]
+    },
+  },
+  "include": ["src", "index.ts"]
+}\n- packages/components/drawer/tsup.config.ts (added, 8 changes)\n  Patch: @@ -0,0 +1,8 @@
+import {defineConfig} from "tsup";
+
+export default defineConfig({
+  clean: true,
+  target: "es2019",
+  format: ["cjs", "esm"],
+  banner: {js: '"use client";'},
+});\n- packages/core/theme/src/components/drawer.ts (added, 167 changes)\n  Patch: @@ -0,0 +1,167 @@
+import type {VariantProps} from "tailwind-variants";
+
+import {tv} from "../utils/tv";
+import {dataFocusVisibleClasses} from "../utils";
+
+/**
+ * Drawer **Tailwind Variants** component
+ *
+ * @example
+ * ```js
+ * const {base, backdrop, content, header, body, footer} = drawer({...})
+ *
+ * <div>
+ *    <button>Open Drawer</button>
+ *    <div className={backdrop()}/>
+ *    <div className={base()}>
+ *       <div className={content()}>
+ *          <div className={header()}>Header</div>
+ *          <div className={body()}>Body</div>
+ *          <div className={footer()}>Footer</div>
+ *       </div>
+ *    </div>
+ * </div>
+ * ```
+ */
+const drawer = tv({
+  slots: {
+    wrapper: [
+      "flex",
+      "w-screen",
+      "h-[100dvh]",
+      "fixed",
+      "inset-0",
+      "z-50",
+      "overflow-x-auto",
+      "justify-center",
+      //  mobile animation vars
+      "[--scale-enter:100%]",
+      "[--scale-exit:100%]",
+      "[--slide-enter:0px]",
+      "[--slide-exit:80px]",
+      // tablet/desktop animation vars
+      "sm:[--scale-enter:100%]",
+      "sm:[--scale-exit:103%]",
+      "sm:[--slide-enter:0px]",
+      "sm:[--slide-exit:0px]",
+    ],
+    base: ["absolute", "z-50", "outline-none"],
+    content: "flex flex-col w-full h-full bg-white box-border bg-content1 outline-none relative",
+    backdrop: "z-50",
+    header: "flex py-4 px-6 flex-initial text-large font-semibold",
+    body: "flex flex-1 flex-col gap-3 px-6 py-2",
+    footer: "flex flex-row gap-2 px-6 py-4 justify-end",
+    closeButton: [
+      "absolute",
+      "appearance-none",
+      "outline-none",
+      "select-none",
+      "top-1",
+      "right-1",
+      "p-2",
+      "text-foreground-500",
+      "rounded-full",
+      "hover:bg-default-100",
+      "active:bg-default-200",
+      "tap-highlight-transparent",
+      // focus ring
+      ...dataFocusVisibleClasses,
+    ],
+  },
+  variants: {
+    size: {
+      xs: {
+        base: "w-[20rem] h-[20rem]",
+      },
+      sm: {
+        base: "w-[24rem] h-[24rem]",
+      },
+      md: {
+        base: "w-[28rem] h-[28rem]",
+      },
+      lg: {
+        base: "w-[32rem] h-[32rem]",
+      },
+      xl: {
+        base: "w-[36rem] h-[36rem]",
+      },
+      "2xl": {
+        base: "w-[42rem] h-[42rem]",
+      },
+      "3xl": {
+        base: "w-[48rem] h-[48rem]",
+      },
+      "4xl": {
+        base: "w-[56rem] h-[56rem]",
+      },
+      "5xl": {
+        base: "w-[64rem] h-[64rem]",
+      },
+      full: {
+        base: "my-0 mx-0 sm:mx-0 sm:my-0 w-full h-[100dvh] !rounded-none",
+      },
+    },
+    radius: {
+      none: {content: "rounded-none"},
+      sm: {content: "rounded-small"},
+      md: {content: "rounded-medium"},
+      lg: {content: "rounded-large"},
+    },
+    placement: {
+      top: {
+        base: "w-full inset-x-0 top-0 rounded-t-none",
+      },
+      right: {
+        base: "h-full inset-y-0, right-0 rounded-r-none",
+      },
+      bottom: {
+        base: "w-full inset-x-0 bottom-0 rounded-b-none",
+      },
+      left: {
+        base: "h-full inset-y-0, left-0 rounded-l-none",
+      },
+    },
+    backdrop: {
+      transparent: {
+        backdrop: "hidden",
+      },
+      opaque: {
+        backdrop: "bg-overlay/50 backdrop-opacity-disabled",
+      },
+      blur: {
+        backdrop: "backdrop-blur-md backdrop-saturate-150 bg-overlay/30",
+      },
+    },
+    scrollBehavior: {
+      inside: {
+        base: "overflow-y-hidden",
+        content: "overflow-y-hidden",
+        body: "overflow-y-auto",
+      },
+      outside: {
+        content: "overflow-y-auto",
+      },
+    },
+  },
+  defaultVariants: {
+    size: "md",
+    radius: "lg",
+    placement: "right",
+    backdrop: "opaque",
+    scrollBehavior: "inside",
+  },
+  compoundVariants: [
+    // backdrop (opaque/blur)
+    {
+      backdrop: ["opaque", "blur"],
+      class: {
+        backdrop: "w-screen h-screen fixed inset-0",
+      },
+    },
+  ],
+});
+
+export type DrawerVariantProps = VariantProps<typeof drawer>;
+export type DrawerSlots = keyof ReturnType<typeof drawer>;
+
+export {drawer};\n
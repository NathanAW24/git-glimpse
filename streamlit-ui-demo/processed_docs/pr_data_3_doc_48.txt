Pull Request Number: 3982
Title: Alert component
Base Branch: canary
Head Branch: adding_alert_component
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/3982
State: MERGED
Created At: 2024-11-04T13:32:44Z
Merged At: 2024-11-04T13:54:34Z
Participants: jrgarciadev, abhinav700, wingkwong

Description:
Closes: #2250
Closes: https://github.com/nextui-org/nextui/discussions/313

Original PR #3680
üìù Description

‚õ≥Ô∏è Current behavior (updates)

üöÄ New behavior

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit
Release Notes


New Features

Introduced the Alert component for displaying notifications.
Added multiple variants and customizable styles for alerts, including color and radius options.
New icons for alerts: InfoCircleIcon, WarningIcon, DangerIcon, and SuccessIcon.
Enhanced user interaction with controlled visibility for alerts.



Documentation

Comprehensive documentation for the Alert component is now available, covering installation, usage, and API details.
A new README file for the @nextui-org/alert package has been created.
Updated documentation for various components, ensuring users have access to the latest information.



Bug Fixes

Implemented tests to ensure the Alert component functions correctly under various conditions.

Commits:
- feat(alert): began the work on alert component\n- fix(readme): making correction\n- chore(deps): change to 2.0.0\n- chore(docs): update README.md\n- feat(theme): init alert tv\n- chore(alert): update package.json\n- feat(alert): init alert storybook structure\n- chore(changeset): add changeset\n- Merge branch 'adding_alert_component' of https://github.com/abhinav700/nextui into pr/3680\n- chore(changeset): change to minor\n- chore(alert): revise alert package.json\n- feat(alert): init test structure\n- chore(deps): pnpm-lock.yaml\n- feat(alert): initailized theme and basic structure\n- feat(alert): completed use-alert.ts and alert.tsx\n- feat(alert): remove innerWrapper, replace helperWrapper with mainWrapper, adding isCloseable prop\n- feat(alert): adding isCloseable prop to baseWrapper dependency\n- Merge branch 'nextui-org:canary' into adding_alert_component\n- feat(alert): setting the default value of isCloseable prop to true\n- feat(alert): moving CloseIcon inside the button\n- feat(alert): updated package.json\n- feat(alert): default variant and default story\n- feat(alert): adding color and radius stories\n- feat(alert): completed the styling\n- feat(alert): add stories for isCloseable prop and restyle other stories\n- feat(alert): correcting ref type\n- feat(alert): add test cases\n- feat(alert): remove startContent and endContent props\n- feat(alert): make styling more accurate\n- feat(alert): fixed default props\n- feat(alert): fixed theme docs\n- feat(alert): add logic for icons\n- feat(alert): begin to add docs\n- chore(alert): implement the changes suggested in code review\n- feat(alert): add onclose prop to alert\n- feat(alert): add test cases\n- docs(alert): add onClose  event\n- feat(docs): add alert to routes.json\n- fix(alert): correct the text colors\n- docs(alert): fix imports and syntax errors\n- chore(alert): implement the changes suggested in code review\n- chore(alert): lint the code and change isCloseable to isClosable\n- chore(alert): lint the code\n- chore(alert): recover the branch\n- chore(alert): run pnpm  i\n- Merge branch 'nextui-org:canary' into adding_alert_component\n- fix(alert): fix the logic for close button and add test case\n- docs(alert): fix docs, change isCloseable to isClosable and change docs for isClosable property\n- chore(alert): add the support for RTL, refactor the code and fix the typos\n- docs(alert): grammer issues fix\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 740e07d0e6ab6c9570ace21c0a2f1cb733f034ed

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 3 packages</summary>

  | Name              | Type  |
| ----------------- | ----- |
| @nextui-org/alert | Patch |
| @nextui-org/theme | Patch |
| @nextui-org/react | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/adding_alert_component?filename=.changeset/spicy-bags-live.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Falert%22%3A%20patch%0A%22%40nextui-org%2Freact%22%3A%20patch%0A%22%40nextui-org%2Ftheme%22%3A%20patch%0A%22%40nextui-org%2Fshared-icons%22%3A%20patch%0A---%0A%0AAlert%20component%0A)

\n- vercel: [vc]: #GrqedNmuV9om7s/yYIZ++nP9sQQ57qzpDeZaNNCDlYg=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9IWEx3UlVkY3g0a1NSUjd5SnNZUVJaTjdSZnB5IiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1hZGRpbmdhbGVydGNvbXBvbmVudC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWFkZGluZ2FsZXJ0Y29tcG9uZW50LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvM1VoUjZrTlkyUWthclBQUTk1S29uakg5OEx6aCIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1hZGRpbmdhbGVydGNvbXBvbmVudC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtYWRkaW5nYWxlcnRjb21wb25lbnQtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/HXLwRUdcx4kSRR7yJsYQRZN7Rfpy)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-addingalertcomponent-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-addingalertcomponent-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 4, 2024 1:52pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/3UhR6kNY2QkarPPQ95KonjH98Lzh)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-addingalertcomponent-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-addingalertcomponent-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 4, 2024 1:52pm |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

This pull request introduces a new `Alert` component as part of the `@nextui-org` library, along with associated configurations, styles, documentation, and tests. It updates the routing configuration to include the new component and modifies existing routes. Several new files are added to implement various alert functionalities, including different styles and controlled visibility. Additionally, a README and TypeScript configuration for the `@nextui-org/alert` package are created to support the new component.

## Changes

| File Path                                          | Change Summary                                                                                     |
|----------------------------------------------------|---------------------------------------------------------------------------------------------------|
| .changeset/poor-sheep-repair.md                   | Introduced new `Alert` component; added patches for `@nextui-org/alert` and `@nextui-org/theme`. |
| apps/docs/config/routes.json                       | Added new route for `Alert` component; updated existing routes for various components.            |
| apps/docs/content/components/alert/colors.ts       | Added `App` component to render alerts with color variants.                                       |
| apps/docs/content/components/alert/controlled.ts   | Added `App` component to control alert visibility with a button.                                  |
| apps/docs/content/components/alert/custom-impl.ts  | Introduced `MyAlert` component with custom icons and styles.                                      |
| apps/docs/content/components/alert/custom-styles.ts | Created `App` component to display a styled success message.                                      |
| apps/docs/content/components/alert/index.ts        | Aggregated alert-related components for centralized access.                                        |
| apps/docs/content/components/alert/radius.ts       | Added `App` component to demonstrate alerts with different border radius styles.                  |
| apps/docs/content/components/alert/usage.ts        | Created `App` component to show usage example of `Alert`.                                         |
| apps/docs/content/components/alert/variants.ts     | Added `App` component to display different alert variants.                                         |
| apps/docs/content/components/alert/with-icon.ts    | Introduced `UserIcon` and `App` components to show alerts with custom icons.                      |
| apps/docs/content/components/index.ts               | Exported `alert` module from index file.                                                          |
| apps/docs/content/docs/components/alert.mdx        | Added documentation for `Alert` component covering installation, usage, and API details.          |
| packages/components/alert/README.md                | Created README for `@nextui-org/alert` package with installation instructions and contribution guidelines. |
| packages/components/alert/__tests__/alert.test.tsx | Added tests for `Alert` component functionality and rendering.                                    |
| packages/components/alert/package.json             | Created `package.json` for `@nextui-org/alert` package with metadata and dependencies.           |
| packages/components/alert/src/alert.tsx            | Introduced `Alert` component with customizable properties and ref forwarding.                      |
| packages/components/alert/src/index.ts             | Exported `Alert` component and associated types from index file.                                  |
| packages/components/alert/src/use-alert.ts         | Created `useAlert` hook for managing alert state and properties.                                   |
| packages/components/alert/stories/alert.stories.tsx| Added Storybook configuration to demonstrate `Alert` component variations and usage.              |
| packages/components/alert/tsconfig.json            | Added TypeScript configuration for the `alert` component.                                         |
| packages/components/alert/tsup.config.ts           | Created build configuration for the `alert` component.                                            |
| packages/core/react/package.json                   | Added `@nextui-org/alert` dependency to `@nextui-org/react`.                                     |
| packages/core/react/src/index.ts                   | Exported `Alert` component from core React module.                                               |
| packages/core/theme/src/components/alert.ts        | Introduced Tailwind Variants component for customizable alerts.                                    |
| packages/core/theme/src/components/index.ts        | Exported `alert` module from theme components index.                                              |
| packages/utilities/shared-icons/src/danger.tsx     | Added `DangerIcon` component for alert visuals.                                                   |
| packages/utilities/shared-icons/src/index.ts       | Exported new icon modules including `info-circle`, `warning`, `danger`, and `success`.            |
| packages/utilities/shared-icons/src/info-circle.tsx | Added `InfoCircleIcon` component for alert visuals.                                              |
| packages/utilities/shared-icons/src/success.tsx    | Added `SuccessIcon` component for alert visuals.                                                 |
| packages/utilities/shared-icons/src/warning.tsx    | Added `WarningIcon` component for alert visuals.                                                 |

## Possibly related PRs

- #3815: Introduces a new `Alert` component, while unrelated to the `Alert` functionality, updates documentation and components related to the `Twitter` branding.

## Suggested labels

`üìã Scope : Docs`

<!-- walkthrough_end -->


<!-- internal state start -->


<!--  -->

<!-- internal state end -->
<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/poor-sheep-repair.md (added, 6 changes)\n  Patch: @@ -0,0 +1,6 @@
+---
+"@nextui-org/alert": patch
+"@nextui-org/theme": patch
+---
+
+introduced Alert component (#2250)\n- apps/docs/config/routes.json (modified, 7 changes)\n  Patch: @@ -144,6 +144,13 @@
           "keywords": "autocomplete, auto suggest, search, typeahead",
           "path": "/docs/components/autocomplete.mdx"
         },
+        {
+          "key": "alert",
+          "title": "Alert",
+          "keywords": "alert, notification, message",
+          "path": "/docs/components/alert.mdx",
+          "isNew": true
+        },
         {
           "key": "avatar",
           "title": "Avatar",\n- apps/docs/content/components/alert/colors.ts (added, 26 changes)\n  Patch: @@ -0,0 +1,26 @@
+const App = `import {Alert} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex items-center justify-center w-full">
+      <div className="flex flex-col w-full">
+        {["default", "primary", "secondary", "success", "warning", "danger"].map((color) => (
+          <div key={color} className="w-full flex items-center my-3">
+            <Alert 
+              color={color} 
+              title={\`This is a \${color} alert\`}
+            />
+          </div>
+        ))}
+      </div>
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/alert/controlled.ts (added, 36 changes)\n  Patch: @@ -0,0 +1,36 @@
+const App = `import {Alert, Button} from "@nextui-org/react";
+
+export default function App() {
+  const [isVisible, setIsVisible] = React.useState(true);
+
+  const title = "Success Notification";
+  const description = "Your action has been completed successfully. We'll notify you when updates are available.";
+
+  return (
+    <div className="flex flex-col gap-4">
+      {isVisible ? (
+        <Alert 
+          title={title}
+          description={description}
+          isVisible={isVisible} 
+          onClose={() => setIsVisible(false)}
+        />
+      ) : (
+        <Button 
+          variant="bordered" 
+          onPress={() => setIsVisible(true)}
+        >
+          Show Alert
+        </Button>
+      )}
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/alert/custom-impl.ts (added, 142 changes)\n  Patch: @@ -0,0 +1,142 @@
+const InfoCircleIcon = `export const InfoCircleIcon = (props) => (
+  <svg
+    fill="none"
+    height="24"
+    viewBox="0 0 24 24"
+    width="24"
+    xmlns="http://www.w3.org/2000/svg"
+    {...props}
+  >
+    <path
+      d="M12 22C17.51 22 22 17.51 22 12C22 6.49 17.51 2 12 2C6.49 2 2 6.49 2 12C2 17.51 6.49 22 12 22ZM12.75 16C12.75 16.41 12.41 16.75 12 16.75C11.59 16.75 11.25 16.41 11.25 16L11.25 11C11.25 10.59 11.59 10.25 12 10.25C12.41 10.25 12.75 10.59 12.75 11L12.75 16ZM11.08 7.62C11.13 7.49 11.2 7.39 11.29 7.29C11.39 7.2 11.5 7.13 11.62 7.08C11.74 7.03 11.87 7 12 7C12.13 7 12.26 7.03 12.38 7.08C12.5 7.13 12.61 7.2 12.71 7.29C12.8 7.39 12.87 7.49 12.92 7.62C12.97 7.74 13 7.87 13 8C13 8.13 12.97 8.26 12.92 8.38C12.87 8.5 12.8 8.61 12.71 8.71C12.61 8.8 12.5 8.87 12.38 8.92C12.14 9.02 11.86 9.02 11.62 8.92C11.5 8.87 11.39 8.8 11.29 8.71C11.2 8.61 11.13 8.5 11.08 8.38C11.03 8.26 11 8.13 11 8C11 7.87 11.03 7.74 11.08 7.62Z"
+    />
+  </svg>
+);`;
+
+const CloseIcon = `export const CloseIcon = (props) => (
+  <svg
+    aria-hidden="true"
+    fill="none"
+    focusable="false"
+    height="1em"
+    role="presentation"
+    stroke="currentColor"
+    strokeLinecap="round"
+    strokeLinejoin="round"
+    strokeWidth={2}
+    viewBox="0 0 24 24"
+    width="1em"
+    {...props}
+  >
+    <path d="M18 6L6 18M6 6l12 12" />
+  </svg>
+);`;
+
+const App = `import React, {forwardRef, useMemo} from "react";
+import {useAlert} from "@nextui-org/react";
+import {InfoCircleIcon} from "./InfoCircleIcon";
+import {CloseIcon} from "./CloseIcon"
+
+const styles = {
+  base: [
+    "bg-slate-100",
+    "border",
+    "shadow",
+    "hover:bg-slate-200",
+    "focus-within:!bg-slate-100",
+    "dark:bg-slate-900",
+    "dark:hover:bg-slate-800",
+    "dark:border-slate-800",
+    "dark:focus-within:!bg-slate-900",
+    "cursor-pointer"
+  ],
+  title: [
+    "text-base",
+    "text-slate-500",
+    "font-bold"
+  ],
+  description: [
+    "text-base",
+    "text-slate-500",
+  ],
+}
+
+const MyAlert = forwardRef((props, ref) => {
+  const {
+    title,
+    description,
+    isClosable,
+    domRef,
+    handleClose,
+    getBaseProps,
+    getMainWrapperProps,
+    getDescriptionProps,
+    getTitleProps,
+    getCloseButtonProps,
+    color,
+    isVisible,
+    onClose,
+    getCloseIconProps,
+    getAlertIconProps,
+  } = useAlert({
+      ...props,
+      ref,
+      // this is just for the example, the props bellow should be passed by the parent component
+      title: "Email Sent!!",
+      description: "You will get a reply soon",
+      // custom styles
+      classNames: {
+        ...styles,
+      },
+    });
+
+  const mainWrapper = useMemo(() => {
+    return (
+      <div {...getMainWrapperProps()}>
+        {title && <div {...getTitleProps()}>{title}</div>}
+        <div {...getDescriptionProps()}>{description}</div>
+      </div>
+    );
+  }, [title, description, getMainWrapperProps, getTitleProps, getDescriptionProps]);
+
+  const baseWrapper = useMemo(() => {
+    return isVisible ? (
+      <div ref={domRef} {...getBaseProps()}>
+        <InfoCircleIcon {...getAlertIconProps()} />
+        {mainWrapper}
+        {(isClosable || onClose) && (
+          <button onClick={handleClose} {...getCloseButtonProps()}>
+            <CloseIcon />
+          </button>
+        )}
+      </div>
+    ) : null;
+  }, [
+    mainWrapper,
+    isClosable,
+    getCloseButtonProps,
+    isVisible,
+    domRef,
+    getBaseProps,
+    handleClose,
+    color,
+    onClose,
+    getAlertIconProps,
+  ]);
+
+  return <>{baseWrapper}</>;
+});
+
+MyAlert.displayName = "MyAlert";
+
+export default MyAlert;`;
+
+const react = {
+  "/App.jsx": App,
+  "/InfoCircleIcon": InfoCircleIcon,
+  "/CloseIcon": CloseIcon,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/alert/custom-styles.ts (added, 35 changes)\n  Patch: @@ -0,0 +1,35 @@
+const App = `import {Alert} from "@nextui-org/react";
+
+export default function App() {
+  const title = "Success";
+  const description = "Thanks for subscribing to our newsletter!";
+  
+  return (
+    <div className="flex items-center justify-center w-full">
+      <Alert
+        title={title}
+        description={description}
+        classNames={{
+           base: [
+            "bg-background",
+            "border",
+            "border-foreground-400",
+            "shadow",
+            "hover:bg-slate-200",
+            "cursor-pointer",
+          ],
+          title: ["text-base", "text-foreground", "font-semibold"],
+          description: ["text-base", "text-foreground-600"],
+        }}
+      />
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/alert/index.ts (added, 19 changes)\n  Patch: @@ -0,0 +1,19 @@
+import colors from "./colors";
+import usage from "./usage";
+import radius from "./radius";
+import customImpl from "./custom-impl";
+import customStyles from "./custom-styles";
+import variants from "./variants";
+import withIcon from "./with-icon";
+import controlled from "./controlled";
+
+export const alertContent = {
+  colors,
+  usage,
+  radius,
+  customImpl,
+  customStyles,
+  variants,
+  withIcon,
+  controlled,
+};\n- apps/docs/content/components/alert/radius.ts (added, 26 changes)\n  Patch: @@ -0,0 +1,26 @@
+const App = `import {Alert} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex items-center justify-center w-full">
+      <div className="flex flex-col w-full">
+        {["none", "sm", "md", "lg", "full"].map((radius) => (
+          <div key={radius} className="w-full flex items-center my-3">
+            <Alert 
+              radius={radius} 
+              title={\`This is a \${radius} radius alert\`}
+            />
+          </div>
+        ))}
+      </div>
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/alert/usage.ts (added, 20 changes)\n  Patch: @@ -0,0 +1,20 @@
+const App = `import {Alert} from "@nextui-org/react";
+
+export default function App() {
+  const title = "This is an alert";
+  const description = "Thanks for subscribing to our newsletter!";
+  
+  return (
+    <div className="flex items-center justify-center w-full">
+      <Alert title={title} description={description} />
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/alert/variants.ts (added, 25 changes)\n  Patch: @@ -0,0 +1,25 @@
+const App = `import {Alert} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex flex-col gap-4 w-full">
+      <Alert variant="solid">
+        A solid variant alert
+      </Alert>
+      <Alert variant="bordered">
+        A bordered variant alert
+      </Alert>
+      <Alert variant="flat">
+        A flat variant alert
+      </Alert>
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/alert/with-icon.ts (added, 54 changes)\n  Patch: @@ -0,0 +1,54 @@
+const App = `import {Alert} from "@nextui-org/react";
+
+const UserIcon = ({
+  fill = 'currentColor',
+  filled,
+  size,
+  height,
+  width,
+  label,
+  ...props
+}) => {
+  return (
+    <svg
+      data-name="Iconly/Curved/Profile"
+      xmlns="http://www.w3.org/2000/svg"
+      viewBox="0 0 24 24"
+      width={size || width || 24}
+      height={size || height || 24}
+      {...props}
+    >
+      <g
+        fill="none"
+        stroke={fill}
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeMiterlimit={10}
+        strokeWidth={1.5}
+      >
+        <path
+          data-name="Stroke 1"
+          d="M11.845 21.662C8.153 21.662 5 21.088 5 18.787s3.133-4.425 6.845-4.425c3.692 0 6.845 2.1 6.845 4.4s-3.134 2.9-6.845 2.9z"
+        />
+        <path
+          data-name="Stroke 3"
+          d="M11.837 11.174a4.372 4.372 0 10-.031 0z"
+        />
+      </g>
+    </svg>
+  );
+};
+
+export default function App() {
+  return (
+    <Alert icon={<UserIcon />}>An alert with a custom icon</Alert>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/index.ts (modified, 1 changes)\n  Patch: @@ -31,3 +31,4 @@ export * from "./dropdown";
 export * from "./navbar";
 export * from "./table";
 export * from "./autocomplete";
+export * from "./alert";\n- apps/docs/content/docs/components/alert.mdx (added, 124 changes)\n  Patch: @@ -0,0 +1,124 @@
+---
+title: "Alert"
+description: "Alerts are temporary notifications that provide concise feedback about an action or event."
+---
+
+import {alertContent} from "@/content/components/alert";
+
+# Alert
+
+Alerts are temporary notifications that provide concise feedback about an action or event.
+
+<ComponentLinks component="alert" />
+
+---
+
+<CarbonAd />
+
+## Installation
+
+<PackageManagers
+  showGlobalInstallWarning
+  commands={{
+    cli: "npx nextui-cli@latest add alert",
+    npm: "npm install @nextui-org/alert",
+    yarn: "yarn add @nextui-org/alert",
+    pnpm: "pnpm add @nextui-org/alert",
+    bun: "bun add @nextui-org/alert",
+  }}
+/>
+
+## Import
+
+<ImportTabs
+  commands={{
+    main: 'import {Alert} from "@nextui-org/react";',
+    individual: 'import {Alert} from "@nextui-org/alert";',
+  }}
+/>
+
+## Usage
+
+<CodeDemo title="Usage" files={alertContent.usage} />
+
+### Colors
+
+Alert comes with 6 color variants to convey different meanings.
+
+<CodeDemo title="Colors" files={alertContent.colors} />
+
+### Variants
+
+<CodeDemo title="Variants" files={alertContent.variants} />
+
+### Radius
+
+<CodeDemo title="Radius" files={alertContent.radius} />
+
+### With Icon
+
+By default, Alert displays an appropriate icon based on the `color` prop. You can override this by providing a custom icon using the `icon` prop.
+
+<CodeDemo title="With Icon" files={alertContent.withIcon} />
+
+### Controlled Visibility
+
+You can control the alert visibility using the `isVisible` and `onVisibleChange` props.
+
+<CodeDemo title="Controlled" files={alertContent.controlled} />
+
+### Custom Styles
+
+You can customize the alert by passing custom Tailwind CSS classes to the component slots.
+
+<CodeDemo title="Custom Styles" files={alertContent.customStyles} />
+
+### Custom Implementation
+
+You can use the `useAlert` hook to create your own alert component.
+
+<CodeDemo showPreview={false} title="Custom Implementation" files={alertContent.customImpl} />
+
+<Spacer y={4} />
+
+## Data Attributes
+
+Alert has the following attributes on the `base` element:
+
+- **data-visible**: When the alert is visible
+- **data-closeable**: When the alert can be closed
+- **data-has-title**: When the alert has a title
+- **data-has-description**: When the alert has a description
+
+<Spacer y={4} />
+
+## Accessibility
+
+- Alert has role of `alert`
+- Close button has aria-label="Close" by default
+- When closed, alert is removed from the DOM
+
+<Spacer y={4} />
+
+## API
+
+### Alert Props
+
+| Attribute        | Type                                                                        | Description                                 | Default   |
+| ---------------- | --------------------------------------------------------------------------- | ------------------------------------------- | --------- |
+| title            | `string`                                                                    | The alert title                             | -         |
+| icon             | `ReactNode`                                                                 | The alert icon - overrides the default icon | -         |
+| description      | `ReactNode`                                                                 | The alert description                       | -         |
+| color            | `default` \| `primary` \| `secondary` \| `success` \| `warning` \| `danger` | The alert color theme                       | `default` |
+| variant          | `solid` \| `bordered` \| `flat`                                             | The alert variant                           | `flat`    |
+| radius           | `none` \| `sm` \| `md` \| `lg` \| `full`                                    | The alert border radius                     | `md`      |
+| isVisible        | `boolean`                                                                   | Whether the alert is visible                | -         |
+| isClosable       | `boolean`                                                                   | Whether the alert can be closed             | `false`   |
+| closeButtonProps | `ButtonProps`                                                               | Props for the close button                  | -         |
+
+### Alert Events
+
+| Attribute       | Type                           | Description                                      |
+| --------------- | ------------------------------ | ------------------------------------------------ |
+| onClose         | `() => void`                   | Handler called when the close button is clicked  |
+| onVisibleChange | `(isVisible: boolean) => void` | Handler called when the alert visibility changes |\n- packages/components/alert/README.md (added, 24 changes)\n  Patch: @@ -0,0 +1,24 @@
+# @nextui-org/alert
+
+Alerts are temporary notifications that provide concise feedback about an action or event.
+
+Please refer to the [documentation](https://nextui.org/docs/components/alert) for more information.
+
+## Installation
+
+```sh
+yarn add @nextui-org/alert
+# or
+npm i @nextui-org/alert
+```
+
+## Contribution
+
+Yes please! See the
+[contributing guidelines](https://github.com/nextui-org/nextui/blob/master/CONTRIBUTING.md)
+for details.
+
+## License
+
+This project is licensed under the terms of the
+[MIT license](https://github.com/nextui-org/nextui/blob/master/LICENSE).\n- packages/components/alert/__tests__/alert.test.tsx (added, 85 changes)\n  Patch: @@ -0,0 +1,85 @@
+import * as React from "react";
+import {act, render} from "@testing-library/react";
+
+import {Alert} from "../src";
+
+const title = "Testing Title";
+const description = "Testing Description";
+
+describe("Alert", () => {
+  it("should render correctly", () => {
+    const wrapper = render(<Alert description={description} title={title} />);
+
+    expect(() => wrapper.unmount()).not.toThrow();
+  });
+
+  it("ref should be forwarded", () => {
+    const ref = React.createRef<HTMLDivElement>();
+
+    render(<Alert ref={ref} description={description} title={title} />);
+
+    expect(ref.current).not.toBeNull();
+  });
+
+  it("should display title and description when component is rendered", () => {
+    const wrapper = render(<Alert description={description} title={title} />);
+
+    const titleElement = wrapper.getByText(title);
+    const descriptionElement = wrapper.getByText(description);
+
+    expect(titleElement).toContainHTML(title);
+    expect(descriptionElement).toContainHTML(description);
+  });
+
+  it("should show close button when is Closable", () => {
+    const {getByRole} = render(<Alert isClosable description={description} title={title} />);
+
+    const closeButton = getByRole("button");
+
+    expect(closeButton).toBeVisible();
+  });
+
+  it("should show close button when onClose is passed", () => {
+    const onClose = jest.fn();
+
+    const {getByRole} = render(<Alert description={description} title={title} onClose={onClose} />);
+
+    const closeButton = getByRole("button");
+
+    expect(closeButton).toBeVisible();
+  });
+
+  it("should not show close button when not isClosable and onClose is not passed", () => {
+    const wrapper = render(<Alert description={description} title={title} />);
+
+    const closeButton = wrapper.queryByRole("button");
+
+    expect(closeButton).toBeNull();
+  });
+
+  it("should call the onClose function when clicking on close button", () => {
+    const onClose = jest.fn();
+
+    const wrapper = render(<Alert description={description} title={title} onClose={onClose} />);
+
+    const closeButton = wrapper.getByRole("button");
+
+    act(() => {
+      closeButton.click();
+    });
+
+    expect(onClose).toHaveBeenCalled();
+  });
+
+  it("should close the alert when clicking on close button", () => {
+    const wrapper = render(<Alert isClosable description={description} title={title} />);
+
+    const closeButton = wrapper.getByRole("button");
+
+    act(() => {
+      closeButton.click();
+    });
+
+    expect(wrapper.container).toBeEmptyDOMElement();
+  });
+});\n- packages/components/alert/package.json (added, 62 changes)\n  Patch: @@ -0,0 +1,62 @@
+{
+  "name": "@nextui-org/alert",
+  "version": "2.0.0",
+  "description": "Alerts are temporary notifications that provide concise feedback about an action or event.",
+  "keywords": [
+    "alert"
+  ],
+  "author": "Junior Garcia <jrgarciadev@gmail.com>",
+  "contributors": [
+    "Abhinav Agarwal <abhinavagrawl700@gmail.com>",
+    "WK Wong <wingkwong.code@gmail.com>"
+  ],
+  "homepage": "https://nextui.org",
+  "license": "MIT",
+  "main": "src/index.ts",
+  "sideEffects": false,
+  "files": [
+    "dist"
+  ],
+  "publishConfig": {
+    "access": "public"
+  },
+  "repository": {
+    "type": "git",
+    "url": "git+https://github.com/nextui-org/nextui.git",
+    "directory": "packages/components/alert"
+  },
+  "bugs": {
+    "url": "https://github.com/nextui-org/nextui/issues"
+  },
+  "scripts": {
+    "build": "tsup src --dts",
+    "dev": "pnpm build:fast --watch",
+    "clean": "rimraf dist .turbo",
+    "typecheck": "tsc --noEmit",
+    "build:fast": "tsup src",
+    "prepack": "clean-package",
+    "postpack": "clean-package restore"
+  },
+  "peerDependencies": {
+    "react": ">=18",
+    "react-dom": ">=18",
+    "@nextui-org/theme": ">=2.1.0",
+    "@nextui-org/system": ">=2.0.0"
+  },
+  "dependencies": {
+    "@nextui-org/react-utils": "workspace:*",
+    "@nextui-org/shared-icons": "workspace:*",
+    "@nextui-org/shared-utils": "workspace:*",
+    "@react-stately/utils": "3.10.1",
+    "@react-aria/utils": "3.24.1",
+    "@nextui-org/button": "workspace:*"
+  },
+  "devDependencies": {
+    "@nextui-org/system": "workspace:*",
+    "@nextui-org/theme": "workspace:*",
+    "clean-package": "2.2.0",
+    "react": "^18.0.0",
+    "react-dom": "^18.0.0"
+  },
+  "clean-package": "../../../clean-package.config.json"
+}
\ No newline at end of file\n- packages/components/alert/src/alert.tsx (added, 82 changes)\n  Patch: @@ -0,0 +1,82 @@
+import type {ButtonProps} from "@nextui-org/button";
+
+import {forwardRef} from "@nextui-org/system";
+import {
+  CloseIcon,
+  DangerIcon,
+  InfoCircleIcon,
+  SuccessIcon,
+  WarningIcon,
+} from "@nextui-org/shared-icons";
+import {isEmpty} from "@nextui-org/shared-utils";
+import {Button} from "@nextui-org/button";
+import {cloneElement, isValidElement} from "react";
+
+import {useAlert, UseAlertProps} from "./use-alert";
+
+const iconMap = {
+  primary: InfoCircleIcon,
+  secondary: InfoCircleIcon,
+  success: SuccessIcon,
+  warning: WarningIcon,
+  danger: DangerIcon,
+} as const;
+
+export type AlertColor = keyof typeof iconMap;
+
+export interface AlertProps extends Omit<UseAlertProps, "hasDescription"> {
+  color: AlertColor;
+}
+
+const Alert = forwardRef<"div", AlertProps>((props, ref) => {
+  const {
+    title,
+    icon,
+    description,
+    isClosable,
+    domRef,
+    handleClose,
+    getBaseProps,
+    getMainWrapperProps,
+    getDescriptionProps,
+    getTitleProps,
+    getCloseButtonProps,
+    color,
+    isVisible,
+    onClose,
+    getAlertIconProps,
+  } = useAlert({...props, ref});
+
+  if (!isVisible) return null;
+
+  const customIcon = icon && isValidElement(icon) ? cloneElement(icon, getAlertIconProps()) : null;
+
+  const IconComponent = iconMap[color] || iconMap.primary;
+
+  return (
+    <div ref={domRef} role="alert" {...getBaseProps()}>
+      {customIcon || <IconComponent {...getAlertIconProps()} />}
+      <div {...getMainWrapperProps()}>
+        {title && <div {...getTitleProps()}>{title}</div>}
+        {!isEmpty(description) && <div {...getDescriptionProps()}>{description}</div>}
+      </div>
+
+      {(isClosable || onClose) && (
+        <Button
+          isIconOnly
+          aria-label="Close"
+          radius="full"
+          variant="light"
+          onClick={handleClose}
+          {...(getCloseButtonProps() as ButtonProps)}
+        >
+          <CloseIcon height={20} width={20} />
+        </Button>
+      )}
+    </div>
+  );
+});
+
+Alert.displayName = "NextUI.Alert";
+
+export default Alert;\n- packages/components/alert/src/index.ts (added, 10 changes)\n  Patch: @@ -0,0 +1,10 @@
+import Alert from "./alert";
+
+// export types
+export type {AlertProps} from "./alert";
+
+// export hooks
+export {useAlert} from "./use-alert";
+
+// export component
+export {Alert};\n- packages/components/alert/src/use-alert.ts (added, 188 changes)\n  Patch: @@ -0,0 +1,188 @@
+import type {ButtonProps} from "@nextui-org/button";
+
+import {HTMLNextUIProps, mapPropsVariants, PropGetter} from "@nextui-org/system";
+import {AlertSlots, SlotsToClasses} from "@nextui-org/theme";
+import {filterDOMProps, ReactRef, useDOMRef} from "@nextui-org/react-utils";
+import {AlertVariantProps} from "@nextui-org/theme/src/components/alert";
+import {ReactNode, useCallback, useMemo} from "react";
+import {mergeProps} from "@react-aria/utils";
+import {alert} from "@nextui-org/theme";
+import {useControlledState} from "@react-stately/utils";
+import {dataAttr, isEmpty, objectToDeps} from "@nextui-org/shared-utils";
+
+interface Props extends HTMLNextUIProps<"div"> {
+  /**
+   * Ref to the DOM node.
+   */
+  ref?: ReactRef<HTMLDivElement | null>;
+  /**
+   * title of the alert message
+   */
+  title?: string;
+  /**
+   * Main body of the alert message
+   */
+  description: ReactNode;
+  /**
+   * Icon to be displayed in the alert - overrides the default icon
+   */
+  icon?: ReactNode;
+  /**
+   * Whether the alert is visible.
+   * @default false
+   */
+  isVisible?: boolean;
+  /**
+   * Whether the alert should be visible by default.
+   * @default false
+   */
+  isDefaultVisible?: boolean;
+  /**
+   * The event handler for the alert visibility state.
+   * @param isVisible boolean
+   * @returns void
+   */
+  onVisibleChange?: (isVisible: boolean) => void;
+  /**
+   *  whether the alert can be closed by user
+   */
+  isClosable?: boolean;
+  /**
+   * Props for the close button
+   */
+  closeButtonProps?: Omit<ButtonProps, "children">;
+  /**
+   * function which is called when close button is clicked
+   */
+  onClose?: () => void;
+  /**
+   * Classname or List of classes to change the classNames of the element.
+   * if `className` is passed, it will be added to the base slot.
+   *
+   * @example
+   * ```ts
+   * <Alert classNames={{
+   *    base:"base-classes",
+   *    mainWrapper: "mainWrapper-classes"
+   *    description: "description-classes"
+   *    title: "title-classes"
+   *    closeButton: "closeButton-classes"
+   *    closeIcon: "closeIcon-classes"
+   * }} />
+   * ```
+   */
+  classNames?: SlotsToClasses<AlertSlots>;
+}
+
+export type UseAlertProps = Props & AlertVariantProps;
+
+export function useAlert(originalProps: UseAlertProps) {
+  const [props, variantProps] = mapPropsVariants(originalProps, alert.variantKeys);
+
+  const {
+    as,
+    title: titleProp,
+    children,
+    description,
+    onClose,
+    isClosable,
+    ref,
+    icon,
+    isVisible: isVisibleProp,
+    isDefaultVisible,
+    onVisibleChange,
+    closeButtonProps = {},
+    classNames,
+    ...otherProps
+  } = props;
+
+  const [isVisible, setIsVisible] = useControlledState<boolean>(
+    isVisibleProp,
+    isDefaultVisible ?? true,
+    onVisibleChange,
+  );
+
+  const title = titleProp || children;
+
+  const Component = as || "div";
+  const shouldFilterDOMProps = typeof Component === "string";
+
+  const domRef = useDOMRef(ref);
+
+  const handleClose = useCallback(() => {
+    setIsVisible(false);
+    onClose?.();
+  }, [setIsVisible, onClose]);
+
+  const slots = useMemo(
+    () => alert({hasDescription: !isEmpty(description), ...variantProps}),
+    [description, objectToDeps(variantProps)],
+  );
+
+  const getBaseProps = useCallback<PropGetter>(() => {
+    return {
+      "data-visible": dataAttr(isVisible),
+      "data-closeable": dataAttr(isClosable),
+      "data-has-title": dataAttr(!isEmpty(title)),
+      "data-has-description": dataAttr(!isEmpty(description)),
+      ...mergeProps(
+        filterDOMProps(otherProps, {
+          enabled: shouldFilterDOMProps,
+        }),
+        filterDOMProps(props),
+      ),
+      className: slots.base({class: classNames?.base}),
+    };
+  }, [slots, classNames?.base]);
+
+  const getMainWrapperProps = useCallback<PropGetter>(() => {
+    return {
+      className: slots.mainWrapper({class: classNames?.mainWrapper}),
+    };
+  }, [slots, classNames?.mainWrapper]);
+
+  const getDescriptionProps = useCallback<PropGetter>(() => {
+    return {
+      className: slots.description({class: classNames?.description}),
+    };
+  }, [slots, classNames?.description]);
+
+  const getTitleProps = useCallback<PropGetter>(() => {
+    return {
+      className: slots.title({class: classNames?.title}),
+    };
+  }, [slots, classNames?.title]);
+
+  const getCloseButtonProps = useCallback<PropGetter>(
+    () => ({
+      ...closeButtonProps,
+      className: slots.closeButton({class: classNames?.closeButton}),
+    }),
+    [slots, classNames?.closeButton],
+  );
+
+  const getAlertIconProps = useCallback<PropGetter>(
+    () => ({
+      className: slots.alertIcon({class: classNames?.alertIcon}),
+    }),
+    [slots, classNames?.alertIcon],
+  );
+
+  return {
+    title,
+    icon,
+    description,
+    isClosable,
+    domRef,
+    getBaseProps,
+    getMainWrapperProps,
+    getDescriptionProps,
+    getTitleProps,
+    color: variantProps["color"],
+    getCloseButtonProps,
+    handleClose,
+    isVisible,
+    onClose,
+    getAlertIconProps,
+  };
+}\n- packages/components/alert/stories/alert.stories.tsx (added, 192 changes)\n  Patch: @@ -0,0 +1,192 @@
+import React from "react";
+import {Meta} from "@storybook/react";
+import {alert} from "@nextui-org/theme";
+import {Button} from "@nextui-org/button";
+
+import {Alert} from "../src";
+
+export default {
+  title: "Components/Alert",
+  component: Alert,
+  argTypes: {
+    color: {
+      control: {
+        type: "select",
+      },
+      options: ["default", "primary", "secondary", "success", "warning", "danger"],
+    },
+    variant: {
+      control: {
+        type: "select",
+      },
+      options: ["solid", "flat", "bordered"],
+    },
+    radius: {
+      control: {
+        type: "select",
+      },
+      options: ["none", "sm", "md", "lg", "full"],
+    },
+    isClosable: {
+      control: {
+        type: "boolean",
+      },
+    },
+  },
+  decorators: [
+    (Story) => (
+      <div className="flex items-center justify-center w-screen h-screen">
+        <div className="w-full max-w-[542px]">
+          <Story />
+        </div>
+      </div>
+    ),
+  ],
+} as Meta<typeof Alert>;
+
+const defaultProps = {
+  ...alert.defaultVariants,
+  title: "This is an alert with a title",
+};
+
+const Template = (args) => <Alert {...args} />;
+
+const ColorTemplate = (args) => {
+  return (
+    <div className="flex flex-col w-full">
+      {["default", "primary", "secondary", "success", "warning", "danger"].map((color) => (
+        <div key={color} className="w-full flex items-center my-3">
+          <Alert {...args} color={color} title={`This is a ${color} alert`} />
+        </div>
+      ))}
+    </div>
+  );
+};
+
+const RadiusTemplate = (args) => {
+  return (
+    <div className="flex flex-col w-full">
+      {["none", "sm", "md", "lg", "full"].map((radius) => (
+        <div key={radius} className="w-full flex items-center my-3">
+          <Alert {...args} radius={radius} title={`This is a ${radius} radius alert`} />
+        </div>
+      ))}
+    </div>
+  );
+};
+
+const VariantTemplate = (args) => {
+  return (
+    <div className="flex flex-col w-full">
+      {["solid", "flat", "bordered"].map((variant) => (
+        <div key={variant} className="w-full flex items-center my-3">
+          <Alert {...args} isClosable title={`This is a ${variant} alert`} variant={variant} />
+        </div>
+      ))}
+    </div>
+  );
+};
+
+const CloseableTemplate = (args) => {
+  const [isVisible, setIsVisible] = React.useState(true);
+
+  return (
+    <div className="flex flex-col items-center justify-center gap-4">
+      {isVisible ? (
+        <Alert {...args} isClosable isVisible={isVisible} onClose={() => setIsVisible(false)} />
+      ) : (
+        <Button className="max-w-[200px]" variant="bordered" onPress={() => setIsVisible(true)}>
+          Re-open Alert
+        </Button>
+      )}
+    </div>
+  );
+};
+
+export const Default = {
+  render: Template,
+  args: {
+    ...defaultProps,
+  },
+};
+
+export const WithDescription = {
+  render: Template,
+  args: {
+    ...defaultProps,
+    description: "This is an alert with a description",
+  },
+};
+
+export const Color = {
+  render: ColorTemplate,
+  args: {
+    ...defaultProps,
+  },
+};
+
+export const Variant = {
+  render: VariantTemplate,
+  args: {
+    ...defaultProps,
+  },
+};
+
+export const WithIcon = {
+  render: Template,
+  args: {
+    ...defaultProps,
+    title: "This is an alert with a custom icon",
+    icon: (
+      <svg height={24} viewBox="0 0 24 24" width={24}>
+        <g
+          fill="none"
+          stroke="currentColor"
+          strokeLinecap="round"
+          strokeLinejoin="round"
+          strokeMiterlimit={10}
+          strokeWidth={1.5}
+        >
+          <path
+            d="M11.845 21.662C8.153 21.662 5 21.088 5 18.787s3.133-4.425 6.845-4.425c3.692 0 6.845 2.1 6.845 4.4s-3.134 2.9-6.845 2.9z"
+            data-name="Stroke 1"
+          />
+          <path d="M11.837 11.174a4.372 4.372 0 10-.031 0z" data-name="Stroke 3" />
+        </g>
+      </svg>
+    ),
+  },
+};
+
+export const Radius = {
+  render: RadiusTemplate,
+  args: {
+    ...defaultProps,
+  },
+};
+
+export const Closable = {
+  render: CloseableTemplate,
+  args: {
+    ...defaultProps,
+  },
+};
+
+export const CustomWithClassNames = {
+  render: Template,
+  args: {
+    ...defaultProps,
+    classNames: {
+      base: [
+        "bg-background",
+        "border",
+        "border-foreground-400",
+        "shadow",
+        "hover:bg-slate-200",
+        "cursor-pointer",
+      ],
+      title: ["text-base", "text-foreground", "font-semibold"],
+      description: ["text-base", "text-foreground-600"],
+    },
+  },
+};\n- packages/components/alert/tsconfig.json (added, 10 changes)\n  Patch: @@ -0,0 +1,10 @@
+{
+  "extends": "../../../tsconfig.json",
+  "compilerOptions": {
+    "baseUrl": ".",
+    "paths": {
+      "tailwind-variants": ["../../../node_modules/tailwind-variants"]
+    },
+  },
+  "include": ["src", "index.ts"]
+}\n- packages/components/alert/tsup.config.ts (added, 8 changes)\n  Patch: @@ -0,0 +1,8 @@
+import {defineConfig} from "tsup";
+
+export default defineConfig({
+  clean: true,
+  target: "es2019",
+  format: ["cjs", "esm"],
+  banner: {js: '"use client";'},
+});\n- packages/core/react/package.json (modified, 1 changes)\n  Patch: @@ -84,6 +84,7 @@
     "@nextui-org/date-input": "workspace:*",
     "@nextui-org/date-picker": "workspace:*",
     "@nextui-org/framer-utils": "workspace:*",
+    "@nextui-org/alert": "workspace:*",
     "@react-aria/visually-hidden": "3.8.12"
   },
   "peerDependencies": {\n- packages/core/react/src/index.ts (modified, 1 changes)\n  Patch: @@ -43,6 +43,7 @@ export * from "@nextui-org/autocomplete";
 export * from "@nextui-org/calendar";
 export * from "@nextui-org/date-input";
 export * from "@nextui-org/date-picker";
+export * from "@nextui-org/alert";
 
 /**
  * React Aria - Exports\n- packages/core/theme/src/components/alert.ts (added, 327 changes)\n  Patch: @@ -0,0 +1,327 @@
+import type {VariantProps} from "tailwind-variants";
+
+import {tv} from "../utils/tv";
+/**
+ * Alert wrapper **Tailwind Variants** component
+ *
+ * @example
+ * ```js
+ * const {base, mainWrapper, title, description, closeButton, alertIcon} = alert({...})
+ *
+ *
+ * <div className={base()}>
+ *    {alertIcon}
+ *    <div className={mainWrapper()}>
+ *       <div className={title()}>Title</div>
+ *       <div className={description()}>Description</div>
+ *   </div>
+ *    <button>
+ *      // close button
+ *    </button>
+ * </div>
+ * ```
+ */
+const alert = tv({
+  slots: {
+    base: ["flex flex-row w-full flex-grow min-h-17 max-h-full py-3 px-4"],
+    mainWrapper: ["flex-grow min-h-11 max-h-full ms-2 flex flex-col box-border items-start"],
+    title: ["w-full text-medium font-normal block min-h-6 max-h-full"],
+    description: ["text-small font-normal min-h-5 max-h-full"],
+    closeButton: ["relative fill-current"],
+    alertIcon: ["fill-current"],
+  },
+  variants: {
+    color: {
+      default: {
+        base: ["bg-default-100"],
+        title: ["text-foreground"],
+        description: ["text-default-600"],
+        closeButton: ["text-default-400"],
+        alertIcon: ["text-default-foreground"],
+      },
+      primary: {
+        base: ["bg-primary-50"],
+        title: ["text-primary"],
+        description: ["text-primary"],
+        closeButton: ["text-primary-200"],
+        alertIcon: ["text-primary"],
+      },
+      secondary: {
+        base: ["bg-secondary-50"],
+        title: ["text-secondary"],
+        description: ["text-secondary-200"],
+        closeButton: ["text-secondary-200"],
+        alertIcon: ["text-secondary"],
+      },
+      success: {
+        base: ["bg-success-50"],
+        title: ["text-success"],
+        description: ["text-success-800 dark:text-success"],
+        closeButton: ["text-success-200"],
+        alertIcon: ["text-success"],
+      },
+      warning: {
+        base: ["bg-warning-50"],
+        title: ["text-warning"],
+        description: ["text-warning-800 dark:text-warning"],
+        closeButton: ["text-warning-200"],
+        alertIcon: ["text-warning"],
+      },
+      danger: {
+        base: ["bg-danger-50"],
+        title: ["text-danger"],
+        description: ["text-danger-800 dark:text-danger"],
+        closeButton: ["text-danger-200"],
+        alertIcon: ["text-danger"],
+      },
+    },
+    variant: {
+      solid: {},
+      flat: {},
+      bordered: {
+        base: "border-medium bg-transparent",
+      },
+    },
+    radius: {
+      none: {
+        base: "rounded-none",
+      },
+      sm: {
+        base: "rounded-small",
+      },
+      md: {
+        base: "rounded-medium",
+      },
+      lg: {
+        base: "rounded-large",
+      },
+      full: {
+        base: "rounded-full",
+      },
+    },
+    hasDescription: {
+      true: {
+        alertIcon: "mt-0.5",
+      },
+      false: {
+        base: ["items-center"],
+        mainWrapper: ["justify-center"],
+      },
+    },
+  },
+  defaultVariants: {
+    color: "default",
+    variant: "flat",
+    radius: "md",
+  },
+  compoundVariants: [
+    // solid / color
+    {
+      variant: "solid",
+      color: "default",
+      class: {
+        base: "bg-default",
+        title: "text-default-foreground",
+        description: "text-default-foreground",
+        closeButton: "text-default-foreground data-[hover]:bg-default-100",
+        alertIcon: "text-default-foreground",
+      },
+    },
+    {
+      variant: "solid",
+      color: "primary",
+      class: {
+        base: "bg-primary",
+        title: "text-primary-foreground",
+        description: "text-primary-foreground",
+        closeButton: "text-primary-foreground",
+        alertIcon: "text-primary-foreground",
+      },
+    },
+    {
+      variant: "solid",
+      color: "secondary",
+      class: {
+        base: "bg-secondary",
+        title: "text-secondary-foreground",
+        description: "text-secondary-foreground",
+        closeButton: "text-secondary-foreground",
+        alertIcon: "text-secondary-foreground",
+      },
+    },
+    {
+      variant: "solid",
+      color: "success",
+      class: {
+        base: "bg-success",
+        title: "text-success-foreground",
+        description: "text-success-foreground",
+        closeButton: "text-success-foreground",
+        alertIcon: "text-success-foreground",
+      },
+    },
+    {
+      variant: "solid",
+      color: "warning",
+      class: {
+        base: "bg-warning",
+        title: "text-warning-foreground",
+        description: "text-warning-foreground",
+        closeButton: "text-warning-foreground",
+        alertIcon: "text-warning-foreground",
+      },
+    },
+    {
+      variant: "solid",
+      color: "danger",
+      class: {
+        base: "bg-danger",
+        title: "text-danger-foreground",
+        description: "text-danger-foreground",
+        closeButton: "text-danger-foreground",
+        alertIcon: "text-danger-foreground",
+      },
+    },
+
+    // flat / color
+    {
+      variant: "flat",
+      color: "default",
+      class: {
+        base: "bg-default-100",
+        title: "text-default-foreground",
+        description: "text-default-600",
+        closeButton: "text-default-400",
+        alertIcon: "text-default-foreground",
+      },
+    },
+    {
+      variant: "flat",
+      color: "primary",
+      class: {
+        base: "bg-primary-50",
+        title: "text-primary",
+        description: "text-primary-600",
+        closeButton: "text-primary-400 data-[hover]:bg-primary-100",
+        alertIcon: "text-primary",
+      },
+    },
+    {
+      variant: "flat",
+      color: "secondary",
+      class: {
+        base: "bg-secondary-50",
+        title: "text-secondary",
+        description: "text-secondary-600",
+        closeButton: "text-secondary-400 data-[hover]:bg-secondary-100",
+        alertIcon: "text-secondary",
+      },
+    },
+    {
+      variant: "flat",
+      color: "success",
+      class: {
+        base: "bg-success-50",
+        title: "text-success",
+        description: "text-success-800 dark:text-success",
+        closeButton: "text-success-400 data-[hover]:bg-success-100",
+        alertIcon: "text-success",
+      },
+    },
+    {
+      variant: "flat",
+      color: "warning",
+      class: {
+        base: "bg-warning-50",
+        title: "text-warning",
+        description: "text-warning-800 dark:text-warning",
+        closeButton: "text-warning-500 data-[hover]:bg-warning-200",
+        alertIcon: "text-warning",
+      },
+    },
+    {
+      variant: "flat",
+      color: "danger",
+      class: {
+        base: "bg-danger-50",
+        title: "text-danger",
+        description: "text-danger-800 dark:text-danger",
+        closeButton: "text-danger-400 data-[hover]:bg-danger-100",
+        alertIcon: "text-danger",
+      },
+    },
+
+    // bordered / color
+    {
+      variant: "bordered",
+      color: "default",
+      class: {
+        base: "border-default-200",
+        title: "text-default-foreground",
+        description: "text-default-600",
+        closeButton: "text-default-400",
+        alertIcon: "text-default-foreground",
+      },
+    },
+    {
+      variant: "bordered",
+      color: "primary",
+      class: {
+        base: "border-primary",
+        title: "text-primary",
+        description: "text-primary-600",
+        closeButton: "text-primary-400 data-[hover]:bg-primary-50",
+        alertIcon: "text-primary",
+      },
+    },
+    {
+      variant: "bordered",
+      color: "secondary",
+      class: {
+        base: "border-secondary",
+        title: "text-secondary",
+        description: "text-secondary-600",
+        closeButton: "text-secondary-400 data-[hover]:bg-secondary-50",
+        alertIcon: "text-secondary",
+      },
+    },
+    {
+      variant: "bordered",
+      color: "success",
+      class: {
+        base: "border-success",
+        title: "text-success",
+        description: "text-success-600",
+        closeButton: "text-success-400 data-[hover]:bg-success-50",
+        alertIcon: "text-success",
+      },
+    },
+    {
+      variant: "bordered",
+      color: "warning",
+      class: {
+        base: "border-warning",
+        title: "text-warning",
+        description: "text-warning-600",
+        closeButton: "text-warning-500 data-[hover]:bg-warning-100",
+        alertIcon: "text-warning",
+      },
+    },
+    {
+      variant: "bordered",
+      color: "danger",
+      class: {
+        base: "border-danger",
+        title: "text-danger",
+        description: "text-danger-600",
+        closeButton: "text-danger-400 data-[hover]:bg-danger-50",
+        alertIcon: "text-danger",
+      },
+    },
+  ],
+});
+
+export type AlertVariantProps = VariantProps<typeof alert>;
+export type AlertSlots = keyof ReturnType<typeof alert>;
+
+export {alert};\n- packages/core/theme/src/components/index.ts (modified, 1 changes)\n  Patch: @@ -38,3 +38,4 @@ export * from "./autocomplete";
 export * from "./calendar";
 export * from "./date-input";
 export * from "./date-picker";
+export * from "./alert";\n- packages/utilities/shared-icons/src/danger.tsx (added, 20 changes)\n  Patch: @@ -0,0 +1,20 @@
+import {IconSvgProps} from "./types";
+
+export const DangerIcon = (
+  props: IconSvgProps & {
+    className?: string;
+  },
+) => {
+  return (
+    <svg
+      fill="none"
+      height="20"
+      viewBox="0 0 20 20"
+      width="20"
+      xmlns="http://www.w3.org/2000/svg"
+      {...props}
+    >
+      <path d="M17.51 3.85L11.57 0.42C10.6 -0.14 9.4 -0.14 8.42 0.42L2.49 3.85C1.52 4.41 0.919998 5.45 0.919998 6.58V13.42C0.919998 14.54 1.52 15.58 2.49 16.15L8.43 19.58C9.4 20.14 10.6 20.14 11.58 19.58L17.52 16.15C18.49 15.59 19.09 14.55 19.09 13.42V6.58C19.08 5.45 18.48 4.42 17.51 3.85ZM9.25 5.75C9.25 5.34 9.59 5 10 5C10.41 5 10.75 5.34 10.75 5.75V11C10.75 11.41 10.41 11.75 10 11.75C9.59 11.75 9.25 11.41 9.25 11V5.75ZM10.92 14.63C10.87 14.75 10.8 14.86 10.71 14.96C10.52 15.15 10.27 15.25 10 15.25C9.87 15.25 9.74 15.22 9.62 15.17C9.49 15.12 9.39 15.05 9.29 14.96C9.2 14.86 9.13 14.75 9.07 14.63C9.02 14.51 9 14.38 9 14.25C9 13.99 9.1 13.73 9.29 13.54C9.39 13.45 9.49 13.38 9.62 13.33C9.99 13.17 10.43 13.26 10.71 13.54C10.8 13.64 10.87 13.74 10.92 13.87C10.97 13.99 11 14.12 11 14.25C11 14.38 10.97 14.51 10.92 14.63Z" />
+    </svg>
+  );
+};\n- packages/utilities/shared-icons/src/index.ts (modified, 5 changes)\n  Patch: @@ -33,7 +33,10 @@ export * from "./arrow-right";
 export * from "./arrow-left";
 export * from "./link";
 export * from "./selector";
-
+export * from "./info-circle";
+export * from "./warning";
+export * from "./danger";
+export * from "./success";
 // sets
 export * from "./bulk";
 export * from "./bold";\n- packages/utilities/shared-icons/src/info-circle.tsx (added, 20 changes)\n  Patch: @@ -0,0 +1,20 @@
+import {IconSvgProps} from "./types";
+
+export const InfoCircleIcon = (
+  props: IconSvgProps & {
+    className?: string;
+  },
+) => {
+  return (
+    <svg
+      fill="none"
+      height="24"
+      viewBox="0 0 24 24"
+      width="24"
+      xmlns="http://www.w3.org/2000/svg"
+      {...props}
+    >
+      <path d="M12 22C17.51 22 22 17.51 22 12C22 6.49 17.51 2 12 2C6.49 2 2 6.49 2 12C2 17.51 6.49 22 12 22ZM12.75 16C12.75 16.41 12.41 16.75 12 16.75C11.59 16.75 11.25 16.41 11.25 16L11.25 11C11.25 10.59 11.59 10.25 12 10.25C12.41 10.25 12.75 10.59 12.75 11L12.75 16ZM11.08 7.62C11.13 7.49 11.2 7.39 11.29 7.29C11.39 7.2 11.5 7.13 11.62 7.08C11.74 7.03 11.87 7 12 7C12.13 7 12.26 7.03 12.38 7.08C12.5 7.13 12.61 7.2 12.71 7.29C12.8 7.39 12.87 7.49 12.92 7.62C12.97 7.74 13 7.87 13 8C13 8.13 12.97 8.26 12.92 8.38C12.87 8.5 12.8 8.61 12.71 8.71C12.61 8.8 12.5 8.87 12.38 8.92C12.14 9.02 11.86 9.02 11.62 8.92C11.5 8.87 11.39 8.8 11.29 8.71C11.2 8.61 11.13 8.5 11.08 8.38C11.03 8.26 11 8.13 11 8C11 7.87 11.03 7.74 11.08 7.62Z" />
+    </svg>
+  );
+};\n- packages/utilities/shared-icons/src/success.tsx (added, 27 changes)\n  Patch: @@ -0,0 +1,27 @@
+import {IconSvgProps} from "./types";
+
+export const SuccessIcon = (
+  props: IconSvgProps & {
+    className?: string;
+  },
+) => {
+  return (
+    <svg
+      fill="none"
+      height="24"
+      viewBox="0 0 24 24"
+      width="24"
+      xmlns="http://www.w3.org/2000/svg"
+      {...props}
+    >
+      <path
+        d="
+          M12 2C6.49 2 2 6.49 2 12C2 17.51 6.49 22 12 22C17.51 22 22 17.51 22 12C22 6.49 17.51 2 12 2Z
+          M16.78 9.7L11.11 15.37C10.97 15.51 10.78 15.59 10.58 15.59C10.38 15.59 10.19 15.51 10.05 15.37L7.22 12.54
+          C6.93 12.25 6.93 11.77 7.22 11.48C7.51 11.19 7.99 11.19 8.28 11.48L10.58 13.78L15.72 8.64
+          C16.01 8.35 16.49 8.35 16.78 8.64C17.07 8.93 17.07 9.4 16.78 9.7Z
+        "
+      />
+    </svg>
+  );
+};\n
Pull Request Number: 4062
Title: refactor(docs): pagination dx
Base Branch: refactor/overall-dx
Head Branch: refactor/pagination-dx
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/4062
State: MERGED
Created At: 2024-11-15T12:45:04Z
Merged At: 2024-11-22T21:14:51Z
Participants: wingkwong, jrgarciadev

Description:
Closes # 
üìù Description

‚õ≥Ô∏è Current behavior (updates)

üöÄ New behavior

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Commits:
- refactor(docs): pagination dx\n- refactor(docs): pagination dx\n

Labels:


Comments:
- vercel: [vc]: #uz3jZ4v7KV3+jgd/qrJkeaKrGTRBWrQ3XTdGZzN2mKQ=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LXJlZmFjdG9yLXBhZ2luYXRpb24tZHgtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn0sImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1kb2NzLXYyLzRLRlZ5WWJHQVBVeUhtMmhjUXliM21KWXM1R24iLCJwcmV2aWV3VXJsIjoibmV4dHVpLWRvY3MtdjItZ2l0LXJlZmFjdG9yLXBhZ2luYXRpb24tZHgtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIn0seyJuYW1lIjoibmV4dHVpLXN0b3J5Ym9vay12MiIsInJvb3REaXJlY3RvcnkiOiJwYWNrYWdlcy9zdG9yeWJvb2siLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtcmVmYWN0b3ItcGFnaW5hdGlvbi1keC1uZXh0dWktb3JnLnZlcmNlbC5hcHAifSwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi9rZzF2Vjg5WU5XYzlmOVdTVjZDMlRXOUdxd25aIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LXJlZmFjdG9yLXBhZ2luYXRpb24tZHgtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIn1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/4KFVyYbGAPUyHm2hcQyb3mJYs5Gn)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-refactor-pagination-dx-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-refactor-pagination-dx-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 18, 2024 3:36am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/kg1vV89YNWc9f9WSV6C2TW9GqwnZ)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-refactor-pagination-dx-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-refactor-pagination-dx-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 18, 2024 3:36am |


\n- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: ffc211d4ed8c5dad5fef87832dd8fb7853d10d7c

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/nextui-org/nextui/new/refactor/pagination-dx?filename=.changeset/fast-emus-juggle.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A---%0A%0Arefactor(docs)%3A%20pagination%20dx%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: skip review by coderabbit.ai -->

> [!IMPORTANT]
> ## Review skipped
> 
> Auto reviews are disabled on base/target branches other than the default branch.
> 
> <details>
> <summary>üóÇÔ∏è Base branches to auto review (5)</summary>
> 
> * main
> * canary
> * fix/.*
> * chore/.*
> * feat/.*
> 
> </details>
> 
> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.
> 
> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.

<!-- end of auto-generated comment: skip review by coderabbit.ai -->

<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- apps/docs/content/components/pagination/boundaries.raw.jsx (added, 14 changes)\n  Patch: @@ -0,0 +1,14 @@
+import {Pagination} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex flex-col gap-5">
+      <p>1 Boundary (default)</p>
+      <Pagination color="secondary" total={10} />
+      <p>2 Boundaries</p>
+      <Pagination boundaries={2} color="secondary" total={10} />
+      <p>3 Boundaries</p>
+      <Pagination boundaries={3} color="secondary" total={10} />
+    </div>
+  );
+}\n- apps/docs/content/components/pagination/boundaries.ts (modified, 26 changes)\n  Patch: @@ -1,28 +1,4 @@
-const App = `import {Pagination, Button} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <div className="flex flex-col gap-5">
-      <p>1 Boundary (default)</p>
-      <Pagination
-        total={10}
-        color="secondary"
-      />
-      <p>2 Boundaries</p>
-      <Pagination
-        total={10}
-        boundaries={2}
-        color="secondary"
-      />
-      <p>3 Boundaries</p>
-      <Pagination
-        total={10}
-        boundaries={3}
-        color="secondary"
-      />
-    </div>
-  );
-}`;
+import App from "./boundaries.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/pagination/colors.raw.jsx (added, 13 changes)\n  Patch: @@ -0,0 +1,13 @@
+import {Pagination} from "@nextui-org/react";
+
+export default function App() {
+  const colors = ["primary", "secondary", "success", "warning", "danger"];
+
+  return (
+    <div className="flex flex-wrap gap-4 items-center">
+      {colors.map((color) => (
+        <Pagination key={color} color={color} initialPage={1} total={10} />
+      ))}
+    </div>
+  );
+}\n- apps/docs/content/components/pagination/colors.ts (modified, 15 changes)\n  Patch: @@ -1,17 +1,4 @@
-const App = `import {Pagination} from "@nextui-org/react";
-
-export default function App() {
-
-  const colors = ["primary", "secondary", "success", "warning", "danger"]
-
-  return (
-    <div className="flex flex-wrap gap-4 items-center">
-      {colors.map((color) => (
-        <Pagination key={color} total={10} initialPage={1} color={color} />
-      ))}
-    </div>
-  );
-}`;
+import App from "./colors.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/pagination/compact.raw.jsx (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+import {Pagination} from "@nextui-org/react";
+
+export default function App() {
+  return <Pagination isCompact showControls initialPage={1} total={10} />;
+}\n- apps/docs/content/components/pagination/compact.ts (modified, 8 changes)\n  Patch: @@ -1,10 +1,4 @@
-const App = `import {Pagination} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <Pagination isCompact showControls total={10} initialPage={1} />
-  );
-}`;
+import App from "./compact.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/pagination/controlled.raw.jsx (added, 30 changes)\n  Patch: @@ -0,0 +1,30 @@
+import {Pagination, Button} from "@nextui-org/react";
+
+export default function App() {
+  const [currentPage, setCurrentPage] = React.useState(1);
+
+  return (
+    <div className="flex flex-col gap-5">
+      <p className="text-small text-default-500">Selected Page: {currentPage}</p>
+      <Pagination color="secondary" page={currentPage} total={10} onChange={setCurrentPage} />
+      <div className="flex gap-2">
+        <Button
+          color="secondary"
+          size="sm"
+          variant="flat"
+          onPress={() => setCurrentPage((prev) => (prev > 1 ? prev - 1 : prev))}
+        >
+          Previous
+        </Button>
+        <Button
+          color="secondary"
+          size="sm"
+          variant="flat"
+          onPress={() => setCurrentPage((prev) => (prev < 10 ? prev + 1 : prev))}
+        >
+          Next
+        </Button>
+      </div>
+    </div>
+  );
+}\n- apps/docs/content/components/pagination/controlled.ts (modified, 36 changes)\n  Patch: @@ -1,38 +1,4 @@
-const App = `import {Pagination, Button} from "@nextui-org/react";
-
-export default function App() {
-  const [currentPage, setCurrentPage] = React.useState(1);
-
-  return (
-    <div className="flex flex-col gap-5">
-      <p className="text-small text-default-500">Selected Page: {currentPage}</p>
-      <Pagination
-        total={10}
-        color="secondary"
-        page={currentPage}
-        onChange={setCurrentPage}
-      />
-      <div className="flex gap-2">
-        <Button
-          size="sm"
-          variant="flat"
-          color="secondary"
-          onPress={() => setCurrentPage((prev) => (prev > 1 ? prev - 1 : prev))}
-        >
-          Previous
-        </Button>
-        <Button
-          size="sm"
-          variant="flat"
-          color="secondary"
-          onPress={() => setCurrentPage((prev) => (prev < 10 ? prev + 1 : prev))}
-        >
-          Next
-        </Button>
-      </div>
-    </div>
-  );
-}`;
+import App from "./controlled.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/pagination/controls.raw.jsx (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+import {Pagination} from "@nextui-org/react";
+
+export default function App() {
+  return <Pagination showControls initialPage={1} total={10} />;
+}\n- apps/docs/content/components/pagination/controls.ts (modified, 8 changes)\n  Patch: @@ -1,10 +1,4 @@
-const App = `import {Pagination} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <Pagination showControls total={10} initialPage={1} />
-  );
-}`;
+import App from "./controls.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/pagination/custom-impl.raw.jsx (added, 82 changes)\n  Patch: @@ -0,0 +1,82 @@
+import {usePagination, PaginationItemType} from "@nextui-org/react";
+
+export const ChevronIcon = (props) => {
+  return (
+    <svg
+      aria-hidden="true"
+      fill="none"
+      focusable="false"
+      height="1em"
+      role="presentation"
+      viewBox="0 0 24 24"
+      width="1em"
+      {...props}
+    >
+      <path
+        d="M15.5 19l-7-7 7-7"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="1.5"
+      />
+    </svg>
+  );
+};
+
+export default function App() {
+  const {activePage, range, setPage, onNext, onPrevious} = usePagination({
+    total: 6,
+    showControls: true,
+    siblings: 10,
+    boundaries: 10,
+  });
+
+  return (
+    <div className="flex flex-col gap-2">
+      <p>Active page: {activePage}</p>
+      <ul className="flex gap-2 items-center">
+        {range.map((page) => {
+          if (page === PaginationItemType.NEXT) {
+            return (
+              <li key={page} aria-label="next page" className="w-4 h-4">
+                <button className="w-full h-full bg-default-200 rounded-full" onClick={onNext}>
+                  <ChevronIcon className="rotate-180" />
+                </button>
+              </li>
+            );
+          }
+
+          if (page === PaginationItemType.PREV) {
+            return (
+              <li key={page} aria-label="previous page" className="w-4 h-4">
+                <button className="w-full h-full bg-default-200 rounded-full" onClick={onPrevious}>
+                  <ChevronIcon />
+                </button>
+              </li>
+            );
+          }
+
+          if (page === PaginationItemType.DOTS) {
+            return (
+              <li key={page} className="w-4 h-4">
+                ...
+              </li>
+            );
+          }
+
+          return (
+            <li key={page} aria-label={`page ${page}`} className="w-4 h-4">
+              <button
+                className={cn(
+                  "w-full h-full bg-default-300 rounded-full",
+                  activePage === page && "bg-secondary",
+                )}
+                onClick={() => setPage(page)}
+              />
+            </li>
+          );
+        })}
+      </ul>
+    </div>
+  );
+}\n- apps/docs/content/components/pagination/custom-impl.ts (modified, 90 changes)\n  Patch: @@ -1,95 +1,7 @@
-const ChevronIcon = `export const ChevronIcon = (props) => (
-  <svg
-    aria-hidden="true"
-    fill="none"
-    focusable="false"
-    height="1em"
-    role="presentation"
-    viewBox="0 0 24 24"
-    width="1em"
-    {...props}
-  >
-    <path
-      d="M15.5 19l-7-7 7-7"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="1.5"
-    />
-  </svg>
-);
-`;
-
-const App = `import {usePagination, PaginationItemType} from "@nextui-org/react";
-import {ChevronIcon} from "./ChevronIcon";
-
-export default function App() {
-  const {activePage, range, setPage, onNext, onPrevious} = usePagination({
-    total: 6,
-    showControls: true,
-    siblings: 10,
-    boundaries: 10,
-  });
-
-  return (
-    <div className="flex flex-col gap-2">
-      <p>Active page: {activePage}</p>
-      <ul className="flex gap-2 items-center">
-        {range.map((page) => {
-          if (page === PaginationItemType.NEXT) {
-            return (
-              <li key={page} aria-label="next page" className="w-4 h-4">
-                <button
-                  className="w-full h-full bg-default-200 rounded-full"
-                  onClick={onNext}
-                >
-                  <ChevronIcon className="rotate-180" />
-                </button>
-              </li>
-            );
-          }
-
-          if (page === PaginationItemType.PREV) {
-            return (
-              <li key={page} aria-label="previous page" className="w-4 h-4">
-                <button
-                  className="w-full h-full bg-default-200 rounded-full"
-                  onClick={onPrevious}
-                >
-                  <ChevronIcon />
-                </button>
-              </li>
-            );
-          }
-
-          if (page === PaginationItemType.DOTS) {
-            return (
-              <li key={page} className="w-4 h-4">
-                ...
-              </li>
-            );
-          }
-
-          return (
-            <li key={page} aria-label={\`page \${page}\`} className="w-4 h-4">
-              <button
-                className={cn(
-                  "w-full h-full bg-default-300 rounded-full",
-                  activePage === page && "bg-secondary"
-                )}
-                onClick={() => setPage(page)}
-              />
-            </li>
-          );
-        })}
-      </ul>
-    </div>
-  );
-}`;
+import App from "./custom-impl.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,
-  "/ChevronIcon.jsx": ChevronIcon,
 };
 
 export default {\n- apps/docs/content/components/pagination/custom-items.raw.jsx (added, 88 changes)\n  Patch: @@ -0,0 +1,88 @@
+import {Pagination, PaginationItemType} from "@nextui-org/react";
+
+export const ChevronIcon = (props) => {
+  return (
+    <svg
+      aria-hidden="true"
+      fill="none"
+      focusable="false"
+      height="1em"
+      role="presentation"
+      viewBox="0 0 24 24"
+      width="1em"
+      {...props}
+    >
+      <path
+        d="M15.5 19l-7-7 7-7"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="1.5"
+      />
+    </svg>
+  );
+};
+
+export default function App() {
+  const renderItem = ({ref, key, value, isActive, onNext, onPrevious, setPage, className}) => {
+    if (value === PaginationItemType.NEXT) {
+      return (
+        <button
+          key={key}
+          className={cn(className, "bg-default-200/50 min-w-8 w-8 h-8")}
+          onClick={onNext}
+        >
+          <ChevronIcon className="rotate-180" />
+        </button>
+      );
+    }
+
+    if (value === PaginationItemType.PREV) {
+      return (
+        <button
+          key={key}
+          className={cn(className, "bg-default-200/50 min-w-8 w-8 h-8")}
+          onClick={onPrevious}
+        >
+          <ChevronIcon />
+        </button>
+      );
+    }
+
+    if (value === PaginationItemType.DOTS) {
+      return (
+        <button key={key} className={className}>
+          ...
+        </button>
+      );
+    }
+
+    // cursor is the default item
+    return (
+      <button
+        key={key}
+        ref={ref}
+        className={cn(
+          className,
+          isActive && "text-white bg-gradient-to-br from-indigo-500 to-pink-500 font-bold",
+        )}
+        onClick={() => setPage(value)}
+      >
+        {value}
+      </button>
+    );
+  };
+
+  return (
+    <Pagination
+      disableCursorAnimation
+      showControls
+      className="gap-2"
+      initialPage={1}
+      radius="full"
+      renderItem={renderItem}
+      total={10}
+      variant="light"
+    />
+  );
+}\n- apps/docs/content/components/pagination/custom-items.raw.tsx (added, 98 changes)\n  Patch: @@ -0,0 +1,98 @@
+import React, {SVGProps} from "react";
+import {cn, Pagination, PaginationItemType, PaginationItemRenderProps} from "@nextui-org/react";
+
+type IconSvgProps = SVGProps<SVGSVGElement>;
+
+export const ChevronIcon = (props: IconSvgProps) => (
+  <svg
+    aria-hidden="true"
+    fill="none"
+    focusable="false"
+    height="1em"
+    role="presentation"
+    viewBox="0 0 24 24"
+    width="1em"
+    {...props}
+  >
+    <path
+      d="M15.5 19l-7-7 7-7"
+      stroke="currentColor"
+      strokeLinecap="round"
+      strokeLinejoin="round"
+      strokeWidth="1.5"
+    />
+  </svg>
+);
+
+export default function App() {
+  const renderItem = ({
+    ref,
+    key,
+    value,
+    isActive,
+    onNext,
+    onPrevious,
+    setPage,
+    className,
+  }: PaginationItemRenderProps) => {
+    if (value === PaginationItemType.NEXT) {
+      return (
+        <button
+          key={key}
+          className={cn(className, "bg-default-200/50 min-w-8 w-8 h-8")}
+          onClick={onNext}
+        >
+          <ChevronIcon className="rotate-180" />
+        </button>
+      );
+    }
+
+    if (value === PaginationItemType.PREV) {
+      return (
+        <button
+          key={key}
+          className={cn(className, "bg-default-200/50 min-w-8 w-8 h-8")}
+          onClick={onPrevious}
+        >
+          <ChevronIcon />
+        </button>
+      );
+    }
+
+    if (value === PaginationItemType.DOTS) {
+      return (
+        <button key={key} className={className}>
+          ...
+        </button>
+      );
+    }
+
+    // cursor is the default item
+    return (
+      <button
+        key={key}
+        ref={ref}
+        className={cn(
+          className,
+          isActive && "text-white bg-gradient-to-br from-indigo-500 to-pink-500 font-bold",
+        )}
+        onClick={() => setPage(value)}
+      >
+        {value}
+      </button>
+    );
+  };
+
+  return (
+    <Pagination
+      disableCursorAnimation
+      showControls
+      className="gap-2"
+      initialPage={1}
+      radius="full"
+      renderItem={renderItem}
+      total={10}
+      variant="light"
+    />
+  );
+}\n- apps/docs/content/components/pagination/custom-items.ts (modified, 181 changes)\n  Patch: @@ -1,189 +1,12 @@
-const ChevronIcon = `export const ChevronIcon = (props) => (
-  <svg
-    aria-hidden="true"
-    fill="none"
-    focusable="false"
-    height="1em"
-    role="presentation"
-    viewBox="0 0 24 24"
-    width="1em"
-    {...props}
-  >
-    <path
-      d="M15.5 19l-7-7 7-7"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="1.5"
-    />
-  </svg>
-);
-`;
-
-const ChevronIconTs = `import {SVGProps} from "react";
-
-type IconSvgProps = SVGProps<SVGSVGElement>;
-
-export const ChevronIcon = (props: IconSvgProps) => (
-  <svg
-    aria-hidden="true"
-    fill="none"
-    focusable="false"
-    height="1em"
-    role="presentation"
-    viewBox="0 0 24 24"
-    width="1em"
-    {...props}
-  >
-    <path
-      d="M15.5 19l-7-7 7-7"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth="1.5"
-    />
-  </svg>
-);
-`;
-
-const AppTs = `import {Pagination, PaginationItemType, PaginationItemRenderProps} from "@nextui-org/react";
-import {ChevronIcon} from "./ChevronIcon";
-
-export default function App() {
-  const renderItem = ({
-    ref,
-    key,
-    value,
-    isActive,
-    onNext,
-    onPrevious,
-    setPage,
-    className,
-  }: PaginationItemRenderProps) => {
-    if (value === PaginationItemType.NEXT) {
-      return (
-        <button key={key} className={cn(className, "bg-default-200/50 min-w-8 w-8 h-8")} onClick={onNext}>
-          <ChevronIcon className="rotate-180" />
-        </button>
-      );
-    }
-
-    if (value === PaginationItemType.PREV) {
-      return (
-        <button key={key} className={cn(className, "bg-default-200/50 min-w-8 w-8 h-8")} onClick={onPrevious}>
-          <ChevronIcon />
-        </button>
-      );
-    }
-
-    if (value === PaginationItemType.DOTS) {
-      return <button key={key} className={className}>...</button>;
-    }
-
-    // cursor is the default item
-    return (
-      <button
-        ref={ref}
-        key={key}
-        className={cn(
-          className,
-          isActive &&
-            "text-white bg-gradient-to-br from-indigo-500 to-pink-500 font-bold",
-        )}
-        onClick={() => setPage(value)}
-      >
-        {value}
-      </button>
-    );
-  };
-
-  return (
-    <Pagination
-      disableCursorAnimation
-      showControls
-      total={10}
-      initialPage={1}
-      className="gap-2"
-      radius="full"
-      renderItem={renderItem}
-      variant="light"
-    />
-  );
-}`;
-
-const App = `import {Pagination, PaginationItemType} from "@nextui-org/react";
-import {ChevronIcon} from "./ChevronIcon";
-
-export default function App() {
-  const renderItem = ({
-    ref,
-    key,
-    value,
-    isActive,
-    onNext,
-    onPrevious,
-    setPage,
-    className,
-  }) => {
-    if (value === PaginationItemType.NEXT) {
-      return (
-        <button key={key} className={cn(className, "bg-default-200/50 min-w-8 w-8 h-8")} onClick={onNext}>
-          <ChevronIcon className="rotate-180" />
-        </button>
-      );
-    }
-
-    if (value === PaginationItemType.PREV) {
-      return (
-        <button key={key} className={cn(className, "bg-default-200/50 min-w-8 w-8 h-8")} onClick={onPrevious}>
-          <ChevronIcon />
-        </button>
-      );
-    }
-
-    if (value === PaginationItemType.DOTS) {
-      return <button key={key} className={className}>...</button>;
-    }
-
-    // cursor is the default item
-    return (
-      <button
-        key={key}
-        ref={ref}
-        className={cn(
-          className,
-          isActive &&
-          "text-white bg-gradient-to-br from-indigo-500 to-pink-500 font-bold",
-        )}
-        onClick={() => setPage(value)}
-      >
-        {value}
-      </button>
-    );
-  };
-
-  return (
-    <Pagination
-      disableCursorAnimation
-      showControls
-      total={10}
-      initialPage={1}
-      className="gap-2"
-      radius="full"
-      renderItem={renderItem}
-      variant="light"
-    />
-  );
-}`;
+import App from "./custom-items.raw.jsx?raw";
+import AppTs from "./custom-items.raw.tsx?raw";
 
 const react = {
   "/App.jsx": App,
-  "/ChevronIcon.jsx": ChevronIcon,
 };
 
 const reactTs = {
   "/App.tsx": AppTs,
-  "/ChevronIcon.tsx": ChevronIconTs,
 };
 
 export default {\n- apps/docs/content/components/pagination/custom-styles.raw.jsx (added, 15 changes)\n  Patch: @@ -0,0 +1,15 @@
+import {Pagination} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <Pagination
+      classNames={{
+        wrapper: "gap-0 overflow-visible h-8 rounded border border-divider",
+        item: "w-8 h-8 text-small rounded-none bg-transparent",
+        cursor:
+          "bg-gradient-to-b shadow-lg from-default-500 to-default-800 dark:from-default-300 dark:to-default-100 text-white font-bold",
+      }}
+      total={10}
+    />
+  );
+}\n- apps/docs/content/components/pagination/custom-styles.ts (modified, 16 changes)\n  Patch: @@ -1,18 +1,4 @@
-const App = `import {Pagination, Button} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <Pagination
-      total={10}
-      classNames={{
-        wrapper: "gap-0 overflow-visible h-8 rounded border border-divider",
-        item: "w-8 h-8 text-small rounded-none bg-transparent",
-        cursor:
-          "bg-gradient-to-b shadow-lg from-default-500 to-default-800 dark:from-default-300 dark:to-default-100 text-white font-bold",
-      }}
-    />
-  );
-}`;
+import App from "./custom-styles.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/pagination/disabled.raw.jsx (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+import {Pagination} from "@nextui-org/react";
+
+export default function App() {
+  return <Pagination isDisabled initialPage={1} total={10} />;
+}\n- apps/docs/content/components/pagination/disabled.ts (modified, 8 changes)\n  Patch: @@ -1,10 +1,4 @@
-const App = `import {Pagination} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <Pagination isDisabled total={10} initialPage={1} />
-  );
-}`;
+import App from "./disabled.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/pagination/initial-page.raw.jsx (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+import {Pagination} from "@nextui-org/react";
+
+export default function App() {
+  return <Pagination color="warning" initialPage={3} total={10} />;
+}\n- apps/docs/content/components/pagination/initial-page.ts (modified, 8 changes)\n  Patch: @@ -1,10 +1,4 @@
-const App = `import {Pagination} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <Pagination color="warning" initialPage={3} total={10} />
-  );
-}`;
+import App from "./initial-page.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/pagination/loop.raw.jsx (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+import {Pagination} from "@nextui-org/react";
+
+export default function App() {
+  return <Pagination loop showControls color="success" initialPage={1} total={5} />;
+}\n- apps/docs/content/components/pagination/loop.ts (modified, 8 changes)\n  Patch: @@ -1,10 +1,4 @@
-const App = `import {Pagination} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <Pagination loop showControls color="success" total={5} initialPage={1} />
-  );
-}`;
+import App from "./loop.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/pagination/radius.raw.jsx (added, 13 changes)\n  Patch: @@ -0,0 +1,13 @@
+import {Pagination} from "@nextui-org/react";
+
+export default function App() {
+  const radius = ["full", "xl", "lg", "md", "sm", "base", "none"];
+
+  return (
+    <div className="flex flex-wrap gap-4 items-center">
+      {radius.map((r) => (
+        <Pagination key={r} initialPage={1} radius={r} total={10} />
+      ))}
+    </div>
+  );
+}\n- apps/docs/content/components/pagination/radius.ts (modified, 15 changes)\n  Patch: @@ -1,17 +1,4 @@
-const App = `import {Pagination} from "@nextui-org/react";
-
-export default function App() {
-
-  const radius = ["full", "xl", "lg", "md", "sm", "base", "none"]
-
-  return (
-    <div className="flex flex-wrap gap-4 items-center">
-      {radius.map((r) => (
-        <Pagination key={r} total={10} initialPage={1} radius={r} />
-      ))}
-    </div>
-  );
-}`;
+import App from "./radius.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/pagination/shadow.raw.jsx (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+import {Pagination} from "@nextui-org/react";
+
+export default function App() {
+  return <Pagination showShadow color="warning" initialPage={1} total={10} />;
+}\n- apps/docs/content/components/pagination/shadow.ts (modified, 8 changes)\n  Patch: @@ -1,10 +1,4 @@
-const App = `import {Pagination} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <Pagination showShadow color="warning" total={10} initialPage={1} />
-  );
-}`;
+import App from "./shadow.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/pagination/siblings.raw.jsx (added, 14 changes)\n  Patch: @@ -0,0 +1,14 @@
+import {Pagination} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex flex-col gap-5">
+      <p>1 Sibling (default)</p>
+      <Pagination total={10} />
+      <p>2 Siblings</p>
+      <Pagination siblings={2} total={10} />
+      <p>3 Siblings</p>
+      <Pagination siblings={3} total={10} />
+    </div>
+  );
+}\n- apps/docs/content/components/pagination/siblings.ts (modified, 23 changes)\n  Patch: @@ -1,25 +1,4 @@
-const App = `import {Pagination, Button} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <div className="flex flex-col gap-5">
-      <p>1 Sibling (default)</p>
-      <Pagination
-        total={10}
-      />
-      <p>2 Siblings</p>
-      <Pagination
-        total={10}
-        siblings={2}
-      />
-      <p>3 Siblings</p>
-      <Pagination
-        total={10}
-        siblings={3}
-      />
-    </div>
-  );
-}`;
+import App from "./siblings.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/pagination/sizes.raw.jsx (added, 13 changes)\n  Patch: @@ -0,0 +1,13 @@
+import {Pagination} from "@nextui-org/react";
+
+export default function App() {
+  const sizes = ["sm", "md", "lg"];
+
+  return (
+    <div className="flex flex-wrap gap-4 items-center">
+      {sizes.map((size) => (
+        <Pagination key={size} initialPage={1} size={size} total={10} />
+      ))}
+    </div>
+  );
+}\n
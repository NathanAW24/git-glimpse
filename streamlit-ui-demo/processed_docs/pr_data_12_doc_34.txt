Pull Request Number: 2761
Title: fix(radio): omit non-react props on radio-group
Base Branch: main
Head Branch: fix/2759
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/2761
State: MERGED
Created At: 2024-04-17T12:36:32Z
Merged At: 2024-04-17T12:47:56Z
Participants: jrgarciadev

Description:
Closes #2759
üìù Description
Non-react props omitted from being passed to the RadioGroup component
‚õ≥Ô∏è Current behavior (updates)
isInvalid warning since it is not a HTML prop
üöÄ New behavior
isInvalid prop extracted from the original props, otherProps filtered to a void passing more non-react props to the component
üí£ Is this a breaking change (Yes/No): Bo

üìù Additional Information

Summary by CodeRabbit

Bug Fixes

Enhanced the radio group component to include all relevant properties, improving consistency and validation handling.

Commits:
- fix(radio): omit non-react props on radio-group\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 2bce293192d1120f9157db3a8a97c6a5996326ac

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name              | Type  |
| ----------------- | ----- |
| @nextui-org/radio | Patch |
| @nextui-org/react | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/2759?filename=.changeset/six-turtles-tap.md&value=---%0A%22%40nextui-org%2Fradio%22%3A%20patch%0A---%0A%0Afix(radio)%3A%20omit%20non-react%20props%20on%20radio-group%0A)

\n- vercel: [vc]: #Sas2G9997wfoaoDcajqv8ggrEmI1//kVzZO58HVARrs=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi85ajYyZGdheGNuQ01Gdlh6YjRORlpHZzRQbzU3IiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtMjc1OS1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWZpeC0yNzU5LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvQ3NxeGZpZEtRYmZzemhEMzZna2RNVTFETEtVVSIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1maXgtMjc1OS1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LTI3NTktbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/9j62dgaxcnCMFvXzb4NFZGg4Po57)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-2759-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-2759-nextui-org.vercel.app?via=pr-comment-feedback-link) | Apr 17, 2024 0:42am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/CsqxfidKQbfszhD36gkdMU1DLKUU)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-2759-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-2759-nextui-org.vercel.app?via=pr-comment-feedback-link) | Apr 17, 2024 0:42am |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
The recent update introduces a patch for the "@nextui-org/radio" component, focusing on enhancing the handling of non-react props and improving the management of validation states like `isInvalid`. This ensures better consistency and addresses issues with unrecognized props in the DOM, particularly after the version update which led to console warnings.

## Changes

| File                                              | Change Summary                                                                                   |
|---------------------------------------------------|--------------------------------------------------------------------------------------------------|
| `.changeset/twelve-gorillas-stare.md`             | Introduces a patch to handle non-react props in the radio group component.                       |
| `packages/.../src/use-radio-group.ts`             | Updated to include `filterDOMProps`, and modified handling of `isInvalid` and `validationState`. |

## Assessment against linked issues

| Objective                                                    | Addressed | Explanation                                          |
|--------------------------------------------------------------|-----------|------------------------------------------------------|
| Recognize `isInvalid` prop in `RadioGroup` [#2759]           | ‚úÖ         |                                                      |
| Eliminate console warning for unrecognized `isInvalid` prop  | ‚úÖ         |                                                      |
| Ensure `isInvalid` appears correctly in DOM or is removed    | ‚úÖ         |                                                      |
| Handle validation state consistently across updates          | ‚úÖ         |                                                      |
| Maintain documentation accuracy regarding `isInvalid` prop   | ‚ùì         | No specific mention of updating documentation found. |

The changes address most of the objectives directly related to coding concerns, particularly the handling of the `isInvalid` prop and related console warnings. Documentation updates may still need to be verified or completed.

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->
<!--


.changeset/twelve-gorillas-stare.md: The new file introduces a patch for the "@nextui-org/radio" component to fix an issue where non-react props were omitted from the radio group component.

---

packages/components/radio/src/use-radio-group.ts: The functionality in this file is updated by including `filterDOMProps` alongside the `useDOMRef` function import. Modifications are made to how `isInvalid` and `validationState` are handled within the `useRadioGroup` function for consistency and proper handling of these properties.

-->
<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: short summary by coderabbit.ai -->
<!--


### PR Objectives

This pull request, numbered 2761 and titled "fix(radio): omit non-react props on radio-group," addresses an issue identified in issue #2759. The problem arose after updating to NextUI version 2.3.1, where users encountered a warning in their console stating that React does not recognize the `isInvalid` prop on a DOM element. This warning was triggered when the `isInvalid` prop was passed to the `RadioGroup` component, which is not a standard HTML attribute and hence not recognized by the DOM.

The main objective of this PR is to refine the prop handling within the `RadioGroup` component to ensure that non-React props, such as `isInvalid`, are not passed to the DOM, thereby eliminating the console warning. The solution involves extracting the `isInvalid` prop from the component's props and filtering out any other non-React props before they are passed to the component. This is achieved by updating the `useRadioGroup` function within the `use-radio-group.ts` file, where `isInvalid` and `validationState` are specifically managed to prevent them from being passed as DOM attributes.

The PR also introduces a new changeset file, `twelve-gorillas-stare.md`, which outlines the patch applied to the "@nextui-org/radio" component to address this issue. This changeset is crucial for documenting the fix and ensuring that it is properly tracked and managed within the project's version control system.

### AI-Generated Summary of Generated Summaries

The pull request introduces a patch to the `@nextui-org/radio` component, specifically targeting the `RadioGroup` component's handling of non-React props. The main changes are implemented in the `useRadioGroup` function within the `use-radio-group.ts` file. This function is enhanced to include a mechanism for filtering out non-React props, such as `isInvalid`, by using the `filterDOMProps` method. This update ensures that these props are not passed to the DOM, thereby preventing unwanted warnings in the console. The changeset file `twelve-gorillas-stare.md` documents this patch, providing a clear description of the modifications made to address the issue.

-->
<!-- end of auto-generated comment: short summary by coderabbit.ai -->

---

<details>

<summary>Recent Review Details</summary>

**Configuration used: .coderabbit.yaml**

<details>
<summary>Commits</summary>
Files that changed from the base of the PR and between 74eda312883b2e17df26f71442aba9fb3cd240be and 2bce293192d1120f9157db3a8a97c6a5996326ac.
</details>


<details>
<summary>Files selected for processing (2)</summary>

* .changeset/twelve-gorillas-stare.md (1 hunks)
* packages/components/radio/src/use-radio-group.ts (7 hunks)

</details>







<details><summary>Additional comments not posted (3)</summary><blockquote>
<details><summary>.changeset/twelve-gorillas-stare.md (1)</summary><blockquote>

`1-5`: The changeset is well-formed and clearly describes the patch applied to address the issue with non-react props in the `RadioGroup` component.

</blockquote></details>
<details><summary>packages/components/radio/src/use-radio-group.ts (2)</summary><blockquote>

`11-11`: The addition of `filterDOMProps` to the import statement is appropriate for the intended functionality of filtering non-React props.

---

`171-182`: > :memo: **NOTE**
> This review was outside the diff hunks and was mapped to the diff hunk with the greatest overlap. Original lines [73-179]

The updates to the `useRadioGroup` function effectively manage the `isInvalid` and `validationState` props and correctly apply `filterDOMProps` to ensure that non-React props are not passed to the DOM. This is a good practice and aligns with the objectives of the PR.

</blockquote></details></blockquote></details>



</details><!-- commit_ids_reviewed_start -->

<!-- 2bce293192d1120f9157db3a8a97c6a5996326ac -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/twelve-gorillas-stare.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/radio": patch
+---
+
+Fix #2759 non-react props omitted from radio group component\n- packages/components/radio/src/use-radio-group.ts (modified, 20 changes)\n  Patch: @@ -8,7 +8,7 @@ import {useCallback, useMemo} from "react";
 import {RadioGroupState, useRadioGroupState} from "@react-stately/radio";
 import {useRadioGroup as useReactAriaRadioGroup} from "@react-aria/radio";
 import {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
-import {useDOMRef} from "@nextui-org/react-utils";
+import {filterDOMProps, useDOMRef} from "@nextui-org/react-utils";
 import {clsx, safeAriaLabel} from "@nextui-org/shared-utils";
 import {mergeProps} from "@react-aria/utils";
 
@@ -70,6 +70,8 @@ export function useRadioGroup(props: UseRadioGroupProps) {
     label,
     value,
     name,
+    isInvalid: isInvalidProp,
+    validationState,
     size = "md",
     color = "primary",
     isDisabled = false,
@@ -86,6 +88,7 @@ export function useRadioGroup(props: UseRadioGroupProps) {
   } = props;
 
   const Component = as || "div";
+  const shouldFilterDOMProps = typeof Component === "string";
 
   const domRef = useDOMRef(ref);
 
@@ -97,7 +100,7 @@ export function useRadioGroup(props: UseRadioGroupProps) {
       "aria-label": safeAriaLabel(otherProps["aria-label"], label),
       isRequired,
       isReadOnly,
-      isInvalid: props.validationState === "invalid" || props.isInvalid,
+      isInvalid: validationState === "invalid" || isInvalidProp,
       orientation,
       validationBehavior: "native",
       onChange: onValueChange,
@@ -109,8 +112,8 @@ export function useRadioGroup(props: UseRadioGroupProps) {
     label,
     isRequired,
     isReadOnly,
-    props.isInvalid,
-    props.validationState,
+    isInvalidProp,
+    validationState,
     orientation,
     onValueChange,
   ]);
@@ -127,7 +130,7 @@ export function useRadioGroup(props: UseRadioGroupProps) {
     validationDetails,
   } = useReactAriaRadioGroup(otherPropsWithOrientation, groupState);
 
-  const isInvalid = props.validationState === "invalid" || props.isInvalid || isAriaInvalid;
+  const isInvalid = otherPropsWithOrientation.isInvalid || isAriaInvalid;
 
   const context: ContextType = useMemo(
     () => ({
@@ -168,7 +171,12 @@ export function useRadioGroup(props: UseRadioGroupProps) {
     return {
       ref: domRef,
       className: slots.base({class: baseStyles}),
-      ...mergeProps(groupProps, otherProps),
+      ...mergeProps(
+        groupProps,
+        filterDOMProps(otherProps, {
+          enabled: shouldFilterDOMProps,
+        }),
+      ),
     };
   }, [domRef, slots, baseStyles, groupProps, otherProps]);
 \n
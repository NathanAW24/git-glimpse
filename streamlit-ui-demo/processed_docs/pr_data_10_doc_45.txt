Pull Request Number: 3000
Title: fix(autocomplete): ignore pointer events when the clear button is hidden
Base Branch: canary
Head Branch: fix/autocomplete
Author: chirokas
URL: https://github.com/nextui-org/nextui/pull/3000
State: MERGED
Created At: 2024-05-14T12:31:53Z
Merged At: 2024-09-05T09:24:15Z
Participants: chirokas, jrgarciadev, wingkwong

Description:
Closes # 
üìù Description


opacity: 0 causes the elements to be very transparent but users can still interact with them.


On mobile, this gives a bit of annoying results where after clicking the button, the keyboard is shown again because the input is focused again. See RAC#6783


‚õ≥Ô∏è Current behavior (updates)

  
    
    

    20240514_160517.mp4
    
  

  

  


üöÄ New behavior

  
    
    

    20240514_160634.mp4
    
  

  

  


üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


New Features

Enhanced AutoComplete component with improved visibility and interaction for the Clear Button.
Refined focus management for mobile users to ensure a seamless experience when using the Clear Button.



Bug Fixes

Resolved keyboard issue that affected the reopening of the AutoComplete component on mobile devices.
Improved pointer event handling to prevent unintended interactions when the component is not visible.

Commits:
- fix(autocomplete): hide clear button with `visibility: hidden`\n- fix(autocomplete): clear button pointer-events\n- refactor(autocomplete): improve keyboard reopen issue on mobile\n- chore: add changeset\n- Merge branch 'canary' into pr/3000\n- refactor(autocomplete): apply chain and add type to e\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 8ceb3efa7d443c0711d51f43c2f96114b4235243

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 3 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/autocomplete | Patch |
| @nextui-org/theme        | Patch |
| @nextui-org/react        | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/chirokas/nextui/new/fix/autocomplete?filename=.changeset/fast-penguins-float.md&value=---%0A%22%40nextui-org%2Fautocomplete%22%3A%20patch%0A%22%40nextui-org%2Ftheme%22%3A%20patch%0A---%0A%0Afix(autocomplete)%3A%20ignore%20pointer%20events%20when%20the%20clear%20button%20is%20hidden%0A)

\n- vercel: [vc]: #mBN3FQO+9VgNfa6ZXY11F2wy9gl9q+nVlksGfliRL88=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvV2NnWFJuWWdZbkR4R3JIODNpZjVTQllOTjl4RyIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWNoaXJva2FzLWZpeC1hdXQtOTMxNTAzLW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWNoaXJva2FzLWZpeC1hdXQtOTMxNTAzLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/WcgXRnYgYnDxGrH83if5SBYNN9xG)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-chirokas-fix-aut-931503-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-chirokas-fix-aut-931503-nextui-org.vercel.app?via=pr-comment-feedback-link) | Aug 20, 2024 4:40am |

\n- vercel: @chirokas is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%22856ed1ef0993236c1cffa84f714d8de76058ab86%22%7D%2C%22id%22%3A%22QmRj6nAaATQdaTpRpnZ2zzGX8AetB9nL8DMvwaM9MrBmTo%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A3000%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough 

The recent patch to `@nextui-org/theme` enhances the AutoComplete Clear Button functionality by enabling visibility control through CSS. New utility classes were introduced to manage visibility, pointer events, and interaction behaviors, particularly for mobile devices. These changes improve user experience by ensuring intuitive interactions and effective focus management, streamlining the codebase for better readability and maintainability.

## Changes

| Files                                              | Summary                                                    |
|----------------------------------------------------|------------------------------------------------------------|
| `packages/core/theme/src/components/autocomplete.ts`, `packages/components/autocomplete/src/use-autocomplete.ts` | - Added utility classes to control visibility and pointer events.<br>- Improved focus management and event handling for mobile interactions.<br>- Simplified code by integrating callback functionalities into event handlers. |
| `.changeset/calm-rockets-shop.md`                  | Documented the patch details and the changes made in `autocomplete.ts` and `use-autocomplete.ts`. |

## Sequence Diagram(s)

```mermaid
sequenceDiagram
    participant User
    participant AutoComplete
    participant ClearButton
    note over AutoComplete: Initial State
    User->>AutoComplete: Types in text
    AutoComplete->>ClearButton: Shows Clear Button
    User->>ClearButton: Clicks Clear Button
    ClearButton->>AutoComplete: Clears input
    AutoComplete->>ClearButton: Hides Clear Button
    note over AutoComplete: Final State
```

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

# Existing changesets

.changeset/calm-rockets-shop.md: ## Summary
The file `calm-rockets-shop.md` introduces a patch for `@nextui-org/theme` and `@nextui-org/autocomplete` that enables showing and hiding the AutoComplete Clear Button in CSS using visibility settings. It enhances user interaction with the clear button, particularly addressing pointer events to ensure intuitive and responsive interactions, and resolves a keyboard-related issue affecting the reopening of the component on mobile devices.

---

packages/core/theme/src/components/autocomplete.ts: ### Summary
The diff introduces modifications to the `autocomplete` component's styling in the `autocomplete.ts` file. Key changes include the addition of several utility classes that enhance the component's interactivity and visibility based on specific conditions. Notably, new classes such as `"pointer-events-none"` and `"data-[visible=true]:pointer-events-auto"` have been integrated to control pointer events, ensuring that when the component is not visible, it does not capture pointer events. This adjustment improves user experience by preventing unintended interactions. Additional classes like `"sm:data-[visible=true]:pointer-events-none"` and `"sm:group-data-[hover=true]:data-[visible=true]:pointer-events-auto"` further refine the behavior of the component in responsive scenarios, particularly on smaller screens.

## Alterations to the declarations of exported or public entities
- No changes to the declarations of exported or public entities were made.

---

packages/components/autocomplete/src/use-autocomplete.ts: ## Summary
The diff introduces several modifications to the `useAutocomplete` function within the `use-autocomplete.ts` file, primarily aimed at refining the focus management and event handling logic. The removal of the `onFocus` and `onClear` callback functions simplifies the code, as their functionalities are integrated directly into the event handlers. The `onPressStart` event handler is updated to ensure that the input field retains focus when the clear button is pressed, which is particularly important for mobile interactions. Changes to the `onMouseDown` and `onPointerDown` handlers enhance focus management, ensuring that the input field is correctly focused during user interactions. Overall, these changes streamline the focus behavior, enhancing the user experience, especially in mobile contexts.

## Alterations to the declarations of exported or public entities
- No alterations to the declarations of exported or public entities were made in `use-autocomplete.ts`.


# New changesets

packages/components/autocomplete/src/use-autocomplete.ts: ## AI-generated summary of changes

The changes in the `use-autocomplete.ts` file primarily focus on refining the logic for handling input focus and clearing selections in the autocomplete component. Notably, the `onFocus` and `onClear` callback functions have been removed, simplifying the control flow related to input focus management. Instead of explicitly calling `onFocus(true)` when the input is not focused, the focus is now managed directly within the `onPointerDown` and `onMouseDown` event handlers, which ensure that the input gains focus when the user interacts with the clear button or the input area.

Furthermore, the logic for clearing the input value and the selected key has been integrated directly into the `onPress` handler of the clear button. This change enhances the clarity of the code by reducing the number of separate functions and consolidating related functionality into fewer, more cohesive event handlers. The focus management during button presses has been adjusted to ensure that the keyboard remains open on mobile devices when interacting with the clear button, which improves user experience.

Overall, these modifications streamline the component's functionality, improving both the readability and maintainability of the code while ensuring that the core behavior of the autocomplete feature remains intact.



## Alterations to the declarations of exported or public entities

- No changes to the declarations of exported or public entities were made in `packages/components/autocomplete/src/use-autocomplete.ts`.

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR Summary

**Title:** fix(autocomplete): ignore pointer events when the clear button is hidden  
**User:** chirokas  
**Number:** 3000

**Description:**  
This pull request addresses an issue with the autocomplete component where setting `opacity: 0` makes elements transparent but still allows user interaction. This behavior can lead to undesirable outcomes, particularly on mobile devices, where clicking the clear button can refocus the input field and reopen the keyboard. The proposed solution involves transitioning both `opacity` and `visibility` to effectively manage the interactivity of the clear button. The change aims to ensure that when the clear button is hidden, it does not respond to pointer events, thereby enhancing the user experience by preventing unintended interactions.

## Comments Summary

**chirokas:**  
- Pointed out that while `visibility` is an animatable property, using it can result in a jarring effect due to the discrete nature of its animations. This can negatively impact user experience when elements appear and disappear.
- Suggested that a better approach would be to transition both `visibility` and `opacity` together. This would allow for a smoother visual effect and better control over the interactivity of the elements.

**jrgarciadev:**  
- Proposed an alternative solution by suggesting the use of `pointer-events-none`. This CSS class would prevent any user interaction with elements that are meant to be hidden, addressing the issue without requiring animation transitions. This approach could simplify the implementation while achieving the desired behavior of the clear button in the autocomplete component.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 856ed1ef0993236c1cffa84f714d8de76058ab86 -->
<!-- 728e4d513bdbf6d5edbe1ba5607fb5c80e0e0218 -->
<!-- 4d3434ba8fbd8591526d10106f25611405f3979a -->
<!-- 36000228a378b724ba4f24e54e979d7a14e76c3f -->
<!-- 8ceb3efa7d443c0711d51f43c2f96114b4235243 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configuration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- chirokas: Visibility is an animatable property. However, the result looks terrible and gives a jarring effect. This is because it's a [discrete animation](https://www.w3.org/TR/web-animations/#animating-visibility).

A solution to this problem is to specify a transition on both `visibility` and `opacity`.
\n- jrgarciadev: @chirokas what about `pointer-events-none` ?\n

Files Changed:
- .changeset/metal-jars-rhyme.md (added, 6 changes)\n  Patch: @@ -0,0 +1,6 @@
+---
+"@nextui-org/autocomplete": patch
+"@nextui-org/theme": patch
+---
+
+Improve clear button pointer events, keyboard reopen issue on mobile\n- packages/components/autocomplete/src/use-autocomplete.ts (modified, 46 changes)\n  Patch: @@ -7,7 +7,7 @@ import {autocomplete} from "@nextui-org/theme";
 import {useFilter} from "@react-aria/i18n";
 import {FilterFn, useComboBoxState} from "@react-stately/combobox";
 import {ReactRef, useDOMRef} from "@nextui-org/react-utils";
-import {ReactNode, useCallback, useEffect, useMemo, useRef} from "react";
+import {ReactNode, useEffect, useMemo, useRef} from "react";
 import {ComboBoxProps} from "@react-types/combobox";
 import {PopoverProps} from "@nextui-org/popover";
 import {ListboxProps} from "@nextui-org/listbox";
@@ -318,10 +318,7 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
   }, [inputRef.current]);
 
   useEffect(() => {
-    // set input focus
     if (isOpen) {
-      onFocus(true);
-
       // apply the same with to the popover as the select
       if (popoverRef.current && inputWrapperRef.current) {
         let rect = inputWrapperRef.current.getBoundingClientRect();
@@ -361,19 +358,6 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
     [objectToDeps(variantProps), isClearable, disableAnimation, className],
   );
 
-  const onClear = useCallback(() => {
-    state.setInputValue("");
-    state.setSelectedKey(null);
-  }, [state]);
-
-  const onFocus = useCallback(
-    (isFocused: boolean) => {
-      inputRef.current?.focus();
-      state.setFocused(isFocused);
-    },
-    [state, inputRef],
-  );
-
   const getBaseProps: PropGetter = () => ({
     "data-invalid": dataAttr(isInvalid),
     "data-open": dataAttr(state.isOpen),
@@ -394,19 +378,23 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
     ({
       ...mergeProps(buttonProps, slotsProps.clearButtonProps),
       // disable original focus and state toggle from react aria
-      onPressStart: () => {},
+      onPressStart: () => {
+        // this is in PressStart for mobile so that touching the clear button doesn't remove focus from
+        // the input and close the keyboard
+        inputRef.current?.focus();
+      },
       onPress: (e: PressEvent) => {
         slotsProps.clearButtonProps?.onPress?.(e);
 
         if (state.selectedItem) {
-          onClear();
+          state.setInputValue("");
+          state.setSelectedKey(null);
         } else {
           if (allowsCustomValue) {
             state.setInputValue("");
             state.close();
           }
         }
-        inputRef?.current?.focus();
       },
       "data-visible": !!state.selectedItem || state.inputValue?.length > 0,
       className: slots.clearButton({
@@ -488,13 +476,19 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
     className: slots.endContentWrapper({
       class: clsx(classNames?.endContentWrapper, props?.className),
     }),
-    onClick: (e) => {
-      const inputFocused = inputRef.current === document.activeElement;
-
-      if (!inputFocused && !state.isFocused && e.currentTarget === e.target) {
-        onFocus(true);
+    onPointerDown: chain(props.onPointerDown, (e: React.PointerEvent) => {
+      if (e.button === 0 && e.currentTarget === e.target) {
+        inputRef.current?.focus();
       }
-    },
+    }),
+    onMouseDown: chain(props.onMouseDown, (e: React.MouseEvent) => {
+      if (e.button === 0 && e.currentTarget === e.target) {
+        // Chrome and Firefox on touch Windows devices require mouse down events
+        // to be canceled in addition to pointer events, or an extra asynchronous
+        // focus event will be fired.
+        e.preventDefault();
+      }
+    }),
   });
 
   return {\n- packages/core/theme/src/components/autocomplete.ts (modified, 4 changes)\n  Patch: @@ -14,12 +14,16 @@ const autocomplete = tv({
       "translate-x-1",
       "cursor-text",
       "opacity-0",
+      "pointer-events-none",
       "text-default-500",
       "group-data-[invalid=true]:text-danger",
       "data-[visible=true]:opacity-100", // on mobile is always visible when there is a value
+      "data-[visible=true]:pointer-events-auto",
       "data-[visible=true]:cursor-pointer",
       "sm:data-[visible=true]:opacity-0", // only visible on hover
+      "sm:data-[visible=true]:pointer-events-none",
       "sm:group-data-[hover=true]:data-[visible=true]:opacity-100",
+      "sm:group-data-[hover=true]:data-[visible=true]:pointer-events-auto",
     ],
     selectorButton: "text-medium",
   },\n
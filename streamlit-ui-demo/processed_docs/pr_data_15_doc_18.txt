Pull Request Number: 2461
Title: Remove unused framer motion features
Base Branch: main
Head Branch: main
Author: mezotv
URL: https://github.com/nextui-org/nextui/pull/2461
State: CLOSED
Created At: 2024-03-06T18:44:53Z
Merged At: None
Participants: mezotv, jrgarciadev

Description:
üìù Description

Changes the motion import to the more lightweigth m component.

‚õ≥Ô∏è Current behavior (updates)

Currently uses the motion import which loads all of the features even the ones you don't need.

üöÄ New behavior

Uses the lightweight m component with only the animation features loaded into. Since thats the only thing the components use.

üí£ Is this a breaking change (Yes/No):

Not a breaking change!

üìù Additional Information
Docs for this change: https://www.framer.com/motion/guide-reduce-bundle-size/

Commits:
- fix: remove unused framer motion features\n

Labels:


Comments:
- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: ea1ca58c81067b772daa1a8e7cb43dca490a2d95

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/mezotv/nextui/new/main?filename=.changeset/wise-squids-pump.md&value=---%0A%22%40nextui-org%2Faccordion%22%3A%20patch%0A%22%40nextui-org%2Fmodal%22%3A%20patch%0A%22%40nextui-org%2Fnavbar%22%3A%20patch%0A%22%40nextui-org%2Fpopover%22%3A%20patch%0A%22%40nextui-org%2Fripple%22%3A%20patch%0A%22%40nextui-org%2Ftabs%22%3A%20patch%0A%22%40nextui-org%2Ftooltip%22%3A%20patch%0A---%0A%0Afix%3A%20remove%20unused%20framer%20motion%20features%0A)

\n- vercel: [vc]: #m2Ltcn9oOSWkCgeRFelPfDf3HTWcEHV/hZKtWtOGbso=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvRzQ3UHdEUmg0OXN3VERrbk5rV0tLUzlVNWpOcCIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLW1lem90di1tYWluLW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLW1lem90di1tYWluLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/G47PwDRh49swTDknNkWKKS9U5jNp)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-mezotv-main-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-mezotv-main-nextui-org.vercel.app?via=pr-comment-feedback-link) | Mar 6, 2024 6:47pm |

\n- vercel: @mezotv is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%22ea1ca58c81067b772daa1a8e7cb43dca490a2d95%22%7D%2C%22id%22%3A%22QmdERnSPuvQmZkEww8fceG97mrvQq2ERs9gx28XZR8kvas%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A2461%2C%22repo%22%3A%22nextui%22%7D).

\n- jrgarciadev: Hey @mezotv thanks for this PR, excellent improvement üôåüèª 

Could you please add the changesets as `patch` and check why the Tabs animation is not working properly?



https://github.com/nextui-org/nextui/assets/30373425/97f9899b-33c4-4159-9bf8-e1ec98204093

Thanks üôèüèª 
\n- mezotv: > Could you please add the changesets as `patch` and check why the Tabs animation is not working properly?
> 
>

Sure I will do that later today!
\n- mezotv: Well looks like github closed the request cause I rename the branch. Ill open a new one!\n

Files Changed:
- packages/components/accordion/src/accordion-item.tsx (modified, 50 changes)\n  Patch: @@ -1,7 +1,7 @@
 import {forwardRef} from "@nextui-org/system";
 import {useMemo, ReactNode} from "react";
 import {ChevronIcon} from "@nextui-org/shared-icons";
-import {AnimatePresence, motion, useWillChange} from "framer-motion";
+import {AnimatePresence, LazyMotion, domAnimation, m, useWillChange} from "framer-motion";
 import {TRANSITION_VARIANTS} from "@nextui-org/framer-transitions";
 
 import {UseAccordionItemProps, useAccordionItem} from "./use-accordion-item";
@@ -53,31 +53,35 @@ const AccordionItem = forwardRef<"button", AccordionItemProps>((props, ref) => {
     }
 
     return keepContentMounted ? (
-      <motion.section
-        key="accordion-content"
-        animate={isOpen ? "enter" : "exit"}
-        exit="exit"
-        initial="exit"
-        style={{overflowY: "hidden", willChange}}
-        variants={TRANSITION_VARIANTS.collapse}
-        {...motionProps}
-      >
-        <div {...getContentProps()}>{children}</div>
-      </motion.section>
+      <LazyMotion features={domAnimation}>
+        <m.section
+          key="accordion-content"
+          animate={isOpen ? "enter" : "exit"}
+          exit="exit"
+          initial="exit"
+          style={{overflowY: "hidden", willChange}}
+          variants={TRANSITION_VARIANTS.collapse}
+          {...motionProps}
+        >
+          <div {...getContentProps()}>{children}</div>
+        </m.section>
+      </LazyMotion>
     ) : (
       <AnimatePresence initial={false}>
         {isOpen && (
-          <motion.section
-            key="accordion-content"
-            animate="enter"
-            exit="exit"
-            initial="exit"
-            style={{overflowY: "hidden", willChange}}
-            variants={TRANSITION_VARIANTS.collapse}
-            {...motionProps}
-          >
-            <div {...getContentProps()}>{children}</div>
-          </motion.section>
+          <LazyMotion features={domAnimation}>
+            <m.section
+              key="accordion-content"
+              animate="enter"
+              exit="exit"
+              initial="exit"
+              style={{overflowY: "hidden", willChange}}
+              variants={TRANSITION_VARIANTS.collapse}
+              {...motionProps}
+            >
+              <div {...getContentProps()}>{children}</div>
+            </m.section>
+          </LazyMotion>
         )}
       </AnimatePresence>
     );\n- packages/components/modal/src/modal-content.tsx (modified, 40 changes)\n  Patch: @@ -7,7 +7,7 @@ import {DismissButton} from "@react-aria/overlays";
 import {TRANSITION_VARIANTS} from "@nextui-org/framer-transitions";
 import {CloseIcon} from "@nextui-org/shared-icons";
 import {RemoveScroll} from "react-remove-scroll";
-import {motion} from "framer-motion";
+import {domAnimation, LazyMotion, m} from "framer-motion";
 import {useDialog} from "@react-aria/dialog";
 import {mergeProps} from "@react-aria/utils";
 import {HTMLNextUIProps} from "@nextui-org/system";
@@ -78,13 +78,15 @@ const ModalContent = forwardRef<"div", ModalContentProps, KeysToOmit>((props, _)
     }
 
     return (
-      <motion.div
-        animate="enter"
-        exit="exit"
-        initial="exit"
-        variants={TRANSITION_VARIANTS.fade}
-        {...(getBackdropProps() as HTMLMotionProps<"div">)}
-      />
+      <LazyMotion features={domAnimation}>
+        <m.div
+          animate="enter"
+          exit="exit"
+          initial="exit"
+          variants={TRANSITION_VARIANTS.fade}
+          {...(getBackdropProps() as HTMLMotionProps<"div">)}
+        />
+      </LazyMotion>
     );
   }, [backdrop, disableAnimation, getBackdropProps]);
 
@@ -95,16 +97,18 @@ const ModalContent = forwardRef<"div", ModalContentProps, KeysToOmit>((props, _)
         {disableAnimation ? (
           <div className={slots.wrapper({class: classNames?.wrapper})}>{content}</div>
         ) : (
-          <motion.div
-            animate="enter"
-            className={slots.wrapper({class: classNames?.wrapper})}
-            exit="exit"
-            initial="exit"
-            variants={scaleInOut}
-            {...motionProps}
-          >
-            {content}
-          </motion.div>
+          <LazyMotion features={domAnimation}>
+            <m.div
+              animate="enter"
+              className={slots.wrapper({class: classNames?.wrapper})}
+              exit="exit"
+              initial="exit"
+              variants={scaleInOut}
+              {...motionProps}
+            >
+              {content}
+            </m.div>
+          </LazyMotion>
         )}
       </RemoveScroll>
     </div>\n- packages/components/navbar/src/navbar-menu.tsx (modified, 40 changes)\n  Patch: @@ -1,7 +1,7 @@
 import {forwardRef, HTMLNextUIProps} from "@nextui-org/system";
 import {useDOMRef} from "@nextui-org/react-utils";
 import {clsx, dataAttr} from "@nextui-org/shared-utils";
-import {AnimatePresence, HTMLMotionProps, motion} from "framer-motion";
+import {AnimatePresence, domAnimation, HTMLMotionProps, LazyMotion, m} from "framer-motion";
 import {mergeProps} from "@react-aria/utils";
 import {ReactElement, useCallback} from "react";
 import {RemoveScroll} from "react-remove-scroll";
@@ -61,24 +61,26 @@ const NavbarMenu = forwardRef<"ul", NavbarMenuProps>((props, ref) => {
     <AnimatePresence mode="wait">
       {isMenuOpen ? (
         <MenuWrapper>
-          <motion.ul
-            ref={domRef}
-            layoutScroll
-            animate="enter"
-            className={slots.menu?.({class: styles})}
-            data-open={dataAttr(isMenuOpen)}
-            exit="exit"
-            initial="exit"
-            style={{
-              // @ts-expect-error
-              "--navbar-height": height,
-              ...style,
-            }}
-            variants={menuVariants}
-            {...mergeProps(motionProps, otherProps)}
-          >
-            {children}
-          </motion.ul>
+          <LazyMotion features={domAnimation}>
+            <m.ul
+              ref={domRef}
+              layoutScroll
+              animate="enter"
+              className={slots.menu?.({class: styles})}
+              data-open={dataAttr(isMenuOpen)}
+              exit="exit"
+              initial="exit"
+              style={{
+                // @ts-expect-error
+                "--navbar-height": height,
+                ...style,
+              }}
+              variants={menuVariants}
+              {...mergeProps(motionProps, otherProps)}
+            >
+              {children}
+            </m.ul>
+          </LazyMotion>
         </MenuWrapper>
       ) : null}
     </AnimatePresence>\n- packages/components/navbar/src/navbar.tsx (modified, 20 changes)\n  Patch: @@ -1,6 +1,6 @@
 import {forwardRef} from "@nextui-org/system";
 import {pickChildren} from "@nextui-org/react-utils";
-import {motion} from "framer-motion";
+import {LazyMotion, domAnimation, m} from "framer-motion";
 import {mergeProps} from "@react-aria/utils";
 
 import {hideOnScrollVariants} from "./navbar-transitions";
@@ -31,14 +31,16 @@ const Navbar = forwardRef<"div", NavbarProps>((props, ref) => {
   return (
     <NavbarProvider value={context}>
       {context.shouldHideOnScroll ? (
-        <motion.nav
-          animate={context.isHidden ? "hidden" : "visible"}
-          initial={false}
-          variants={hideOnScrollVariants}
-          {...mergeProps(context.getBaseProps(), context.motionProps)}
-        >
-          {content}
-        </motion.nav>
+        <LazyMotion features={domAnimation}>
+          <m.nav
+            animate={context.isHidden ? "hidden" : "visible"}
+            initial={false}
+            variants={hideOnScrollVariants}
+            {...mergeProps(context.getBaseProps(), context.motionProps)}
+          >
+            {content}
+          </m.nav>
+        </LazyMotion>
       ) : (
         <Component {...context.getBaseProps()}>{content}</Component>
       )}\n- packages/components/popover/src/free-solo-popover.tsx (modified, 46 changes)\n  Patch: @@ -10,7 +10,7 @@
 import * as React from "react";
 import {DismissButton, Overlay} from "@react-aria/overlays";
 import {forwardRef} from "@nextui-org/system";
-import {HTMLMotionProps, motion} from "framer-motion";
+import {domAnimation, HTMLMotionProps, LazyMotion, m} from "framer-motion";
 import {mergeProps} from "@react-aria/utils";
 import {getTransformOrigins} from "@nextui-org/aria-utils";
 import {TRANSITION_VARIANTS} from "@nextui-org/framer-transitions";
@@ -39,19 +39,21 @@ const FreeSoloPopoverWrapper = ({
   return disableAnimation ? (
     <div {...otherProps}>{children}</div>
   ) : (
-    <motion.div
-      animate="enter"
-      exit="exit"
-      initial="initial"
-      style={{
-        ...style,
-        ...getTransformOrigins(placement === "center" ? "top" : placement),
-      }}
-      variants={TRANSITION_VARIANTS.scaleSpringOpacity}
-      {...mergeProps(otherProps, motionProps)}
-    >
-      {children}
-    </motion.div>
+    <LazyMotion features={domAnimation}>
+      <m.div
+        animate="enter"
+        exit="exit"
+        initial="initial"
+        style={{
+          ...style,
+          ...getTransformOrigins(placement === "center" ? "top" : placement),
+        }}
+        variants={TRANSITION_VARIANTS.scaleSpringOpacity}
+        {...mergeProps(otherProps, motionProps)}
+      >
+        {children}
+      </m.div>
+    </LazyMotion>
   );
 };
 
@@ -87,13 +89,15 @@ const FreeSoloPopover = forwardRef<"div", FreeSoloPopoverProps>((props, ref) =>
     }
 
     return (
-      <motion.div
-        animate="enter"
-        exit="exit"
-        initial="exit"
-        variants={TRANSITION_VARIANTS.fade}
-        {...(getBackdropProps() as HTMLMotionProps<"div">)}
-      />
+      <LazyMotion features={domAnimation}>
+        <m.div
+          animate="enter"
+          exit="exit"
+          initial="exit"
+          variants={TRANSITION_VARIANTS.fade}
+          {...(getBackdropProps() as HTMLMotionProps<"div">)}
+        />
+      </LazyMotion>
     );
   }, [backdrop, disableAnimation, getBackdropProps]);
 \n- packages/components/popover/src/popover-content.tsx (modified, 44 changes)\n  Patch: @@ -5,7 +5,7 @@ import {DOMAttributes, ReactNode, useMemo, useRef} from "react";
 import {forwardRef} from "@nextui-org/system";
 import {DismissButton} from "@react-aria/overlays";
 import {TRANSITION_VARIANTS} from "@nextui-org/framer-transitions";
-import {motion} from "framer-motion";
+import {m, domAnimation, LazyMotion} from "framer-motion";
 import {useDialog} from "@react-aria/dialog";
 import {mergeProps} from "@react-aria/utils";
 import {HTMLNextUIProps} from "@nextui-org/system";
@@ -69,13 +69,15 @@ const PopoverContent = forwardRef<"div", PopoverContentProps>((props, _) => {
     }
 
     return (
-      <motion.div
-        animate="enter"
-        exit="exit"
-        initial="exit"
-        variants={TRANSITION_VARIANTS.fade}
-        {...(getBackdropProps() as HTMLMotionProps<"div">)}
-      />
+      <LazyMotion features={domAnimation}>
+        <m.div
+          animate="enter"
+          exit="exit"
+          initial="exit"
+          variants={TRANSITION_VARIANTS.fade}
+          {...(getBackdropProps() as HTMLMotionProps<"div">)}
+        />
+      </LazyMotion>
     );
   }, [backdrop, disableAnimation, getBackdropProps]);
 
@@ -86,18 +88,20 @@ const PopoverContent = forwardRef<"div", PopoverContentProps>((props, _) => {
         {disableAnimation ? (
           content
         ) : (
-          <motion.div
-            animate="enter"
-            exit="exit"
-            initial="initial"
-            style={{
-              ...getTransformOrigins(placement === "center" ? "top" : placement),
-            }}
-            variants={TRANSITION_VARIANTS.scaleSpringOpacity}
-            {...motionProps}
-          >
-            {content}
-          </motion.div>
+          <LazyMotion features={domAnimation}>
+            <m.div
+              animate="enter"
+              exit="exit"
+              initial="initial"
+              style={{
+                ...getTransformOrigins(placement === "center" ? "top" : placement),
+              }}
+              variants={TRANSITION_VARIANTS.scaleSpringOpacity}
+              {...motionProps}
+            >
+              {content}
+            </m.div>
+          </LazyMotion>
         )}
       </RemoveScroll>
     </div>\n- packages/components/ripple/src/ripple.tsx (modified, 52 changes)\n  Patch: @@ -1,5 +1,5 @@
 import {FC} from "react";
-import {AnimatePresence, HTMLMotionProps, motion} from "framer-motion";
+import {AnimatePresence, HTMLMotionProps, m, LazyMotion, domAnimation} from "framer-motion";
 import {HTMLNextUIProps} from "@nextui-org/system";
 
 import {RippleType} from "./use-ripple";
@@ -26,30 +26,32 @@ const Ripple: FC<RippleProps> = (props) => {
 
         return (
           <AnimatePresence key={ripple.key} mode="popLayout">
-            <motion.span
-              animate={{transform: "scale(2)", opacity: 0}}
-              className="nextui-ripple"
-              exit={{opacity: 0}}
-              initial={{transform: "scale(0)", opacity: 0.35}}
-              style={{
-                position: "absolute",
-                backgroundColor: color,
-                borderRadius: "100%",
-                transformOrigin: "center",
-                pointerEvents: "none",
-                zIndex: 10,
-                top: ripple.y,
-                left: ripple.x,
-                width: `${ripple.size}px`,
-                height: `${ripple.size}px`,
-                ...style,
-              }}
-              transition={{duration}}
-              onAnimationComplete={() => {
-                onClear(ripple.key);
-              }}
-              {...motionProps}
-            />
+            <LazyMotion features={domAnimation}>
+              <m.span
+                animate={{transform: "scale(2)", opacity: 0}}
+                className="nextui-ripple"
+                exit={{opacity: 0}}
+                initial={{transform: "scale(0)", opacity: 0.35}}
+                style={{
+                  position: "absolute",
+                  backgroundColor: color,
+                  borderRadius: "100%",
+                  transformOrigin: "center",
+                  pointerEvents: "none",
+                  zIndex: 10,
+                  top: ripple.y,
+                  left: ripple.x,
+                  width: `${ripple.size}px`,
+                  height: `${ripple.size}px`,
+                  ...style,
+                }}
+                transition={{duration}}
+                onAnimationComplete={() => {
+                  onClear(ripple.key);
+                }}
+                {...motionProps}
+              />
+            </LazyMotion>
           </AnimatePresence>
         );
       })}\n- packages/components/tabs/src/tab.tsx (modified, 28 changes)\n  Patch: @@ -9,7 +9,7 @@ import {useFocusRing} from "@react-aria/focus";
 import {Node} from "@react-types/shared";
 import {useTab} from "@react-aria/tabs";
 import {useHover} from "@react-aria/interactions";
-import {motion} from "framer-motion";
+import {m, domAnimation, LazyMotion} from "framer-motion";
 import {useIsMounted} from "@nextui-org/use-is-mounted";
 
 import {ValuesType} from "./use-tabs";
@@ -118,18 +118,20 @@ const Tab = forwardRef<"button", TabItemProps>((props, ref) => {
       onClick={handleClick}
     >
       {isSelected && !disableAnimation && !disableCursorAnimation && isMounted ? (
-        <motion.span
-          className={slots.cursor({class: classNames?.cursor})}
-          data-slot="cursor"
-          layoutDependency={false}
-          layoutId="cursor"
-          transition={{
-            type: "spring",
-            bounce: 0.15,
-            duration: 0.5,
-          }}
-          {...motionProps}
-        />
+        <LazyMotion features={domAnimation}>
+          <m.span
+            className={slots.cursor({class: classNames?.cursor})}
+            data-slot="cursor"
+            layoutDependency={false}
+            layoutId="cursor"
+            transition={{
+              type: "spring",
+              bounce: 0.15,
+              duration: 0.5,
+            }}
+            {...motionProps}
+          />
+        </LazyMotion>
       ) : null}
       <div
         className={slots.tabContent({\n- packages/components/tooltip/src/tooltip.tsx (modified, 28 changes)\n  Patch: @@ -1,6 +1,6 @@
 import {forwardRef} from "@nextui-org/system";
 import {OverlayContainer} from "@react-aria/overlays";
-import {AnimatePresence, motion} from "framer-motion";
+import {AnimatePresence, m, LazyMotion, domAnimation} from "framer-motion";
 import {TRANSITION_VARIANTS} from "@nextui-org/framer-transitions";
 import {warn} from "@nextui-org/shared-utils";
 import {Children, cloneElement, isValidElement} from "react";
@@ -57,18 +57,20 @@ const Tooltip = forwardRef<"div", TooltipProps>((props, ref) => {
 
   const animatedContent = (
     <div ref={tooltipRef} id={id} style={style}>
-      <motion.div
-        animate="enter"
-        exit="exit"
-        initial="exit"
-        variants={TRANSITION_VARIANTS.scaleSpring}
-        {...mergeProps(motionProps, otherTooltipProps)}
-        style={{
-          ...getTransformOrigins(placement),
-        }}
-      >
-        <Component {...getTooltipContentProps()}>{content}</Component>
-      </motion.div>
+      <LazyMotion features={domAnimation}>
+        <m.div
+          animate="enter"
+          exit="exit"
+          initial="exit"
+          variants={TRANSITION_VARIANTS.scaleSpring}
+          {...mergeProps(motionProps, otherTooltipProps)}
+          style={{
+            ...getTransformOrigins(placement),
+          }}
+        >
+          <Component {...getTooltipContentProps()}>{content}</Component>
+        </m.div>
+      </LazyMotion>
     </div>
   );
 \n
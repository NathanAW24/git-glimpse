Pull Request Number: 507
Title: Feat/dropdown component
Base Branch: next
Head Branch: feat/dropdown-component
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/507
State: MERGED
Created At: 2022-06-02T12:59:49Z
Merged At: 2022-06-02T14:33:37Z
Participants: jrgarciadev

Description:
üìù Description
The dropdown component has been created, based on react-aria hooks: useMenu useMenuItem useMenuSection useTreeState

üí£ Is this a breaking change (Yes/No): No

Commits:
- feat(react-dropdown): initial structure\n- Merge branch 'next' of github.com:nextui-org/nextui into feat/dropdown-component\n- Merge branch 'next' of github.com:nextui-org/nextui into feat/dropdown-component\n- feat(storybook): version upgraded to 6.5.3\n- feat(react-dropdown): dropdown menu is working, styles and API missing\n- chore(react-dropdown): documentation improved, trigger type is now beign passed\n- feat(react-dropdown): compound pattern implemented, shared css moved to a separated file called `shared-css`\n- feat(react-dropdown): dropdown-item styles improved, button icon css props added, some dropdown stories added\n- feat(react-dropdown): bordered & shadow variants implemented\n- feat(react-dropdown): variants apply to Dropdown.Menu\n- chore(react-dropdown): outline applied to shadow items\n- Merge branch 'next' of github.com:nextui-org/nextui into feat/dropdown-component\n- feat(react-dropdown): command added to the end of the list item\n- refactor(react-button): padding removed when there's no a child\n- feat(react-dropdown): icon and description variations added, new utils for truncating text added\n- feat(react-dropdown): truncate item description text\n- feat(react-dropdown): sections added\n- feat(react-dropdown): single selection started\n- feat(react-dropdown): single and multiple selection done\n- chore(react-dropdown): first test added\n- feat(react-dropdown): test added, checkmark icon added fo single and multiple selection\n- chore(react-dropdown): types and variants exported\n- feat(docs-dropdown): docs writing in progress\n- feat(react-dropdown): avatar and user supported as a trigged\n- feat(docs-dropdown): dropdown documentation done\n- feat(docs-dropdown): keyboard interactions added\n- feat(docs-dropdown): keyboard interactions updated\n

Labels:


Comments:
No comments.

Files Changed:
- apps/docs/content/components/dropdown/command.ts (added, 33 changes)\n  Patch: @@ -0,0 +1,33 @@
+const App = `import { Dropdown } from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <Dropdown>
+      <Dropdown.Button flat color="secondary">
+        Trigger
+      </Dropdown.Button>
+      <Dropdown.Menu color="secondary" aria-label="Actions">
+        <Dropdown.Item key="new" command="‚åòN">
+          New file
+        </Dropdown.Item>
+        <Dropdown.Item key="copy" command="‚åòC">
+          Copy link
+        </Dropdown.Item>
+        <Dropdown.Item key="edit" command="‚åò‚áßE">
+          Edit file
+        </Dropdown.Item>
+        <Dropdown.Item withDivider key="delete" color="error" command="‚åò‚áßD">
+          Delete file
+        </Dropdown.Item>
+      </Dropdown.Menu>
+    </Dropdown>
+  );
+}`;
+
+const react = {
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/dropdown/custom-trigger.ts (added, 94 changes)\n  Patch: @@ -0,0 +1,94 @@
+const App = `import { Dropdown, Avatar, Text, Grid, User } from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <Grid.Container justify="flex-start" gap={2}>
+      <Grid>
+        <Dropdown placement="bottom-left">
+          <Dropdown.Trigger>
+            <Avatar
+              bordered
+              size="lg"
+              as="button"
+              color="secondary"
+              src="https://i.pravatar.cc/150?u=a042581f4e29026704d"
+            />
+          </Dropdown.Trigger>
+          <Dropdown.Menu color="secondary" aria-label="Avatar Actions">
+            <Dropdown.Item key="profile" css={{ height: "$18" }}>
+              <Text b color="inherit" css={{ d: "flex" }}>
+                Signed in as
+              </Text>
+              <Text b color="inherit" css={{ d: "flex" }}>
+                zoey@example.com
+              </Text>
+            </Dropdown.Item>
+            <Dropdown.Item key="settings" withDivider>
+              My Settings
+            </Dropdown.Item>
+            <Dropdown.Item key="team_settings">Team Settings</Dropdown.Item>
+            <Dropdown.Item key="analytics" withDivider>
+              Analytics
+            </Dropdown.Item>
+            <Dropdown.Item key="system">System</Dropdown.Item>
+            <Dropdown.Item key="configurations">Configurations</Dropdown.Item>
+            <Dropdown.Item key="help_and_feedback" withDivider>
+              Help & Feedback
+            </Dropdown.Item>
+            <Dropdown.Item key="logout" color="error" withDivider>
+              Log Out
+            </Dropdown.Item>
+          </Dropdown.Menu>
+        </Dropdown>
+      </Grid>
+      <Grid>
+        <Dropdown placement="bottom-left">
+          <Dropdown.Trigger>
+            <User
+              bordered
+              as="button"
+              size="lg"
+              color="primary"
+              name="Tony Reichert"
+              description="@tonyreichert"
+              src="https://i.pravatar.cc/150?u=a042581f4e29026024d"
+            />
+          </Dropdown.Trigger>
+          <Dropdown.Menu color="primary" aria-label="User Actions">
+            <Dropdown.Item key="profile" css={{ height: "$18" }}>
+              <Text b color="inherit" css={{ d: "flex" }}>
+                Signed in as
+              </Text>
+              <Text b color="inherit" css={{ d: "flex" }}>
+                zoey@example.com
+              </Text>
+            </Dropdown.Item>
+            <Dropdown.Item key="settings" withDivider>
+              My Settings
+            </Dropdown.Item>
+            <Dropdown.Item key="team_settings">Team Settings</Dropdown.Item>
+            <Dropdown.Item key="analytics" withDivider>
+              Analytics
+            </Dropdown.Item>
+            <Dropdown.Item key="system">System</Dropdown.Item>
+            <Dropdown.Item key="configurations">Configurations</Dropdown.Item>
+            <Dropdown.Item key="help_and_feedback" withDivider>
+              Help & Feedback
+            </Dropdown.Item>
+            <Dropdown.Item key="logout" color="error" withDivider>
+              Log Out
+            </Dropdown.Item>
+          </Dropdown.Menu>
+        </Dropdown>
+      </Grid>
+    </Grid.Container>
+  );
+}`;
+
+const react = {
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/dropdown/description.ts (added, 174 changes)\n  Patch: @@ -0,0 +1,174 @@
+const AddNoteIcon = `import { React } from "@nextui-org/react";
+
+export const AddNoteIcon = ({ fill, size, height, width, ...props }) => {
+  return (
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      {...props}
+    >
+      <path
+        opacity={0.4}
+        d="M7.37 22h9.25a4.87 4.87 0 0 0 4.87-4.87V8.37a4.87 4.87 0 0 0-4.87-4.87H7.37A4.87 4.87 0 0 0 2.5 8.37v8.75c0 2.7 2.18 4.88 4.87 4.88Z"
+        fill={fill}
+      />
+      <path
+        d="M8.29 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM15.71 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM12 14.75h-1.69V13c0-.41-.34-.75-.75-.75s-.75.34-.75.75v1.75H7c-.41 0-.75.34-.75.75s.34.75.75.75h1.81V18c0 .41.34.75.75.75s.75-.34.75-.75v-1.75H12c.41 0 .75-.34.75-.75s-.34-.75-.75-.75Z"
+        fill={fill}
+      />
+    </svg>
+  );
+};`;
+
+const CopyDocumentIcon = `import { React } from "@nextui-org/react";
+
+export const CopyDocumentIcon = ({ fill, size, height, width, ...props }) => {
+  return (
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      {...props}
+    >
+      <path
+        opacity={0.4}
+        d="M15.5 13.15h-2.17c-1.78 0-3.23-1.44-3.23-3.23V7.75c0-.41-.33-.75-.75-.75H6.18C3.87 7 2 8.5 2 11.18v6.64C2 20.5 3.87 22 6.18 22h5.89c2.31 0 4.18-1.5 4.18-4.18V13.9c0-.42-.34-.75-.75-.75Z"
+        fill={fill}
+      />
+      <path
+        d="M17.82 2H11.93C9.67 2 7.84 3.44 7.76 6.01c.06 0 .11-.01.17-.01h5.89C16.13 6 18 7.5 18 10.18V16.83c0 .06-.01.11-.01.16 2.23-.07 4.01-1.55 4.01-4.16V6.18C22 3.5 20.13 2 17.82 2Z"
+        fill={fill}
+      />
+      <path
+        d="M11.98 7.15c-.31-.31-.84-.1-.84.33v2.62c0 1.1.93 2 2.07 2 .71.01 1.7.01 2.55.01.43 0 .65-.5.35-.8-1.09-1.09-3.03-3.04-4.13-4.16Z"
+        fill={fill}
+      />
+    </svg>
+  );
+};`;
+
+const EditDocumentIcon = `import { React } from "@nextui-org/react";
+
+export const EditDocumentIcon = ({ fill, size, height, width, ...props }) => {
+  return (
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      {...props}
+    >
+      <path
+        opacity={0.4}
+        d="M15.48 3H7.52C4.07 3 2 5.06 2 8.52v7.95C2 19.94 4.07 22 7.52 22h7.95c3.46 0 5.52-2.06 5.52-5.52V8.52C21 5.06 18.93 3 15.48 3Z"
+        fill={fill}
+      />
+      <path
+        d="M21.02 2.98c-1.79-1.8-3.54-1.84-5.38 0L14.51 4.1c-.1.1-.13.24-.09.37.7 2.45 2.66 4.41 5.11 5.11.03.01.08.01.11.01.1 0 .2-.04.27-.11l1.11-1.12c.91-.91 1.36-1.78 1.36-2.67 0-.9-.45-1.79-1.36-2.71ZM17.86 10.42c-.27-.13-.53-.26-.77-.41-.2-.12-.4-.25-.59-.39-.16-.1-.34-.25-.52-.4-.02-.01-.08-.06-.16-.14-.31-.25-.64-.59-.95-.96-.02-.02-.08-.08-.13-.17-.1-.11-.25-.3-.38-.51-.11-.14-.24-.34-.36-.55-.15-.25-.28-.5-.4-.76-.13-.28-.23-.54-.32-.79L7.9 10.72c-.35.35-.69 1.01-.76 1.5l-.43 2.98c-.09.63.08 1.22.47 1.61.33.33.78.5 1.28.5.11 0 .22-.01.33-.02l2.97-.42c.49-.07 1.15-.4 1.5-.76l5.38-5.38c-.25-.08-.5-.19-.78-.31Z"
+        fill={fill}
+      />
+    </svg>
+  );
+};`;
+
+const DeleteDocumentIcon = `import { React } from "@nextui-org/react";
+
+export const DeleteDocumentIcon = ({ fill, size, height, width, ...props }) => {
+  return (
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      {...props}
+    >
+      <path
+        d="M21.07 5.23c-1.61-.16-3.22-.28-4.84-.37v-.01l-.22-1.3c-.15-.92-.37-2.3-2.71-2.3h-2.62c-2.33 0-2.55 1.32-2.71 2.29l-.21 1.28c-.93.06-1.86.12-2.79.21l-2.04.2c-.42.04-.72.41-.68.82.04.41.4.71.82.67l2.04-.2c5.24-.52 10.52-.32 15.82.21h.08c.38 0 .71-.29.75-.68a.766.766 0 0 0-.69-.82Z"
+        fill={fill}
+      />
+      <path
+        opacity={0.399}
+        d="M19.23 8.14c-.24-.25-.57-.39-.91-.39H5.68c-.34 0-.68.14-.91.39-.23.25-.36.59-.34.94l.62 10.26c.11 1.52.25 3.42 3.74 3.42h6.42c3.49 0 3.63-1.89 3.74-3.42l.62-10.25c.02-.36-.11-.7-.34-.95Z"
+        fill={fill}
+      />
+      <path
+        fillRule="evenodd"
+        clipRule="evenodd"
+        d="M9.58 17a.75.75 0 0 1 .75-.75h3.33a.75.75 0 0 1 0 1.5h-3.33a.75.75 0 0 1-.75-.75ZM8.75 13a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75Z"
+        fill={fill}
+      />
+    </svg>
+  );
+};
+`;
+
+const App = `import { Dropdown } from "@nextui-org/react";
+import { AddNoteIcon } from "./AddNoteIcon.js"
+import { CopyDocumentIcon } from "./CopyDocumentIcon.js"
+import { EditDocumentIcon } from "./EditDocumentIcon.js"
+import { DeleteDocumentIcon } from "./DeleteDocumentIcon.js"
+
+export default function App() {
+  return (
+    <Dropdown>
+      <Dropdown.Button flat color="secondary">
+        Trigger
+      </Dropdown.Button>
+      <Dropdown.Menu color="secondary" aria-label="Actions" css={{ $$dropdownMenuWidth: "280px" }}>
+        <Dropdown.Item
+          key="new"
+          command="‚åòN"
+          description="Create a new file"
+          icon={<AddNoteIcon size={22} fill="var(--nextui-colors-secondary)" />}
+        >
+          New file
+        </Dropdown.Item>
+        <Dropdown.Item
+          key="copy"
+          command="‚åòC"
+          description="Copy the file link"
+          icon={
+            <CopyDocumentIcon size={22} fill="var(--nextui-colors-secondary)" />
+          }
+        >
+          Copy link
+        </Dropdown.Item>
+        <Dropdown.Item
+          key="edit"
+          command="‚åò‚áßE"
+          description="Allows you to edit the file" 
+          icon={
+            <EditDocumentIcon size={22} fill="var(--nextui-colors-secondary)" />
+          }
+        >
+          Edit file
+        </Dropdown.Item>
+        <Dropdown.Item
+          withDivider
+          key="delete"
+          color="error"
+          command="‚åò‚áßD"
+          description="Permanently delete the file"
+          icon={<DeleteDocumentIcon size={22} fill="currentColor" />}
+        >
+          Delete file
+        </Dropdown.Item>
+      </Dropdown.Menu>
+    </Dropdown>
+  );
+}`;
+
+const react = {
+  '/AddNoteIcon.js': AddNoteIcon,
+  '/CopyDocumentIcon.js': CopyDocumentIcon,
+  '/EditDocumentIcon.js': EditDocumentIcon,
+  '/DeleteDocumentIcon.js': DeleteDocumentIcon,
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/dropdown/disable-animation.ts (added, 189 changes)\n  Patch: @@ -0,0 +1,189 @@
+const AddNoteIcon = `import { React } from "@nextui-org/react";
+
+export const AddNoteIcon = ({ fill, size, height, width, ...props }) => {
+  return (
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      {...props}
+    >
+      <path
+        opacity={0.4}
+        d="M7.37 22h9.25a4.87 4.87 0 0 0 4.87-4.87V8.37a4.87 4.87 0 0 0-4.87-4.87H7.37A4.87 4.87 0 0 0 2.5 8.37v8.75c0 2.7 2.18 4.88 4.87 4.88Z"
+        fill={fill}
+      />
+      <path
+        d="M8.29 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM15.71 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM12 14.75h-1.69V13c0-.41-.34-.75-.75-.75s-.75.34-.75.75v1.75H7c-.41 0-.75.34-.75.75s.34.75.75.75h1.81V18c0 .41.34.75.75.75s.75-.34.75-.75v-1.75H12c.41 0 .75-.34.75-.75s-.34-.75-.75-.75Z"
+        fill={fill}
+      />
+    </svg>
+  );
+};`;
+
+const CopyDocumentIcon = `import { React } from "@nextui-org/react";
+
+export const CopyDocumentIcon = ({ fill, size, height, width, ...props }) => {
+  return (
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      {...props}
+    >
+      <path
+        opacity={0.4}
+        d="M15.5 13.15h-2.17c-1.78 0-3.23-1.44-3.23-3.23V7.75c0-.41-.33-.75-.75-.75H6.18C3.87 7 2 8.5 2 11.18v6.64C2 20.5 3.87 22 6.18 22h5.89c2.31 0 4.18-1.5 4.18-4.18V13.9c0-.42-.34-.75-.75-.75Z"
+        fill={fill}
+      />
+      <path
+        d="M17.82 2H11.93C9.67 2 7.84 3.44 7.76 6.01c.06 0 .11-.01.17-.01h5.89C16.13 6 18 7.5 18 10.18V16.83c0 .06-.01.11-.01.16 2.23-.07 4.01-1.55 4.01-4.16V6.18C22 3.5 20.13 2 17.82 2Z"
+        fill={fill}
+      />
+      <path
+        d="M11.98 7.15c-.31-.31-.84-.1-.84.33v2.62c0 1.1.93 2 2.07 2 .71.01 1.7.01 2.55.01.43 0 .65-.5.35-.8-1.09-1.09-3.03-3.04-4.13-4.16Z"
+        fill={fill}
+      />
+    </svg>
+  );
+};`;
+
+const EditDocumentIcon = `import { React } from "@nextui-org/react";
+
+export const EditDocumentIcon = ({ fill, size, height, width, ...props }) => {
+  return (
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      {...props}
+    >
+      <path
+        opacity={0.4}
+        d="M15.48 3H7.52C4.07 3 2 5.06 2 8.52v7.95C2 19.94 4.07 22 7.52 22h7.95c3.46 0 5.52-2.06 5.52-5.52V8.52C21 5.06 18.93 3 15.48 3Z"
+        fill={fill}
+      />
+      <path
+        d="M21.02 2.98c-1.79-1.8-3.54-1.84-5.38 0L14.51 4.1c-.1.1-.13.24-.09.37.7 2.45 2.66 4.41 5.11 5.11.03.01.08.01.11.01.1 0 .2-.04.27-.11l1.11-1.12c.91-.91 1.36-1.78 1.36-2.67 0-.9-.45-1.79-1.36-2.71ZM17.86 10.42c-.27-.13-.53-.26-.77-.41-.2-.12-.4-.25-.59-.39-.16-.1-.34-.25-.52-.4-.02-.01-.08-.06-.16-.14-.31-.25-.64-.59-.95-.96-.02-.02-.08-.08-.13-.17-.1-.11-.25-.3-.38-.51-.11-.14-.24-.34-.36-.55-.15-.25-.28-.5-.4-.76-.13-.28-.23-.54-.32-.79L7.9 10.72c-.35.35-.69 1.01-.76 1.5l-.43 2.98c-.09.63.08 1.22.47 1.61.33.33.78.5 1.28.5.11 0 .22-.01.33-.02l2.97-.42c.49-.07 1.15-.4 1.5-.76l5.38-5.38c-.25-.08-.5-.19-.78-.31Z"
+        fill={fill}
+      />
+    </svg>
+  );
+};`;
+
+const DeleteDocumentIcon = `import { React } from "@nextui-org/react";
+
+export const DeleteDocumentIcon = ({ fill, size, height, width, ...props }) => {
+  return (
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      {...props}
+    >
+      <path
+        d="M21.07 5.23c-1.61-.16-3.22-.28-4.84-.37v-.01l-.22-1.3c-.15-.92-.37-2.3-2.71-2.3h-2.62c-2.33 0-2.55 1.32-2.71 2.29l-.21 1.28c-.93.06-1.86.12-2.79.21l-2.04.2c-.42.04-.72.41-.68.82.04.41.4.71.82.67l2.04-.2c5.24-.52 10.52-.32 15.82.21h.08c.38 0 .71-.29.75-.68a.766.766 0 0 0-.69-.82Z"
+        fill={fill}
+      />
+      <path
+        opacity={0.399}
+        d="M19.23 8.14c-.24-.25-.57-.39-.91-.39H5.68c-.34 0-.68.14-.91.39-.23.25-.36.59-.34.94l.62 10.26c.11 1.52.25 3.42 3.74 3.42h6.42c3.49 0 3.63-1.89 3.74-3.42l.62-10.25c.02-.36-.11-.7-.34-.95Z"
+        fill={fill}
+      />
+      <path
+        fillRule="evenodd"
+        clipRule="evenodd"
+        d="M9.58 17a.75.75 0 0 1 .75-.75h3.33a.75.75 0 0 1 0 1.5h-3.33a.75.75 0 0 1-.75-.75ZM8.75 13a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75Z"
+        fill={fill}
+      />
+    </svg>
+  );
+};
+`;
+
+const App = `import { Dropdown } from "@nextui-org/react";
+import { AddNoteIcon } from "./AddNoteIcon.js";
+import { CopyDocumentIcon } from "./CopyDocumentIcon.js";
+import { EditDocumentIcon } from "./EditDocumentIcon.js";
+import { DeleteDocumentIcon } from "./DeleteDocumentIcon.js";
+
+export default function App() {
+  return (
+    <Dropdown disableAnimation>
+      <Dropdown.Button flat color="secondary">
+        Trigger
+      </Dropdown.Button>
+      <Dropdown.Menu
+        color="secondary"
+        aria-label="Actions"
+        css={{ $$dropdownMenuWidth: "280px" }}
+      >
+        <Dropdown.Section title="Actions">
+          <Dropdown.Item
+            key="new"
+            command="‚åòN"
+            description="Create a new file"
+            icon={
+              <AddNoteIcon size={22} fill="var(--nextui-colors-secondary)" />
+            }
+          >
+            New file
+          </Dropdown.Item>
+          <Dropdown.Item
+            key="copy"
+            command="‚åòC"
+            description="Copy the file link"
+            icon={
+              <CopyDocumentIcon
+                size={22}
+                fill="var(--nextui-colors-secondary)"
+              />
+            }
+          >
+            Copy link
+          </Dropdown.Item>
+          <Dropdown.Item
+            key="edit"
+            command="‚åò‚áßE"
+            description="Allows you to edit the file"
+            icon={
+              <EditDocumentIcon
+                size={22}
+                fill="var(--nextui-colors-secondary)"
+              />
+            }
+          >
+            Edit file
+          </Dropdown.Item>
+        </Dropdown.Section>
+        <Dropdown.Section title="Danger zone">
+          <Dropdown.Item
+            key="delete"
+            color="error"
+            command="‚åò‚áßD"
+            description="Permanently delete the file"
+            icon={<DeleteDocumentIcon size={22} fill="currentColor" />}
+          >
+            Delete file
+          </Dropdown.Item>
+        </Dropdown.Section>
+      </Dropdown.Menu>
+    </Dropdown>
+  );
+}`;
+
+const react = {
+  '/AddNoteIcon.js': AddNoteIcon,
+  '/CopyDocumentIcon.js': CopyDocumentIcon,
+  '/EditDocumentIcon.js': EditDocumentIcon,
+  '/DeleteDocumentIcon.js': DeleteDocumentIcon,
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/dropdown/disabled-keys.ts (added, 28 changes)\n  Patch: @@ -0,0 +1,28 @@
+const App = `import { Dropdown } from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <Dropdown>
+      <Dropdown.Button flat>Trigger</Dropdown.Button>
+      <Dropdown.Menu
+        disabledKeys={["edit", "delete"]}
+        aria-label="Example with disabled actions"
+      >
+        <Dropdown.Item key="new">New file</Dropdown.Item>
+        <Dropdown.Item key="copy">Copy link</Dropdown.Item>
+        <Dropdown.Item key="edit">Edit file</Dropdown.Item>
+        <Dropdown.Item key="delete" withDivider color="error">
+          Delete file
+        </Dropdown.Item>
+      </Dropdown.Menu>
+    </Dropdown>
+  );
+}`;
+
+const react = {
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/dropdown/dynamic.ts (added, 34 changes)\n  Patch: @@ -0,0 +1,34 @@
+const App = `import { Dropdown } from "@nextui-org/react";
+
+export default function App() {
+  const menuItems = [
+    { key: "new", name: "New File" },
+    { key: "copy", name: "Copy Link" },
+    { key: "edit", name: "Edit File" },
+    { key: "delete", name: "Delete File" },
+  ];
+
+  return (
+    <Dropdown>
+      <Dropdown.Button flat>Trigger</Dropdown.Button>
+      <Dropdown.Menu aria-label="Dynamic Actions" items={menuItems}>
+        {(item) => (
+          <Dropdown.Item
+            key={item.key}
+            color={item.key === "delete" ? "error" : "default"}
+          >
+            {item.name}
+          </Dropdown.Item>
+        )}
+      </Dropdown.Menu>
+    </Dropdown>
+  );
+}`;
+
+const react = {
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/dropdown/icon.ts (added, 170 changes)\n  Patch: @@ -0,0 +1,170 @@
+const AddNoteIcon = `import { React } from "@nextui-org/react";
+
+export const AddNoteIcon = ({ fill, size, height, width, ...props }) => {
+  return (
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      {...props}
+    >
+      <path
+        opacity={0.4}
+        d="M7.37 22h9.25a4.87 4.87 0 0 0 4.87-4.87V8.37a4.87 4.87 0 0 0-4.87-4.87H7.37A4.87 4.87 0 0 0 2.5 8.37v8.75c0 2.7 2.18 4.88 4.87 4.88Z"
+        fill={fill}
+      />
+      <path
+        d="M8.29 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM15.71 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM12 14.75h-1.69V13c0-.41-.34-.75-.75-.75s-.75.34-.75.75v1.75H7c-.41 0-.75.34-.75.75s.34.75.75.75h1.81V18c0 .41.34.75.75.75s.75-.34.75-.75v-1.75H12c.41 0 .75-.34.75-.75s-.34-.75-.75-.75Z"
+        fill={fill}
+      />
+    </svg>
+  );
+};`;
+
+const CopyDocumentIcon = `import { React } from "@nextui-org/react";
+
+export const CopyDocumentIcon = ({ fill, size, height, width, ...props }) => {
+  return (
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      {...props}
+    >
+      <path
+        opacity={0.4}
+        d="M15.5 13.15h-2.17c-1.78 0-3.23-1.44-3.23-3.23V7.75c0-.41-.33-.75-.75-.75H6.18C3.87 7 2 8.5 2 11.18v6.64C2 20.5 3.87 22 6.18 22h5.89c2.31 0 4.18-1.5 4.18-4.18V13.9c0-.42-.34-.75-.75-.75Z"
+        fill={fill}
+      />
+      <path
+        d="M17.82 2H11.93C9.67 2 7.84 3.44 7.76 6.01c.06 0 .11-.01.17-.01h5.89C16.13 6 18 7.5 18 10.18V16.83c0 .06-.01.11-.01.16 2.23-.07 4.01-1.55 4.01-4.16V6.18C22 3.5 20.13 2 17.82 2Z"
+        fill={fill}
+      />
+      <path
+        d="M11.98 7.15c-.31-.31-.84-.1-.84.33v2.62c0 1.1.93 2 2.07 2 .71.01 1.7.01 2.55.01.43 0 .65-.5.35-.8-1.09-1.09-3.03-3.04-4.13-4.16Z"
+        fill={fill}
+      />
+    </svg>
+  );
+};`;
+
+const EditDocumentIcon = `import { React } from "@nextui-org/react";
+
+export const EditDocumentIcon = ({ fill, size, height, width, ...props }) => {
+  return (
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      {...props}
+    >
+      <path
+        opacity={0.4}
+        d="M15.48 3H7.52C4.07 3 2 5.06 2 8.52v7.95C2 19.94 4.07 22 7.52 22h7.95c3.46 0 5.52-2.06 5.52-5.52V8.52C21 5.06 18.93 3 15.48 3Z"
+        fill={fill}
+      />
+      <path
+        d="M21.02 2.98c-1.79-1.8-3.54-1.84-5.38 0L14.51 4.1c-.1.1-.13.24-.09.37.7 2.45 2.66 4.41 5.11 5.11.03.01.08.01.11.01.1 0 .2-.04.27-.11l1.11-1.12c.91-.91 1.36-1.78 1.36-2.67 0-.9-.45-1.79-1.36-2.71ZM17.86 10.42c-.27-.13-.53-.26-.77-.41-.2-.12-.4-.25-.59-.39-.16-.1-.34-.25-.52-.4-.02-.01-.08-.06-.16-.14-.31-.25-.64-.59-.95-.96-.02-.02-.08-.08-.13-.17-.1-.11-.25-.3-.38-.51-.11-.14-.24-.34-.36-.55-.15-.25-.28-.5-.4-.76-.13-.28-.23-.54-.32-.79L7.9 10.72c-.35.35-.69 1.01-.76 1.5l-.43 2.98c-.09.63.08 1.22.47 1.61.33.33.78.5 1.28.5.11 0 .22-.01.33-.02l2.97-.42c.49-.07 1.15-.4 1.5-.76l5.38-5.38c-.25-.08-.5-.19-.78-.31Z"
+        fill={fill}
+      />
+    </svg>
+  );
+};`;
+
+const DeleteDocumentIcon = `import { React } from "@nextui-org/react";
+
+export const DeleteDocumentIcon = ({ fill, size, height, width, ...props }) => {
+  return (
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      {...props}
+    >
+      <path
+        d="M21.07 5.23c-1.61-.16-3.22-.28-4.84-.37v-.01l-.22-1.3c-.15-.92-.37-2.3-2.71-2.3h-2.62c-2.33 0-2.55 1.32-2.71 2.29l-.21 1.28c-.93.06-1.86.12-2.79.21l-2.04.2c-.42.04-.72.41-.68.82.04.41.4.71.82.67l2.04-.2c5.24-.52 10.52-.32 15.82.21h.08c.38 0 .71-.29.75-.68a.766.766 0 0 0-.69-.82Z"
+        fill={fill}
+      />
+      <path
+        opacity={0.399}
+        d="M19.23 8.14c-.24-.25-.57-.39-.91-.39H5.68c-.34 0-.68.14-.91.39-.23.25-.36.59-.34.94l.62 10.26c.11 1.52.25 3.42 3.74 3.42h6.42c3.49 0 3.63-1.89 3.74-3.42l.62-10.25c.02-.36-.11-.7-.34-.95Z"
+        fill={fill}
+      />
+      <path
+        fillRule="evenodd"
+        clipRule="evenodd"
+        d="M9.58 17a.75.75 0 0 1 .75-.75h3.33a.75.75 0 0 1 0 1.5h-3.33a.75.75 0 0 1-.75-.75ZM8.75 13a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75Z"
+        fill={fill}
+      />
+    </svg>
+  );
+};
+`;
+
+const App = `import { Dropdown } from "@nextui-org/react";
+import { AddNoteIcon } from "./AddNoteIcon.js"
+import { CopyDocumentIcon } from "./CopyDocumentIcon.js"
+import { EditDocumentIcon } from "./EditDocumentIcon.js"
+import { DeleteDocumentIcon } from "./DeleteDocumentIcon.js"
+
+export default function App() {
+  return (
+    <Dropdown>
+      <Dropdown.Button flat color="secondary">
+        Trigger
+      </Dropdown.Button>
+      <Dropdown.Menu color="secondary" aria-label="Actions">
+        <Dropdown.Item
+          key="new"
+          command="‚åòN"
+          icon={<AddNoteIcon size={22} fill="var(--nextui-colors-secondary)" />}
+        >
+          New file
+        </Dropdown.Item>
+        <Dropdown.Item
+          key="copy"
+          command="‚åòC"
+          icon={
+            <CopyDocumentIcon size={22} fill="var(--nextui-colors-secondary)" />
+          }
+        >
+          Copy link
+        </Dropdown.Item>
+        <Dropdown.Item
+          key="edit"
+          command="‚åò‚áßE"
+          icon={
+            <EditDocumentIcon size={22} fill="var(--nextui-colors-secondary)" />
+          }
+        >
+          Edit file
+        </Dropdown.Item>
+        <Dropdown.Item
+          withDivider
+          key="delete"
+          color="error"
+          command="‚åò‚áßD"
+          icon={<DeleteDocumentIcon size={22} fill="currentColor" />}
+        >
+          Delete file
+        </Dropdown.Item>
+      </Dropdown.Menu>
+    </Dropdown>
+  );
+}`;
+
+const react = {
+  '/AddNoteIcon.js': AddNoteIcon,
+  '/CopyDocumentIcon.js': CopyDocumentIcon,
+  '/EditDocumentIcon.js': EditDocumentIcon,
+  '/DeleteDocumentIcon.js': DeleteDocumentIcon,
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/dropdown/index.ts (added, 29 changes)\n  Patch: @@ -0,0 +1,29 @@
+import staticDropdown from './static';
+import dynamicDropdown from './dynamic';
+import withDivider from './with-divider';
+import disabledKeys from './disabled-keys';
+import variants from './variants';
+import singleSelection from './single-selection';
+import multipleSelection from './multiple-selection';
+import command from './command';
+import icon from './icon';
+import description from './description';
+import sections from './sections';
+import customTrigger from './custom-trigger';
+import disableAnimation from './disable-animation';
+
+export default {
+  staticDropdown,
+  dynamicDropdown,
+  withDivider,
+  disabledKeys,
+  variants,
+  singleSelection,
+  multipleSelection,
+  command,
+  icon,
+  description,
+  sections,
+  customTrigger,
+  disableAnimation
+};\n- apps/docs/content/components/dropdown/multiple-selection.ts (added, 41 changes)\n  Patch: @@ -0,0 +1,41 @@
+const App = `import React from "react";
+import { Dropdown } from "@nextui-org/react";
+
+export default function App() {
+  const [selected, setSelected] = React.useState(new Set(["text"]));
+
+  const selectedValue = React.useMemo(
+    () => Array.from(selected).join(", ").replaceAll("_", " "),
+    [selected]
+  );
+
+  return (
+    <Dropdown>
+      <Dropdown.Button flat color="secondary" css={{ tt: "capitalize" }}>
+        {selectedValue}
+      </Dropdown.Button>
+      <Dropdown.Menu
+        aria-label="Multiple selection actions"
+        color="secondary"
+        disallowEmptySelection
+        selectionMode="multiple"
+        selectedKeys={selected}
+        onSelectionChange={setSelected}
+      >
+        <Dropdown.Item key="text">Text</Dropdown.Item>
+        <Dropdown.Item key="number">Number</Dropdown.Item>
+        <Dropdown.Item key="date">Date</Dropdown.Item>
+        <Dropdown.Item key="single_date">Single Date</Dropdown.Item>
+        <Dropdown.Item key="iteration">Iteration</Dropdown.Item>
+      </Dropdown.Menu>
+    </Dropdown>
+  );
+}`;
+
+const react = {
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/dropdown/sections.ts (added, 189 changes)\n  Patch: @@ -0,0 +1,189 @@
+const AddNoteIcon = `import { React } from "@nextui-org/react";
+
+export const AddNoteIcon = ({ fill, size, height, width, ...props }) => {
+  return (
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      {...props}
+    >
+      <path
+        opacity={0.4}
+        d="M7.37 22h9.25a4.87 4.87 0 0 0 4.87-4.87V8.37a4.87 4.87 0 0 0-4.87-4.87H7.37A4.87 4.87 0 0 0 2.5 8.37v8.75c0 2.7 2.18 4.88 4.87 4.88Z"
+        fill={fill}
+      />
+      <path
+        d="M8.29 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM15.71 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM12 14.75h-1.69V13c0-.41-.34-.75-.75-.75s-.75.34-.75.75v1.75H7c-.41 0-.75.34-.75.75s.34.75.75.75h1.81V18c0 .41.34.75.75.75s.75-.34.75-.75v-1.75H12c.41 0 .75-.34.75-.75s-.34-.75-.75-.75Z"
+        fill={fill}
+      />
+    </svg>
+  );
+};`;
+
+const CopyDocumentIcon = `import { React } from "@nextui-org/react";
+
+export const CopyDocumentIcon = ({ fill, size, height, width, ...props }) => {
+  return (
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      {...props}
+    >
+      <path
+        opacity={0.4}
+        d="M15.5 13.15h-2.17c-1.78 0-3.23-1.44-3.23-3.23V7.75c0-.41-.33-.75-.75-.75H6.18C3.87 7 2 8.5 2 11.18v6.64C2 20.5 3.87 22 6.18 22h5.89c2.31 0 4.18-1.5 4.18-4.18V13.9c0-.42-.34-.75-.75-.75Z"
+        fill={fill}
+      />
+      <path
+        d="M17.82 2H11.93C9.67 2 7.84 3.44 7.76 6.01c.06 0 .11-.01.17-.01h5.89C16.13 6 18 7.5 18 10.18V16.83c0 .06-.01.11-.01.16 2.23-.07 4.01-1.55 4.01-4.16V6.18C22 3.5 20.13 2 17.82 2Z"
+        fill={fill}
+      />
+      <path
+        d="M11.98 7.15c-.31-.31-.84-.1-.84.33v2.62c0 1.1.93 2 2.07 2 .71.01 1.7.01 2.55.01.43 0 .65-.5.35-.8-1.09-1.09-3.03-3.04-4.13-4.16Z"
+        fill={fill}
+      />
+    </svg>
+  );
+};`;
+
+const EditDocumentIcon = `import { React } from "@nextui-org/react";
+
+export const EditDocumentIcon = ({ fill, size, height, width, ...props }) => {
+  return (
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      {...props}
+    >
+      <path
+        opacity={0.4}
+        d="M15.48 3H7.52C4.07 3 2 5.06 2 8.52v7.95C2 19.94 4.07 22 7.52 22h7.95c3.46 0 5.52-2.06 5.52-5.52V8.52C21 5.06 18.93 3 15.48 3Z"
+        fill={fill}
+      />
+      <path
+        d="M21.02 2.98c-1.79-1.8-3.54-1.84-5.38 0L14.51 4.1c-.1.1-.13.24-.09.37.7 2.45 2.66 4.41 5.11 5.11.03.01.08.01.11.01.1 0 .2-.04.27-.11l1.11-1.12c.91-.91 1.36-1.78 1.36-2.67 0-.9-.45-1.79-1.36-2.71ZM17.86 10.42c-.27-.13-.53-.26-.77-.41-.2-.12-.4-.25-.59-.39-.16-.1-.34-.25-.52-.4-.02-.01-.08-.06-.16-.14-.31-.25-.64-.59-.95-.96-.02-.02-.08-.08-.13-.17-.1-.11-.25-.3-.38-.51-.11-.14-.24-.34-.36-.55-.15-.25-.28-.5-.4-.76-.13-.28-.23-.54-.32-.79L7.9 10.72c-.35.35-.69 1.01-.76 1.5l-.43 2.98c-.09.63.08 1.22.47 1.61.33.33.78.5 1.28.5.11 0 .22-.01.33-.02l2.97-.42c.49-.07 1.15-.4 1.5-.76l5.38-5.38c-.25-.08-.5-.19-.78-.31Z"
+        fill={fill}
+      />
+    </svg>
+  );
+};`;
+
+const DeleteDocumentIcon = `import { React } from "@nextui-org/react";
+
+export const DeleteDocumentIcon = ({ fill, size, height, width, ...props }) => {
+  return (
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      width={size || width || 24}
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      {...props}
+    >
+      <path
+        d="M21.07 5.23c-1.61-.16-3.22-.28-4.84-.37v-.01l-.22-1.3c-.15-.92-.37-2.3-2.71-2.3h-2.62c-2.33 0-2.55 1.32-2.71 2.29l-.21 1.28c-.93.06-1.86.12-2.79.21l-2.04.2c-.42.04-.72.41-.68.82.04.41.4.71.82.67l2.04-.2c5.24-.52 10.52-.32 15.82.21h.08c.38 0 .71-.29.75-.68a.766.766 0 0 0-.69-.82Z"
+        fill={fill}
+      />
+      <path
+        opacity={0.399}
+        d="M19.23 8.14c-.24-.25-.57-.39-.91-.39H5.68c-.34 0-.68.14-.91.39-.23.25-.36.59-.34.94l.62 10.26c.11 1.52.25 3.42 3.74 3.42h6.42c3.49 0 3.63-1.89 3.74-3.42l.62-10.25c.02-.36-.11-.7-.34-.95Z"
+        fill={fill}
+      />
+      <path
+        fillRule="evenodd"
+        clipRule="evenodd"
+        d="M9.58 17a.75.75 0 0 1 .75-.75h3.33a.75.75 0 0 1 0 1.5h-3.33a.75.75 0 0 1-.75-.75ZM8.75 13a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75Z"
+        fill={fill}
+      />
+    </svg>
+  );
+};
+`;
+
+const App = `import { Dropdown } from "@nextui-org/react";
+import { AddNoteIcon } from "./AddNoteIcon.js";
+import { CopyDocumentIcon } from "./CopyDocumentIcon.js";
+import { EditDocumentIcon } from "./EditDocumentIcon.js";
+import { DeleteDocumentIcon } from "./DeleteDocumentIcon.js";
+
+export default function App() {
+  return (
+    <Dropdown>
+      <Dropdown.Button flat color="secondary">
+        Trigger
+      </Dropdown.Button>
+      <Dropdown.Menu
+        color="secondary"
+        aria-label="Actions"
+        css={{ $$dropdownMenuWidth: "280px" }}
+      >
+        <Dropdown.Section title="Actions">
+          <Dropdown.Item
+            key="new"
+            command="‚åòN"
+            description="Create a new file"
+            icon={
+              <AddNoteIcon size={22} fill="var(--nextui-colors-secondary)" />
+            }
+          >
+            New file
+          </Dropdown.Item>
+          <Dropdown.Item
+            key="copy"
+            command="‚åòC"
+            description="Copy the file link"
+            icon={
+              <CopyDocumentIcon
+                size={22}
+                fill="var(--nextui-colors-secondary)"
+              />
+            }
+          >
+            Copy link
+          </Dropdown.Item>
+          <Dropdown.Item
+            key="edit"
+            command="‚åò‚áßE"
+            description="Allows you to edit the file"
+            icon={
+              <EditDocumentIcon
+                size={22}
+                fill="var(--nextui-colors-secondary)"
+              />
+            }
+          >
+            Edit file
+          </Dropdown.Item>
+        </Dropdown.Section>
+        <Dropdown.Section title="Danger zone">
+          <Dropdown.Item
+            key="delete"
+            color="error"
+            command="‚åò‚áßD"
+            description="Permanently delete the file"
+            icon={<DeleteDocumentIcon size={22} fill="currentColor" />}
+          >
+            Delete file
+          </Dropdown.Item>
+        </Dropdown.Section>
+      </Dropdown.Menu>
+    </Dropdown>
+  );
+}`;
+
+const react = {
+  '/AddNoteIcon.js': AddNoteIcon,
+  '/CopyDocumentIcon.js': CopyDocumentIcon,
+  '/EditDocumentIcon.js': EditDocumentIcon,
+  '/DeleteDocumentIcon.js': DeleteDocumentIcon,
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/dropdown/single-selection.ts (added, 41 changes)\n  Patch: @@ -0,0 +1,41 @@
+const App = `import React from "react";
+import { Dropdown } from "@nextui-org/react";
+
+export default function App() {
+  const [selected, setSelected] = React.useState(new Set(["text"]));
+
+  const selectedValue = React.useMemo(
+    () => Array.from(selected).join(", ").replaceAll("_", " "),
+    [selected]
+  );
+
+  return (
+    <Dropdown>
+      <Dropdown.Button flat color="secondary" css={{ tt: "capitalize" }}>
+        {selectedValue}
+      </Dropdown.Button>
+      <Dropdown.Menu
+        aria-label="Single selection actions"
+        color="secondary"
+        disallowEmptySelection
+        selectionMode="single"
+        selectedKeys={selected}
+        onSelectionChange={setSelected}
+      >
+        <Dropdown.Item key="text">Text</Dropdown.Item>
+        <Dropdown.Item key="number">Number</Dropdown.Item>
+        <Dropdown.Item key="date">Date</Dropdown.Item>
+        <Dropdown.Item key="single_date">Single Date</Dropdown.Item>
+        <Dropdown.Item key="iteration">Iteration</Dropdown.Item>
+      </Dropdown.Menu>
+    </Dropdown>
+  );
+}`;
+
+const react = {
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/dropdown/static.ts (added, 25 changes)\n  Patch: @@ -0,0 +1,25 @@
+const App = `import { Dropdown } from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <Dropdown>
+      <Dropdown.Button flat>Trigger</Dropdown.Button>
+      <Dropdown.Menu aria-label="Static Actions">
+        <Dropdown.Item key="new">New file</Dropdown.Item>
+        <Dropdown.Item key="copy">Copy link</Dropdown.Item>
+        <Dropdown.Item key="edit">Edit file</Dropdown.Item>
+        <Dropdown.Item key="delete" color="error">
+          Delete file
+        </Dropdown.Item>
+      </Dropdown.Menu>
+    </Dropdown>
+  );
+}`;
+
+const react = {
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/dropdown/variants.ts (added, 118 changes)\n  Patch: @@ -0,0 +1,118 @@
+const App = `import React from "react";
+import { Grid, Dropdown, Radio } from "@nextui-org/react";
+
+export default function App() {
+  const [selectedColor, setSelectedColor] = React.useState("default");
+  const colors = [
+    "default",
+    "primary",
+    "secondary",
+    "success",
+    "warning",
+    "error",
+  ];
+
+  const capitalize = (str) => {
+    const lower = str.toLowerCase();
+    return str.charAt(0).toUpperCase() + lower.slice(1);
+  };
+
+  return (
+    <Grid.Container gap={1.5} justify="flex-start">
+      <Grid xs={12}>
+        <Grid>
+          <Dropdown>
+            <Dropdown.Button color={selectedColor} light>
+              Light
+            </Dropdown.Button>
+            <Dropdown.Menu
+              color={selectedColor}
+              variant="light"
+              aria-label="Actions"
+            >
+              <Dropdown.Item key="new">New file</Dropdown.Item>
+              <Dropdown.Item key="copy">Copy link</Dropdown.Item>
+              <Dropdown.Item key="edit">Edit file</Dropdown.Item>
+              <Dropdown.Item key="delete" color="error" withDivider>
+                Delete file
+              </Dropdown.Item>
+            </Dropdown.Menu>
+          </Dropdown>
+        </Grid>
+        <Grid>
+          <Dropdown>
+            <Dropdown.Button flat color={selectedColor}>
+              Flat
+            </Dropdown.Button>
+            <Dropdown.Menu color={selectedColor} aria-label="Actions">
+              <Dropdown.Item key="new">New file</Dropdown.Item>
+              <Dropdown.Item key="copy">Copy link</Dropdown.Item>
+              <Dropdown.Item key="edit">Edit file</Dropdown.Item>
+              <Dropdown.Item key="delete" color="error" withDivider>
+                Delete file
+              </Dropdown.Item>
+            </Dropdown.Menu>
+          </Dropdown>
+        </Grid>
+        <Grid>
+          <Dropdown>
+            <Dropdown.Button color={selectedColor}>Solid</Dropdown.Button>
+            <Dropdown.Menu
+              color={selectedColor}
+              variant="solid"
+              aria-label="Actions"
+            >
+              <Dropdown.Item key="new">New file</Dropdown.Item>
+              <Dropdown.Item key="copy">Copy link</Dropdown.Item>
+              <Dropdown.Item key="edit">Edit file</Dropdown.Item>
+              <Dropdown.Item key="delete" color="error" withDivider>
+                Delete file
+              </Dropdown.Item>
+            </Dropdown.Menu>
+          </Dropdown>
+        </Grid>
+        <Grid>
+          <Dropdown>
+            <Dropdown.Button color={selectedColor} shadow>
+              Shadow
+            </Dropdown.Button>
+            <Dropdown.Menu
+              color={selectedColor}
+              variant="shadow"
+              aria-label="Actions"
+            >
+              <Dropdown.Item key="new">New file</Dropdown.Item>
+              <Dropdown.Item key="copy">Copy link</Dropdown.Item>
+              <Dropdown.Item key="edit">Edit file</Dropdown.Item>
+              <Dropdown.Item key="delete" color="error" withDivider>
+                Delete file
+              </Dropdown.Item>
+            </Dropdown.Menu>
+          </Dropdown>
+        </Grid>
+      </Grid>
+      <Grid xs={12}>
+        <Radio.Group
+          row
+          size="sm"
+          value={selectedColor}
+          onChange={setSelectedColor}
+        >
+          {colors.map((color) => (
+            <Radio key={color} value={color} color={selectedColor}>
+              {capitalize(color)}
+            </Radio>
+          ))}
+        </Radio.Group>
+      </Grid>
+    </Grid.Container>
+  );
+}`;
+
+const react = {
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/dropdown/with-divider.ts (added, 25 changes)\n  Patch: @@ -0,0 +1,25 @@
+const App = `import { Dropdown } from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <Dropdown>
+      <Dropdown.Button flat>Trigger</Dropdown.Button>
+      <Dropdown.Menu aria-label="Static Actions">
+        <Dropdown.Item key="new">New file</Dropdown.Item>
+        <Dropdown.Item key="copy">Copy link</Dropdown.Item>
+        <Dropdown.Item key="edit">Edit file</Dropdown.Item>
+        <Dropdown.Item key="delete" withDivider color="error">
+          Delete file
+        </Dropdown.Item>
+      </Dropdown.Menu>
+    </Dropdown>
+  );
+}`;
+
+const react = {
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/index.ts (modified, 4 changes)\n  Patch: @@ -23,6 +23,7 @@ import containerContent from './container';
 import gridContent from './grid';
 import spacerContent from './spacer';
 import popoverContent from './popover';
+import dropdownContent from './dropdown';
 
 export default {
   tableContent,
@@ -49,5 +50,6 @@ export default {
   containerContent,
   gridContent,
   spacerContent,
-  popoverContent
+  popoverContent,
+  dropdownContent
 };\n- apps/docs/content/components/popover/bordered.ts (added, 22 changes)\n  Patch: @@ -0,0 +1,22 @@
+const App = `import { Popover, Button, Text } from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <Popover isBordered disableShadow>
+      <Popover.Trigger>
+        <Button auto flat>Open Popover</Button>
+      </Popover.Trigger>
+      <Popover.Content>
+        <Text css={{ p: "$10" }}>This is the content of the popover.</Text>
+      </Popover.Content>
+    </Popover>
+  );
+}`;
+
+const react = {
+  '/App.js': App
+};
+
+export default {
+  ...react
+};\n- apps/docs/content/components/popover/custom-content.ts (modified, 16 changes)\n  Patch: @@ -143,24 +143,10 @@ export default function App() {
         <Popover >
           <Popover.Trigger>
             <User
+              as="button"
               src="https://i.pravatar.cc/150?u=a042581f4e29026704d"
               name="Ariana Wattson"
               description="UI/UX Designer"
-              as="button"
-              css={{ 
-                px: 0,
-                transition: 'opacity 0.25s ease',
-                cursor:'pointer',
-                borderRadius: '$xs',
-                background:'none',
-                border:'none',
-                '&:focus-visible': {
-                  outline: '2px $primary solid',
-                },
-                '&:hover': {
-                  opacity: 0.8
-                },
-              }}
             />
           </Popover.Trigger>
           <Popover.Content css={{ px: '$4', py: '$2' }}>\n- apps/docs/content/components/popover/index.ts (modified, 4 changes)\n  Patch: @@ -3,11 +3,13 @@ import placements from './placements';
 import controlledVsUncontrolled from './controlled-vs-uncontrolled';
 import disableAnimation from './disable-animation';
 import customContent from './custom-content';
+import bordered from './bordered';
 
 export default {
   defaultPopover,
   placements,
   controlledVsUncontrolled,
   customContent,
-  disableAnimation
+  disableAnimation,
+  bordered
 };\n- apps/docs/content/docs/components/button.mdx (modified, 2 changes)\n  Patch: @@ -121,6 +121,8 @@ _Note: `gradient` variant is not supported with the `flat` mode._"
 | **type**         | `button` `reset` `submit`                       | Native type of button element             | `button`  |
 | **ref**          | <Code>Ref<HTMLButtonElement &#124; null></Code> | forwardRef                                | -         |
 | **css**          | `Stitches.CSS`                                  | Override Default CSS style                | -         |
+| **iconLeftCss**  | `Stitches.CSS`                                  | Override icon CSS style                   | -         |
+| **iconRightCss** | `Stitches.CSS`                                  | Override iconRight CSS style              | -         |
 | **as**           | `keyof JSX.IntrinsicElements`                   | Changes which tag component outputs       | `button`  |
 | ...              | `'id', 'className', ...`                        | Button native props                       | -         |
 \n- apps/docs/content/docs/components/dropdown.mdx (added, 375 changes)\n  Patch: @@ -0,0 +1,375 @@
+---
+title: 'Dropdown'
+description: 'Displays a list of actions or options that a user can choose.'
+url: https://nextui.org/docs/components/dropdown
+---
+
+# Dropdown
+
+Displays a list of actions or options that a user can choose. Dropdown implementation is based on <br/> <a href="https://react-spectrum.adobe.com/react-aria/useMenu.html" rel="noreferrer" target="_blank">@react-aria/menu</a>
+
+```jsx
+import { Dropdown } from '@nextui-org/react';
+```
+
+<CarbonAd />
+
+<Spacer y={2} />
+
+#### Anatomy
+
+- **Dropdown**: The wrapper that provides state, context and focus management.
+- **Dropdown.Trigger**: Used to wrap the reference (or trigger) element.
+- **Dropdown.Button**: A NextUI `Button` component used as the trigger (includes a chevron icon).
+- **Dropdown.Menu**: The wrapper for the items. Must be a direct child of `Dropdown`.
+- **Dropdown.Item**: The individual items. Must be a direct child of `Dropdown.Menu`.
+- **Dropdown.Section**: A wrapper to group related menu items.
+
+<Spacer y={2} />
+
+<Playground
+  title="Static"
+  desc="Static collections, as in this example, can be used when the full list of items is known ahead of time."
+  files={dropdownContent.staticDropdown}
+/>
+
+> The Dropdown can be closed by clicking or interacting outside the popover, or by pressing the <kbd>Escape</kbd> key. When the popover is closed, focus is restored back to its trigger button.
+
+<Playground
+  title="Dynamic"
+  desc="Dynamic collections, as shown below, can be used when the items come from an external data source such as an API call, or update over time. Providing the data in this way allows for Menu to automatically cache the rendering of each item, which dramatically improves performance."
+  files={dropdownContent.dynamicDropdown}
+/>
+
+<Playground
+  title="Divider"
+  highlightedLines="11"
+  desc="Dropdown items include a prop called `withDivider` that can be used to separate items in the menu."
+  files={dropdownContent.withDivider}
+/>
+
+<Playground
+  title="Disabled Keys"
+  highlightedLines="8"
+  desc="You can disable specific rows by providing an array of keys to `Dropdown.Menu` through the `disabledKeys` prop. This will prevent items from being selectable as shown in the example below."
+  files={dropdownContent.disabledKeys}
+/>
+
+> **Note**: Its important to have a unique key for each item, otherwise the disabled keys will not work.
+
+<Playground
+  title="Variants"
+  desc="Dropdown can be styled with different variants. The default variant is `flat`, but you can also use `light`, `solid` and `shadow`."
+  files={dropdownContent.variants}
+/>
+
+<Playground
+  title="Single selection"
+  desc="You can set the `selectionMode` property as `single` to limit users to select only a single item at a time."
+  highlightedLines="21"
+  files={dropdownContent.singleSelection}
+/>
+
+<Playground
+  title="Multiple selection"
+  desc="You can set the `selectionMode` property as `multiple` to allow users to select multiple items at a time."
+  highlightedLines="21"
+  files={dropdownContent.multipleSelection}
+/>
+
+<Playground
+  title="Command"
+  desc="Dropdown items support adding commands (or hotkeys), you can use the `command` prop."
+  highlightedLines="21"
+  files={dropdownContent.command}
+/>
+
+<Playground
+  title="Icons"
+  desc="Dropdown items can include icons, you can use the `icon` prop."
+  files={dropdownContent.icon}
+/>
+
+> **Note**: If you use **currentColor** as the icon color, the icon will have the same color as the item text.
+
+<Playground
+  title="Description"
+  desc="Dropdown items can include descriptions, you can use the `description` prop."
+  files={dropdownContent.description}
+/>
+
+<Playground
+  title="Sections"
+  desc="Dropdown supports sections in order to group options. Sections can be used by wrapping groups of Items in a Section component. Each Section takes a `title` and key prop."
+  files={dropdownContent.sections}
+/>
+
+> **A11y**: Sections without a title must provide an aria-label for accessibility.
+
+<Playground
+  title="Custom Trigger"
+  desc="Dropdown trigger can be mixed with other components like `Avatar` or `User`."
+  files={dropdownContent.customTrigger}
+/>
+
+<Playground
+  title="Disable animation"
+  highlightedLines="9"
+  desc="Disables the animation of the dropdown and its items when it is opened or closed."
+  files={dropdownContent.disableAnimation}
+/>
+
+<Spacer y={3} />
+
+### Keyboard Interactions
+
+| Key                              | Description                                                                                                                                                             |
+| -------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
+| <kbd>Space</kbd>                 | When focus is on `DropdownMenu.Trigger` or `Dropdown.Button`, opens the dropdown menu and focuses the first item. When focus is on an item, activates the focused item. |
+| <kbd>Enter</kbd>                 | When focus is on `DropdownMenu.Trigger` or `Dropdown.Button`, opens the dropdown menu and focuses the first item. When focus is on an item, activates the focused item. |
+| <kbd>ArrowDown</kbd>             | When focus is on `DropdownMenu.Trigger` or `Dropdown.Button`, opens the dropdown menu. When focus is on an item, moves focus to the next item.                          |
+| <kbd>ArrowUp</kbd>               | When focus is on an item, moves focus to the previous item.                                                                                                             |
+| <kbd>Esc</kbd>                   | Closes the dropdown menu and moves focus to `DropdownMenu.Trigger` or `Dropdown.Button`.                                                                                |
+| <kbd>A-Z</kbd> or <kbd>a-z</kbd> | When the menu is open, moves focus to the next menu item with a label that starts with the typed character if such an menu item exists.                                 |
+
+<Spacer y={3} />
+
+### APIs
+
+<Spacer y={2} />
+
+#### Dropdown Props
+
+| Attribute         | Type                                                   | Description                                                                                              | Default |
+| ----------------- | ------------------------------------------------------ | -------------------------------------------------------------------------------------------------------- | ------- |
+| **children\***    | `ReactNode[]`                                          | The content of the dropdown. It's usually the `Dropdown.Trigger`, `Dropdown.Button` and `Dropdown.Menu`. | -       |
+| **type**          | [TriggerType](#trigger-type)                           | The type of dropdown menu that the dropdown trigger opens.                                               | `menu`  |
+| **trigger**       | [MenuTriggerType](#menu-trigger-type)                  | How the dropdown menu is triggered.                                                                      | `press` |
+| **closeOnSelect** | `boolean`                                              | Whether the dropdown menu closes when a selection is made.                                               | `true`  |
+| **isDisabled**    | `boolean`                                              | Whether dropdown trigger is disabled.                                                                    | `false` |
+| **PopoverProps**  | [PopoverProps](/docs/components/popover#popover-props) | Since dropdown is based on the `Popover` you can use any of the `Popover` props.                         | -       |
+
+<Spacer y={1} />
+
+#### Dropdown Events
+
+| Attribute         | Type                                                     | Description                                                                       | Default |
+| ----------------- | -------------------------------------------------------- | --------------------------------------------------------------------------------- | ------- |
+| **PopoverEvents** | [PopoverEvents](/docs/components/popover#popover-events) | Since dropdown is based on the `Popover` you can use any of the `Popover` events. | -       |
+
+<Spacer y={2} />
+
+#### Dropdown.Trigger Props
+
+| Attribute      | Type        | Description                                                                                                                                                                | Default |
+| -------------- | ----------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------- |
+| **children\*** | `ReactNode` | The dropdown trigger component, ensure the children passed is focusable. Users can tab to it using their keyboard, and it can take a ref. It is critical for accessiblity. | -       |
+
+<Spacer y={2} />
+
+#### Dropdown.Button Props
+
+| Attribute       | Type                                                | Description                                                                           | Default |
+| --------------- | --------------------------------------------------- | ------------------------------------------------------------------------------------- | ------- |
+| **ButtonProps** | [ButtonProps](/docs/components/button#button-props) | Since dropdown button is based on the `Button` you can use any of the `Button` props. | -       |
+
+<Spacer y={2} />
+
+#### Dropdown.Menu Props
+
+| Attribute                  | Type                                                                                                         | Description                                                                                             | Default   |
+| -------------------------- | ------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------- | --------- |
+| **children\***             | [CollectionChildrentype](#collection-children-type)                                                          | The contents of the collection. It's usually the `Dropdown.Item` or `Dropdown.Section`.                 | -         |
+| **items**                  | [`Iterable<T>`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols)       | Item objects in the collection.                                                                         | -         |
+| **selectedKeys**           | `all` [`Iterable<T>`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols) | The currently selected keys in the collection (controlled).                                             | -         |
+| **defaultSelectedKeys**    | `all` [`Iterable<T>`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols) | The initial selected keys in the collection (uncontrolled).                                             | -         |
+| **disabledKeys**           | [`Iterable<T>`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols)       | The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with. | -         |
+| **selectionMode**          | [SelectionModeType](#selection-mode-type)                                                                    | The type of selection that is allowed in the collection.                                                | -         |
+| **isVirtualized**          | `boolean`                                                                                                    | Whether the dropdown menu uses virtual scrolling.                                                       | `false`   |
+| **disallowEmptySelection** | `boolean`                                                                                                    | Whether the collection allows empty selection.                                                          | `false`   |
+| **autoFocus**              | `boolean` [FocusStrategyType](#focus-strategy-type)                                                          | Where the focus should be set.                                                                          | `false`   |
+| **shouldFocusWrap**        | `boolean`                                                                                                    | Whether keyboard navigation is circular.                                                                | `false`   |
+| **keyboardDelegate**       | [KeyboardDelegateType](#keyboard-delegate-type)                                                              | An optional keyboard delegate implementation for type to select, to override the default.               | -         |
+| **color**                  | [SimpleColors](#simple-colors)                                                                               | The dropdown menu items color                                                                           | `default` |
+| **textColor**              | [SimpleColors](#simple-colors)                                                                               | The dropdown menu items text color                                                                      | `default` |
+| **dropdownVariant**        | [DropdownVariant](#dropdown-variant)                                                                         | The dropdown menu items variantion                                                                      | `flat`    |
+| **css**                    | `Stitches.CSS`                                                                                               | Override Default CSS style.                                                                             | -         |
+| **as**                     | `keyof JSX.IntrinsicElements`                                                                                | Changes which tag component outputs.                                                                    | `ul`      |
+
+<Spacer y={1} />
+
+#### Dropdown.Menu Events
+
+| Attribute             | Type                                                                            | Description                                        | Default |
+| --------------------- | ------------------------------------------------------------------------------- | -------------------------------------------------- | ------- |
+| **onAction**          | <Code>(key: [Key](https://reactjs.org/docs/lists-and-keys.html)) => void</Code> | Handler that is called when an item is selected.   | -       |
+| **onSelectionChange** | <Code>(keys:[SelectionType](#selection-type)) => any</Code>                     | Handler that is called when the selection changes. | -       |
+
+<Spacer y={1} />
+
+#### Dropdown.Menu Accessibility Props
+
+| Attribute            | Type     | Description                                                                                                        | Default |
+| -------------------- | -------- | ------------------------------------------------------------------------------------------------------------------ | ------- |
+| **id**               | `string` | The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id) | -       |
+| **aria-label**       | `string` | Defines a string value that labels the current element                                                             | -       |
+| **aria-labelledby**  | `string` | Identifies the element (or elements) that labels the current element                                               | -       |
+| **aria-describedby** | `string` | Identifies the element (or elements) that describes the object.                                                    | -       |
+| **aria-details**     | `string` | Identifies the element (or elements) that provide a detailed, extended description for the object.                 | -       |
+
+<Spacer y={2} />
+
+#### Dropdown.Item Props
+
+| Attribute           | Type                                                | Description                                                             | Default   |
+| ------------------- | --------------------------------------------------- | ----------------------------------------------------------------------- | --------- |
+| **key**             | [Key](https://reactjs.org/docs/lists-and-keys.html) | The unique key for the menu item.                                       | `false`   |
+| **command**         | `boolean`                                           | Right-aligned label text content, useful for displaying hotkeys.        | -         |
+| **description**     | `boolean`                                           | Description text element inside the dropdown menu item.                 | -         |
+| **icon**            | `ReactNode`                                         | The icon to render before the dropdown menu item's label.               | -         |
+| **isSelected**      | `boolean`                                           | Whether the dropdown item is selected.                                  | `false`   |
+| **isDisabled**      | `boolean`                                           | Whether the dropdown item is disabled.                                  | `false`   |
+| **isVirtualized**   | `boolean`                                           | Whether the dropdown item is contained in a virtual scrolling dropdown. | `false`   |
+| **closeOnSelect**   | `boolean`                                           | Whether the dropdown should close when the dropdown item is selected.   | `true`    |
+| **withDivider**     | `boolean`                                           | Whether the dropdown item should have a border on top                   | `false`   |
+| **dividerWeight**   | [NormalWeight](#normal-weight)                      | The dropdown item divider height                                        | `light`   |
+| **color**           | [SimpleColors](#simple-colors)                      | The dropdown item color                                                 | `default` |
+| **textColor**       | [SimpleColors](#simple-colors)                      | The dropdown item text color                                            | `default` |
+| **dropdownVariant** | [DropdownVariant](#dropdown-variant)                | The dropdown item variantion                                            | `flat`    |
+| **css**             | `Stitches.CSS`                                      | Override Default CSS style.                                             | -         |
+| **as**              | `keyof JSX.IntrinsicElements`                       | Changes which tag component outputs.                                    | `li`      |
+
+<Spacer y={1} />
+
+#### Dropdown.Item Accessibility Props
+
+| Attribute      | Type     | Description                                            | Default |
+| -------------- | -------- | ------------------------------------------------------ | ------- |
+| **aria-label** | `string` | A screen reader only label for the dropdown menu item. | -       |
+
+<Spacer y={1} />
+
+#### Dropdown.Item Events
+
+| Attribute    | Type                                                                            | Description                                                                | Default |
+| ------------ | ------------------------------------------------------------------------------- | -------------------------------------------------------------------------- | ------- |
+| **onAction** | <Code>(key: [Key](https://reactjs.org/docs/lists-and-keys.html)) => void</Code> | Handler that is called when the user activates the item.                   | -       |
+| **onClose**  | <Code>() => void</Code>                                                         | Handler that is called when the menu should close after selecting an item. | -       |
+
+<Spacer y={2} />
+
+#### Dropdown.Section Props
+
+| Attribute   | Type        | Description                  | Default |
+| ----------- | ----------- | ---------------------------- | ------- |
+| **heading** | `ReactNode` | The heading for the section. | -       |
+
+<Spacer y={1} />
+
+#### Dropdown.Section Accessibility Props
+
+| Attribute      | Type     | Description                                                                 | Default |
+| -------------- | -------- | --------------------------------------------------------------------------- | ------- |
+| **aria-label** | `string` | An accessibility label for the section. Required if heading is not present. | -       |
+
+<Spacer y={2} />
+
+### Dropdown types
+
+<Spacer y={1} />
+
+#### Trigger Type
+
+```ts
+type TriggerType = 'menu' | 'listbox';
+```
+
+#### Menu Trigger Type
+
+```ts
+type MenuTriggerType = 'press' | 'longPress';
+```
+
+#### Collection Element Type
+
+```ts
+type CollectionElement<T> = SectionElement<T> | ItemElement<T>;
+```
+
+#### Collection Children Type
+
+```ts
+type CollectionChildren<T> =
+  | CollectionElement<T>
+  | CollectionElement<T>[]
+  | ((item: T) => CollectionElement<T>);
+```
+
+#### Focus Strategy Type
+
+```ts
+type FocusStrategyType = 'first' | 'last';
+```
+
+#### Keyboard Delegate Type
+
+```ts
+import { Key } from 'react';
+
+// Returns the key visually below the given one, or null for none.
+getKeyBelow(key: Key): Key
+// Returns the key visually above the given one, or null for none.
+getKeyAbove(key: Key): Key
+// Returns the key visually to the left of the given one, or null for none.
+getKeyLeftOf(key: Key): Key
+// Returns the key visually to the right of the given one, or null for none.
+getKeyRightOf(key: Key): Key
+// Returns the key visually one page below the given one, or null for none.
+getKeyPageBelow(key: Key): Key
+// Returns the key visually one page above the given one, or null for none.
+getKeyPageAbove(key: Key): Key
+// Returns the first key, or null for none.
+getFirstKey(key?: Key, global?: boolean): Key
+// Returns the last key, or null for none.
+getLastKey(key?: Key, global?: boolean): Key
+// Returns the next key after fromKey that matches the given search string, or null for none.
+getKeyForSearch(search: string, fromKey?: Key): Key
+```
+
+#### Selection Mode Type
+
+```ts
+type SelectionModeType = 'none' | 'single' | 'multiple';
+```
+
+#### Selection Type
+
+```ts
+import { Key } from 'react';
+
+type SelectionType = 'all' | Set<Key>;
+```
+
+#### Simple Colors
+
+```ts
+type SimpleColors =
+  | 'default'
+  | 'primary'
+  | 'secondary'
+  | 'success'
+  | 'warning'
+  | 'error';
+```
+
+#### Dropdown Variants
+
+```ts
+type DropdownVariants = 'flat' | 'light' | 'solid' | 'shadow';
+```
+
+#### Normal Weights
+
+```ts
+type NormalWeights = 'light' | 'normal' | 'bold' | 'extrabold' | 'black';
+```\n- apps/docs/content/docs/components/modal.mdx (modified, 76 changes)\n  Patch: @@ -6,7 +6,7 @@ url: https://nextui.org/docs/components/modal
 
 # Modal
 
-Display a dialog with a custom content that requires attention or provides additional information.
+Displays a dialog with a custom content that requires attention or provides additional information.
 
 ```jsx
 import { Modal } from '@nextui-org/react';
@@ -69,58 +69,58 @@ this functionality depends on the css property [backdrop-filter](https://caniuse
 
 #### Modal Props
 
-| Attribute        | Type                              | Accepted values          | Description                                                                                   | Default   |
-| ---------------- | --------------------------------- | ------------------------ | --------------------------------------------------------------------------------------------- | --------- |
-| **open**         | `boolean`                         | `true/false`             | Determine if the modal is visible or hidden                                                   | `false`   |
-| **scroll**       | `boolean`                         | `true/false`             | Makes the content a maximum high and gives the possibility to overflow the content add scroll | `false`   |
-| **blur**         | `boolean`                         | `true/false`             | Makes all elements blur when the modal opens                                                  | `false`   |
-| **animated**     | `boolean`                         | `true/false`             | Display the modal with opening and close animation                                            | `true`    |
-| **noPadding**    | `boolean`                         | `true/false`             | Eliminates the padding of the base elements of the modal                                      | `false`   |
-| **closeButton**  | `boolean`                         | `true/false`             | Determine if the modal close button is visible or hidden                                      | `false`   |
-| **fullScreen**   | `boolean`                         | `true/false`             | Makes the modal the size of the window                                                        | `false`   |
-| **autoMargin**   | `boolean`                         | `true/false`             | Apply or not a margin to the base elements of the modal                                       | -         |
-| **preventClose** | `boolean`                         | `true/false`             | Modal cannot be closed by clicking outside or by pressing the esc key                         | `false`   |
-| **width**        | `string` `number`                 | `%` `px` `rem` `em`      | Determine the width of the modal                                                              | `400px`   |
-| **onClose**      | `() => void`                      | -                        | Callback fired when the modal is closed                                                       | -         |
-| **onOpen**       | `() => void`                      | -                        | Callback fired when the modal is open                                                         | -         |
-| **css**          | `Stitches.CSS`                    | -                        | Override Default CSS style                                                                    | -         |
-| **as**           | `keyof JSX.IntrinsicElements`     | -                        | Changes which tag component outputs                                                           | `section` |
-| ...              | `HTMLAttributes`                  | `'id', 'className', ...` | Native props                                                                                  | -         |
+| Attribute        | Type                          | Accepted values          | Description                                                                                   | Default   |
+| ---------------- | ----------------------------- | ------------------------ | --------------------------------------------------------------------------------------------- | --------- |
+| **open**         | `boolean`                     | `true/false`             | Determine if the modal is visible or hidden                                                   | `false`   |
+| **scroll**       | `boolean`                     | `true/false`             | Makes the content a maximum high and gives the possibility to overflow the content add scroll | `false`   |
+| **blur**         | `boolean`                     | `true/false`             | Makes all elements blur when the modal opens                                                  | `false`   |
+| **animated**     | `boolean`                     | `true/false`             | Display the modal with opening and close animation                                            | `true`    |
+| **noPadding**    | `boolean`                     | `true/false`             | Eliminates the padding of the base elements of the modal                                      | `false`   |
+| **closeButton**  | `boolean`                     | `true/false`             | Determine if the modal close button is visible or hidden                                      | `false`   |
+| **fullScreen**   | `boolean`                     | `true/false`             | Makes the modal the size of the window                                                        | `false`   |
+| **autoMargin**   | `boolean`                     | `true/false`             | Apply or not a margin to the base elements of the modal                                       | -         |
+| **preventClose** | `boolean`                     | `true/false`             | Modal cannot be closed by clicking outside or by pressing the esc key                         | `false`   |
+| **width**        | `string` `number`             | `%` `px` `rem` `em`      | Determine the width of the modal                                                              | `400px`   |
+| **onClose**      | `() => void`                  | -                        | Callback fired when the modal is closed                                                       | -         |
+| **onOpen**       | `() => void`                  | -                        | Callback fired when the modal is open                                                         | -         |
+| **css**          | `Stitches.CSS`                | -                        | Override Default CSS style                                                                    | -         |
+| **as**           | `keyof JSX.IntrinsicElements` | -                        | Changes which tag component outputs                                                           | `section` |
+| ...              | `HTMLAttributes`              | `'id', 'className', ...` | Native props                                                                                  | -         |
 
 <Spacer y={2} />
 
 #### Modal.Header Props
 
-| Attribute      | Type                              | Accepted values          | Description                                             | Default        |
-| -------------- | --------------------------------- | ------------------------ | ------------------------------------------------------- | -------------- |
-| **autoMargin** | `boolean`                         | `true/false`             | Apply or not a margin to the base elements of the modal | `true`         |
-| **justify**    | `Justify`                         | [Justify](#justify)      | CSS "justify-content" property                          | `center`       |
-| **css**        | `Stitches.CSS`                    | -                        | Override Default CSS style                              | -              |
-| **as**         | `keyof JSX.IntrinsicElements`     | -                        | Changes which tag component outputs                     | `div`          |
-| ...            | `HTMLAttributes`                  | `'id', 'className', ...` | Native props                                            | -              |
+| Attribute      | Type                          | Accepted values          | Description                                             | Default  |
+| -------------- | ----------------------------- | ------------------------ | ------------------------------------------------------- | -------- |
+| **autoMargin** | `boolean`                     | `true/false`             | Apply or not a margin to the base elements of the modal | `true`   |
+| **justify**    | `Justify`                     | [Justify](#justify)      | CSS "justify-content" property                          | `center` |
+| **css**        | `Stitches.CSS`                | -                        | Override Default CSS style                              | -        |
+| **as**         | `keyof JSX.IntrinsicElements` | -                        | Changes which tag component outputs                     | `div`    |
+| ...            | `HTMLAttributes`              | `'id', 'className', ...` | Native props                                            | -        |
 
 <Spacer y={2} />
 
 #### Modal.Body Props
 
-| Attribute      | Type                              | Accepted values          | Description                                             | Default      |
-| -------------- | --------------------------------- | ------------------------ | ------------------------------------------------------- | ------------ |
-| **autoMargin** | `boolean`                         | `true/false`             | Apply or not a margin to the base elements of the modal | `true`       |
-| **css**        | `Stitches.CSS`                    | -                        | Override Default CSS style                              | -            |
-| **as**         | `keyof JSX.IntrinsicElements`     | -                        | Changes which tag component outputs                     | `div`        |
-| ...            | `HTMLAttributes`                  | `'id', 'className', ...` | Native props                                            | -            |
+| Attribute      | Type                          | Accepted values          | Description                                             | Default |
+| -------------- | ----------------------------- | ------------------------ | ------------------------------------------------------- | ------- |
+| **autoMargin** | `boolean`                     | `true/false`             | Apply or not a margin to the base elements of the modal | `true`  |
+| **css**        | `Stitches.CSS`                | -                        | Override Default CSS style                              | -       |
+| **as**         | `keyof JSX.IntrinsicElements` | -                        | Changes which tag component outputs                     | `div`   |
+| ...            | `HTMLAttributes`              | `'id', 'className', ...` | Native props                                            | -       |
 
 <Spacer y={2} />
 
 #### Modal.Footer Props
 
-| Attribute      | Type                             | Accepted values          | Description                                             | Default        |
-| -------------- | -------------------------------- | ------------------------ | ------------------------------------------------------- | -------------- |
-| **autoMargin** | `boolean`                        | `true/false`             | Apply or not a margin to the base elements of the modal | `true`         |
-| **justify**    | `Justify`                        | [Justify](#justify)      | CSS "justify-content" property                          | `flex-end`     |
-| **css**        | `Stitches.CSS`                   | -                        | Override Default CSS style                              | -              |
-| **as**         | `keyof JSX.IntrinsicElements`    | -                        | Changes which tag component outputs                     | `div`          |
-| ...            | `HTMLAttributes`                 | `'id', 'className', ...` | Native props                                            | -              |
+| Attribute      | Type                          | Accepted values          | Description                                             | Default    |
+| -------------- | ----------------------------- | ------------------------ | ------------------------------------------------------- | ---------- |
+| **autoMargin** | `boolean`                     | `true/false`             | Apply or not a margin to the base elements of the modal | `true`     |
+| **justify**    | `Justify`                     | [Justify](#justify)      | CSS "justify-content" property                          | `flex-end` |
+| **css**        | `Stitches.CSS`                | -                        | Override Default CSS style                              | -          |
+| **as**         | `keyof JSX.IntrinsicElements` | -                        | Changes which tag component outputs                     | `div`      |
+| ...            | `HTMLAttributes`              | `'id', 'className', ...` | Native props                                            | -          |
 
 <Spacer y={2} />
 \n- apps/docs/content/docs/components/popover.mdx (modified, 44 changes)\n  Patch: @@ -32,6 +32,13 @@ import { Popover } from '@nextui-org/react';
 
 > The Popover can be closed by clicking or interacting outside the popover, or by pressing the <kbd>Escape</kbd> key. When the popover is closed, focus is restored back to its trigger button.
 
+<Playground
+  title="Bordered"
+  highlightedLines="5"
+  desc="You can change the full style to a bordered `Popover` with the `isBordered` property."
+  files={popoverContent.bordered}
+/>
+
 <Playground
   title="Placements"
   highlightedLines="23"
@@ -72,19 +79,24 @@ import { Popover } from '@nextui-org/react';
 
 #### Popover Props
 
-| Attribute                     | Type                                   | Description                                                                                                  | Default  |
-| ----------------------------- | -------------------------------------- | ------------------------------------------------------------------------------------------------------------ | -------- |
-| **children**                  | `ReactNode`                            | The content of the popover. It's usually the `Popover.Trigger` and `Popover.Content`.                        | -        |
-| **placement**                 | [PopoverPlacement](#popover-placement) | The placement of the popover relative to its trigger reference.                                              | `bottom` |
-| **triggerType**               | [PopoverPlacement](#popover-placement) | Type of overlay that is opened by the trigger.                                                               | `dialog` |
-| **shouldFlip**                | `boolean`                              | Whether the popover should change its placement and flip when it's about to overflow its boundary area.      | `true`   |
-| **offset(px)**                | `number`                               | The distance or margin between the reference and popper. It is used internally to create an offset modifier. | `12`     |
-| **isOpen**                    | `boolean`                              | Whether the overlay is open by default (controlled).                                                         | -        |
-| **defaultOpen**               | `boolean`                              | Whether the overlay is open by default (uncontrolled).                                                       | -        |
-| **isDismissable**             | `boolean`                              | Whether to close the overlay when the user interacts outside it.                                             | `true`   |
-| **isKeyboardDismissDisabled** | `boolean`                              | Whether pressing the escape key to close the overlay should be disabled.                                     | `false`  |
-| **shouldCloseOnBlur**         | `boolean`                              | Whether the overlay should close when focus is lost or moves outside it.                                     | `false`  |
-| **disableAnimation**          | `boolean`                              | Whether the popover is animated.                                                                             | `false`  |
+| Attribute                     | Type                                   | Description                                                                                                  | Default      |
+| ----------------------------- | -------------------------------------- | ------------------------------------------------------------------------------------------------------------ | ------------ |
+| **children\***                | `ReactNode[]`                          | The content of the popover. It's usually the `Popover.Trigger` and `Popover.Content`.                        | -            |
+| **placement**                 | [PopoverPlacement](#popover-placement) | The placement of the popover relative to its trigger reference.                                              | `bottom`     |
+| **triggerType**               | [TriggerType](#trigger-type)           | Type of overlay that is opened by the trigger.                                                               | `dialog`     |
+| **shouldFlip**                | `boolean`                              | Whether the popover should change its placement and flip when it's about to overflow its boundary area.      | `true`       |
+| **offset(px)**                | `number`                               | The distance or margin between the reference and popper. It is used internally to create an offset modifier. | `12`         |
+| **isOpen**                    | `boolean`                              | Whether the overlay is open by default (controlled).                                                         | -            |
+| **isBordered**                | `boolean`                              | Whether the overlay should have a border.                                                                    | `false`      |
+| **borderWeight**              | [NormalWeights](#normal-weights)       | The border weight of the bordered overlay.                                                                   | `light`      |
+| **defaultOpen**               | `boolean`                              | Whether the overlay is open by default (uncontrolled).                                                       | -            |
+| **isDismissable**             | `boolean`                              | Whether to close the overlay when the user interacts outside it.                                             | `true`       |
+| **disableShadow**             | `boolean`                              | Whether to disable the shadow.                                                                               | `false`      |
+| **isKeyboardDismissDisabled** | `boolean`                              | Whether pressing the escape key to close the overlay should be disabled.                                     | `false`      |
+| **shouldCloseOnBlur**         | `boolean`                              | Whether the overlay should close when focus is lost or moves outside it.                                     | `false`      |
+| **disableAnimation**          | `boolean`                              | Whether the popover is animated.                                                                             | `false`      |
+| **triggerRef**                | `RefObject<HTMLElement>`               | The ref for the element which the overlay positions itself with respect to.                                  | -            |
+| **scrollRef**                 | `RefObject<HTMLElement>`               | A ref for the scrollable region within the overlay.                                                          | `overlayRef` |
 
 <Spacer y={1} />
 
@@ -144,3 +156,9 @@ type PopoverPlacement =
 ```ts
 type TriggerType = 'dialog' | 'menu' | 'listbox' | 'tree' | 'grid';
 ```
+
+#### Normal Weights
+
+```ts
+type NormalWeights = 'light' | 'normal' | 'bold' | 'extrabold' | 'black';
+```\n- apps/docs/content/docs/manifest.json (modified, 27 changes)\n  Patch: @@ -143,13 +143,11 @@
                         },
                         {
                             "title": "Checkbox",
-                            "updated": true,
                             "keywords": "check, radio, selectable, checkbox, box",
                             "path": "/docs/components/checkbox.mdx"
                         },
                         {
                             "title": "Checkbox Group",
-                            "updated": true,
                             "keywords": "check, radio, selectable, checkbox, box, group, items",
                             "path": "/docs/components/checkbox-group.mdx"
                         },
@@ -159,25 +157,28 @@
                             "path": "/docs/components/radio.mdx"
                         },
                         {
-                            "title": "Dropdown",
-                            "comingSoon": true
+                          "title": "Popover",
+                          "keywords": "popover, tooltip, tooltip, popover, popover",
+                          "path": "/docs/components/popover.mdx",
+                          "updated": true
                         },
                         {
-                            "title": "Progress",
-                            "keywords": "progress, bar, task, display, activity",
-                            "path": "/docs/components/progress.mdx"
+                          "title": "Tooltip",
+                          "keywords": "tool, popover, tooltip, hoverable",
+                          "path": "/docs/components/tooltip.mdx"
                         },
                         {
-                            "title": "Popover",
-                            "keywords": "popover, tooltip, tooltip, popover, popover",
-                            "path": "/docs/components/popover.mdx",
+                            "title": "Dropdown",
+                            "keywords": "dropdown, select, selectable, menu",
+                            "path": "/docs/components/dropdown.mdx",
                             "newPost": true
                         },
                         {
-                            "title": "Tooltip",
-                            "keywords": "tool, popover, tooltip, hoverable",
-                            "path": "/docs/components/tooltip.mdx"
+                            "title": "Progress",
+                            "keywords": "progress, bar, task, display, activity",
+                            "path": "/docs/components/progress.mdx"
                         },
+
                         {
                             "title": "Modal",
                             "keywords": "modal, dialog, backdrop",\n- apps/docs/content/docs/theme/default-theme.mdx (modified, 1 changes)\n  Patch: @@ -88,6 +88,7 @@ export default {
   showEditor={false}
   code={`
     <Palette colors={[
+      "neutral",
       "primary",
       "secondary",
       "success",\n- apps/docs/content/docs/theme/utilities.mdx (modified, 6 changes)\n  Patch: @@ -279,6 +279,12 @@ export const utils = {
     backgroundImage: `linear-gradient(${value})`,
     WebkitBackgroundClip: 'text',
     WebkitTextFillColor: 'transparent'
+  }),
+  truncateText: (value: Stitches.PropertyValue<'width'>) => ({
+    maxWidth: value,
+    whiteSpace: 'nowrap',
+    overflow: 'hidden',
+    textOverflow: 'ellipsis'
   })
 };
 ```\n- apps/docs/src/components/palette/index.tsx (modified, 4 changes)\n  Patch: @@ -51,7 +51,9 @@ const mapColors = (colors: string[]): Color[] => {
     const reverseColor = reverseColors[color];
 
     const textColor = isBrand
-      ? '$white'
+      ? color === 'gradient'
+        ? '$white'
+        : `$${color}SolidContrast`
       : (isAccent && num <= 5) || (isBase && num <= 500)
       ? `$${colors[colors.length - 1]}`
       : `$${colors[1]}`;\n- packages/react/.eslintrc.json (modified, 9 changes)\n  Patch: @@ -2,20 +2,21 @@
     "extends": ["../../.eslintrc.json"],
     "ignorePatterns": ["!**/*"],
     "overrides": [
-        
       {
         "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
         "parserOptions": {
           "project": ["./tsconfig.json"],
           "ecmaFeatures": {
             "jsx": true
           }
-        },
-        "rules": {}
+        }
       },
       {
         "files": ["*.ts", "*.tsx"],
-        "rules": {}
+        "rules": {
+            "react/jsx-uses-react": "off",
+            "react/react-in-jsx-scope": "off"
+        }
       },
       {
         "files": ["*.js", "*.jsx"],\n- packages/react/package.json (modified, 3 changes)\n  Patch: @@ -62,6 +62,7 @@
     "@react-aria/i18n": "3.3.9",
     "@react-aria/interactions": "3.8.4",
     "@react-aria/label": "3.2.5",
+    "@react-aria/menu": "3.4.4",
     "@react-aria/overlays": "3.8.2",
     "@react-aria/ssr": "3.1.2",
     "@react-aria/table": "3.2.4",
@@ -72,9 +73,11 @@
     "@react-stately/overlays": "3.2.0",
     "@react-stately/table": "3.1.3",
     "@react-stately/toggle": "3.2.7",
+    "@react-stately/tree": "3.2.4",
     "@react-types/button": "^3.4.5",
     "@react-types/checkbox": "3.2.7",
     "@react-types/grid": "3.0.4",
+    "@react-types/menu": "3.5.3",
     "@react-types/overlays": "3.5.5",
     "@react-types/shared": "3.12.0",
     "@stitches/react": "1.2.8"\n- packages/react/src/avatar/avatar.styles.ts (modified, 540 changes)\n  Patch: @@ -1,307 +1,315 @@
 import { styled, VariantProps } from '../theme/stitches.config';
+import { cssFocusVisible, sharedDialogPopup } from '../theme/shared-css';
 
-export const StyledAvatar = styled('span', {
-  dflex: 'center',
-  position: 'relative',
-  zIndex: '$1',
-  boxSizing: 'border-box',
-  overflow: 'hidden',
-  verticalAlign: 'top',
-  cursor: 'auto',
-  '.nextui-avatar-bg': {
-    position: 'absolute',
-    top: 0,
-    left: 0,
-    right: 0,
-    bottom: 0,
-    zIndex: '$2',
-    transition: '$avatar',
-    size: '100%'
-  },
-  '&:hover .nextui-avatar-bg': {
-    boxShadow: ' inset 0 0 40px 0 rgb(0 0 0 / 14%)'
-  },
-  '.nextui-avatar-img': {
-    opacity: 0,
-    zIndex: '$3',
-    display: 'flex',
-    bg: '$background',
-    transition: 'transform 250ms ease 0ms, opacity 200ms ease-in 0ms',
-    width: '100%',
-    height: '100%',
-    objectFit: 'cover'
-  },
-  '&[data-state="ready"] .nextui-avatar-img': {
-    opacity: 1
-  },
-  '.nextui-avatar-icon': {
-    display: 'flex',
-    position: 'absolute',
-    left: '50%',
-    top: '50%',
-    ta: 'center',
-    zIndex: '$2',
-    transform: 'translate(-50%, -50%)',
-    whiteSpace: 'nowrap',
-    us: 'none'
-  },
-  '.nextui-avatar-text': {
-    position: 'absolute',
-    zIndex: '$2',
-    left: '50%',
-    top: '50%',
-    ta: 'center',
-    color: '$text',
-    fontWeight: '$medium',
-    transform: 'translate(-50%, -50%) scale(0.65)',
-    whiteSpace: 'nowrap',
-    us: 'none'
-  },
-  '@motion': {
-    '.nextui-avatar-bg, .nextui-avatar-img': {
-      transition: 'none'
-    }
-  },
-  variants: {
-    color: {
-      default: {
-        '.nextui-avatar-bg': {
-          bg: '$accents2'
-        }
-      },
-      primary: {
-        '.nextui-avatar-bg': {
-          bg: '$primary'
-        }
-      },
-      secondary: {
-        '.nextui-avatar-bg': {
-          bg: '$secondary'
-        }
-      },
-      success: {
-        '.nextui-avatar-bg': {
-          bg: '$success'
-        }
-      },
-      warning: {
-        '.nextui-avatar-bg': {
-          bg: '$warning'
-        }
-      },
-      error: {
-        '.nextui-avatar-bg': {
-          bg: '$error'
-        }
-      },
-      gradient: {
-        '.nextui-avatar-bg': {
-          bg: '$gradient'
-        }
+export const StyledAvatar = styled(
+  'span',
+  {
+    dflex: 'center',
+    position: 'relative',
+    zIndex: '$1',
+    boxSizing: 'border-box',
+    overflow: 'hidden',
+    verticalAlign: 'top',
+    cursor: 'auto',
+    transition: 'transform 250ms ease 0ms, box-shadow 0.25s ease 0s',
+    '.nextui-avatar-bg': {
+      position: 'absolute',
+      top: 0,
+      left: 0,
+      right: 0,
+      bottom: 0,
+      zIndex: '$2',
+      transition: '$avatar',
+      size: '100%'
+    },
+    '&:hover .nextui-avatar-bg': {
+      boxShadow: ' inset 0 0 40px 0 rgb(0 0 0 / 14%)'
+    },
+    '.nextui-avatar-img': {
+      opacity: 0,
+      zIndex: '$3',
+      display: 'flex',
+      bg: '$background',
+      transition: 'transform 250ms ease 0ms, opacity 200ms ease-in 0ms',
+      width: '100%',
+      height: '100%',
+      objectFit: 'cover'
+    },
+    '&[data-state="ready"] .nextui-avatar-img': {
+      opacity: 1
+    },
+    '.nextui-avatar-icon': {
+      display: 'flex',
+      position: 'absolute',
+      left: '50%',
+      top: '50%',
+      ta: 'center',
+      zIndex: '$2',
+      transform: 'translate(-50%, -50%)',
+      whiteSpace: 'nowrap',
+      us: 'none'
+    },
+    '.nextui-avatar-text': {
+      position: 'absolute',
+      zIndex: '$2',
+      left: '50%',
+      top: '50%',
+      ta: 'center',
+      color: '$text',
+      fontWeight: '$medium',
+      transform: 'translate(-50%, -50%) scale(0.65)',
+      whiteSpace: 'nowrap',
+      us: 'none'
+    },
+    '@motion': {
+      transition: 'none',
+      '.nextui-avatar-bg, .nextui-avatar-img': {
+        transition: 'none'
       }
     },
-    textColor: {
-      default: {
-        '.nextui-avatar-text': {
-          color: '$text'
-        }
-      },
-      white: {
-        '.nextui-avatar-text': {
-          color: '$white'
+    variants: {
+      color: {
+        default: {
+          '.nextui-avatar-bg': {
+            bg: '$accents2'
+          }
+        },
+        primary: {
+          '.nextui-avatar-bg': {
+            bg: '$primary'
+          }
+        },
+        secondary: {
+          '.nextui-avatar-bg': {
+            bg: '$secondary'
+          }
+        },
+        success: {
+          '.nextui-avatar-bg': {
+            bg: '$success'
+          }
+        },
+        warning: {
+          '.nextui-avatar-bg': {
+            bg: '$warning'
+          }
+        },
+        error: {
+          '.nextui-avatar-bg': {
+            bg: '$error'
+          }
+        },
+        gradient: {
+          '.nextui-avatar-bg': {
+            bg: '$gradient'
+          }
         }
       },
-      primary: {
-        '.nextui-avatar-text': {
-          color: '$primary'
+      textColor: {
+        default: {
+          '.nextui-avatar-text': {
+            color: '$text'
+          }
+        },
+        white: {
+          '.nextui-avatar-text': {
+            color: '$white'
+          }
+        },
+        primary: {
+          '.nextui-avatar-text': {
+            color: '$primary'
+          }
+        },
+        secondary: {
+          '.nextui-avatar-text': {
+            color: '$secondary'
+          }
+        },
+        success: {
+          '.nextui-avatar-text': {
+            color: '$success'
+          }
+        },
+        warning: {
+          '.nextui-avatar-text': {
+            color: '$warning'
+          }
+        },
+        error: {
+          '.nextui-avatar-text': {
+            color: '$error'
+          }
         }
       },
-      secondary: {
-        '.nextui-avatar-text': {
-          color: '$secondary'
+      size: {
+        xs: {
+          $$avatarXs: '$space$9',
+          sizeMin: '$$avatarXs',
+          '.nextui-avatar-text': {
+            fontSize: '$xs'
+          }
+        },
+        sm: {
+          $$avatarSm: '$space$11',
+          sizeMin: '$$avatarSm',
+          '.nextui-avatar-text': {
+            fontSize: '$base'
+          }
+        },
+        md: {
+          $$avatarMd: '$space$14',
+          sizeMin: '$$avatarMd',
+          '.nextui-avatar-text': {
+            fontSize: '$sm'
+          }
+        },
+        lg: {
+          $$avatarLg: '$space$16',
+          sizeMin: '$$avatarLg',
+          '.nextui-avatar-text': {
+            fontSize: '$sm'
+          }
+        },
+        xl: {
+          $$avatarXl: '$space$18',
+          sizeMin: '$$avatarXl',
+          '.nextui-avatar-text': {
+            fontSize: '$md'
+          }
         }
       },
-      success: {
-        '.nextui-avatar-text': {
-          color: '$success'
+      borderWeight: {
+        light: {
+          '.nextui-avatar-img': {
+            borderWidth: '$light'
+          }
+        },
+        normal: {
+          '.nextui-avatar-img': {
+            borderWidth: '$normal'
+          }
+        },
+        bold: {
+          '.nextui-avatar-img': {
+            borderWidth: '$normal'
+          }
+        },
+        extrabold: {
+          '.nextui-avatar-img': {
+            borderWidth: '$normal'
+          }
+        },
+        black: {
+          '.nextui-avatar-img': {
+            borderWidth: '$normal'
+          }
         }
       },
-      warning: {
-        '.nextui-avatar-text': {
-          color: '$warning'
+      bordered: {
+        true: {
+          '&:hover:not(.only-text-avatar) .nextui-avatar-bg': {
+            opacity: '0.6'
+          },
+          '.nextui-avatar-img': {
+            borderStyle: 'solid',
+            borderColor: '$background'
+          }
         }
       },
-      error: {
-        '.nextui-avatar-text': {
-          color: '$error'
-        }
-      }
-    },
-    size: {
-      xs: {
-        $$avatarXs: '$space$9',
-        sizeMin: '$$avatarXs',
-        '.nextui-avatar-text': {
-          fontSize: '$xs'
+      stacked: {
+        true: {
+          ml: '-$5'
         }
       },
-      sm: {
-        $$avatarSm: '$space$11',
-        sizeMin: '$$avatarSm',
-        '.nextui-avatar-text': {
-          fontSize: '$base'
+      pointer: {
+        true: {
+          cursor: 'pointer'
         }
       },
-      md: {
-        $$avatarMd: '$space$14',
-        sizeMin: '$$avatarMd',
-        '.nextui-avatar-text': {
-          fontSize: '$sm'
+      rounded: {
+        true: {
+          borderRadius: '$rounded',
+          '.nextui-avatar-img': {
+            borderRadius: '$rounded'
+          }
         }
       },
-      lg: {
-        $$avatarLg: '$space$16',
-        sizeMin: '$$avatarLg',
-        '.nextui-avatar-text': {
-          fontSize: '$sm'
+      squared: {
+        true: {
+          borderRadius: '$squared',
+          '.nextui-avatar-img': {
+            borderRadius: '$squared'
+          }
         }
       },
-      xl: {
-        $$avatarXl: '$space$18',
-        sizeMin: '$$avatarXl',
-        '.nextui-avatar-text': {
-          fontSize: '$md'
+      zoomed: {
+        true: {
+          '&:hover .nextui-avatar-img': {
+            transform: 'scale(1.125)'
+          }
         }
       }
     },
-    borderWeight: {
-      light: {
-        '.nextui-avatar-img': {
-          borderWidth: '$light'
+    compoundVariants: [
+      // bordered / borderWeight
+      {
+        bordered: true,
+        borderWeight: 'light',
+        css: {
+          padding: 'calc($1/2)'
         }
       },
-      normal: {
-        '.nextui-avatar-img': {
-          borderWidth: '$normal'
+      {
+        bordered: true,
+        borderWeight: 'normal',
+        css: {
+          padding: '$1'
         }
       },
-      bold: {
-        '.nextui-avatar-img': {
-          borderWidth: '$normal'
+      {
+        bordered: true,
+        borderWeight: 'bold',
+        css: {
+          padding: 'calc($2/1.5)'
         }
       },
-      extrabold: {
-        '.nextui-avatar-img': {
-          borderWidth: '$normal'
+      {
+        bordered: true,
+        borderWeight: 'extrabold',
+        css: {
+          padding: '$2'
         }
       },
-      black: {
-        '.nextui-avatar-img': {
-          borderWidth: '$normal'
-        }
-      }
-    },
-    bordered: {
-      true: {
-        '&:hover:not(.only-text-avatar) .nextui-avatar-bg': {
-          opacity: '0.6'
-        },
-        '.nextui-avatar-img': {
-          borderStyle: 'solid',
-          borderColor: '$background'
-        }
-      }
-    },
-    stacked: {
-      true: {
-        ml: '-$5'
-      }
-    },
-    pointer: {
-      true: {
-        cursor: 'pointer'
-      }
-    },
-    rounded: {
-      true: {
-        borderRadius: '$rounded',
-        '.nextui-avatar-img': {
-          borderRadius: '$rounded'
+      {
+        bordered: true,
+        borderWeight: 'black',
+        css: {
+          padding: 'calc($3/1.5)'
         }
-      }
-    },
-    squared: {
-      true: {
-        borderRadius: '$squared',
-        '.nextui-avatar-img': {
-          borderRadius: '$squared'
-        }
-      }
-    },
-    zoomed: {
-      true: {
-        '&:hover .nextui-avatar-img': {
-          transform: 'scale(1.125)'
+      },
+      {
+        rounded: true,
+        squared: true,
+        css: {
+          borderRadius: '$squared',
+          '.nextui-avatar-img': {
+            borderRadius: '$squared'
+          }
         }
       }
-    }
-  },
-  compoundVariants: [
-    // bordered / borderWeight
-    {
-      bordered: true,
-      borderWeight: 'light',
-      css: {
-        padding: 'calc($1/2)'
-      }
-    },
-    {
-      bordered: true,
-      borderWeight: 'normal',
-      css: {
-        padding: '$1'
-      }
-    },
-    {
-      bordered: true,
-      borderWeight: 'bold',
-      css: {
-        padding: 'calc($2/1.5)'
-      }
-    },
-    {
-      bordered: true,
-      borderWeight: 'extrabold',
-      css: {
-        padding: '$2'
-      }
-    },
-    {
-      bordered: true,
-      borderWeight: 'black',
-      css: {
-        padding: 'calc($3/1.5)'
-      }
-    },
-    {
+    ],
+    defaultVariants: {
+      size: 'md',
       rounded: true,
-      squared: true,
-      css: {
-        borderRadius: '$squared',
-        '.nextui-avatar-img': {
-          borderRadius: '$squared'
-        }
-      }
+      color: 'default',
+      textColor: 'default',
+      borderWeight: 'normal'
     }
-  ],
-  defaultVariants: {
-    size: 'md',
-    rounded: true,
-    color: 'default',
-    textColor: 'default',
-    borderWeight: 'normal'
-  }
-});
+  },
+  cssFocusVisible,
+  sharedDialogPopup
+);
 
 export type AvatarVariantsProps = VariantProps<typeof StyledAvatar>;
 \n- packages/react/src/avatar/avatar.tsx (modified, 27 changes)\n  Patch: @@ -1,4 +1,7 @@
 import React, { useMemo, useState, useRef, useEffect } from 'react';
+import { useFocusRing } from '@react-aria/focus';
+import type { FocusRingAria } from '@react-aria/focus';
+import { mergeProps } from '@react-aria/utils';
 import AvatarGroup from './avatar-group';
 import { CSS } from '../theme/stitches.config';
 import { ReactRef } from '../utils/refs';
@@ -25,14 +28,18 @@ export type AvatarProps = Props &
   AvatarVariantsProps &
   NativeAttrs & { css?: CSS };
 
+interface IFocusRingAria extends FocusRingAria {
+  focusProps: Omit<React.HTMLAttributes<HTMLElement>, keyof AvatarProps>;
+}
+
 const safeText = (text: string): string => {
   if (text?.length <= 4) return text;
   return text?.slice(0, 3);
 };
 
 export const Avatar = React.forwardRef(
   (props: AvatarProps, ref: ReactRef<HTMLSpanElement>) => {
-    const { src, text, icon, alt, className, ...otherProps } = props;
+    const { as, src, css, text, icon, alt, className, ...otherProps } = props;
 
     const domRef = useDOMRef(ref);
 
@@ -41,6 +48,8 @@ export const Avatar = React.forwardRef(
 
     const imgRef = useRef<HTMLImageElement>(null);
 
+    const { isFocusVisible, focusProps }: IFocusRingAria = useFocusRing();
+
     useEffect(() => {
       imgRef?.current?.complete && setReady(true);
     }, []);
@@ -52,14 +61,28 @@ export const Avatar = React.forwardRef(
     return (
       <StyledAvatar
         ref={domRef}
+        as={as}
+        {...mergeProps(otherProps, focusProps)}
         className={clsx(
           {
             'only-text-avatar': showText
           },
           className
         )}
         data-state={getState}
-        {...otherProps}
+        isFocusVisible={isFocusVisible}
+        css={mergeProps(
+          as === 'button'
+            ? {
+                // reset button styles
+                appearance: 'none',
+                outline: 'none',
+                border: 'none',
+                cursor: 'pointer'
+              }
+            : {},
+          css as any
+        )}
       >
         <span className="nextui-avatar-bg" />
         {!showText && (\n
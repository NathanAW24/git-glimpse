Pull Request Number: 4024
Title: refactor(docs): checkbox dx
Base Branch: refactor/overall-dx
Head Branch: refactor/checkbox-dx
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/4024
State: MERGED
Created At: 2024-11-10T15:33:59Z
Merged At: 2024-11-13T20:31:10Z
Participants: wingkwong, jrgarciadev

Description:
Closes # 
üìù Description

‚õ≥Ô∏è Current behavior (updates)

üöÄ New behavior

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Commits:
- refactor(docs): checkbox dx\n- fix(docs): incorrect import path\n

Labels:


Comments:
- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: e65e8af5fee472a968355a7eb2d24c695879b846

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/nextui-org/nextui/new/refactor/checkbox-dx?filename=.changeset/flat-cougars-smoke.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A---%0A%0Arefactor(docs)%3A%20checkbox%20dx%0A)

\n- vercel: [vc]: #2frCHpl7WV7uDoeCdfzPmFw5Zc1Yn4e0xuLEZrTbdgY=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9TNUVTVjlCN25XYW1ISEJrdGh5ekVjekhneVVhIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1yZWZhY3Rvci1jaGVja2JveC1keC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LXJlZmFjdG9yLWNoZWNrYm94LWR4LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvMmVHM1NKZFRoazZycXUzN3FRaFV4eXR5Q2d0YiIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1yZWZhY3Rvci1jaGVja2JveC1keC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtcmVmYWN0b3ItY2hlY2tib3gtZHgtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/S5ESV9B7nWamHHBkthyzEczHgyUa)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-refactor-checkbox-dx-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-refactor-checkbox-dx-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 10, 2024 3:53pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/2eG3SJdThk6rqu37qQhUxytyCgtb)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-refactor-checkbox-dx-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-refactor-checkbox-dx-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 10, 2024 3:53pm |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: skip review by coderabbit.ai -->

> [!IMPORTANT]
> ## Review skipped
> 
> Auto reviews are disabled on base/target branches other than the default branch.
> 
> <details>
> <summary>üóÇÔ∏è Base branches to auto review (5)</summary>
> 
> * main
> * canary
> * fix/.*
> * chore/.*
> * feat/.*
> 
> </details>
> 
> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.
> 
> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.

<!-- end of auto-generated comment: skip review by coderabbit.ai -->

<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- apps/docs/content/components/checkbox/colors.raw.jsx (added, 26 changes)\n  Patch: @@ -0,0 +1,26 @@
+import {Checkbox} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex gap-4">
+      <Checkbox defaultSelected color="default">
+        Default
+      </Checkbox>
+      <Checkbox defaultSelected color="primary">
+        Primary
+      </Checkbox>
+      <Checkbox defaultSelected color="secondary">
+        Secondary
+      </Checkbox>
+      <Checkbox defaultSelected color="success">
+        Success
+      </Checkbox>
+      <Checkbox defaultSelected color="warning">
+        Warning
+      </Checkbox>
+      <Checkbox defaultSelected color="danger">
+        Danger
+      </Checkbox>
+    </div>
+  );
+}\n- apps/docs/content/components/checkbox/colors.ts (modified, 15 changes)\n  Patch: @@ -1,17 +1,4 @@
-const App = `import {Checkbox} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <div className="flex gap-4">
-      <Checkbox defaultSelected color="default">Default</Checkbox>
-      <Checkbox defaultSelected color="primary">Primary</Checkbox>
-      <Checkbox defaultSelected color="secondary">Secondary</Checkbox>
-      <Checkbox defaultSelected color="success">Success</Checkbox>
-      <Checkbox defaultSelected color="warning">Warning</Checkbox>
-      <Checkbox defaultSelected color="danger">Danger</Checkbox>
-    </div> 
-  );
-}`;
+import App from "./colors.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/checkbox/controlled.raw.jsx (added, 14 changes)\n  Patch: @@ -0,0 +1,14 @@
+import {Checkbox} from "@nextui-org/react";
+
+export default function App() {
+  const [isSelected, setIsSelected] = React.useState(false);
+
+  return (
+    <div className="flex flex-col gap-2">
+      <Checkbox isSelected={isSelected} onValueChange={setIsSelected}>
+        Subscribe (controlled)
+      </Checkbox>
+      <p className="text-default-500">Selected: {isSelected ? "true" : "false"}</p>
+    </div>
+  );
+}\n- apps/docs/content/components/checkbox/controlled.ts (modified, 17 changes)\n  Patch: @@ -1,19 +1,4 @@
-const App = `import {Checkbox} from "@nextui-org/react";
-
-export default function App() {
-  const [isSelected, setIsSelected] = React.useState(false);
-
-  return (
-    <div className="flex flex-col gap-2">
-      <Checkbox isSelected={isSelected} onValueChange={setIsSelected}>
-        Subscribe (controlled)
-      </Checkbox>
-      <p className="text-default-500">
-        Selected: {isSelected ? "true" : "false"}
-      </p>
-    </div>
-  );
-}`;
+import App from "./controlled.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/checkbox/custom-check-icon.raw.jsx (added, 68 changes)\n  Patch: @@ -0,0 +1,68 @@
+import {Checkbox} from "@nextui-org/react";
+
+export const HeartIcon = ({size, height, width, ...props}) => {
+  // avoid passing non-DOM attributes to svg
+  // eslint-disable-next-line @typescript-eslint/no-unused-vars
+  const {isSelected, isIndeterminate, disableAnimation, ...otherProps} = props;
+
+  return (
+    <svg
+      fill="fill"
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      width={size || width || 24}
+      xmlns="http://www.w3.org/2000/svg"
+      {...otherProps}
+    >
+      <path
+        d="M12.62 20.81c-.34.12-.9.12-1.24 0C8.48 19.82 2 15.69 2 8.69 2 5.6 4.49 3.1 7.56 3.1c1.82 0 3.43.88 4.44 2.24a5.53 5.53 0 0 1 4.44-2.24C19.51 3.1 22 5.6 22 8.69c0 7-6.48 11.13-9.38 12.12Z"
+        fill="currentColor"
+      />
+    </svg>
+  );
+};
+
+export const PlusIcon = ({size, height, width, ...props}) => {
+  // avoid passing non-DOM attributes to svg
+  // eslint-disable-next-line @typescript-eslint/no-unused-vars
+  const {isSelected, isIndeterminate, disableAnimation, ...otherProps} = props;
+
+  return (
+    <svg
+      fill="none"
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      width={size || width || 24}
+      xmlns="http://www.w3.org/2000/svg"
+      {...otherProps}
+    >
+      <path
+        d="M6 12H18"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="3"
+      />
+      <path
+        d="M12 18V6"
+        stroke="currentColor"
+        strokeLinecap="round"
+        strokeLinejoin="round"
+        strokeWidth="3"
+      />
+    </svg>
+  );
+};
+
+export default function App() {
+  return (
+    <div className="flex gap-4">
+      <Checkbox defaultSelected icon={<HeartIcon />}>
+        Option
+      </Checkbox>
+      <Checkbox defaultSelected color="warning" icon={<PlusIcon />}>
+        Option
+      </Checkbox>
+    </div>
+  );
+}\n- apps/docs/content/components/checkbox/custom-check-icon.ts (modified, 68 changes)\n  Patch: @@ -1,73 +1,7 @@
-const HeartIcon = `export const HeartIcon = ({ size, height, width, ...props }) => {
-  // avoid passing non-DOM attributes to svg
-  const {isSelected, isIndeterminate, disableAnimation, ...otherProps} = props;
-
-  return (
-    <svg
-      width={size || width || 24}
-      height={size || height || 24}
-      viewBox="0 0 24 24"
-      fill='fill'
-      xmlns="http://www.w3.org/2000/svg"
-      {...otherProps}
-    >
-      <path
-        d="M12.62 20.81c-.34.12-.9.12-1.24 0C8.48 19.82 2 15.69 2 8.69 2 5.6 4.49 3.1 7.56 3.1c1.82 0 3.43.88 4.44 2.24a5.53 5.53 0 0 1 4.44-2.24C19.51 3.1 22 5.6 22 8.69c0 7-6.48 11.13-9.38 12.12Z"
-        fill='currentColor'
-      />
-    </svg>
-  );
-};
-`;
-
-const PlusIcon = `export const PlusIcon = ({ size, height, width, ...props }) => {
-  // avoid passing non-DOM attributes to svg
-  const {isSelected, isIndeterminate, disableAnimation, ...otherProps} = props;
-
-  return (
-    <svg
-      width={size || width || 24}
-      height={size || height || 24}
-      viewBox="0 0 24 24"
-      fill="none"
-      xmlns="http://www.w3.org/2000/svg"
-      {...otherProps}
-    >
-      <path
-        d="M6 12H18"
-        stroke="currentColor"
-        stroke-width="3"
-        stroke-linecap="round"
-        stroke-linejoin="round"
-      />
-      <path
-        d="M12 18V6"
-        stroke="currentColor"
-        stroke-width="3"
-        stroke-linecap="round"
-        stroke-linejoin="round"
-      />
-    </svg>
-  );
-};`;
-
-const App = `import {Checkbox} from "@nextui-org/react";
-import {HeartIcon} from './HeartIcon.jsx';  
-import {PlusIcon} from './PlusIcon.jsx';
-
-export default function App() {
-  return (
-    <div className="flex gap-4">
-      <Checkbox defaultSelected icon={<HeartIcon/>}>Option</Checkbox>
-      <Checkbox defaultSelected icon={<PlusIcon/>} color="warning">Option</Checkbox>
-    </div>  
-  );
-}`;
+import App from "./custom-check-icon.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,
-  "/HeartIcon.jsx": HeartIcon,
-  "/PlusIcon.jsx": PlusIcon,
 };
 
 export default {\n- apps/docs/content/components/checkbox/custom-implementation.raw.jsx (added, 68 changes)\n  Patch: @@ -0,0 +1,68 @@
+import {useCheckbox, Chip, VisuallyHidden, tv} from "@nextui-org/react";
+
+export const CheckIcon = (props) => (
+  <svg
+    aria-hidden="true"
+    fill="none"
+    focusable="false"
+    height="1em"
+    stroke="currentColor"
+    strokeLinecap="round"
+    strokeLinejoin="round"
+    strokeWidth={2}
+    viewBox="0 0 24 24"
+    width="1em"
+    {...props}
+  >
+    <polyline points="20 6 9 17 4 12" />
+  </svg>
+);
+
+const checkbox = tv({
+  slots: {
+    base: "border-default hover:bg-default-200",
+    content: "text-default-500",
+  },
+  variants: {
+    isSelected: {
+      true: {
+        base: "border-primary bg-primary hover:bg-primary-500 hover:border-primary-500",
+        content: "text-primary-foreground pl-1",
+      },
+    },
+    isFocusVisible: {
+      true: {
+        base: "outline-none ring-2 ring-focus ring-offset-2 ring-offset-background",
+      },
+    },
+  },
+});
+
+export default function App() {
+  const {children, isSelected, isFocusVisible, getBaseProps, getLabelProps, getInputProps} =
+    useCheckbox({
+      defaultSelected: true,
+    });
+
+  const styles = checkbox({isSelected, isFocusVisible});
+
+  return (
+    <label {...getBaseProps()}>
+      <VisuallyHidden>
+        <input {...getInputProps()} />
+      </VisuallyHidden>
+      <Chip
+        classNames={{
+          base: styles.base(),
+          content: styles.content(),
+        }}
+        color="primary"
+        startContent={isSelected ? <CheckIcon className="ml-1" /> : null}
+        variant="faded"
+        {...getLabelProps()}
+      >
+        {children ? children : isSelected ? "Enabled" : "Disabled"}
+      </Chip>
+    </label>
+  );
+}\n- apps/docs/content/components/checkbox/custom-implementation.ts (modified, 78 changes)\n  Patch: @@ -1,83 +1,7 @@
-const CheckIcon = `export const CheckIcon = (props) =>
-  (
-    <svg
-      aria-hidden="true"
-      fill="none"
-      focusable="false"
-      height="1em"
-      stroke="currentColor"
-      strokeLinecap="round"
-      strokeLinejoin="round"
-      strokeWidth={2}
-      viewBox="0 0 24 24"
-      width="1em"
-      {...props}
-    >
-      <polyline points="20 6 9 17 4 12" />
-    </svg>
-  );`;
-
-const App = `import {useCheckbox, Chip, VisuallyHidden, tv} from "@nextui-org/react";
-import {CheckIcon} from './CheckIcon.jsx'
-
-const checkbox = tv({
-  slots: {
-    base: "border-default hover:bg-default-200",
-    content: "text-default-500"
-  },
-  variants: {
-    isSelected: {
-      true: {
-        base: "border-primary bg-primary hover:bg-primary-500 hover:border-primary-500",
-        content: "text-primary-foreground pl-1"
-      }
-    },
-    isFocusVisible: {
-      true: { 
-        base: "outline-none ring-2 ring-focus ring-offset-2 ring-offset-background",
-      }
-    }
-  }
-})
-
-export default function App() {
-  const {
-    children,
-    isSelected,
-    isFocusVisible,
-    getBaseProps,
-    getLabelProps,
-    getInputProps,
-  } = useCheckbox({
-    defaultSelected: true,
-  })
-
-  const styles = checkbox({ isSelected, isFocusVisible })
-
-  return (
-    <label {...getBaseProps()}>
-      <VisuallyHidden>
-        <input {...getInputProps()} />
-      </VisuallyHidden>
-      <Chip
-        classNames={{
-          base: styles.base(),
-          content: styles.content(),
-        }}
-        color="primary"
-        startContent={isSelected ? <CheckIcon className="ml-1" /> : null}
-        variant="faded"
-        {...getLabelProps()}
-      >
-        {children ? children : isSelected ? "Enabled" : "Disabled"}
-      </Chip>
-    </label>
-  );
-}`;
+import App from "./custom-implementation.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,
-  "./CheckIcon.jsx": CheckIcon,
 };
 
 export default {\n- apps/docs/content/components/checkbox/custom-styles.raw.jsx (added, 49 changes)\n  Patch: @@ -0,0 +1,49 @@
+import {Checkbox, Link, User, Chip, cn} from "@nextui-org/react";
+
+export default function App() {
+  const [isSelected, setIsSelected] = React.useState(false);
+
+  const user = {
+    name: "Junior Garcia",
+    avatar: "https://avatars.githubusercontent.com/u/30373425?v=4",
+    username: "jrgarciadev",
+    url: "https://x.com/jrgarciadev",
+    role: "Software Developer",
+    status: "Active",
+  };
+
+  return (
+    <Checkbox
+      aria-label={user.name}
+      classNames={{
+        base: cn(
+          "inline-flex w-full max-w-md bg-content1",
+          "hover:bg-content2 items-center justify-start",
+          "cursor-pointer rounded-lg gap-2 p-4 border-2 border-transparent",
+          "data-[selected=true]:border-primary",
+        ),
+        label: "w-full",
+      }}
+      isSelected={isSelected}
+      onValueChange={setIsSelected}
+    >
+      <div className="w-full flex justify-between gap-2">
+        <User
+          avatarProps={{size: "md", src: user.avatar}}
+          description={
+            <Link isExternal href={user.url} size="sm">
+              @{user.username}
+            </Link>
+          }
+          name={user.name}
+        />
+        <div className="flex flex-col items-end gap-1">
+          <span className="text-tiny text-default-500">{user.role}</span>
+          <Chip color="success" size="sm" variant="flat">
+            {user.status}
+          </Chip>
+        </div>
+      </div>
+    </Checkbox>
+  );
+}\n- apps/docs/content/components/checkbox/custom-styles.ts (modified, 50 changes)\n  Patch: @@ -1,52 +1,4 @@
-const App = `import {Checkbox, Link, User, Chip, cn} from "@nextui-org/react";
-
-export default function App() {
-  const [isSelected, setIsSelected] = React.useState(false);
-
-  const user = {
-    name: "Junior Garcia",
-    avatar: "https://avatars.githubusercontent.com/u/30373425?v=4",
-    username: "jrgarciadev",
-    url: "https://x.com/jrgarciadev",
-    role: "Software Developer",
-    status: "Active",
-  }
-
-  return (
-    <Checkbox
-      aria-label={user.name}
-      classNames={{
-        base: cn(
-          "inline-flex w-full max-w-md bg-content1",
-          "hover:bg-content2 items-center justify-start",
-          "cursor-pointer rounded-lg gap-2 p-4 border-2 border-transparent",
-          "data-[selected=true]:border-primary",
-        ),
-        label: "w-full",
-      }}
-      isSelected={isSelected}
-      onValueChange={setIsSelected}
-    >
-      <div className="w-full flex justify-between gap-2">
-        <User
-          avatarProps={{size: "md", src: user.avatar}}
-          description={
-            <Link isExternal href={user.url} size="sm">
-              @{user.username}
-            </Link>
-          }
-          name={user.name}
-        />
-        <div className="flex flex-col items-end gap-1">
-          <span className="text-tiny text-default-500">{user.role}</span>
-          <Chip color="success" size="sm" variant="flat">
-            {user.status}
-          </Chip>
-        </div>
-      </div>
-    </Checkbox>
-  );
-}`;
+import App from "./custom-styles.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/checkbox/disabled.raw.jsx (added, 12 changes)\n  Patch: @@ -0,0 +1,12 @@
+import {Checkbox} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex gap-4">
+      <Checkbox isDisabled>Option</Checkbox>
+      <Checkbox defaultSelected isDisabled>
+        Option
+      </Checkbox>
+    </div>
+  );
+}\n- apps/docs/content/components/checkbox/disabled.ts (modified, 11 changes)\n  Patch: @@ -1,13 +1,4 @@
-const App = `import {Checkbox} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <div className="flex gap-4">
-      <Checkbox isDisabled>Option</Checkbox>
-      <Checkbox isDisabled defaultSelected>Option</Checkbox>
-    </div>  
-  );
-}`;
+import App from "./disabled.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/checkbox/indeterminate.raw.jsx (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+import {Checkbox} from "@nextui-org/react";
+
+export default function App() {
+  return <Checkbox isIndeterminate>Option</Checkbox>;
+}\n- apps/docs/content/components/checkbox/indeterminate.ts (modified, 8 changes)\n  Patch: @@ -1,10 +1,4 @@
-const App = `import {Checkbox} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <Checkbox isIndeterminate>Option</Checkbox>
-  );
-}`;
+import App from "./indeterminate.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/checkbox/line-through.raw.jsx (added, 9 changes)\n  Patch: @@ -0,0 +1,9 @@
+import {Checkbox} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <Checkbox defaultSelected lineThrough>
+      Option
+    </Checkbox>
+  );
+}\n- apps/docs/content/components/checkbox/line-through.ts (modified, 8 changes)\n  Patch: @@ -1,10 +1,4 @@
-const App = `import {Checkbox} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <Checkbox defaultSelected lineThrough>Option</Checkbox>
-  );
-}`;
+import App from "./line-through.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/checkbox/radius.raw.jsx (added, 23 changes)\n  Patch: @@ -0,0 +1,23 @@
+import {Checkbox} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex gap-4">
+      <Checkbox defaultSelected radius="full">
+        Full
+      </Checkbox>
+      <Checkbox defaultSelected radius="lg">
+        Large
+      </Checkbox>
+      <Checkbox defaultSelected radius="md">
+        Medium
+      </Checkbox>
+      <Checkbox defaultSelected radius="sm">
+        Small
+      </Checkbox>
+      <Checkbox defaultSelected radius="none">
+        None
+      </Checkbox>
+    </div>
+  );
+}\n- apps/docs/content/components/checkbox/radius.ts (modified, 14 changes)\n  Patch: @@ -1,16 +1,4 @@
-const App = `import {Checkbox} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <div className="flex gap-4">
-      <Checkbox defaultSelected radius="full">Full</Checkbox>
-      <Checkbox defaultSelected radius="lg">Large</Checkbox>
-      <Checkbox defaultSelected radius="md">Medium</Checkbox>
-      <Checkbox defaultSelected radius="sm">Small</Checkbox>
-      <Checkbox defaultSelected radius="none">None</Checkbox>
-    </div>  
-  );
-}`;
+import App from "./radius.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/checkbox/sizes.raw.jsx (added, 17 changes)\n  Patch: @@ -0,0 +1,17 @@
+import {Checkbox} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex gap-4">
+      <Checkbox defaultSelected size="sm">
+        Small
+      </Checkbox>
+      <Checkbox defaultSelected size="md">
+        Medium
+      </Checkbox>
+      <Checkbox defaultSelected size="lg">
+        Large
+      </Checkbox>
+    </div>
+  );
+}\n- apps/docs/content/components/checkbox/sizes.ts (modified, 12 changes)\n  Patch: @@ -1,14 +1,4 @@
-const App = `import {Checkbox} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <div className="flex gap-4">
-      <Checkbox defaultSelected size="sm">Small</Checkbox>
-      <Checkbox defaultSelected size="md">Medium</Checkbox>
-      <Checkbox defaultSelected size="lg">Large</Checkbox>
-    </div>  
-  );
-}`;
+import App from "./sizes.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n- apps/docs/content/components/checkbox/usage.raw.jsx (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+import {Checkbox} from "@nextui-org/react";
+
+export default function App() {
+  return <Checkbox defaultSelected>Option</Checkbox>;
+}\n- apps/docs/content/components/checkbox/usage.ts (modified, 8 changes)\n  Patch: @@ -1,10 +1,4 @@
-const App = `import {Checkbox} from "@nextui-org/react";
-
-export default function App() {
-  return (
-    <Checkbox defaultSelected>Option</Checkbox>
-  );
-}`;
+import App from "./usage.raw.jsx?raw";
 
 const react = {
   "/App.jsx": App,\n
Pull Request Number: 4206
Title: feat(listbox): virtualization
Base Branch: canary
Head Branch: feat/eng-1632-virtualization-for-listbox
Author: vinroger
URL: https://github.com/nextui-org/nextui/pull/4206
State: MERGED
Created At: 2024-12-01T16:52:44Z
Merged At: 2024-12-01T20:19:22Z
Participants: vinroger, jrgarciadev, wingkwong, winchesHe

Description:
Closes #3047
Closes #3189
üìù Description
This PR adds virtualization support for the Listbox component, enabling efficient handling of large datasets by rendering only visible items. The updates focus on improving performance and enhancing the usability of dropdowns with extensive data.
‚õ≥Ô∏è Current behavior (updates)
The current Listbox component renders all items in the DOM, leading to potential performance issues when handling large datasets.
üöÄ New behavior

Virtualization Support:

Efficient rendering of only visible items in the viewport with the isVirtualized property.
Configuration options through the virtualization prop, including:

maxListboxHeight: Set maximum listbox height.
itemHeight: Define fixed height for each listbox item.




Examples:

Virtualized dropdowns with 1,000 and 10,000 items.
Custom configurations for item height and listbox height.



üí£ Is this a breaking change (Yes/No):
No
üìù Additional Information
The virtualization implementation is based on the @tanstack/react-virtual library. This update also includes new documentation examples and stories to guide developers in using the enhanced Listbox component.

Summary by CodeRabbit
Release Notes


New Features

Introduced virtualization support for the Listbox and Menu components, enhancing performance when rendering large datasets.
Added new properties for the Listbox component: isVirtualized and virtualization for improved rendering control.
New React components for handling large datasets in the Listbox, capable of displaying up to 10,000 items efficiently.



Documentation

Updated documentation to include a new section on virtualization for the Listbox component, along with examples for handling large datasets.



Bug Fixes

Improved type safety and encapsulation in various components to prevent unintended usage of internal types.



Chores

Updated routes in documentation to reflect recent changes and enhancements.

Commits:
- fix: should not export list item internal variables type\n- feat: changeset\n- fix: type error\n- fix: code block type error\n- feat: virtualization feature, docs for listbox\n- chore: update routes.json\n- fix: fix code-demo for typecheck\n- Merge branch 'fix/intertype-should-not-expoort' into feat/eng-1632-virtualization-for-listbox\n- chore: rollback for files\n- Merge branch 'canary' of github.com:nextui-org/nextui into feat/eng-1632-virtualization-for-listbox\n- chore: props omitted in the component itself\n- fix: menu item types\n- fix: tupecheck\n

Labels:


Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-1632/virtualization-for-listbox">ENG-1632 Virtualization for Listbox</a></p>\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 30b62e262dad8652bc06bcba62de30b24aa7c221

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 17 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/dropdown     | Patch |
| @nextui-org/listbox      | Patch |
| @nextui-org/popover      | Patch |
| @nextui-org/modal        | Patch |
| @nextui-org/menu         | Patch |
| @nextui-org/theme        | Patch |
| @nextui-org/react        | Patch |
| @nextui-org/autocomplete | Patch |
| @nextui-org/select       | Patch |
| @nextui-org/date-picker  | Patch |
| @nextui-org/drawer       | Patch |
| @nextui-org/checkbox     | Patch |
| @nextui-org/date-input   | Patch |
| @nextui-org/form         | Patch |
| @nextui-org/input        | Patch |
| @nextui-org/radio        | Patch |
| @nextui-org/table        | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/feat/eng-1632-virtualization-for-listbox?filename=.changeset/angry-rice-promise.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Fdropdown%22%3A%20patch%0A%22%40nextui-org%2Flistbox%22%3A%20patch%0A%22%40nextui-org%2Fmenu%22%3A%20patch%0A%22%40nextui-org%2Fpopover%22%3A%20patch%0A---%0A%0Afeat(listbox)%3A%20virtualization%0A)

\n- vercel: [vc]: #6se7yUjSPZJox8XBZ49UQ86SvQm669VXUp0sVGBJU2o=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi82d0FHQzFOTVBvSzlpbUN6UkdVbWlVekxNYTU1IiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1mZWF0LWVuZy0xNjMyLXZpcnR1YWxpemF0aS05MTBjMmQtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1kb2NzLXYyLWdpdC1mZWF0LWVuZy0xNjMyLXZpcnR1YWxpemF0aS05MTBjMmQtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19LHsibmFtZSI6Im5leHR1aS1zdG9yeWJvb2stdjIiLCJyb290RGlyZWN0b3J5IjoicGFja2FnZXMvc3Rvcnlib29rIiwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi8yWGhYQ3d2TFlkQnVOU3BmbmkxWERaV0RoY3RzIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZlYXQtZW5nLTE2MzItdmlydHVhbC0wZDdlMTAtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZlYXQtZW5nLTE2MzItdmlydHVhbC0wZDdlMTAtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/6wAGC1NMPoK9imCzRGUmiUzLMa55)) | [Visit Preview](https://nextui-docs-v2-git-feat-eng-1632-virtualizati-910c2d-nextui-org.vercel.app) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-feat-eng-1632-virtualizati-910c2d-nextui-org.vercel.app?via=pr-comment-feedback-link) | Dec 1, 2024 8:19pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/2XhXCwvLYdBuNSpfni1XDZWDhcts)) | [Visit Preview](https://nextui-storybook-v2-git-feat-eng-1632-virtual-0d7e10-nextui-org.vercel.app) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-feat-eng-1632-virtual-0d7e10-nextui-org.vercel.app?via=pr-comment-feedback-link) | Dec 1, 2024 8:19pm |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
The pull request introduces enhancements to the Listbox component and related functionalities, focusing on virtualization support for improved performance when handling large datasets. New properties and components are added to facilitate this feature, including the integration of new React components and updates to the documentation. Additionally, type definitions are refined to enhance type safety and clarity across various components.

## Changes

| File                                                                                          | Change Summary                                                                                                   |
|-----------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|
| `apps/docs/content/components/listbox/index.ts`                                              | Added new imports `virtualization` and `virtualizationTenThousand` to `listboxContent`.                        |
| `apps/docs/content/components/listbox/virtualization-ten-thousand.raw.jsx`                   | Introduced a new component `App` for a virtualized listbox displaying 1000 items; added `generateItems` function. |
| `apps/docs/content/components/listbox/virtualization-ten-thousand.ts`                        | Created a new file exporting the `App` component from the raw JSX file.                                        |
| `apps/docs/content/components/listbox/virtualization.raw.jsx`                                 | Added a new component `App` for a virtualized listbox with 1000 items.                                          |
| `apps/docs/content/components/listbox/virtualization.ts`                                     | Created a new file exporting the `App` component from the raw JSX file.                                        |
| `apps/docs/content/docs/components/listbox.mdx`                                              | Updated documentation to include new virtualization features and properties.                                     |
| `packages/components/listbox/stories/listbox.stories.tsx`                                   | Added `LargeDatasetSchema` interface and `generateLargeDataset` function; created templates for large datasets.  |
| `apps/docs/config/routes.json`                                                                | Updated routes for documentation, marking several as `updated` and adding new posts.                           |
| `.changeset/ninety-mails-yell.md`                                                            | Adjusted internal variable types for encapsulation.                                                              |
| `apps/docs/components/docs/components/code-demo/react-live-demo.tsx`                         | Updated `ReactLiveDemoProps` to use `SandpackFiles` for file handling.                                         |
| `packages/components/listbox/src/use-listbox-item.ts`                                        | Enhanced type definitions by adding `MenuItemVariantProps`.                                                    |
| `packages/components/menu/src/menu.tsx`                                                      | Modified `MenuProps` to include all properties from `Props<T>`.                                               |
| `packages/components/menu/src/use-menu-item.ts`                                              | Improved type handling in `mapPropsVariants` function.                                                         |
| `packages/components/listbox/src/base/listbox-item-base.tsx`                                 | Updated `ListboxItemBaseProps` to omit specific properties.                                                    |
| `packages/components/listbox/src/listbox-item.tsx`                                           | Modified `ListboxItemProps` to omit certain properties from `UseListboxItemProps`.                             |
| `packages/components/menu/src/base/menu-item-base.tsx`                                       | Altered `MenuItemBaseProps` to omit specific properties.                                                       |
| `packages/components/menu/src/menu-item.tsx`                                                | Updated `MenuItemProps` to exclude certain properties from `UseMenuItemProps`.                                 |

## Assessment against linked issues

| Objective                                                                                     | Addressed | Explanation                               |
|-----------------------------------------------------------------------------------------------|-----------|-------------------------------------------|
| Implement virtualization for large datasets in Listbox component (#3189)                     | ‚úÖ        |                                           |
| Optimize Select and Autocomplete components for large options (#3047)                        | ‚ùå       | Changes focused primarily on Listbox.    |

## Possibly related PRs
- **#3119**: Addresses an issue with the `Listbox` component, which is directly connected to the changes made in the main PR that involves modifications to the `listboxContent` object and its properties.
- **#3762**: This PR fixes an issue with the Dropdown component, which is related to the overall functionality of dropdown-like components, including the Listbox, as they share similar interaction patterns and behaviors.
- **#4198**: This PR focuses on ensuring that `forwardRef` render functions correctly utilize the `ref` parameter, which is relevant to the Listbox and other components modified in the main PR, enhancing their integration and functionality.

## Suggested labels
`üëÄ Status: In Review`, `üìã Scope : Docs`

## Suggested reviewers
- wingkwong

<!-- walkthrough_end -->
<!-- This is an auto-generated comment: rate limited by coderabbit.ai -->

> [!WARNING]
> ## Rate limit exceeded
> 
> @jrgarciadev has exceeded the limit for the number of commits or files that can be reviewed per hour. Please wait **16 minutes and 31 seconds** before requesting another review.
> 
> <details>
> <summary>‚åõ How to resolve this issue?</summary>
> 
> After the wait time has elapsed, a review can be triggered using the `@coderabbitai review` command as a PR comment. Alternatively, push new commits to this PR.
> 
> We recommend that you space out your commits to avoid hitting the rate limit.
> 
> </details>
> 
> 
> <details>
> <summary>üö¶ How do rate limits work?</summary>
> 
> CodeRabbit enforces hourly rate limits for each developer per organization.
> 
> Our paid plans have higher rate limits than the trial, open-source and free plans. In all cases, we re-allow further reviews after a brief timeout.
> 
> Please see our [FAQ](https://docs.coderabbit.ai/faq) for further information.
> 
> </details>
> 
> <details>
> <summary>üì• Commits</summary>
> 
> Reviewing files that changed from the base of the PR and between 5e8281bdb29f38c93918e1e95564f8403debf349 and 30b62e262dad8652bc06bcba62de30b24aa7c221.
> 
> </details>

<!-- end of auto-generated comment: rate limited by coderabbit.ai -->




<!-- internal state start -->


<!--  -->

<!-- internal state end -->
<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- jrgarciadev: Thank you! @vinroger \n

Files Changed:
- .changeset/dull-coats-crash.md (added, 9 changes)\n  Patch: @@ -0,0 +1,9 @@
+---
+"@nextui-org/dropdown": patch
+"@nextui-org/listbox": patch
+"@nextui-org/popover": patch
+"@nextui-org/modal": patch
+"@nextui-org/menu": patch
+---
+
+Fix typecheck\n- .changeset/ninety-mails-yell.md (added, 6 changes)\n  Patch: @@ -0,0 +1,6 @@
+---
+"@nextui-org/menu": patch
+"@nextui-org/theme": patch
+---
+
+Fix should not export list item internal variables type\n- .changeset/ten-experts-happen.md (added, 7 changes)\n  Patch: @@ -0,0 +1,7 @@
+---
+"@nextui-org/listbox": patch
+"@nextui-org/menu": patch
+"@nextui-org/theme": patch
+---
+
+Virtualization support added to Listbox and Menu\n- apps/docs/components/docs/components/code-demo/react-live-demo.tsx (modified, 5 changes)\n  Patch: @@ -5,14 +5,15 @@ import * as Components from "@nextui-org/react";
 import * as intlDateUtils from "@internationalized/date";
 import * as reactAriaI18n from "@react-aria/i18n";
 import * as reactHookForm from "react-hook-form";
+import {SandpackFiles} from "@codesandbox/sandpack-react/types";
 
 import {BgGridContainer} from "@/components/bg-grid-container";
 import {GradientBox, GradientBoxProps} from "@/components/gradient-box";
 import {CopyButton} from "@/components/copy-button";
 
 export interface ReactLiveDemoProps {
   code: string;
-  files: string[];
+  files: SandpackFiles;
   noInline?: boolean;
   height?: string | number;
   isCentered?: boolean;
@@ -47,7 +48,7 @@ export const ReactLiveDemo: React.FC<ReactLiveDemoProps> = ({
         <div className="absolute top-[-28px] right-[-8px]">
           <CopyButton
             className="opacity-0 group-hover/code-demo:opacity-100 transition-opacity text-zinc-400"
-            value={files?.[DEFAULT_FILE]}
+            value={files?.[DEFAULT_FILE] as string}
           />
         </div>
       )}\n- apps/docs/config/routes.json (modified, 3 changes)\n  Patch: @@ -302,7 +302,8 @@
           "key": "listbox",
           "title": "Listbox",
           "keywords": "listbox, selection, option list, multiple choice",
-          "path": "/docs/components/listbox.mdx"
+          "path": "/docs/components/listbox.mdx",
+          "updated": true
         },
         {
           "key": "modal",\n- apps/docs/content/components/listbox/index.ts (modified, 4 changes)\n  Patch: @@ -9,6 +9,8 @@ import description from "./description";
 import sections from "./sections";
 import customStyles from "./custom-styles";
 import topContent from "./top-content";
+import virtualization from "./virtualization";
+import virtualizationTenThousand from "./virtualization-ten-thousand";
 
 export const listboxContent = {
   usage,
@@ -22,4 +24,6 @@ export const listboxContent = {
   sections,
   customStyles,
   topContent,
+  virtualization,
+  virtualizationTenThousand,
 };\n- apps/docs/content/components/listbox/virtualization-ten-thousand.raw.jsx (added, 57 changes)\n  Patch: @@ -0,0 +1,57 @@
+import {Listbox, ListboxItem} from "@nextui-org/react";
+
+const generateItems = (n) => {
+  const items = [
+    "Cat",
+    "Dog",
+    "Elephant",
+    "Lion",
+    "Tiger",
+    "Giraffe",
+    "Dolphin",
+    "Penguin",
+    "Zebra",
+    "Shark",
+    "Whale",
+    "Otter",
+    "Crocodile",
+  ];
+
+  const dataset = [];
+
+  for (let i = 0; i < n; i++) {
+    const item = items[i % items.length];
+
+    dataset.push({
+      label: `${item}${i}`,
+      value: `${item.toLowerCase()}${i}`,
+      description: "Sample description",
+    });
+  }
+
+  return dataset;
+};
+
+export default function App() {
+  const items = generateItems(1000);
+
+  return (
+    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+      <Listbox
+        isVirtualized
+        label={"Select from 10000 items"}
+        placeholder="Select..."
+        virtualization={{
+          maxListboxHeight: 400,
+          itemHeight: 40,
+        }}
+      >
+        {items.map((item, index) => (
+          <ListboxItem key={index} value={item.value}>
+            {item.label}
+          </ListboxItem>
+        ))}
+      </Listbox>
+    </div>
+  );
+}\n- apps/docs/content/components/listbox/virtualization-ten-thousand.ts (added, 9 changes)\n  Patch: @@ -0,0 +1,9 @@
+import App from "./virtualization-ten-thousand.raw.jsx?raw";
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/listbox/virtualization.raw.jsx (added, 56 changes)\n  Patch: @@ -0,0 +1,56 @@
+import {Listbox, ListboxItem} from "@nextui-org/react";
+const generateItems = (n) => {
+  const items = [
+    "Cat",
+    "Dog",
+    "Elephant",
+    "Lion",
+    "Tiger",
+    "Giraffe",
+    "Dolphin",
+    "Penguin",
+    "Zebra",
+    "Shark",
+    "Whale",
+    "Otter",
+    "Crocodile",
+  ];
+
+  const dataset = [];
+
+  for (let i = 0; i < n; i++) {
+    const item = items[i % items.length];
+
+    dataset.push({
+      label: `${item}${i}`,
+      value: `${item.toLowerCase()}${i}`,
+      description: "Sample description",
+    });
+  }
+
+  return dataset;
+};
+
+export default function App() {
+  const items = generateItems(1000);
+
+  return (
+    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+      <Listbox
+        isVirtualized
+        label={"Select from 1000 items"}
+        placeholder="Select..."
+        virtualization={{
+          maxListboxHeight: 400,
+          itemHeight: 40,
+        }}
+      >
+        {items.map((item, index) => (
+          <ListboxItem key={index} value={item.value}>
+            {item.label}
+          </ListboxItem>
+        ))}
+      </Listbox>
+    </div>
+  );
+}\n- apps/docs/content/components/listbox/virtualization.ts (added, 9 changes)\n  Patch: @@ -0,0 +1,9 @@
+import App from "./virtualization.raw.jsx?raw";
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/docs/components/listbox.mdx (modified, 28 changes)\n  Patch: @@ -151,6 +151,22 @@ function App() {
 }
 ```
 
+### Virtualization
+
+Select supports virtualization, which allows efficient rendering of large lists by only rendering items that are visible in the viewport. You can enable virtualization by setting the `isVirtualized` prop to `true`.
+
+<CodeDemo
+  title="Virtualization"
+  files={listboxContent.virtualization}
+/>
+
+> **Note**: The virtualization strategy is based on the [@tanstack/react-virtual](https://tanstack.com/virtual/latest) package, which provides efficient rendering of large lists by only rendering items that are visible in the viewport.
+#### Ten Thousand Items
+
+Here's an example of using virtualization with 10,000 items.
+
+<CodeDemo title="Ten Thousand Items" files={listboxContent.virtualizationTenThousand} />
+
 ## Slots
 
 Listbox has 3 components with slots the base one `Listbox`, `ListboxItem` and `ListboxSection` components.
@@ -328,6 +344,18 @@ You can customize the `Listbox` items style by using the `itemClasses` prop and
       type: "boolean",
       description: "Whether keyboard navigation is circular.",
       default: "false"
+    },   
+    {
+      attribute: "isVirtualized",
+      type: "boolean",
+      description: "Whether to enable virtualization.",
+      default: "false"
+    },
+    {
+      attribute: "virtualization",
+      type: "Record<\"maxListboxHeight\" & \"itemHeight\", number>",
+      description: "Configuration for virtualization, optimizing rendering for large datasets. Required if isVirtualized is set to true.",
+      default: "-",
     },
     {
       attribute: "hideEmptyContent",\n- packages/components/dropdown/src/dropdown-trigger.tsx (modified, 2 changes)\n  Patch: @@ -4,6 +4,8 @@ import {useDropdownContext} from "./dropdown-context";
 
 export interface DropdownTriggerProps {
   children?: React.ReactNode;
+  className?: string;
+  [key: string]: any;
 }
 
 /**\n- packages/components/listbox/src/base/listbox-item-base.tsx (modified, 2 changes)\n  Patch: @@ -90,7 +90,7 @@ interface Props<T extends object = {}> extends Omit<ItemProps<"li", T>, "childre
 }
 
 export type ListboxItemBaseProps<T extends object = {}> = Props<T> &
-  ListboxItemVariantProps &
+  Omit<ListboxItemVariantProps, "hasDescriptionTextChild" | "hasTitleTextChild"> &
   Omit<AriaOptionProps, "key"> &
   FocusableProps &
   PressEvents;\n- packages/components/listbox/src/listbox-item.tsx (modified, 3 changes)\n  Patch: @@ -3,7 +3,8 @@ import {useMemo, ReactNode} from "react";
 import {UseListboxItemProps, useListboxItem} from "./use-listbox-item";
 import {ListboxSelectedIcon} from "./listbox-selected-icon";
 
-export interface ListboxItemProps<T extends object = object> extends UseListboxItemProps<T> {}
+export interface ListboxItemProps<T extends object = object>
+  extends Omit<UseListboxItemProps<T>, "hasDescriptionTextChild" | "hasTitleTextChild"> {}
 
 /**
  * @internal\n- packages/components/listbox/src/use-listbox-item.ts (modified, 4 changes)\n  Patch: @@ -1,4 +1,5 @@
 import type {ListboxItemBaseProps} from "./base/listbox-item-base";
+import type {MenuItemVariantProps} from "@nextui-org/theme";
 
 import {useMemo, useRef, useCallback, Fragment} from "react";
 import {listboxItem} from "@nextui-org/theme";
@@ -24,7 +25,8 @@ interface Props<T extends object> extends ListboxItemBaseProps<T> {
 }
 
 export type UseListboxItemProps<T extends object> = Props<T> &
-  Omit<HTMLNextUIProps<"li">, keyof Props<T>>;
+  Omit<HTMLNextUIProps<"li">, keyof Props<T>> &
+  MenuItemVariantProps;
 
 export function useListboxItem<T extends object>(originalProps: UseListboxItemProps<T>) {
   const globalContext = useProviderContext();\n- packages/components/listbox/stories/listbox.stories.tsx (modified, 105 changes)\n  Patch: @@ -679,6 +679,59 @@ const CustomWithClassNamesTemplate = ({color, variant, disableAnimation, ...args
   );
 };
 
+interface LargeDatasetSchema {
+  label: string;
+  value: string;
+  description: string;
+}
+
+function generateLargeDataset(n: number): LargeDatasetSchema[] {
+  const dataset: LargeDatasetSchema[] = [];
+  const items = [
+    "Cat",
+    "Dog",
+    "Elephant",
+    "Lion",
+    "Tiger",
+    "Giraffe",
+    "Dolphin",
+    "Penguin",
+    "Zebra",
+    "Shark",
+    "Whale",
+    "Otter",
+    "Crocodile",
+  ];
+
+  for (let i = 0; i < n; i++) {
+    const item = items[i % items.length];
+
+    dataset.push({
+      label: `${item}${i}`,
+      value: `${item.toLowerCase()}${i}`,
+      description: "Sample description",
+    });
+  }
+
+  return dataset;
+}
+
+const LargeDatasetTemplate = (args: ListboxProps & {numItems: number}) => {
+  const largeDataset = generateLargeDataset(args.numItems);
+
+  return (
+    <div className="flex w-full max-w-full py-20 px-20">
+      <Listbox label={`Select from ${args.numItems} items`} {...args}>
+        {largeDataset.map((item, index) => (
+          <ListboxItem key={index} value={item.value}>
+            {item.label}
+          </ListboxItem>
+        ))}
+      </Listbox>
+    </div>
+  );
+};
+
 export const Default = {
   render: Template,
   args: {
@@ -782,3 +835,55 @@ export const CustomWithClassNames = {
     ...defaultProps,
   },
 };
+
+export const OneThousandList = {
+  render: LargeDatasetTemplate,
+  args: {
+    ...defaultProps,
+    numItems: 1000,
+    isVirtualized: true,
+    virtualization: {
+      maxListboxHeight: 400,
+      itemHeight: 20,
+    },
+  },
+};
+
+export const TenThousandList = {
+  render: LargeDatasetTemplate,
+  args: {
+    ...defaultProps,
+    numItems: 10000,
+    isVirtualized: true,
+    virtualization: {
+      maxListboxHeight: 400,
+      itemHeight: 20,
+    },
+  },
+};
+
+export const CustomMaxListboxHeight = {
+  render: LargeDatasetTemplate,
+  args: {
+    ...defaultProps,
+    numItems: 1000,
+    isVirtualized: true,
+    virtualization: {
+      maxListboxHeight: 600,
+      itemHeight: 20,
+    },
+  },
+};
+
+export const CustomItemHeight = {
+  render: LargeDatasetTemplate,
+  args: {
+    ...defaultProps,
+    numItems: 1000,
+    isVirtualized: true,
+    virtualization: {
+      itemHeight: 40,
+      maxListboxHeight: 600,
+    },
+  },
+};\n- packages/components/menu/src/base/menu-item-base.tsx (modified, 2 changes)\n  Patch: @@ -89,7 +89,7 @@ interface Props<T extends object = {}> extends Omit<ItemProps<"li", T>, "childre
 }
 
 export type MenuItemBaseProps<T extends object = {}> = Props<T> &
-  MenuItemVariantProps &
+  Omit<MenuItemVariantProps, "hasDescriptionTextChild" | "hasTitleTextChild"> &
   AriaMenuItemProps &
   FocusableProps &
   PressEvents;\n- packages/components/menu/src/menu-item.tsx (modified, 3 changes)\n  Patch: @@ -3,7 +3,8 @@ import {useMemo, ReactNode} from "react";
 import {UseMenuItemProps, useMenuItem} from "./use-menu-item";
 import {MenuSelectedIcon} from "./menu-selected-icon";
 
-export interface MenuItemProps<T extends object = object> extends UseMenuItemProps<T> {}
+export interface MenuItemProps<T extends object = object>
+  extends Omit<UseMenuItemProps<T>, "hasDescriptionTextChild" | "hasTitleTextChild"> {}
 
 /**
  * @internal\n- packages/components/menu/src/menu.tsx (modified, 5 changes)\n  Patch: @@ -74,10 +74,7 @@ function Menu<T extends object>(props: Props<T>, ref: ForwardedRef<HTMLUListElem
   );
 }
 
-export type MenuProps<T extends object = object> = Omit<
-  Props<T>,
-  "hasChildItems" | "hasTitleTextChild" | "hasDescriptionTextChild"
-> & {ref?: Ref<HTMLElement>};
+export type MenuProps<T extends object = object> = Props<T> & {ref?: Ref<HTMLElement>};
 
 // forwardRef doesn't support generic parameters, so cast the result to the correct type
 export default forwardRef(Menu) as <T extends object>(props: MenuProps<T>) => ReactElement;\n- packages/components/menu/src/use-menu-item.ts (modified, 4 changes)\n  Patch: @@ -1,4 +1,5 @@
 import type {MenuItemBaseProps} from "./base/menu-item-base";
+import type {MenuItemVariantProps} from "@nextui-org/theme";
 import type {Node} from "@react-types/shared";
 
 import {useMemo, useRef, useCallback, Fragment} from "react";
@@ -24,7 +25,8 @@ interface Props<T extends object> extends MenuItemBaseProps<T> {
 }
 
 export type UseMenuItemProps<T extends object> = Props<T> &
-  Omit<HTMLNextUIProps<"li">, keyof Props<T>>;
+  Omit<HTMLNextUIProps<"li">, keyof Props<T>> &
+  MenuItemVariantProps;
 
 export function useMenuItem<T extends object>(originalProps: UseMenuItemProps<T>) {
   const globalContext = useProviderContext();\n- packages/components/popover/src/popover-trigger.tsx (modified, 2 changes)\n  Patch: @@ -8,6 +8,8 @@ import {usePopoverContext} from "./popover-context";
 
 export interface PopoverTriggerProps {
   children?: React.ReactNode;
+  className?: string;
+  [key: string]: any;
 }
 
 /**\n- pnpm-lock.yaml (modified, 2 changes)\n  Patch: @@ -22124,7 +22124,7 @@ snapshots:
       doctrine: 2.1.0
       eslint: 7.32.0
       eslint-import-resolver-node: 0.3.9
-      eslint-module-utils: 2.12.0(@typescript-eslint/parser@5.62.0(eslint@7.32.0)(typescript@4.9.5))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@2.7.1(eslint-plugin-import@2.31.0)(eslint@7.32.0))(eslint@7.32.0)
+      eslint-module-utils: 2.12.0(@typescript-eslint/parser@5.62.0(eslint@7.32.0)(typescript@5.6.3))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.6.3(@typescript-eslint/parser@5.62.0(eslint@7.32.0)(typescript@5.6.3))(eslint-import-resolver-node@0.3.9)(eslint-plugin-import@2.31.0)(eslint@7.32.0))(eslint@7.32.0)
       hasown: 2.0.2
       is-core-module: 2.15.1
       is-glob: 4.0.3\n
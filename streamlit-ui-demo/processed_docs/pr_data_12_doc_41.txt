Pull Request Number: 2744
Title: refactor(calendar): cell tab index fixed, width property added
Base Branch: main
Head Branch: fix/calendar-tab-index
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/2744
State: MERGED
Created At: 2024-04-16T19:28:14Z
Merged At: 2024-04-16T19:39:20Z
Participants: jrgarciadev

Description:
Closes # 
üìù Description


New Features

Added a calendarWidth property to customize the width of calendar components, enhancing layout flexibility.
Introduced an inert attribute in calendar components to improve accessibility based on header state.



Refactor

Updated calendar cell components to use span instead of button, affecting cell content rendering.
Simplified style handling in date picker components by streamlining width properties.



Documentation

Updated documentation to reflect new properties and usage of calendarWidth in calendar components.



‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No): No

üìù Additional Information

Summary by CodeRabbit


New Features

Enhanced calendar components with a calendarWidth property for customizable layout.
Improved accessibility by introducing an inert attribute in calendar components based on header state.



Refactor

Updated calendar cell components to use span for improved rendering.
Streamlined width properties in date picker components for simplified style handling.



Documentation

Updated documentation to reflect usage of new properties like calendarWidth in calendar components.

Commits:
- refactor(calendar): cell tab index fixed, width property added\n- chore(date-picker): remove needless omit\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: d48cc6494ed88d9d4d015e05dfd5a9877fe98d8c

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 4 packages</summary>

  | Name                    | Type  |
| ----------------------- | ----- |
| @nextui-org/calendar    | Patch |
| @nextui-org/date-picker | Patch |
| @nextui-org/theme       | Patch |
| @nextui-org/react       | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/calendar-tab-index?filename=.changeset/swift-frogs-beam.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Fcalendar%22%3A%20patch%0A%22%40nextui-org%2Fdate-picker%22%3A%20patch%0A%22%40nextui-org%2Ftheme%22%3A%20patch%0A---%0A%0Arefactor(calendar)%3A%20cell%20tab%20index%20fixed%2C%20width%20property%20added%0A)

\n- vercel: [vc]: #E+6SbA9S8xua02GpMjFs61L1y7qcgH7x9uRxyzawh3Y=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi85cEMzQjJRM2tpY0dLSlI3YVVWVWdNdEJ0ZjVnIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtY2FsZW5kYXItdGFiLWluZGV4LW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktZG9jcy12Mi1naXQtZml4LWNhbGVuZGFyLXRhYi1pbmRleC1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX0seyJuYW1lIjoibmV4dHVpLXN0b3J5Ym9vay12MiIsInJvb3REaXJlY3RvcnkiOiJwYWNrYWdlcy9zdG9yeWJvb2siLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktc3Rvcnlib29rLXYyL0RNWmJKcU1GbzVkUHdmaVE2SEZlN1JtblU0RmsiLCJwcmV2aWV3VXJsIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LWNhbGVuZGFyLXRhYi1pbmRleC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LWNhbGVuZGFyLXRhYi1pbmRleC1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/9pC3B2Q3kicGKJR7aUVUgMtBtf5g)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-calendar-tab-index-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-calendar-tab-index-nextui-org.vercel.app?via=pr-comment-feedback-link) | Apr 16, 2024 7:40pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/DMZbJqMFo5dPwfiQ6HFe7RmnU4Fk)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-calendar-tab-index-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-calendar-tab-index-nextui-org.vercel.app?via=pr-comment-feedback-link) | Apr 16, 2024 7:40pm |


\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
The recent updates aim to enhance the flexibility and customization of calendar components in a Next.js UI library. Changes include refactoring calendar cell elements, introducing a `calendarWidth` property for dynamic width adjustment, and simplifying handling of multiple visible months. These modifications improve the layout, styling, and functionality of calendar and date picker components across applications.

## Changes

| File Path                                           | Change Summary                                                                                      |
|-----------------------------------------------------|-----------------------------------------------------------------------------------------------------|
| `.changeset/tall-buttons-jam.md`                    | Introduced changes to UI components including calendar and date picker.                             |
| `apps/docs/content/docs/components/...`             | Added `calendarWidth` property documentation for calendar components.                               |
| `packages/components/calendar/src/...`              | Refactored calendar components, added `calendarWidth` and `inert` attributes, updated element types.|
| `packages/components/date-picker/src/...`           | Streamlined `useDatePicker` functions, removed unnecessary dependencies, added `calendarWidth`.     |
| `packages/core/theme/src/components/...`            | Adjusted width calculations and removed variant sections for calendar and date picker themes.        |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->
<!--


.changeset/tall-buttons-jam.md: The new file introduces changes related to the Next.js UI components, specifically the calendar, date picker, and theme modules. The update includes a refactor of the calendar cell tab index, addition of a default width for the calendar component, adjustments to the width calculation for the calendar component based on visible months, impacting layout and styling.

---

apps/docs/content/docs/components/calendar.mdx: The change introduces a new `calendarWidth` property to customize the width of the calendar component based on the number of visible months, enhancing the flexibility of the calendar layout.

---

apps/docs/content/docs/components/range-calendar.mdx: Added a new property `calendarWidth` to specify the width of the calendar component.

---

packages/components/calendar/src/calendar-cell.tsx: Replaced a `button` element with a `span` element within the `CalendarCell` component, affecting the rendering of the cell content.

---

packages/components/calendar/src/calendar-month.tsx: Added a new attribute `inert` conditionally based on the value of `isHeaderExpanded` in the `CalendarMonth` function.

---

packages/components/calendar/src/calendar-picker.tsx: Added a new attribute `inert` with a conditional value based on `isHeaderExpanded` in the `CalendarPicker` function.

---

packages/components/calendar/src/use-calendar-base.ts: Changes include addition of `calendarWidth` property in the `Props` interface, initialization of `calendarWidth` in `useCalendarBase` function, addition of `hasMultipleMonths` variable based on `visibleMonths`, and addition of `baseProps` object with custom CSS properties.

---

packages/components/calendar/src/use-calendar.ts: Added a new parameter `baseProps` to the `useCalendar` function signature, now spread into the returned object in the `getBaseCalendarProps` function.

---

packages/components/calendar/src/use-range-calendar.ts: Added a new parameter `baseProps` to the `useRangeCalendar` function signature, spread into the returned `CalendarBaseProps` object.

---

packages/components/date-picker/src/date-picker.tsx: The change in functionality involves modifying the inheritance structure of the `Props` interface in `date-picker.tsx`, consolidating it with `UseDatePickerProps` by removing the exclusion of `"hasMultipleMonths"`.

---

packages/components/date-picker/src/date-range-picker.tsx: In the `date-range-picker.tsx` file, the `Props` interface declaration has been modified to extend `UseDateRangePickerProps<T>` directly instead of using `Omit` to exclude `"hasMultipleMonths"`.

---

packages/core/theme/src/components/calendar.ts: Adjusted the width calculation for the calendar component based on visible months, impacting layout and styling.

---

packages/core/theme/src/components/date-picker.ts: Removed the `variants` and `defaultVariants` sections related to `hasMultipleMonths` in the `datePicker` component, affecting the control flow and logic related to displaying multiple months in the calendar.

-->
<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: short summary by coderabbit.ai -->
<!--


### PR Objectives

This pull request, numbered 2744 and titled "refactor(calendar): cell tab index fixed, width property added," focuses on enhancements to the calendar component within a UI library. The main objectives of the PR include:

1. **Fixing the Calendar Cell Tab Index**: The tabIndex attribute within the calendar cells has been adjusted to improve accessibility and interaction.

2. **Introducing Calendar Width Property**: A new property, `calendarWidth`, has been introduced to manage the width of the calendar component directly. This change aims to make the calendar width independent of the DatePicker styles, thereby enhancing the flexibility and customization of the calendar's appearance based on the number of visible months.

The PR does not explicitly mention any linked GitHub issues that it closes, but it implies a general enhancement in the usability and customization of the calendar component.

### AI-Generated Summary of Changes

The pull request introduces several key changes across multiple files, primarily focused on enhancing the calendar and date picker components:

1. **Calendar Component Enhancements**:
   - Addition of a `calendarWidth` property across various calendar-related components for dynamic width adjustment based on visible months.
   - Fixed tabIndex for calendar cells to improve accessibility.
   - Replaced `button` elements with `span` elements in `CalendarCell` component for rendering cell content.
   - Conditional addition of `inert` attribute in `CalendarMonth` and `CalendarPicker` components based on `isHeaderExpanded` state.

2. **DatePicker Component Simplification**:
   - Simplification of `useDatePickerBase`, `useDatePicker`, and `useDateRangePicker` functions by removing logic related to `hasMultipleMonths`.
   
3. **Theme Adjustments**:
   - Modified width calculation based on visible months in calendar and date picker components.
   - Removal of variants related to displaying multiple months in the date picker component.

These changes collectively aim to enhance modularity, customization, and user interaction within the UI library's calendar and date picker components.

-->
<!-- end of auto-generated comment: short summary by coderabbit.ai -->

---

<details>

<summary>Recent Review Details</summary>

**Configuration used: .coderabbit.yaml**

<details>
<summary>Commits</summary>
Files that changed from the base of the PR and between 3103d77a45f80733e8d8d0fbfeefceabe1b18c0c and d48cc6494ed88d9d4d015e05dfd5a9877fe98d8c.
</details>


<details>
<summary>Files selected for processing (2)</summary>

* packages/components/date-picker/src/date-picker.tsx (1 hunks)
* packages/components/date-picker/src/date-range-picker.tsx (1 hunks)

</details>







<details><summary>Additional comments not posted (2)</summary><blockquote>
<details><summary>packages/components/date-picker/src/date-picker.tsx (1)</summary><blockquote>

`15-15`: Simplification of the `Props` interface by directly extending `UseDatePickerProps` enhances clarity and maintainability.

</blockquote></details>
<details><summary>packages/components/date-picker/src/date-range-picker.tsx (1)</summary><blockquote>

`16-16`: Simplification of the `Props` interface by directly extending `UseDateRangePickerProps` enhances clarity and maintainability.

</blockquote></details></blockquote></details>



</details><!-- commit_ids_reviewed_start -->

<!-- 3103d77a45f80733e8d8d0fbfeefceabe1b18c0c -->
<!-- d48cc6494ed88d9d4d015e05dfd5a9877fe98d8c -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/tall-buttons-jam.md (added, 7 changes)\n  Patch: @@ -0,0 +1,7 @@
+---
+"@nextui-org/calendar": patch
+"@nextui-org/date-picker": patch
+"@nextui-org/theme": patch
+---
+
+Refactor calendar cell tab index, add calendar default width\n- apps/docs/content/docs/components/calendar.mdx (modified, 4 changes)\n  Patch: @@ -23,11 +23,10 @@ A calendar consists of a grouping element containing one or more date grids (e.g
     npm: "npm install @nextui-org/calendar",
     yarn: "yarn add @nextui-org/calendar",
     pnpm: "pnpm add @nextui-org/calendar",
-    bun: "bun add @nextui-org/calendar"
+    bun: "bun add @nextui-org/calendar",
   }}
 />
 
-
 ## Import
 
 <ImportTabs
@@ -209,6 +208,7 @@ Here's the example to customize `topContent` and `bottomContent` to have some pr
 | visibleMonths           | `number`                                                                                                                                                                                                                                                                                                                                                                                      | The number of months to display at once. Up to 3 months are supported. Passing a number greater than 1 will disable the `showMonthAndYearPickers` prop                                    | `1`                 |
 | focusedValue            | `DateValue`                                                                                                                                                                                                                                                                                                                                                                                   | Controls the currently focused date within the calendar.                                                                                                                                  | -                   |
 | defaultFocusedValue     | `DateValue`                                                                                                                                                                                                                                                                                                                                                                                   | The date that is focused when the calendar first mounts (uncountrolled).                                                                                                                  | -                   |
+| calendarWidth           | `number` \| `string`                                                                                                                                                                                                                                                                                                                                                                          | The width to be applied to the calendar component. This value is multiplied by the `visibleMonths` number to determine the total width of the calendar.                                   | `256`               |
 | pageBehavior            | `single` \| `visible`                                                                                                                                                                                                                                                                                                                                                                         | Controls the behavior of paging. Pagination either works by advancing the visible page by visibleDuration (default) or one unit of visibleDuration.                                       | `visible`           |
 | weekdayStyle            | `narrow` \|`short` \| `long` \| `undefined`                                                                                                                                                                                                                                                                                                                                                   | The style of weekday names to display in the calendar grid header, e.g. single letter, abbreviation, or full day name.                                                                    | `narrow`            |
 | showMonthAndYearPickers | `boolean`                                                                                                                                                                                                                                                                                                                                                                                     | Whether the label should be crossed out.                                                                                                                                                  | `false`             |\n- apps/docs/content/docs/components/range-calendar.mdx (modified, 3 changes)\n  Patch: @@ -23,7 +23,7 @@ A range calendar consists of a grouping element containing one or more date grid
     npm: "npm install @nextui-org/calendar",
     yarn: "yarn add @nextui-org/calendar",
     pnpm: "pnpm add @nextui-org/calendar",
-    bun: "bun add @nextui-org/calendar"
+    bun: "bun add @nextui-org/calendar",
   }}
 />
 
@@ -210,6 +210,7 @@ Here's the example to customize `topContent` and `bottomContent` to have some pr
 | visibleMonths             | `number`                                                                                                                                                                                                                                                                                                                                                                                      | The number of months to display at once. Up to 3 months are supported. Passing a number greater than 1 will disable the `showMonthAndYearPickers` prop                                    | `1`                               |     |
 | focusedValue              | `DateValue`                                                                                                                                                                                                                                                                                                                                                                                   | Controls the currently focused date within the calendar.                                                                                                                                  | -                                 |     |
 | defaultFocusedValue       | `DateValue`                                                                                                                                                                                                                                                                                                                                                                                   | The date that is focused when the calendar first mounts (uncountrolled).                                                                                                                  | -                                 |     |
+| calendarWidth             | `number` \| `string`                                                                                                                                                                                                                                                                                                                                                                          | The width to be applied to the calendar component. This value is multiplied by the `visibleMonths` number to determine the total width of the calendar.                                   | `256`                             |
 | pageBehavior              | `PageBehavior`                                                                                                                                                                                                                                                                                                                                                                                | Controls the behavior of paging. Pagination either works by advancing the visible page by visibleDuration (default) or one unit of visibleDuration.                                       | `visible`                         |     |
 | weekdayStyle              | `"narrow" \|"short" \| "long" \| undefined`                                                                                                                                                                                                                                                                                                                                                   | The style of weekday names to display in the calendar grid header, e.g. single letter, abbreviation, or full day name.                                                                    | `narrow`                          |     |
 | allowsNonContiguousRanges | `boolean`                                                                                                                                                                                                                                                                                                                                                                                     | When combined with `isDateUnavailable`, determines whether non-contiguous ranges, i.e. ranges containing unavailable dates, may be selected.                                              | `false`                           |     |\n- packages/components/calendar/src/calendar-cell.tsx (modified, 5 changes)\n  Patch: @@ -69,7 +69,7 @@ export function CalendarCell(originalProps: CalendarCellProps) {
 
   return (
     <td className={slots?.cell({class: classNames?.cell})} data-slot="cell" {...cellProps}>
-      <button
+      <span
         {...mergeProps(buttonProps, hoverProps, focusProps)}
         ref={ref}
         className={slots?.cellButton({class: classNames?.cellButton})}
@@ -88,10 +88,9 @@ export function CalendarCell(originalProps: CalendarCellProps) {
         data-selection-start={dataAttr(isSelectionStart)}
         data-today={dataAttr(isToday(props.date, state.timeZone))}
         data-unavailable={dataAttr(isUnavailable)}
-        tabIndex={isDisabled ? -1 : 0}
       >
         <span>{formattedDate}</span>
-      </button>
+      </span>
     </td>
   );
 }\n- packages/components/calendar/src/calendar-month.tsx (modified, 3 changes)\n  Patch: @@ -63,6 +63,9 @@ export function CalendarMonth(props: CalendarMonthProps) {
       key={weekIndex}
       className={slots?.gridBodyRow({class: classNames?.gridBodyRow})}
       data-slot="grid-body-row"
+      // makes the browser ignore the element and its children when tabbing
+      // @ts-ignore
+      inert={isHeaderExpanded ? true : undefined}
     >
       {state
         .getDatesInWeek(weekIndex, startDate)\n- packages/components/calendar/src/calendar-picker.tsx (modified, 3 changes)\n  Patch: @@ -65,6 +65,9 @@ export function CalendarPicker(props: CalendarPickerProps) {
         class: classNames?.pickerWrapper,
       })}
       data-slot="picker-wrapper"
+      // makes the browser ignore the element and its children when tabbing
+      // @ts-ignore
+      inert={isHeaderExpanded ? true : undefined}
     >
       <div
         ref={highlightRef}\n- packages/components/calendar/src/use-calendar-base.ts (modified, 22 changes)\n  Patch: @@ -16,7 +16,7 @@ import {calendar} from "@nextui-org/theme";
 import {useControlledState} from "@react-stately/utils";
 import {ReactRef, useDOMRef} from "@nextui-org/react-utils";
 import {useLocale} from "@react-aria/i18n";
-import {clamp, objectToDeps} from "@nextui-org/shared-utils";
+import {clamp, dataAttr, objectToDeps} from "@nextui-org/shared-utils";
 import {mergeProps} from "@react-aria/utils";
 import {useProviderContext} from "@nextui-org/system";
 
@@ -42,6 +42,13 @@ interface Props extends NextUIBaseProps {
    * @default 1
    */
   visibleMonths?: number;
+  /**
+   * The width to be applied to the calendar component. This value is multiplied by the number
+   * of visible months to determine the total width of the calendar.
+   *
+   * @default 256
+   */
+  calendarWidth?: number | string;
   /**
    * Props for the navigation button, prev button and next button.
    */
@@ -185,6 +192,7 @@ export function useCalendarBase(originalProps: UseCalendarBasePropsComplete) {
     topContent,
     bottomContent,
     showHelper = true,
+    calendarWidth = 256,
     visibleMonths: visibleMonthsProp = 1,
     weekdayStyle = "narrow",
     navButtonProps = {},
@@ -229,6 +237,7 @@ export function useCalendarBase(originalProps: UseCalendarBasePropsComplete) {
   );
 
   const visibleDuration = useMemo(() => ({months: visibleMonths}), [visibleMonths]);
+  const hasMultipleMonths = visibleMonths > 1;
   const shouldFilterDOMProps = typeof Component === "string";
 
   const {locale} = useLocale();
@@ -256,6 +265,16 @@ export function useCalendarBase(originalProps: UseCalendarBasePropsComplete) {
     ...navButtonProps,
   };
 
+  const baseProps = {
+    "data-slot": "base",
+    "data-has-multiple-months": dataAttr(hasMultipleMonths),
+    style: {
+      // @ts-ignore
+      "--visible-months": visibleMonths,
+      "--calendar-width": calendarWidth,
+    } as React.CSSProperties,
+  };
+
   const getPrevButtonProps = (props = {}) => {
     return {
       "data-slot": "prev-button",
@@ -290,6 +309,7 @@ export function useCalendarBase(originalProps: UseCalendarBasePropsComplete) {
     locale,
     minValue,
     maxValue,
+    baseProps,
     showHelper,
     weekdayStyle,
     visibleMonths,\n- packages/components/calendar/src/use-calendar.ts (modified, 2 changes)\n  Patch: @@ -38,6 +38,7 @@ export function useCalendar<T extends DateValue>({
     showHelper,
     weekdayStyle,
     visibleDuration,
+    baseProps,
     shouldFilterDOMProps,
     isHeaderExpanded,
     visibleMonths,
@@ -81,6 +82,7 @@ export function useCalendar<T extends DateValue>({
 
   const getBaseCalendarProps = (props = {}): CalendarBaseProps => {
     return {
+      ...baseProps,
       Component,
       showHelper,
       topContent,\n- packages/components/calendar/src/use-range-calendar.ts (modified, 2 changes)\n  Patch: @@ -40,6 +40,7 @@ export function useRangeCalendar<T extends DateValue>({
     isHeaderExpanded,
     visibleMonths,
     createCalendar: createCalendarProp,
+    baseProps,
     getPrevButtonProps,
     getNextButtonProps,
     getErrorMessageProps,
@@ -73,6 +74,7 @@ export function useRangeCalendar<T extends DateValue>({
 
   const getBaseCalendarProps = (props = {}): CalendarBaseProps => {
     return {
+      ...baseProps,
       Component,
       showHelper,
       topContent,\n- packages/components/date-picker/src/date-picker.tsx (modified, 3 changes)\n  Patch: @@ -12,8 +12,7 @@ import {CalendarBoldIcon} from "@nextui-org/shared-icons";
 
 import {UseDatePickerProps, useDatePicker} from "./use-date-picker";
 
-export interface Props<T extends DateValue>
-  extends Omit<UseDatePickerProps<T>, "hasMultipleMonths"> {}
+export interface Props<T extends DateValue> extends UseDatePickerProps<T> {}
 
 function DatePicker<T extends DateValue>(props: Props<T>, ref: ForwardedRef<HTMLDivElement>) {
   const {\n- packages/components/date-picker/src/date-range-picker.tsx (modified, 3 changes)\n  Patch: @@ -13,8 +13,7 @@ import {CalendarBoldIcon} from "@nextui-org/shared-icons";
 import DateRangePickerField from "./date-range-picker-field";
 import {UseDateRangePickerProps, useDateRangePicker} from "./use-date-range-picker";
 
-export interface Props<T extends DateValue>
-  extends Omit<UseDateRangePickerProps<T>, "hasMultipleMonths"> {}
+export interface Props<T extends DateValue> extends UseDateRangePickerProps<T> {}
 
 function DateRangePicker<T extends DateValue>(props: Props<T>, ref: ForwardedRef<HTMLDivElement>) {
   const {\n- packages/components/date-picker/src/use-date-picker-base.ts (modified, 12 changes)\n  Patch: @@ -236,18 +236,8 @@ export function useDatePickerBase<T extends DateValue>(originalProps: UseDatePic
 
   const calendarProps = {
     ...slotsProps.calendarProps,
+    calendarWidth,
     "data-slot": "calendar",
-    "data-has-multiple-months": dataAttr(hasMultipleMonths),
-    style: mergeProps(
-      hasMultipleMonths
-        ? {
-            // @ts-ignore
-            "--visible-months": visibleMonths,
-          }
-        : {},
-      {"--calendar-width": `${calendarWidth}px`},
-      slotsProps.calendarProps.style,
-    ),
   } as CalendarProps;
 
   const selectorButtonProps = {\n- packages/components/date-picker/src/use-date-picker.ts (modified, 4 changes)\n  Patch: @@ -59,7 +59,6 @@ export function useDatePicker<T extends DateValue>({
     endContent,
     selectorIcon,
     createCalendar,
-    hasMultipleMonths,
     isCalendarHeaderExpanded,
     disableAnimation,
     CalendarTopContent,
@@ -88,10 +87,9 @@ export function useDatePicker<T extends DateValue>({
     () =>
       datePicker({
         ...variantProps,
-        hasMultipleMonths,
         className,
       }),
-    [objectToDeps(variantProps), hasMultipleMonths, className],
+    [objectToDeps(variantProps), className],
   );
 
   let {\n- packages/components/date-picker/src/use-date-range-picker.ts (modified, 5 changes)\n  Patch: @@ -116,10 +116,9 @@ export function useDateRangePicker<T extends DateValue>({
     () =>
       dateRangePicker({
         ...variantProps,
-        hasMultipleMonths,
         className,
       }),
-    [objectToDeps(variantProps), hasMultipleMonths, className],
+    [objectToDeps(variantProps), className],
   );
 
   // Time field values
@@ -258,7 +257,7 @@ export function useDateRangePicker<T extends DateValue>({
         labelPlacement,
         className,
       }),
-    [objectToDeps(variantProps), hasMultipleMonths, className],
+    [objectToDeps(variantProps), className],
   );
 
   const getStartDateInputProps = (props: DOMAttributes = {}) => {\n- packages/core/theme/src/components/calendar.ts (modified, 3 changes)\n  Patch: @@ -8,6 +8,7 @@ const calendar = tv({
     base: [
       "relative w-fit max-w-full shadow-small inline-block overflow-y-hidden",
       "rounded-large overflow-x-auto bg-default-50 dark:bg-background",
+      "w-[calc(var(--visible-months)_*_var(--calendar-width))]",
     ],
     prevButton: [],
     nextButton: [],
@@ -22,7 +23,7 @@ const calendar = tv({
     ],
     header: "flex w-full items-center justify-center gap-2 z-10",
     title: "text-default-500 text-small font-medium",
-    content: "w-fit",
+    content: "w-[calc(var(--visible-months)_*_var(--calendar-width))]",
     gridWrapper: "flex max-w-full overflow-hidden pb-2 h-auto relative",
     grid: "w-full border-collapse z-0",
     gridHeader: "bg-content1 shadow-[0px_20px_20px_0px_rgb(0_0_0/0.05)]",\n- packages/core/theme/src/components/date-picker.ts (modified, 13 changes)\n  Patch: @@ -18,19 +18,6 @@ const datePicker = tv({
     timeInputLabel: "font-medium",
     timeInput: "px-5 pb-4 flex-wrap gap-x-6",
   },
-  variants: {
-    // @internal
-    hasMultipleMonths: {
-      true: {
-        calendar: "w-[calc(var(--visible-months)_*_var(--calendar-width))]",
-        calendarContent: "w-[calc(var(--visible-months)_*_var(--calendar-width))]",
-      },
-      false: {},
-    },
-  },
-  defaultVariants: {
-    hasMultipleMonths: false,
-  },
 });
 
 const dateRangePicker = tv({\n
Pull Request Number: 3177
Title: fix(select): add missing data-invalid in select and add missing data attributes in docs
Base Branch: canary
Head Branch: fix/eng-936
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/3177
State: MERGED
Created At: 2024-06-04T13:59:50Z
Merged At: 2024-06-07T00:35:59Z
Participants: wingkwong, jrgarciadev

Description:
Closes #3149
üìù Description
as titled
‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit


New Features

Introduced new data attributes (data-has-value, data-has-label, data-has-helper, data-invalid) to the select component to indicate various states based on specific props.



Bug Fixes

Added the missing data-invalid attribute to improve the validation state indication of the select component.

Commits:
- fix(select): add missing data-invalid attribute\n- chore(docs): add missing data attributes for select base\n

Labels:


Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-936/[feature-request]-add-data-invalid-attribute-to-select-component">ENG-936 [Feature Request] add data-invalid attribute to select component</a></p>\n- vercel: [vc]: #Rk4eaSsWhH3ghQn9Qs406MqXSAABnA9rcLG98moBxGM=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi85R0UxTUJCdHhWMjg3Vmp0ZWVhZVVkSEtMWUdzIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtZW5nLTkzNi1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWZpeC1lbmctOTM2LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvNG01UHBRNHpDZHlxRzllRGZybnkzQ3pndlVEbyIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1maXgtZW5nLTkzNi1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LWVuZy05MzYtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/9GE1MBBtxV287VjteeaeUdHKLYGs)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-936-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-936-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 4, 2024 2:01pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/4m5PpQ4zCdyqG9eDfrny3CzgvUDo)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-936-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-936-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 4, 2024 2:01pm |


\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: ae47bc317b7c0c00c56dd2a81d21fc8aa657785d

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name               | Type  |
| ------------------ | ----- |
| @nextui-org/select | Patch |
| @nextui-org/react  | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/eng-936?filename=.changeset/popular-knives-reply.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Fselect%22%3A%20patch%0A---%0A%0Afix(select)%3A%20add%20missing%20data-invalid%20in%20select%20and%20add%20missing%20data%20attributes%20in%20docs%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The changes introduce a patch to the `@nextui-org/select` package, adding the `data-invalid` attribute to the Select component. This attribute indicates the validity status of the Select component in the DOM, facilitating DOM-based validation checks. Additionally, new data attributes like `data-has-value`, `data-has-label`, and `data-has-helper` have been added to reflect various states of the Select component based on specific props.

## Changes

| File Path                                               | Change Summary                                                                                          |
|---------------------------------------------------------|---------------------------------------------------------------------------------------------------------|
| `.changeset/lazy-comics-crash.md`                       | Added a patch for the `@nextui-org/select` package, including the `data-invalid` attribute.              |
| `apps/docs/content/docs/components/select.mdx`          | Introduced `data-has-value`, `data-has-label`, `data-has-helper`, and `data-invalid` attributes.         |
| `packages/components/select/src/use-select.ts`          | Added `data-invalid` attribute to the generated HTML element in the `useSelect` function.                |

## Sequence Diagram(s) (Beta)

```mermaid
sequenceDiagram
    participant User
    participant SelectComponent
    participant DOM
    User->>SelectComponent: Select an item
    SelectComponent-->>DOM: Update with data-has-value, data-has-label, data-has-helper, data-invalid
    User->>DOM: Query for data-invalid attribute
    DOM-->>User: Return validity status
```

## Assessment against linked issues

| Objective                                                                 | Addressed | Explanation |
|---------------------------------------------------------------------------|-----------|-------------|
| Add `data-invalid` attribute to Select component (#3149)                  | ‚úÖ         |             |
| Facilitate DOM-based validation checks for Select component (#3149)       | ‚úÖ         |             |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

.changeset/lazy-comics-crash.md: ## Summary

The file `lazy-comics-crash.md` introduces a patch for the `@nextui-org/select` package, addressing the addition of the missing `data-invalid` attribute (#3149).

---

apps/docs/content/docs/components/select.mdx: ## Summary

In the `select.mdx` file, the changes introduce new data attributes like `data-has-value`, `data-has-label`, `data-has-helper`, and `data-invalid` to indicate various states of the select component based on specific props.

## Alterations to the declarations of exported or public entities

- `data-has-value` added to indicate if the select has selected item(s).
- `data-has-label` added to indicate if the select has a label based on the `label` prop.
- `data-has-helper` added to indicate if the select has helper text based on the `errorMessage` or `description` prop.
- `data-invalid` added to indicate if the select is invalid based on the `isInvalid` prop.

---

packages/components/select/src/use-select.ts: ## Short Summary
In the `useSelect` function in `use-select.ts`, a new attribute `data-invalid` with the value `isInvalid` is added to the generated HTML element.

## Alterations to the Declarations of Exported or Public Entities
- `export function useSelect<T extends object>(originalProps: UseSelectProps<T>)` in `packages/components/select/src/use-select.ts`

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

### PR Summary

**Title:** fix(select): add missing data-invalid in select and add missing data attributes in docs  
**User:** wingkwong  
**Number:** 3177  

**Description:**  
This pull request addresses the issue of missing `data-invalid` attributes in the Select component and updates the documentation to include these missing data attributes. The changes aim to improve the integration of the Select component with React Hook Form by providing a way to identify the validity status of the Select component from the DOM.

### Objectives from Linked Issues

**Issue #3149:** [Feature Request] add data-invalid attribute to select component

**Objectives:**
1. **Problem Description:** The user faced difficulty in identifying the validity status of the Select component from the DOM while conducting unit testing with React Hook Form.
2. **Proposed Solution:** Add a `data-invalid` attribute to the Select component, similar to the one present in the Input component, to indicate its validity status in the DOM.
3. **Alternatives Considered:** The user noted that adding the `data-invalid` property to the Select component is straightforward and feasible.
4. **Outcome:** The addition of the `data-invalid` attribute will facilitate DOM-based validation checks for the Select component, enhancing its usability in testing scenarios.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated summary of generated summaries

The recent updates introduce several enhancements to the `@nextui-org/select` package, primarily focusing on the addition of new data attributes to improve the component's state indication. Specifically, the `data-invalid` attribute has been added to address issue #3149. This attribute, along with `data-has-value`, `data-has-label`, and `data-has-helper`, has been incorporated into the `select` component to reflect various states based on specific props such as `isInvalid`, `label`, `errorMessage`, and `description`.

In the `apps/docs/content/docs/components/select.mdx` file, documentation has been updated to describe these new data attributes and their purposes. The `useSelect` function in `packages/components/select/src/use-select.ts` has also been modified to include the `data-invalid` attribute in the generated HTML element, ensuring that the invalid state is properly indicated.

### Alterations to the declarations of exported or public entities

#### Before and After Changes for `apps/docs/content/docs/components/select.mdx`

**Before:**
- No data attributes indicating component states.

**After:**
- `data-has-value`: Indicates if the select has selected item(s).
- `data-has-label`: Indicates if the select has a label based on the `label` prop.
- `data-has-helper`: Indicates if the select has helper text based on the `errorMessage` or `description` prop.
- `data-invalid`: Indicates if the select is invalid based on the `isInvalid` prop.

#### Before and After Changes for `packages/components/select/src/use-select.ts`

**Before:**
```typescript
export function useSelect<T extends object>(originalProps: UseSelectProps<T>)
```

**After:**
```typescript
export function useSelect<T extends object>(originalProps: UseSelectProps<T>)
```
- Added `data-invalid` attribute to the generated HTML element based on the `isInvalid` prop.

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- ae47bc317b7c0c00c56dd2a81d21fc8aa657785d -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/lazy-comics-crash.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/select": patch
+---
+
+Add missing `data-invalid` attribute (#3149)\n- apps/docs/content/docs/components/select.mdx (modified, 8 changes)\n  Patch: @@ -285,6 +285,14 @@ the popover and listbox components.
 
 - **data-filled**:
   Indicates if the select has a value, is focused, has start/end content or is open.
+- **data-has-value**:
+  Indicates if the select has selected item(s).
+- **data-has-label**:
+  Indicates if the select has a label. Based on `label` prop.
+- **data-has-helper**:
+  Indicates if the select has helper text. Based on `errorMessage` or `description` prop.
+- **data-invalid**:
+  Indicates if the select is invalid. Based on `isInvalid` prop.
 
 `Select` has the following attributes on the `trigger` element:
 \n- packages/components/select/src/use-select.ts (modified, 1 changes)\n  Patch: @@ -377,6 +377,7 @@ export function useSelect<T extends object>(originalProps: UseSelectProps<T>) {
       "data-has-value": dataAttr(hasValue),
       "data-has-label": dataAttr(hasLabel),
       "data-has-helper": dataAttr(hasHelper),
+      "data-invalid": dataAttr(isInvalid),
       className: slots.base({
         class: clsx(baseStyles, props.className),
       }),\n
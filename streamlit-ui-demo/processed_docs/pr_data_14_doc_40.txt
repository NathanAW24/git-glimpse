Pull Request Number: 2536
Title: fix: revise shouldCloseOnInteractOutside for FreeSoloPopover
Base Branch: main
Head Branch: fix/eng-516
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/2536
State: MERGED
Created At: 2024-03-17T07:25:48Z
Merged At: 2024-03-21T16:04:59Z
Participants: wingkwong, jrgarciadev

Description:
Closes #2531
üìù Description

set shouldCloseOnInteractOutside to false for autocomplete (to address closing issue with open modal)
set shouldCloseOnInteractOutside to undefined for select (previous behaviour)

‚õ≥Ô∏è Current behavior (updates)

the fix done in #2494 should only apply to autocomplete
currently it prevents select from closing on interact outside

üöÄ New behavior

both should be able to close on interact outside


  
    
    

    pr2536-select.webm
    
  

  

  



  
    
    

    pr2536-autocomplete.webm
    
  

  

  


üí£ Is this a breaking change (Yes/No):
No
üìù Additional Information

Summary by CodeRabbit

New Features

Introduced enhancements to the Autocomplete, Popover, and Select components to improve user interaction and accessibility.


Bug Fixes

Fixed an issue where the popover would close unexpectedly when interacting outside of it in specific scenarios.


Tests

Added new test cases for Autocomplete and Select components to verify the improved behavior of dropdown closure when clicking outside, with modal interactions considered.

Commits:
- fix(select): set undefined to shouldCloseOnInteractOutside in select\n- fix(select): set false to shouldCloseOnInteractOutside in autocomplete\n- fix(popover): take shouldCloseOnInteractOutside from props\n- chore(changeset):  revise shouldCloseOnInteractOutside for FreeSoloPopover\n- feat(select): add test cases to select\n- feat(select): assert that the select is open after click\n- feat(autocomplete): add test cases to autocomplete\n- feat(select): assert that the select is open after click\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 87961105c500d87660244e06d47b07a0462117dc

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 5 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/autocomplete | Patch |
| @nextui-org/popover      | Patch |
| @nextui-org/select       | Patch |
| @nextui-org/react        | Patch |
| @nextui-org/dropdown     | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/wingkwong/nextui/new/fix/eng-516?filename=.changeset/tall-chefs-provide.md&value=---%0A%22%40nextui-org%2Fautocomplete%22%3A%20patch%0A%22%40nextui-org%2Fpopover%22%3A%20patch%0A%22%40nextui-org%2Fselect%22%3A%20patch%0A---%0A%0Afix%3A%20revise%20shouldCloseOnInteractOutside%20for%20FreeSoloPopover%0A)

\n- vercel: [vc]: #Ov3TnpQw8YptCZU97vO0icm9M5Irmc04iazthuNIzxc=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvNWpkZnN2dzNwRDhmWnNBeWNjWE5Uamp1aDN4cSIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLXdpbmdrd29uZy1maXgtZW5nLTUxNi1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZm9yay13aW5na3dvbmctZml4LWVuZy01MTYtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/5jdfsvw3pD8fZsAyccXNTjjuh3xq)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-wingkwong-fix-eng-516-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-wingkwong-fix-eng-516-nextui-org.vercel.app?via=pr-comment-feedback-link) | Mar 17, 2024 2:31pm |

\n- vercel: @wingkwong is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%22561747c16e6ec95ccabcefa7bce99d9dec5c00a5%22%7D%2C%22id%22%3A%22QmP4cR6immqENZ1ZkVUEqGWCtk7YwVCm21MYsWWohzLJyB%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A2536%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The changes encompass enhancements and fixes in various components (`Autocomplete`, `Popover`, and `Select`) within the NextUI library. These modifications aim to enhance user experience by refining popover functionality in different scenarios. A key addition is the `shouldCloseOnInteractOutside` prop, which helps manage popover behavior, addressing issues related to unexpected popover closures in modal contexts and during keyboard navigation.

## Changes

| File Path                                          | Change Summary                                                                                               |
|----------------------------------------------------|--------------------------------------------------------------------------------------------------------------|
| `.../autocomplete/src/autocomplete.tsx`            | Added `shouldCloseOnInteractOutside` prop to `FreeSoloPopover` to address closing issues in modal contexts.  |
| `.../popover/src/free-solo-popover.tsx`             | Removed logic preventing popover closure during keyboard navigation in `FreeSoloPopover`.                    |
| `.../select/src/select.tsx`                        | Introduced `shouldCloseOnInteractOutside={undefined}` to `FreeSoloPopover` to prevent unintended closures during keyboard navigation. |

## Assessment against linked issues

| Objective                                      | Addressed | Explanation                                                                                     |
|------------------------------------------------|-----------|-------------------------------------------------------------------------------------------------|
| Close all opened Selects when opening another  | ‚ùå        | The changes do not directly tackle the issue of closing previously opened selects when opening a new one. The focus of the modifications is on popover behavior enhancements rather than managing multiple open selects. |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->
<!--


.changeset/long-mayflies-film.md: The new file introduces patches for "@nextui-org/autocomplete," "@nextui-org/popover," and "@nextui-org/select." It includes a revision for the "shouldCloseOnInteractOutside" behavior in FreeSoloPopover.

---

packages/components/autocomplete/src/autocomplete.tsx: ### Short Summary
In the `Autocomplete` component in `autocomplete.tsx`, a change was made to the `FreeSoloPopover` component where a new prop `shouldCloseOnInteractOutside` was added to prevent a popover closing issue when an autocomplete is used with an open modal.

---

packages/components/popover/src/free-solo-popover.tsx: ## Short summary
Removed the logic to prevent closing the popover when navigating with the keyboard in `FreeSoloPopover` component.

---

packages/components/select/src/select.tsx: ## Short summary
In the `Select` component in `select.tsx`, the change introduces a modification to the `FreeSoloPopover` component by adding a new prop `shouldCloseOnInteractOutside={undefined}` to prevent closing the popover when navigating with the keyboard.

---

packages/components/autocomplete/__tests__/autocomplete.test.tsx: ## Short summary

- Added imports for `act` and `userEvent` from "@testing-library/react" and "@testing-library/user-event" respectively.
- Added imports for `Modal`, `ModalContent`, `ModalBody`, `ModalHeader`, and `ModalFooter` from "../../modal/src".
- Added two new test cases to check the behavior of closing the dropdown when clicking outside the autocomplete component, with and without a modal open.

---

packages/components/select/__tests__/select.test.tsx: ## Short summary

- Added imports for `Modal`, `ModalContent`, `ModalHeader`, `ModalBody`, and `ModalFooter`.
- Added test cases to ensure dropdown closure on clicking outside the select component, with and without a modal open.

-->
<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: short summary by coderabbit.ai -->
<!--


### PR Objectives

The pull request (PR) titled "fix: revise shouldCloseOnInteractOutside for FreeSoloPopover" (PR #2536) aims to address a bug reported in issue #2531 within the NextUI library. The issue involves Select components not closing automatically when opening a new Select, contrary to the expected behavior of having only one Select open at a time for a cleaner user interface.

The PR targets the `Autocomplete`, `Popover`, and `Select` components to adjust the `shouldCloseOnInteractOutside` behavior in the `FreeSoloPopover` component. This change is crucial for ensuring that popovers associated with Select components close appropriately when interacting outside of them, especially in scenarios involving multiple Select components or when using an Autocomplete component within a modal.

### Comments Summary

A comment by `jrgarciadev` suggests adding tests to cover the scenarios addressed in the PR, indicating a focus on ensuring the changes are adequately tested for robustness and correctness. This emphasis on testing aligns with best practices in software development to maintain code quality and prevent regressions.

### AI-Generated Summary of Generated Summaries

The PR addresses a bug in the behavior of Select components within the NextUI library, focusing on the `FreeSoloPopover` component used in `Autocomplete` and `Select`. The key change involves adding a new property, `shouldCloseOnInteractOutside`, to the `FreeSoloPopover` component to manage popover closure behavior effectively.

Notable modifications include removing outdated logic in the `FreeSoloPopover` component to enable consistent popover behavior during keyboard navigation. Additionally, the `Select` component is updated to align with the revised functionality, ensuring that only one Select can be open at a time for a better user experience.

Overall, the PR aims to enhance user interaction with Select components by refining popover behavior, particularly in complex UI scenarios involving multiple components. The changes seek to improve usability and ensure a more intuitive and user-friendly experience when working with Select components in the NextUI library.

-->
<!-- end of auto-generated comment: short summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 561747c16e6ec95ccabcefa7bce99d9dec5c00a5 -->
<!-- 87961105c500d87660244e06d47b07a0462117dc -->

<!-- commit_ids_reviewed_end --><!-- tweet_start -->

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<!-- tweet_end --><!-- tips_start -->

---

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with CodeRabbit:

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit-tests for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit tests for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit tests.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- The JSON schema for the configuration file is available [here](https://coderabbit.ai/integrations/coderabbit-overrides.v2.json).
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/coderabbit-overrides.v2.json`

### CodeRabbit Discord Community

Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.

</details>

<!-- tips_end -->\n- jrgarciadev: @wingkwong let's add some tests to cover these scenarios \n- wingkwong: @jrgarciadev added the tests\n

Files Changed:
- .changeset/long-mayflies-film.md (added, 7 changes)\n  Patch: @@ -0,0 +1,7 @@
+---
+"@nextui-org/autocomplete": patch
+"@nextui-org/popover": patch
+"@nextui-org/select": patch
+---
+
+revise shouldCloseOnInteractOutside for FreeSoloPopover\n- packages/components/autocomplete/__tests__/autocomplete.test.tsx (modified, 88 changes)\n  Patch: @@ -1,7 +1,9 @@
 import * as React from "react";
-import {render} from "@testing-library/react";
+import {act, render} from "@testing-library/react";
+import userEvent from "@testing-library/user-event";
 
 import {Autocomplete, AutocompleteItem, AutocompleteSection} from "../src";
+import {Modal, ModalContent, ModalBody, ModalHeader, ModalFooter} from "../../modal/src";
 
 type Item = {
   label: string;
@@ -133,4 +135,88 @@ describe("Autocomplete", () => {
 
     expect(() => wrapper.unmount()).not.toThrow();
   });
+
+  it("should close dropdown when clicking outside autocomplete", async () => {
+    const wrapper = render(
+      <Autocomplete
+        aria-label="Favorite Animal"
+        data-testid="close-when-clicking-outside-test"
+        label="Favorite Animal"
+      >
+        <AutocompleteItem key="penguin" value="penguin">
+          Penguin
+        </AutocompleteItem>
+        <AutocompleteItem key="zebra" value="zebra">
+          Zebra
+        </AutocompleteItem>
+        <AutocompleteItem key="shark" value="shark">
+          Shark
+        </AutocompleteItem>
+      </Autocomplete>,
+    );
+
+    const autocomplete = wrapper.getByTestId("close-when-clicking-outside-test");
+
+    // open the select dropdown
+    await act(async () => {
+      await userEvent.click(autocomplete);
+    });
+
+    // assert that the autocomplete dropdown is open
+    expect(autocomplete).toHaveAttribute("aria-expanded", "true");
+
+    // click outside the autocomplete component
+    await act(async () => {
+      await userEvent.click(document.body);
+    });
+
+    // assert that the autocomplete is closed
+    expect(autocomplete).toHaveAttribute("aria-expanded", "false");
+  });
+
+  it("should close dropdown when clicking outside autocomplete with modal open", async () => {
+    const wrapper = render(
+      <Modal isOpen>
+        <ModalContent>
+          <ModalHeader>Modal header</ModalHeader>
+          <ModalBody>
+            <Autocomplete
+              aria-label="Favorite Animal"
+              data-testid="close-when-clicking-outside-test"
+              label="Favorite Animal"
+            >
+              <AutocompleteItem key="penguin" value="penguin">
+                Penguin
+              </AutocompleteItem>
+              <AutocompleteItem key="zebra" value="zebra">
+                Zebra
+              </AutocompleteItem>
+              <AutocompleteItem key="shark" value="shark">
+                Shark
+              </AutocompleteItem>
+            </Autocomplete>
+          </ModalBody>
+          <ModalFooter>Modal footer</ModalFooter>
+        </ModalContent>
+      </Modal>,
+    );
+
+    const autocomplete = wrapper.getByTestId("close-when-clicking-outside-test");
+
+    // open the autocomplete dropdown
+    await act(async () => {
+      await userEvent.click(autocomplete);
+    });
+
+    // assert that the autocomplete dropdown is open
+    expect(autocomplete).toHaveAttribute("aria-expanded", "true");
+
+    // click outside the autocomplete component
+    await act(async () => {
+      await userEvent.click(document.body);
+    });
+
+    // assert that the autocomplete dropdown is closed
+    expect(autocomplete).toHaveAttribute("aria-expanded", "false");
+  });
 });\n- packages/components/autocomplete/src/autocomplete.tsx (modified, 7 changes)\n  Patch: @@ -32,7 +32,12 @@ function Autocomplete<T extends object>(props: Props<T>, ref: ForwardedRef<HTMLI
   } = useAutocomplete<T>({...props, ref});
 
   const popoverContent = isOpen ? (
-    <FreeSoloPopover {...getPopoverProps()} state={state}>
+    <FreeSoloPopover
+      {...getPopoverProps()}
+      // avoid popover closing issue in autocomplete with open modal
+      shouldCloseOnInteractOutside={() => false}
+      state={state}
+    >
       <ScrollShadow {...getListBoxWrapperProps()}>
         <Listbox {...getListBoxProps()} />
       </ScrollShadow>\n- packages/components/popover/src/free-solo-popover.tsx (modified, 2 changes)\n  Patch: @@ -74,8 +74,6 @@ const FreeSoloPopover = forwardRef<"div", FreeSoloPopoverProps>((props, ref) =>
     getContentProps,
   } = usePopover({
     ...props,
-    // avoid closing the popover when navigating with the keyboard
-    shouldCloseOnInteractOutside: () => false,
     ref,
   });
 \n- packages/components/select/__tests__/select.test.tsx (modified, 85 changes)\n  Patch: @@ -3,6 +3,7 @@ import {act, render} from "@testing-library/react";
 import userEvent from "@testing-library/user-event";
 
 import {Select, SelectItem, SelectSection, type SelectProps} from "../src";
+import {Modal, ModalContent, ModalHeader, ModalBody, ModalFooter} from "../../modal/src";
 
 type Item = {
   label: string;
@@ -276,4 +277,88 @@ describe("Select", () => {
     expect(wrapper.getByText("next Penguin")).toBeInTheDocument();
     expect(wrapper.queryByText("Select an favorite animal")).toBe(null);
   });
+
+  it("should close dropdown when clicking outside select", async () => {
+    const wrapper = render(
+      <Select
+        aria-label="Favorite Animal"
+        data-testid="close-when-clicking-outside-test"
+        label="Favorite Animal"
+      >
+        <SelectItem key="penguin" value="penguin">
+          Penguin
+        </SelectItem>
+        <SelectItem key="zebra" value="zebra">
+          Zebra
+        </SelectItem>
+        <SelectItem key="shark" value="shark">
+          Shark
+        </SelectItem>
+      </Select>,
+    );
+
+    const select = wrapper.getByTestId("close-when-clicking-outside-test");
+
+    // open the select dropdown
+    await act(async () => {
+      await userEvent.click(select);
+    });
+
+    // assert that the select is open
+    expect(select).toHaveAttribute("aria-expanded", "true");
+
+    // click outside the select component
+    await act(async () => {
+      await userEvent.click(document.body);
+    });
+
+    // assert that the select is closed
+    expect(select).toHaveAttribute("aria-expanded", "false");
+  });
+
+  it("should close dropdown when clicking outside select with modal open", async () => {
+    const wrapper = render(
+      <Modal isOpen>
+        <ModalContent>
+          <ModalHeader>Modal header</ModalHeader>
+          <ModalBody>
+            <Select
+              aria-label="Favorite Animal"
+              data-testid="close-when-clicking-outside-test"
+              label="Favorite Animal"
+            >
+              <SelectItem key="penguin" value="penguin">
+                Penguin
+              </SelectItem>
+              <SelectItem key="zebra" value="zebra">
+                Zebra
+              </SelectItem>
+              <SelectItem key="shark" value="shark">
+                Shark
+              </SelectItem>
+            </Select>
+          </ModalBody>
+          <ModalFooter>Modal footer</ModalFooter>
+        </ModalContent>
+      </Modal>,
+    );
+
+    const select = wrapper.getByTestId("close-when-clicking-outside-test");
+
+    // open the select dropdown
+    await act(async () => {
+      await userEvent.click(select);
+    });
+
+    // assert that the select is open
+    expect(select).toHaveAttribute("aria-expanded", "true");
+
+    // click outside the select component
+    await act(async () => {
+      await userEvent.click(document.body);
+    });
+
+    // assert that the select is closed
+    expect(select).toHaveAttribute("aria-expanded", "false");
+  });
 });\n- packages/components/select/src/select.tsx (modified, 8 changes)\n  Patch: @@ -103,7 +103,13 @@ function Select<T extends object>(props: Props<T>, ref: ForwardedRef<HTMLSelectE
   const popoverContent = useMemo(
     () =>
       state.isOpen ? (
-        <FreeSoloPopover {...getPopoverProps()} state={state} triggerRef={triggerRef}>
+        <FreeSoloPopover
+          {...getPopoverProps()}
+          // avoid closing the popover when navigating with the keyboard
+          shouldCloseOnInteractOutside={undefined}
+          state={state}
+          triggerRef={triggerRef}
+        >
           <ScrollShadow {...getListboxWrapperProps()}>
             <Listbox {...getListboxProps()} />
           </ScrollShadow>\n
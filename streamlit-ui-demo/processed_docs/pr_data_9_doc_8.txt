Pull Request Number: 3294
Title: docs(autocomplete): add customEmptyContent example to autocomplete page
Base Branch: main
Head Branch: docs/eng-1033
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/3294
State: MERGED
Created At: 2024-06-21T04:27:23Z
Merged At: 2024-06-22T13:39:51Z
Participants: wingkwong, jrgarciadev

Description:
ref: https://github.com/nextui-org/nextui/discussions/2231
üìù Description
A frequent question asked by users - how to customize the empty content text in autocomplete?
‚õ≥Ô∏è Current behavior (updates)
Even listboxProps is shown in autocomplete prop, they may not aware thatemptyContent is inside listboxProps.
üöÄ New behavior
Add an example to show how they can change the emptyContent text.
üí£ Is this a breaking change (Yes/No):
No
üìù Additional Information

Summary by CodeRabbit


New Features

Added customization for the empty content message in the autocomplete component, allowing users to modify the emptyContent property in listboxProps.



Documentation

Updated documentation to include details on how to customize the empty content message for the autocomplete component.

Commits:
- docs(autocomplete): add customEmptyContentMessage example\n

Labels:
üìã Scope : Docs

Comments:
- vercel: [vc]: #TxBCATVa7cbtdTIGXIHkMzhz40ZAdoMcRFJJmMV6FCA=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWRvY3MtZW5nLTEwMzMtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn0sImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1kb2NzLXYyLzh1Uk40R01ocnJEaHpoZ1MzY3VTZTRnZXJuR2UiLCJwcmV2aWV3VXJsIjoibmV4dHVpLWRvY3MtdjItZ2l0LWRvY3MtZW5nLTEwMzMtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIn0seyJuYW1lIjoibmV4dHVpLXN0b3J5Ym9vay12MiIsInJvb3REaXJlY3RvcnkiOiJwYWNrYWdlcy9zdG9yeWJvb2siLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZG9jcy1lbmctMTAzMy1uZXh0dWktb3JnLnZlcmNlbC5hcHAifSwiaW5zcGVjdG9yVXJsIjoiaHR0cHM6Ly92ZXJjZWwuY29tL25leHR1aS1vcmcvbmV4dHVpLXN0b3J5Ym9vay12Mi9FbmpndUNZUlN0clpXUVBVZkFlWk5MVGJjWU1uIiwicHJldmlld1VybCI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWRvY3MtZW5nLTEwMzMtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIn1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/8uRN4GMhrrDhzhgS3cuSe4gernGe)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-docs-eng-1033-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-docs-eng-1033-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 21, 2024 4:27am |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/EnjguCYRStrZWQPUfAeZNLTbcYMn)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-docs-eng-1033-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-docs-eng-1033-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jun 21, 2024 4:27am |


\n- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-1033/supplement-emptycontent-in-autocomplete-doc">ENG-1033 supplement emptyContent in autocomplete doc</a></p>\n- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: dcc35ca4c48e8f253eb6d2a51a42c9ef2a15418e

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/nextui-org/nextui/new/docs/eng-1033?filename=.changeset/afraid-baboons-sleep.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A---%0A%0Adocs(autocomplete)%3A%20add%20customEmptyContent%20example%20to%20autocomplete%20page%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The recent updates introduce the ability to customize the empty content message displayed by the autocomplete component. This is achieved by importing the `customEmptyContentMessage` module and allowing users to adjust the `emptyContent` property within `listboxProps`. These enhancements improve the flexibility and user experience of the autocomplete feature.

## Changes

| File Path                                                   | Change Summary                                                      |
|-------------------------------------------------------------|---------------------------------------------------------------------|
| `apps/docs/content/components/autocomplete/index.ts`        | Added import of `customEmptyContentMessage` to enhance functionality of `autocompleteContent`. |
| `apps/docs/content/docs/components/autocomplete.mdx`        | Updated documentation to reflect the new customization option for `emptyContent` in `listboxProps`. |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

apps/docs/content/components/autocomplete/index.ts: ## Short Summary

The change in functionality involves adding the import of `customEmptyContentMessage` in `index.ts`, enhancing the `autocompleteContent` object by including this new module.

## Alterations to the declarations of exported or public entities

- `import customEmptyContentMessage from "./custom-empty-content-message";` added in `apps/docs/content/components/autocomplete/index.ts`

---

apps/docs/content/docs/components/autocomplete.mdx: ### Summary
The changes in the `autocomplete.mdx` file include the addition of customization for the empty content message in the autocomplete component by allowing users to modify the `emptyContent` property in `listboxProps`.

### Alterations to the declarations of exported or public entities
- **Custom Empty Content Message**:
  - Added customization for the empty content message by modifying the `emptyContent` in `listboxProps`.

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR summary

**Title:** docs(autocomplete): add customEmptyContent example to autocomplete page

**User:** wingkwong

**Number:** 3294

**Description:**

This pull request addresses a frequent user question on how to customize the empty content text in the autocomplete component. Although `listboxProps` is shown in the autocomplete prop, users may not be aware that `emptyContent` is inside `listboxProps`. The PR adds an example to demonstrate how users can change the `emptyContent` text.

**Current behavior:**

Users may not realize that `emptyContent` is part of `listboxProps` in the autocomplete component.

**New behavior:**

An example is provided to show how to customize the `emptyContent` text in the autocomplete component.

**Breaking change:** No

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated summary of generated summaries

The updates involve enhancing the autocomplete component by introducing the ability to customize the empty content message. This is achieved by importing a new module, `customEmptyContentMessage`, into the `index.ts` file of the autocomplete component. Additionally, the documentation (`autocomplete.mdx`) has been updated to reflect this new customization feature, allowing users to modify the `emptyContent` property within `listboxProps`.

### Alterations to the declarations of exported or public entities

#### `apps/docs/content/components/autocomplete/index.ts`

**Before:**
```typescript
// Previous imports and code
```

**After:**
```typescript
import customEmptyContentMessage from "./custom-empty-content-message";
// Previous imports and code
```

#### `apps/docs/content/docs/components/autocomplete.mdx`

**Before:**
```mdx
// Previous documentation content
```

**After:**
```mdx
// Previous documentation content

### Custom Empty Content Message
You can now customize the empty content message in the autocomplete component by modifying the `emptyContent` property within `listboxProps`.
```

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- dcc35ca4c48e8f253eb6d2a51a42c9ef2a15418e -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---



Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
	- `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- apps/docs/content/components/autocomplete/custom-empty-content-message.ts (added, 57 changes)\n  Patch: @@ -0,0 +1,57 @@
+const data = `export const animals = [
+  {label: "Cat", value: "cat", description: "The second most popular pet in the world"},
+  {label: "Dog", value: "dog", description: "The most popular pet in the world"},
+  {label: "Elephant", value: "elephant", description: "The largest land animal"},
+  {label: "Lion", value: "lion", description: "The king of the jungle"},
+  {label: "Tiger", value: "tiger", description: "The largest cat species"},
+  {label: "Giraffe", value: "giraffe", description: "The tallest land animal"},
+  {
+    label: "Dolphin",
+    value: "dolphin",
+    description: "A widely distributed and diverse group of aquatic mammals",
+  },
+  {label: "Penguin", value: "penguin", description: "A group of aquatic flightless birds"},
+  {label: "Zebra", value: "zebra", description: "A several species of African equids"},
+  {
+    label: "Shark",
+    value: "shark",
+    description: "A group of elasmobranch fish characterized by a cartilaginous skeleton",
+  },
+  {
+    label: "Whale",
+    value: "whale",
+    description: "Diverse group of fully aquatic placental marine mammals",
+  },
+  {label: "Otter", value: "otter", description: "A carnivorous mammal in the subfamily Lutrinae"},
+  {label: "Crocodile", value: "crocodile", description: "A large semiaquatic reptile"},
+];`;
+
+const App = `import {Autocomplete, AutocompleteItem} from "@nextui-org/react";
+import {animals} from "./data";
+
+export default function App() {
+  return (
+    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+      <Autocomplete
+        label="Favorite Animal"
+        placeholder="Search an animal"
+        className="max-w-xs"
+        defaultItems={animals}
+        listboxProps={{
+            emptyContent: 'Your own empty content text.'
+        }}
+      >
+        {(item) => <AutocompleteItem key={item.value}>{item.label}</AutocompleteItem>}
+      </Autocomplete>
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+  "/data.js": data,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/autocomplete/index.ts (modified, 2 changes)\n  Patch: @@ -24,6 +24,7 @@ import asyncLoadingItems from "./async-loading-items";
 import sections from "./sections";
 import customSectionsStyle from "./custom-sections-style";
 import customStyles from "./custom-styles";
+import customEmptyContentMessage from "./custom-empty-content-message";
 import readOnly from "./read-only";
 
 export const autocompleteContent = {
@@ -53,5 +54,6 @@ export const autocompleteContent = {
   sections,
   customSectionsStyle,
   customStyles,
+  customEmptyContentMessage,
   readOnly,
 };\n- apps/docs/content/docs/components/autocomplete.mdx (modified, 6 changes)\n  Patch: @@ -238,6 +238,12 @@ You can customize the autocomplete items by modifying the `AutocompleteItem` chi
 
 <CodeDemo title="Custom Items" files={autocompleteContent.customItems} />
 
+### Custom Empty Content Message
+
+By default, a message `No results found.` will be shown if there is no result matching a query with your filter. You can customize the empty content message by modifying the `emptyContent` in `listboxProps`.
+
+<CodeDemo title="Custom Empty Content Message" files={autocompleteContent.customEmptyContentMessage} />
+
 ### Custom Filtering
 
 By default, `Autocomplete` uses a `"contains"` function from [useFilter](https://react-spectrum.adobe.com/react-aria/useFilter.html) to filter the\n
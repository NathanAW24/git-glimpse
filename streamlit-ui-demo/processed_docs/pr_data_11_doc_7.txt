Pull Request Number: 2969
Title: fix(autocomplete): controlled state logic
Base Branch: canary
Head Branch: fix/2955
Author: chirokas
URL: https://github.com/nextui-org/nextui/pull/2969
State: MERGED
Created At: 2024-05-09T08:54:43Z
Merged At: 2024-06-15T00:08:09Z
Participants: chirokas, jrgarciadev, wingkwong

Description:
Closes #2955
üìù Description
Revise autocomplete controlled state logic.
‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit

Bug Fixes

Improved the autocomplete functionality to better handle controlled state scenarios.
Enhanced the logic to update the selected key and input value only when necessary, ensuring more accurate behavior in autocomplete features.

Commits:
- fix(autocomplete): autocomplete controlled state (#2955)\n- chore(autocomplete): add changeset\n- Update packages/components/autocomplete/__tests__/autocomplete.test.tsx\n- Merge branch 'canary' into fix/2955\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 06dbf227ccd75faa45c7d21c2e491d6355f17ea7

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/autocomplete | Patch |
| @nextui-org/react        | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/chirokas/nextui/new/fix/2955?filename=.changeset/seven-turkeys-clean.md&value=---%0A%22%40nextui-org%2Fautocomplete%22%3A%20patch%0A---%0A%0Afix(autocomplete)%3A%20controlled%20state%20logic%0A)

\n- vercel: [vc]: #P4dNd+6YVONwaHYj9gN23GcBgbAvkkzNNYkM8d6AFcU=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvM3pGWTZBeVZLWkh1R0Y3MlJZakRHTGtBWWJLUyIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWNoaXJva2FzLWZpeC0yOTU1LW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWNoaXJva2FzLWZpeC0yOTU1LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/3zFY6AyVKZHuGF72RYjDGLkAYbKS)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-chirokas-fix-2955-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-chirokas-fix-2955-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 24, 2024 9:36pm |

\n- vercel: @chirokas is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%220839b0ab0f6d026a33c4edbab16f537cbcd14c31%22%7D%2C%22id%22%3A%22QmPW6UGeHv1ngWGUqfLYrnuHAM8W7czi8Y943zSkcGqH48%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A2969%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: rate limited by coderabbit.ai -->

> [!WARNING]
> ## Rate Limit Exceeded
> 
> @jrgarciadev has exceeded the limit for the number of commits or files that can be reviewed per hour. Please wait **15 minutes and 56 seconds** before requesting another review.
> 
> <details>
> 
> <summary>How to resolve this issue?</summary>
> 
> After the wait time has elapsed, a review can be triggered using the `@coderabbitai review` command as a PR comment. Alternatively, push new commits to this PR.
> 
> We recommend that you space out your commits to avoid hitting the rate limit.
> 
> </details>
> 
> <details>
> 
> <summary>How do rate limits work?</summary>
> 
> CodeRabbit enforces hourly rate limits for each developer per organization.
> Our paid plans have higher rate limits than the trial, open-source and free plans. In all cases, we re-allow further reviews after a brief timeout.
> Please see our [FAQ](https://coderabbit.ai/docs/faq) for further information.
> 
> </details>
> 
> <details>
> <summary>Commits</summary>
> Files that changed from the base of the PR and between 0839b0ab0f6d026a33c4edbab16f537cbcd14c31 and 06dbf227ccd75faa45c7d21c2e491d6355f17ea7.
> </details>

<!-- end of auto-generated comment: rate limited by coderabbit.ai --><!-- walkthrough_start -->

## Walkthrough
This update introduces a crucial patch to the `@nextui-org/autocomplete` package, specifically addressing an issue where the autocomplete component fails to update its selection when the labels and keys of the items are identical. The patch modifies the logic in the `useAutocomplete` function to ensure the component's state updates correctly under these conditions.

## Changes

| File Path                                           | Change Summary |
|-----------------------------------------------------|----------------|
| `.changeset/proud-moles-fix.md`                     | Introduced a patch for the `@nextui-org/autocomplete` package to fix issues with the controlled state and autocomplete functionality. |
| `.../autocomplete/__tests__/autocomplete.test.tsx`  | Added `AutocompleteProps` to imports and introduced a `ControlledAutocomplete` function component for testing. |
| `.../autocomplete/src/use-autocomplete.ts`          | Added a condition in `useAutocomplete` to check the item's existence and its text value against the state's input value before setting the selected key and input value. |

## Assessment against linked issues

| Objective (Issue #) | Addressed | Explanation |
|---------------------|-----------|-------------|
| Change `Autocomplete` selection when labels and keys are the same (#2955) | ‚úÖ |  |
| Ensure labels and keys being the same doesn't affect autocomplete behavior (#2955) | ‚úÖ |  |

The modifications in the `useAutocomplete` function directly tackle the issue described, ensuring that the component behaves as expected even when labels and keys are identical, thus meeting the objectives laid out in the linked issue.

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

.changeset/proud-moles-fix.md: ## Short summary

The new file introduces a patch for the `@nextui-org/autocomplete` package to address the issue with the controlled state, specifically fixing the autocomplete functionality.

## Alterations to the declarations of exported or public entities

No alterations to the declarations of exported or public entities were made in this patch.

---

packages/components/autocomplete/__tests__/autocomplete.test.tsx: ### Alterations to the declarations of exported or public entities:

- `AutocompleteProps` added to the import statement in `packages/components/autocomplete/__tests__/autocomplete.test.tsx`
- Added `ControlledAutocomplete` function component with `AutocompleteProps` as a parameter in `packages/components/autocomplete/__tests__/autocomplete.test.tsx`

---

packages/components/autocomplete/src/use-autocomplete.ts: ## Short Summary

In the `useAutocomplete` function in `use-autocomplete.ts`, a condition was added to check if the `item` exists and if the `state.inputValue` is not equal to `item.textValue` before setting the selected key and input value.

## Alterations to the declarations of exported or public entities

- `export function useAutocomplete<T extends object>(originalProps: UseAutocompleteProps<T>): UseAutocompleteState<T>` in `packages/components/autocomplete/src/use-autocomplete.ts`:
  - Condition added: 
    - Before: 
      ```javascript
      if (item) {
      ```
    - After: 
      ```javascript
      if (item && state.inputValue !== item.textValue) {
      ```

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 0839b0ab0f6d026a33c4edbab16f537cbcd14c31 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/proud-moles-fix.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/autocomplete": patch
+---
+
+Fix autocomplete controlled state (#2955)\n- packages/components/autocomplete/__tests__/autocomplete.test.tsx (modified, 70 changes)\n  Patch: @@ -48,6 +48,21 @@ const itemsSectionData = [
   },
 ];
 
+
+const ControlledAutocomplete = <T = object>(props: AutocompleteProps<T>) => {
+  const [selectedKey, setSelectedKey] = React.useState<React.Key>("cat");
+
+  return (
+    <Autocomplete
+      {...props}
+      aria-label="Favorite Animal"
+      label="Favorite Animal"
+      selectedKey={selectedKey}
+      onSelectionChange={setSelectedKey}
+    />
+  );
+};
+
 const AutocompleteExample = (props: Partial<AutocompleteProps> = {}) => (
   <Autocomplete label="Favorite Animal" {...props}>
     <AutocompleteItem key="penguin" value="penguin">
@@ -62,6 +77,7 @@ const AutocompleteExample = (props: Partial<AutocompleteProps> = {}) => (
   </Autocomplete>
 );
 
+
 describe("Autocomplete", () => {
   it("should render correctly", () => {
     const wrapper = render(<AutocompleteExample />);
@@ -559,6 +575,60 @@ describe("Autocomplete", () => {
       });
     });
   });
+
+  it("should work when key equals textValue", async () => {
+    const wrapper = render(
+      <Autocomplete
+        aria-label="Favorite Animal"
+        data-testid="when-key-equals-textValue"
+        defaultSelectedKey="cat"
+        items={itemsData}
+        label="Favorite Animal"
+      >
+        {(item) => <AutocompleteItem key={item.value}>{item.value}</AutocompleteItem>}
+      </Autocomplete>,
+    );
+
+    const autocomplete = wrapper.getByTestId("when-key-equals-textValue");
+
+    const user = userEvent.setup();
+
+    await user.click(autocomplete);
+
+    expect(autocomplete).toHaveValue("cat");
+    expect(autocomplete).toHaveAttribute("aria-expanded", "true");
+
+    let listboxItems = wrapper.getAllByRole("option");
+
+    await user.click(listboxItems[1]);
+
+    expect(autocomplete).toHaveValue("dog");
+    expect(autocomplete).toHaveAttribute("aria-expanded", "false");
+  });
+
+  it("should work when key equals textValue (controlled)", async () => {
+    const wrapper = render(
+      <ControlledAutocomplete data-testid="when-key-equals-textValue" items={itemsData}>
+        {(item) => <AutocompleteItem key={item.value}>{item.value}</AutocompleteItem>}
+      </ControlledAutocomplete>,
+    );
+
+    const autocomplete = wrapper.getByTestId("when-key-equals-textValue");
+
+    const user = userEvent.setup();
+
+    await user.click(autocomplete);
+
+    expect(autocomplete).toHaveValue("cat");
+    expect(autocomplete).toHaveAttribute("aria-expanded", "true");
+
+    let listboxItems = wrapper.getAllByRole("option");
+
+    await user.click(listboxItems[1]);
+
+    expect(autocomplete).toHaveValue("dog");
+    expect(autocomplete).toHaveAttribute("aria-expanded", "false");
+  });
 });
 
 describe("Autocomplete with React Hook Form", () => {\n- packages/components/autocomplete/src/use-autocomplete.ts (modified, 2 changes)\n  Patch: @@ -314,7 +314,7 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
     const key = inputRef.current.value;
     const item = state.collection.getItem(key);
 
-    if (item) {
+    if (item && state.inputValue !== item.textValue) {
       state.setSelectedKey(key);
       state.setInputValue(item.textValue);
     }\n
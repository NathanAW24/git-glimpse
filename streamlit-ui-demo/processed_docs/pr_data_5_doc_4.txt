Pull Request Number: 3808
Title: feat(rating): add rating component
Base Branch: canary
Head Branch: macci001/add-rating-component
Author: macci001
URL: https://github.com/nextui-org/nextui/pull/3808
State: OPEN
Created At: 2024-09-26T10:03:13Z
Merged At: None
Participants: macci001, ryo-manba, jrgarciadev, wingkwong

Description:
Closes #3807
üìù Description

Adds a new component for rating.

‚õ≥Ô∏è Current behavior (updates)

Currently NextUI does not have Rating component.

üöÄ New behavior

The PR adds Rating Component.


Rating Component


  
    
    

    Screen.Recording.2024-09-27.at.1.15.29.PM.mov
    
  

  

  



Controlled


  
    
    

    Screen.Recording.2024-09-27.at.1.17.37.PM.mov
    
  

  

  



singleSelection


  
    
    

    Screen.Recording.2024-09-27.at.1.18.21.PM.mov
    
  

  

  



Disabled



Sizes



fillColor



customIcon


üí£ Is this a breaking change (Yes/No): No

Summary by CodeRabbit
Release Notes


New Features

Introduced a comprehensive Rating component with customizable icons and various configurations.
Added new RatingIcon and RatingSegment components for enhanced flexibility in rating displays.
Included new emoticon icons for improved user feedback in ratings.



Documentation

Added documentation for the @nextui-org/rating package detailing installation and usage.
Enhanced documentation for the Rating component with detailed API sections and examples.
Created Storybook stories to showcase various use cases of the Rating component.



Tests

Implemented unit tests for the Rating component to ensure functionality and integration with forms.

Commits:
- feat(rating): adding the rating component\n- feat(rating): adding the focus indicator to the rating component\n

Labels:
üöß Status: Changes Requested

Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 0e9f48ac4716082d81f9ad369024df6af6cb3f8c

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 19 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/rating       | Minor |
| @nextui-org/react        | Minor |
| @nextui-org/theme        | Minor |
| @nextui-org/shared-icons | Minor |
| @nextui-org/accordion    | Patch |
| @nextui-org/alert        | Patch |
| @nextui-org/autocomplete | Patch |
| @nextui-org/breadcrumbs  | Patch |
| @nextui-org/calendar     | Patch |
| @nextui-org/chip         | Patch |
| @nextui-org/date-picker  | Patch |
| @nextui-org/drawer       | Patch |
| @nextui-org/input        | Patch |
| @nextui-org/link         | Patch |
| @nextui-org/modal        | Patch |
| @nextui-org/pagination   | Patch |
| @nextui-org/select       | Patch |
| @nextui-org/snippet      | Patch |
| @nextui-org/table        | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/macci001/nextui/new/macci001/add-rating-component?filename=.changeset/dirty-frogs-boil.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Frating%22%3A%20patch%0A%22%40nextui-org%2Freact%22%3A%20patch%0A%22%40nextui-org%2Ftheme%22%3A%20patch%0A---%0A%0Afeat(rating)%3A%20add%20rating%20component%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: review paused by coderabbit.ai -->

> [!NOTE]
> ## Reviews paused
> 
> Use the following commands to manage reviews:
> - `@coderabbitai resume` to resume automatic reviews.
> - `@coderabbitai review` to trigger a single review.

<!-- end of auto-generated comment: review paused by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The changes introduce a new `Rating` component to the project, allowing users to select ratings using icons. This component supports various configurations, including custom icons, precision ratings, and accessibility features. Additionally, comprehensive documentation, unit tests, and examples for the `Rating` component have been added, along with updates to the package configurations.

## Changes

| Files                                                                 | Change Summary                                                                                                                                                     |
|-----------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| apps/docs/content/docs/components/rating.mdx                          | Added documentation for the `Rating` component, detailing its usage, properties, and examples.                                                                   |
| packages/components/rating/src/*.tsx                                   | Introduced multiple files defining various `Rating` components, including `Rating`, `RatingSegment`, and `RatingIcon`, along with hooks for state management.   |
| packages/components/rating/stories/rating.stories.tsx                | Created Storybook stories for the `Rating` component, showcasing various configurations and functionalities.                                                      |
| packages/utilities/shared-icons/src/*.tsx                             | Added new icon components for use in the `Rating` system, including `AngryEmojicon` and `StarIcon`.                                                             |
| packages/components/rating/package.json                                | Added a new `package.json` for the `@nextui-org/rating` component, defining metadata and dependencies.                                                          |

## Assessment against linked issues

| Objective                                             | Addressed | Explanation                          |
|------------------------------------------------------|-----------|--------------------------------------|
| Create a new rating component (Feature Request #3807) | ‚úÖ         |                                      |
| Support for custom icons in the rating component (Feature Request #3807) | ‚úÖ         |                                      |
| Allow for precise value ratings (Feature Request #3807) | ‚úÖ         |                                      |
| Provide examples for usage and documentation (Feature Request #3807) | ‚úÖ         |                                      | 

## Possibly related PRs

- **#3768**: This PR addresses functionality related to the `fullWidth` property in input and select components, which may be relevant to the `Rating` component's handling of properties and user interactions.
- **#3815**: Although primarily focused on updating branding from Twitter to X, this PR involves changes to components that may interact with or be styled similarly to the `Rating` component, particularly in terms of visual presentation and user interface consistency.

## Suggested labels

`üëÄ Status: In Review`, `üìã Scope : Docs`

## Suggested reviewers

- ryo-manba
- wingkwong

<!-- walkthrough_end -->

<!-- internal state start -->


<!--  -->

<!-- internal state end -->
<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- vercel: Someone is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%224237cbe7941f59b9d004c4c5d0e13a49455b60fe%22%7D%2C%22id%22%3A%22Qma3xCmLTW4yxj3EvtJDsPTMAArn5vvVUtkwp3GYULvRhV%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A3808%2C%22repo%22%3A%22nextui%22%7D).

\n- macci001: Hi @ryo-manba, 
The current code uses the vanilla radio inputs which suffices the need of the rating component. 
Reference from rating-segment component:
```
<input
   className={`absolute top-0 inset-0 opacity-0 cursor-pointer`}
    name={name}
    type="radio"
    onBlur={onBlur}
    onChange={onChange}
 />
```
Just trying to understand more, why should we add a dependency of `use-radio-group` to the `rating` as vanilla input radio does the job?  \n- ryo-manba: @macci001 
Using `useRadioGroup` can enhance the accessibility and semantics of native HTML radio elements. For more details, please refer to the [React Aria documentation](https://react-spectrum.adobe.com/react-aria/useRadioGroup.html).\n- macci001: @coderabbitai pause\n- coderabbitai: <!-- This is an auto-generated reply by CodeRabbit -->


<details>
<summary>:white_check_mark: Actions performed</summary>

Reviews paused.

</details>\n- macci001: Applied the reviews in the commit 31632adfb83ff027b9c4815c20413ad22e689ae8
// cc @wingkwong @ryo-manba \n- jrgarciadev: Hey @macci001 please fix the conflicts\n- macci001: @ryo-manba applied your suggestions here.
* Keyboard Navigation Indicator

https://github.com/user-attachments/assets/cf086b7b-6a61-458f-a7cf-996322d8fdd4

https://github.com/user-attachments/assets/2a75ef12-a1ed-4362-b04c-205c8c95f0b2
\n

Files Changed:
- .changeset/smooth-masks-kiss.md (added, 8 changes)\n  Patch: @@ -0,0 +1,8 @@
+---
+"@nextui-org/rating": minor
+"@nextui-org/react": minor
+"@nextui-org/theme": minor
+"@nextui-org/shared-icons": minor
+---
+
+Add rating component(#3807)\n- apps/docs/config/routes.json (modified, 7 changes)\n  Patch: @@ -328,6 +328,13 @@
           "keywords": "radio group, selection set, option selection, exclusive choices",
           "path": "/docs/components/radio-group.mdx"
         },
+        {
+          "key": "rating",
+          "title": "Rating",
+          "keywords": "rating input, radio group, form",
+          "path": "/docs/components/rating.mdx",
+          "newPost": true
+        },
         {
           "key": "range-calendar",
           "title": "Range Calendar",\n- apps/docs/content/components/rating/controlled.ts (added, 18 changes)\n  Patch: @@ -0,0 +1,18 @@
+const App = `import {Rating} from "@nextui-org/react";
+
+export default function App() {
+  const [value, setValue] = React.useState("0");
+  return (<div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+      <Rating length={5} precision={0.5} onValueChange={setValue} />
+      <div className="text-default-500 text-small">Rating value: {value}</div>
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/rating/customIcon.ts (added, 28 changes)\n  Patch: @@ -0,0 +1,28 @@
+const HeartIcon = `export const HeartIcon = (props) => {
+  return (
+    <svg viewBox="0 0 50 50" {...props}>
+      <path d="M24.85,10.126c2.018-4.783,6.628-8.125,11.99-8.125c7.223,0,12.425,6.179,13.079,13.543 c0,0,0.353,1.828-0.424,5.119c-1.058,4.482-3.545,8.464-6.898,11.503L24.85,48L7.402,32.165c-3.353-3.038-5.84-7.021-6.898-11.503 c-0.777-3.291-0.424-5.119-0.424-5.119C0.734,8.179,5.936,2,13.159,2C18.522,2,22.832,5.343,24.85,10.126z" />
+    </svg>
+  );
+};
+`;
+
+const App = `import {Rating} from "@nextui-org/react";
+import {HeartIcon} from "./HeartIcon";
+
+export default function App() {
+  return (
+    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+        <Rating length={5} precision={0.5} icon={HeartIcon({})} fillColor="red" />
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+  "/HeartIcon.jsx": HeartIcon,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/rating/customSegment.ts (added, 98 changes)\n  Patch: @@ -0,0 +1,98 @@
+const AngryEmojicon = `export const AngryEmojicon = ({...props}) => {
+  return (
+    <svg
+      viewBox="-5.28 -5.28 26.56 26.56"
+      xmlns="http://www.w3.org/2000/svg"
+      xmlnsXlink="http://www.w3.org/1999/xlink"
+      {...props}
+    >
+      <path
+        clipRule="evenodd"
+        d="M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM5 4H4V5.5C4 6.32843 4.67157 7 5.5 7C6.32843 7 7 6.32843 7 5.5L5 4ZM12 4H11L9 5.5C9 6.32843 9.67157 7 10.5 7C11.3284 7 12 6.32843 12 5.5V4ZM8 10C6.89543 10 6 10.8954 6 12H4C4 9.79086 5.79086 8 8 8C10.2091 8 12 9.79086 12 12H10C10 10.8954 9.10457 10 8 10Z"
+        fillRule="evenodd"
+      />
+    </svg>
+  );
+};
+`;
+
+const SadEmojicon = `export const SadEmojicon = ({...props}) => {
+  return (
+    <svg
+      viewBox="-11.3 -11.3 56.85 56.85"
+      xmlns="http://www.w3.org/2000/svg"
+      xmlnsXlink="http://www.w3.org/1999/xlink"
+      {...props}
+    >
+      <path d="M17.125,0C7.668,0,0,7.667,0,17.125S7.668,34.25,17.125,34.25c9.459,0,17.125-7.667,17.125-17.125S26.584,0,17.125,0z M23.445,11.422c1.355,0,2.453,1.099,2.453,2.453s-1.098,2.453-2.453,2.453c-1.354,0-2.451-1.099-2.451-2.453 S22.093,11.422,23.445,11.422z M10.806,11.422c1.354,0,2.453,1.099,2.453,2.453s-1.099,2.453-2.453,2.453s-2.453-1.099-2.453-2.453 S9.453,11.422,10.806,11.422z M26.457,25.641c-0.26,0.492-0.77,0.801-1.328,0.801H9.121c-0.559,0-1.067-0.309-1.328-0.801 c-0.26-0.494-0.225-1.09,0.093-1.549c2.098-3.046,5.551-4.865,9.239-4.865c3.689,0,7.146,1.819,9.24,4.866 C26.684,24.55,26.718,25.146,26.457,25.641z" />
+    </svg>
+  );
+}
+`;
+
+const StraightEmojicon = `export const StraightEmojicon = ({...props}) => {
+  return (
+    <svg
+      viewBox="-5.28 -5.28 26.56 26.56"
+      xmlns="http://www.w3.org/2000/svg"
+      xmlnsXlink="http://www.w3.org/1999/xlink"
+      {...props}
+    >
+      <path
+        clipRule="evenodd"
+        d="M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM5.5 7C6.32843 7 7 6.32843 7 5.5C7 4.67157 6.32843 4 5.5 4C4.67157 4 4 4.67157 4 5.5C4 6.32843 4.67157 7 5.5 7ZM12 5.5C12 6.32843 11.3284 7 10.5 7C9.67157 7 9 6.32843 9 5.5C9 4.67157 9.67157 4 10.5 4C11.3284 4 12 4.67157 12 5.5ZM4 9V11H12V9H4Z"
+        fillRule="evenodd"
+      />
+    </svg>
+  );
+};
+`;
+
+const HappyEmojicon = `export const HappyEmojicon = ({...props}) => {
+  return (
+    <svg
+      viewBox="-5.28 -5.28 26.56 26.56"
+      xmlns="http://www.w3.org/2000/svg"
+      xmlnsXlink="http://www.w3.org/1999/xlink"
+      {...props}
+    >
+      <path
+        clipRule="evenodd"
+        d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM7 5.5C7 6.32843 6.32843 7 5.5 7C4.67157 7 4 6.32843 4 5.5C4 4.67157 4.67157 4 5.5 4C6.32843 4 7 4.67157 7 5.5ZM10.5 7C11.3284 7 12 6.32843 12 5.5C12 4.67157 11.3284 4 10.5 4C9.67157 4 9 4.67157 9 5.5C9 6.32843 9.67157 7 10.5 7ZM4 9C4 11.2091 5.79086 13 8 13C10.2091 13 12 11.2091 12 9H4Z"
+        fillRule="evenodd"
+      />
+    </svg>
+  );
+};
+`;
+
+const App = `import {Rating} from "@nextui-org/react";
+import {AngryEmojicon} from "./AngryEmojicon";
+import {SadEmojicon} from "./SadEmojicon";
+import {StraightEmojicon} from "./StraightEmojicon";
+import {HappyEmojicon} from "./HappyEmojicon";
+
+export default function App() {
+  return (
+    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+      <Rating length={4} isSingleSelection>
+        <RatingSegment fillColor="red" icon={AngryEmojicon({})} index={0}/>
+        <RatingSegment fillColor="orange" icon={SadEmojicon({})} index={1} />
+        <RatingSegment icon={StraightEmojicon({})} index={2} />
+        <RatingSegment fillColor="green" icon={HappyEmojicon({})} index={3} />
+      </Rating>
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+  "/AngryEmojicon.jsx": AngryEmojicon,
+  "/SadEmojicon.jsx": SadEmojicon,
+  "/StraightEmojicon.jsx": StraightEmojicon,
+  "/HappyEmojicon.jsx": HappyEmojicon,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/rating/description.ts (added, 16 changes)\n  Patch: @@ -0,0 +1,16 @@
+const App = `import {Rating} from "@nextui-org/react";
+export default function App() {
+  return (
+    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+        <Rating length={5} description={"Description to the rating component"} />
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/rating/disabled.ts (added, 16 changes)\n  Patch: @@ -0,0 +1,16 @@
+const App = `import {Rating} from "@nextui-org/react";
+export default function App() {
+  return (
+    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+        <Rating length={5} isDisabled value={2} />
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/rating/errorMessage.ts (added, 17 changes)\n  Patch: @@ -0,0 +1,17 @@
+const App = `import {Rating} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex flex-col">
+        <Rating isInvalid errorMessage={"Error message for the rating"} />
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/rating/fillColor.ts (added, 16 changes)\n  Patch: @@ -0,0 +1,16 @@
+const App = `import {Rating} from "@nextui-org/react";
+export default function App() {
+  return (
+    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+        <Rating length={5} fillColor="green" />
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/rating/index.ts (added, 23 changes)\n  Patch: @@ -0,0 +1,23 @@
+import usage from "./usage";
+import disabled from "./disabled";
+import required from "./required";
+import sizes from "./sizes";
+import description from "./description";
+import controlled from "./controlled";
+import customIcon from "./customIcon";
+import fillColor from "./fillColor";
+import customSegment from "./customSegment";
+import errorMessage from "./errorMessage";
+
+export const ratingContent = {
+  usage,
+  disabled,
+  required,
+  sizes,
+  description,
+  controlled,
+  customIcon,
+  fillColor,
+  customSegment,
+  errorMessage,
+};\n- apps/docs/content/components/rating/required.ts (added, 17 changes)\n  Patch: @@ -0,0 +1,17 @@
+const App = `import {Rating} from "@nextui-org/react";
+
+export default function App() {
+  return (
+    <div className="flex flex-col">
+    <Rating isRequired length={5} />
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/rating/sizes.ts (added, 22 changes)\n  Patch: @@ -0,0 +1,22 @@
+const App = `import {Rating} from "@nextui-org/react";
+export default function App() {
+  const sizes = ["sm" , "md", "lg"];
+  return (
+    <div className="w-full flex flex-col gap-4">
+      {sizes.map((size) => (
+        <div key={size} className="flex flex-col w-full flex-wrap md:flex-nowrap mb-6 md:mb-0 gap-4">
+          <div className="text-foreground/60">size: {size}</div>
+          <Rating length={5} size={size} />
+        </div>
+      ))}  
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/components/rating/usage.ts (added, 16 changes)\n  Patch: @@ -0,0 +1,16 @@
+const App = `import {Rating} from "@nextui-org/react";
+export default function App() {
+  return (
+    <div className="flex w-full flex-wrap md:flex-nowrap gap-4">
+        <Rating length={5} precision={0.5} />
+    </div>
+  );
+}`;
+
+const react = {
+  "/App.jsx": App,
+};
+
+export default {
+  ...react,
+};\n- apps/docs/content/docs/components/rating.mdx (added, 176 changes)\n  Patch: @@ -0,0 +1,176 @@
+---
+title: "Rating"
+description: "Rating is a component that allows users to enter rating as input."
+---
+import {ratingContent} from "@/content/components/rating";
+
+# Rating
+
+Rating is a component that allows users to enter rating as input.
+
+<ComponentLinks component="rating" storybook="rating"/>
+
+---
+
+<CarbonAd/>
+
+## Installation
+
+<PackageManagers
+  showGlobalInstallWarning
+  commands={{
+    cli: "npx nextui-cli@latest add rating",
+    npm: "npm install @nextui-org/rating",
+    yarn: "yarn add @nextui-org/rating",
+    pnpm: "pnpm add @nextui-org/rating",
+    bun: "bun add @nextui-org/rating",
+  }}
+/>
+
+## Import
+
+<ImportTabs
+  commands={{
+    main: 'import {Rating} from "@nextui-org/react";',
+    individual: 'import {Rating} from "@nextui-org/rating";',
+  }}
+/>
+
+## Usage
+
+<CodeDemo title="Usage" files={ratingContent.usage} />
+
+## Disabled
+
+Passing `isDisabled` property will make `rating` disabled.
+
+<CodeDemo title="Disabled" files={ratingContent.disabled} />
+
+### Required
+
+Passing `isRequired` property will make `rating` required.
+
+<CodeDemo title="Required" files={ratingContent.required} />
+
+
+### Sizes
+
+Size of the `rating` can be changed by `size` property. By default, `size` property is set to `sm`. 
+
+<CodeDemo title="Sizes" files={ratingContent.sizes} />
+
+### Description
+
+Description of the `rating` can be set by `description` property.
+
+<CodeDemo title="Description" files={ratingContent.description} />
+
+### Error Message
+
+Error Message of the `rating` can be set by `errorMessage` property.
+
+<CodeDemo title="Error Message" files={ratingContent.errorMessage} />
+
+### Controlled
+
+<CodeDemo title="Controlled" files={ratingContent.controlled} />
+
+### Fill Color
+
+The color filled in the rating icons can be changed by `fillColor` property. By default, the `fillColor` is set to `gold`.
+
+<CodeDemo title="Fill Color" files={ratingContent.fillColor} />
+
+### Custom Icon
+
+Custom Icon for the rating component can be used by using `icon` property. 
+
+<CodeDemo title="Custom Icon" files={ratingContent.customIcon} />
+
+### RatingSegment
+
+- Rating can be customized with the use of `RatingSegment` as a child of `Rating` component.
+- RatingSegment has an `icon` prop for using custom icon and `fillColor` prop for the color to be filled in the icon.
+
+<CodeDemo title="Rating Segment" files={ratingContent.customSegment} />
+
+**Note:** As shown in the above example, it is required for `RatingSegment` to have `index` prop.
+
+<Spacer y={4} />
+
+## Slots
+
+- **base**: Rating wrapper, it handles alignment, placement, and general appearance.
+- **mainWrapper**: Wraps the underlying iconWrapper and underlying input element.
+- **input**: The underlying input element.
+- **iconWrapper**: Wraps all the iconSegment elements.
+- **iconSegment**: The iconSegment element.
+- **icon**: The icon element. 
+- **radioButtonsWrapper**: Wraps all the hidden radio buttons used in internal of the Rating.
+- **radioButtonWrapper**: Each radio button is wrapped by radioButtonWrapper.
+- **description**: The description of the Rating.
+- **errorMessage**: Error message of the Rating to be displayed when Rating is invalid.
+
+<Spacer y={4} />
+
+## Data Attributes
+
+`Rating` has the following attributes on the `base` element:
+
+- **data-required**:
+  When the rating is required. Based on `isRequired` prop.
+- **data-disabled**:
+  When the rating is disabled. Based on `isDisabled` prop.
+- **data-invalid**:
+  When the rating is invalid. Based on `isInvalid` prop
+- **data-readonly**:
+  When the rating is readonly. Based on `isReadOnly` prop.
+- **data-hover**:
+  When the rating is being hovered. Based on [useHover](https://react-spectrum.adobe.com/react-aria/useHover.html)
+
+<Spacer y={4} />
+
+## Accessibility
+
+- Built with a native `<input>` element.
+- Required and invalid states exposed to assistive technology via ARIA.
+- Support for description message and error message for help text linked to the rating via ARIA.
+
+<Spacer y={4} />
+
+## API
+
+### Rating Props
+
+| Attribute          | Type                                                                                                                                                                           | Description                                                                                                                                                    | Default       |
+| ------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------| ------------- |
+| length             | `number`                                                                                                                                                                       | The length/maxValue of the rating.                                                                                                                             | `5`           |
+| precision          | `number` in `range (0, 1]` (0 not included, 1 included)                                                                                                                        | The precision for the rating value.                                                                                                                            | `1`           |
+| children           | `ReactNode[]`                                                                                                                                                                  | The `RatingSegment` which makes up the `Rating`.                                                                                                               | `null`        |
+| icon               | `ReactNode`                                                                                                                                                                    | The `icon` which needs to be desplayed `rating` component.                                                                                                     | `StarIcon`    |
+| fillColor          | `string`                                                                                                                                                                       | The color which needs to be filled in the displayed icon.                                                                                                      | `gold`        |
+| strokeColor        | `string`                                                                                                                                                                       | The strokeColor which needs to be used in the displayed icon.                                                                                                  | `filledColor` |
+| opacity            | `number` in `range [0, 1]` (both 0 and 1 are included)                                                                                                                         | The opacity for the displayed icon when it is not active.                                                                                                      | `0.4`         |
+| activeOpacity      | `number` in `range [0, 1]` (both 0 and 1 are included)                                                                                                                         | The opacity for the displayed icon when it is active.                                                                                                          | `1`           |
+| isSingleSelection  | `boolean`                                                                                                                                                                      | Only icon corresponding to the rating wil be active.                                                                                                           | `false`       |
+| size               | `sm` \| `md` \| `lg`                                                                                                                                                           | The size of the rating.                                                                                                                                        | `sm`          |
+| value              | `string`                                                                                                                                                                       | The current value of the rating (controlled).                                                                                                                  | -             |
+| defaultValue       | `string`                                                                                                                                                                       | The default value of the rating (uncontrolled).                                                                                                                | -             |
+| description        | `ReactNode`                                                                                                                                                                    | A description for the rating. Provides a hint such as specific requirements for what to choose.                                                                | -             |
+| errorMessage       | `ReactNode` | `((v: ValidationResult) => ReactNode)`                                                                                                                           | A errorMessage for the rating.                                                                                                                                 | -             |
+| isRequired         | `boolean`                                                                                                                                                                      | Whether user rating is required on the input before form submission.                                                                                           | `false`       |
+| isReadOnly         | `boolean`                                                                                                                                                                      | Whether the rating can be selected but not changed by the user.                                                                                                |               |
+| isDisabled         | `boolean`                                                                                                                                                                      | Whether the rating is disabled.                                                                                                                                | `false`       |
+| isInvalid          | `boolean`                                                                                                                                                                      | Whether the rating is invalid.                                                                                                                                 | `false`       |
+| baseRef            | `RefObject<HTMLDivElement>`                                                                                                                                                    | The ref to the base element.                                                                                                                                   | -             |
+| disableAnimation   | `boolean`                                                                                                                                                                      | Whether the rating should be animated.                                                                                                                         | `false`       |
+| classNames         | `Record<"base"ÔΩú "mainWrapper"ÔΩú "iconWrapper"ÔΩú "input"ÔΩú "iconSegment" ÔΩú "icon" ÔΩú "radioButtonsWrapper" ÔΩú "radioButtonWrapper" ÔΩú "description" ÔΩú "errorMessage", string>`  | Allows to set custom class names for the Rating slots.                                                                                                         | -             |
+
+### Rating Events
+
+| Attribute     | Type                                  | Description                                                                                                                         |
+| ------------- | ------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------- |
+| onChange      | `React.ChangeEvent<HTMLInputElement>` | Handler that is called when the element's value changes. You can pull out the new value by accessing `event.target.value` (string). |
+| onValueChange | `(value: string) => void`             | Handler that is called when the element's value changes.                                                                            |
+
+\n- apps/docs/public/sitemap-0.xml (modified, 136 changes)\n  Patch: @@ -1,65 +1,77 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:news="http://www.google.com/schemas/sitemap-news/0.9" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:mobile="http://www.google.com/schemas/sitemap-mobile/1.0" xmlns:image="http://www.google.com/schemas/sitemap-image/1.1" xmlns:video="http://www.google.com/schemas/sitemap-video/1.1">
-<url><loc>https://nextui.org/feed.xml</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/figma</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/accordion</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/autocomplete</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/avatar</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/badge</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/breadcrumbs</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/button</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/card</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/checkbox-group</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/checkbox</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/chip</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/circular-progress</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/code</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/divider</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/dropdown</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/image</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/input</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/kbd</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/link</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/listbox</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/modal</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/navbar</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/pagination</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/popover</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/progress</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/radio-group</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/scroll-shadow</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/select</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/skeleton</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/slider</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/snippet</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/spacer</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/spinner</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/switch</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/table</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/tabs</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/textarea</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/tooltip</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/components/user</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/frameworks/astro</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/frameworks/nextjs</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/frameworks/remix</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/frameworks/vite</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/guide/design-principles</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/guide/installation</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/guide/introduction</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/guide/routing</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/guide/upgrade-to-v2</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/customization/colors</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/customization/create-theme</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/customization/custom-variants</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/customization/customize-theme</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/customization/dark-mode</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/customization/layout</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/customization/override-styles</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/docs/customization/theme</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/blog/nextui-v2</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/blog/v2.1.0</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/blog/v2.2.0</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
-<url><loc>https://nextui.org/blog</loc><lastmod>2024-02-02T20:24:45.107Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/feed.xml</loc><lastmod>2024-09-26T15:07:32.436Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/figma</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/blog/nextui-v2</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/blog/v2.1.0</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/blog/v2.2.0</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/blog/v2.3.0</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/blog/v2.4.0</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/blog</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/api-references/cli-api</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/api-references/nextui-provider</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/accordion</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/autocomplete</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/avatar</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/badge</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/breadcrumbs</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/button</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/calendar</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/card</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/checkbox-group</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/checkbox</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/chip</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/circular-progress</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/code</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/date-input</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/date-picker</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/date-range-picker</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/divider</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/dropdown</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/image</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/input</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/kbd</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/link</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/listbox</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/modal</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/navbar</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/pagination</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/popover</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/progress</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/radio-group</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/range-calendar</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/rating</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/scroll-shadow</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/select</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/skeleton</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/slider</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/snippet</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/spacer</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/spinner</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/switch</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/table</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/tabs</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/textarea</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/time-input</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/tooltip</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/components/user</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/customization/colors</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/customization/create-theme</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/customization/custom-variants</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/customization/customize-theme</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/customization/dark-mode</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/customization/layout</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/customization/override-styles</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/customization/theme</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/frameworks/astro</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/frameworks/nextjs</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/frameworks/remix</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/frameworks/vite</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/guide/cli</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/guide/design-principles</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/guide/installation</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/guide/introduction</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/guide/routing</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
+<url><loc>https://nextui.org/docs/guide/upgrade-to-v2</loc><lastmod>2024-09-26T15:07:32.437Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
 </urlset>
\ No newline at end of file\n- packages/components/rating/README.md (added, 24 changes)\n  Patch: @@ -0,0 +1,24 @@
+# @nextui-org/rating
+
+Rating Component allows the user to select a value with the help of icons.
+
+Please refer to the [documentation](https://nextui.org/docs/components/rating) for more information.
+
+## Installation
+
+```sh
+yarn add @nextui-org/rating
+# or
+npm i @nextui-org/rating
+```
+
+## Contribution
+
+Yes please! See the
+[contributing guidelines](https://github.com/nextui-org/nextui/blob/master/CONTRIBUTING.md)
+for details.
+
+## License
+
+This project is licensed under the terms of the
+[MIT license](https://github.com/nextui-org/nextui/blob/master/LICENSE).\n- packages/components/rating/__tests__/rating.test.tsx (added, 216 changes)\n  Patch: @@ -0,0 +1,216 @@
+import * as React from "react";
+import {act, render, renderHook} from "@testing-library/react";
+import {focus} from "@nextui-org/test-utils";
+import {useForm} from "react-hook-form";
+import userEvent from "@testing-library/user-event";
+
+import {Rating} from "../src";
+
+describe("Rating", () => {
+  it("should render correctly", () => {
+    const wrapper = render(<Rating length={5} />);
+
+    expect(() => wrapper.unmount()).not.toThrow();
+  });
+
+  it("ref should be forwarded", () => {
+    const ref = React.createRef<HTMLInputElement>();
+
+    render(<Rating ref={ref} length={5} />);
+    expect(ref.current).not.toBeNull();
+  });
+
+  it("should have description when added", async () => {
+    const description = "description message";
+
+    render(<Rating description={description} length={5} />);
+
+    const input = document.querySelector("[data-slot=base]")!;
+
+    expect(input).toHaveTextContent(description);
+  });
+
+  it("should have the icons according to the length", async () => {
+    render(<Rating length={3} />);
+
+    const icons = document.querySelectorAll("[data-slot=icon]");
+
+    expect(icons.length).toBe(3);
+  });
+
+  it("should be able to reset the rating value after being selected once", async () => {
+    render(<Rating length={3} />);
+
+    const input = document.querySelectorAll("[data-slot=input]")[0];
+    const radioButtonForValueZero = document.querySelectorAll("[data-slot=radio]")[0];
+    const radioButtonForValueOne = document.querySelectorAll("[data-slot=radio]")[1];
+
+    const user = userEvent.setup();
+
+    await user.click(radioButtonForValueOne);
+    expect(input).toHaveValue(1);
+
+    await user.click(radioButtonForValueZero);
+    expect(input).toHaveValue(0);
+  });
+
+  it("should be able to change the rating value on keypress", async () => {
+    render(<Rating length={3} />);
+
+    const input = document.querySelectorAll("[data-slot=input]")[0];
+    const radioButtonForValueOne = document.querySelectorAll("[data-slot=radio]")[1] as HTMLElement;
+    const radioButtonForValueTwo = document.querySelectorAll("[data-slot=radio]")[2] as HTMLElement;
+
+    const user = userEvent.setup();
+
+    await user.click(radioButtonForValueOne);
+    expect(input).toHaveValue(1);
+
+    act(() => {
+      focus(radioButtonForValueOne);
+    });
+    await user.keyboard("[ArrowRight]");
+    expect(input).toHaveValue(2);
+
+    act(() => {
+      focus(radioButtonForValueTwo);
+    });
+    await user.keyboard("[ArrowLeft]");
+    expect(input).toHaveValue(1);
+  });
+});
+
+describe("validation", () => {
+  let user = userEvent.setup();
+
+  beforeAll(() => {
+    user = userEvent.setup();
+  });
+
+  it("should support native validationBehaviour", async () => {
+    const {getAllByRole, getByTestId} = render(
+      <form data-testid="form">
+        <Rating isRequired length={5} validationBehavior="native" />
+      </form>,
+    );
+
+    const radios = getAllByRole("radio") as HTMLInputElement[];
+
+    for (let input of radios) {
+      expect(input).toHaveAttribute("required");
+      expect(input).not.toHaveAttribute("aria-required");
+      expect(input.validity.valid).toBe(false);
+    }
+
+    act(() => {
+      (getByTestId("form") as HTMLFormElement).checkValidity();
+    });
+    expect(document.activeElement).toBe(radios[0]);
+
+    await user.click(radios[0]);
+    for (let input of radios) {
+      expect(input.validity.valid).toBe(true);
+    }
+  });
+
+  it("should support aria validationBehaviour", async () => {
+    const {getByRole, getAllByRole} = render(
+      <form data-testid="form">
+        <Rating
+          defaultValue="1"
+          length={5}
+          validate={(v) => (v === "1" ? "Too scary" : null)}
+          validationBehavior="aria"
+        />
+      </form>,
+    );
+
+    const group = getByRole("radiogroup");
+
+    expect(group).toHaveAttribute("aria-describedby");
+    expect(group).toHaveAttribute("aria-invalid", "true");
+    expect(
+      document.getElementById(group.getAttribute("aria-describedby") as string),
+    ).toHaveTextContent("Too scary");
+
+    const radios = getAllByRole("radio") as HTMLInputElement[];
+
+    for (let input of radios) {
+      expect(input.validity.valid).toBe(true);
+    }
+
+    await user.click(radios[0]);
+    expect(group).not.toHaveAttribute("aria-describedby");
+    expect(group).not.toHaveAttribute("aria-invalid");
+  });
+});
+
+describe("Rating with React Hook Form", () => {
+  let rating1: Element;
+  let rating2: Element;
+  let rating3: Element;
+  let radioButtonRating3: Element;
+  let submitButton: HTMLButtonElement;
+  let onSubmit: () => void;
+
+  beforeEach(() => {
+    const {result} = renderHook(() =>
+      useForm({
+        defaultValues: {
+          withDefaultValue: "2",
+          withoutDefaultValue: "",
+          requiredField: "",
+        },
+      }),
+    );
+
+    const {handleSubmit, register} = result.current;
+
+    onSubmit = jest.fn();
+
+    render(
+      <>
+        <form className="flex flex-col gap-4" onSubmit={handleSubmit(onSubmit)}>
+          <Rating data-testid="input-1" {...register("withDefaultValue")} length={5} />
+          <Rating data-testid="input-2" {...register("withoutDefaultValue")} length={5} />
+          <Rating
+            data-testid="input-3"
+            label="Required"
+            {...register("requiredField", {required: true})}
+            length={5}
+          />
+          <button type="submit">Submit</button>
+        </form>
+      </>,
+    );
+
+    rating1 = document.querySelectorAll("[data-slot=input]")[0]!;
+    rating2 = document.querySelectorAll("[data-slot=input]")[1]!;
+    rating3 = document.querySelectorAll("[data-slot=input]")[2]!;
+    radioButtonRating3 = document.querySelectorAll("[data-slot=radio]")[13]!;
+    submitButton = document.querySelector("button")!;
+  });
+
+  it("should work with defaultValues", () => {
+    expect(rating1).toHaveValue(2);
+    expect(rating2).toHaveValue(null);
+    expect(rating3).toHaveValue(null);
+  });
+
+  it("should not submit form when required field is empty", async () => {
+    const user = userEvent.setup();
+
+    await user.click(submitButton);
+
+    expect(onSubmit).toHaveBeenCalledTimes(0);
+  });
+
+  it("should submit form when required field is not empty", async () => {
+    const user = userEvent.setup();
+
+    await user.click(radioButtonRating3);
+    await user.click(submitButton);
+
+    expect(onSubmit).toHaveBeenCalledTimes(1);
+  });
+});\n- packages/components/rating/package.json (added, 67 changes)\n  Patch: @@ -0,0 +1,67 @@
+{
+  "name": "@nextui-org/rating",
+  "version": "2.0.0",
+  "description": "Icon selection based rating component",
+  "keywords": [
+    "rating"
+  ],
+  "author": "Maharshi Alpesh <maharshialpesh@gmail.com>",
+  "homepage": "https://nextui.org",
+  "license": "MIT",
+  "main": "src/index.ts",
+  "sideEffects": false,
+  "files": [
+    "dist"
+  ],
+  "publishConfig": {
+    "access": "public"
+  },
+  "repository": {
+    "type": "git",
+    "url": "git+https://github.com/nextui-org/nextui.git",
+    "directory": "packages/components/rating"
+  },
+  "bugs": {
+    "url": "https://github.com/nextui-org/nextui/issues"
+  },
+  "scripts": {
+    "build": "tsup src --dts",
+    "build:fast": "tsup src",
+    "dev": "pnpm build:fast --watch",
+    "clean": "rimraf dist .turbo",
+    "typecheck": "tsc --noEmit",
+    "prepack": "clean-package",
+    "postpack": "clean-package restore"
+  },
+  "peerDependencies": {
+    "react": ">=18",
+    "react-dom": ">=18",
+    "@nextui-org/theme": ">=2.0.0",
+    "@nextui-org/system": ">=2.0.0"
+  },
+  "dependencies": {
+    "@nextui-org/shared-icons": "workspace:*",
+    "@nextui-org/shared-utils": "workspace:*",
+    "@nextui-org/react-utils": "workspace:*",
+    "@nextui-org/radio": "workspace:*",
+    "@react-aria/utils": "3.24.1",
+    "@react-stately/slider": "3.5.4",
+    "@react-aria/visually-hidden": "3.8.12",
+    "@react-aria/i18n": "3.11.1",
+    "@react-aria/focus": "3.17.1",
+    "@react-types/textfield": "3.9.3",
+    "@react-aria/textfield": "3.14.5",
+    "@react-stately/utils": "3.10.1",
+    "@nextui-org/use-safe-layout-effect": "workspace:*"
+  },
+  "devDependencies": {
+    "@nextui-org/theme": "workspace:*",
+    "@nextui-org/system": "workspace:*",
+    "@nextui-org/test-utils": "workspace:*",
+    "clean-package": "2.2.0",
+    "react": "^18.0.0",
+    "react-dom": "^18.0.0",
+    "react-hook-form": "^7.51.3"
+  },
+  "clean-package": "../../../clean-package.config.json"
+}\n- packages/components/rating/src/index.ts (added, 12 changes)\n  Patch: @@ -0,0 +1,12 @@
+import Rating from "./rating";
+import RatingSegment from "./rating-segment";
+
+// export types
+export type {RatingProps} from "./rating";
+
+// export hooks
+export {useRating} from "./use-rating";
+
+// export component
+export {Rating};
+export {RatingSegment};\n- packages/components/rating/src/rating-context.tsx (added, 9 changes)\n  Patch: @@ -0,0 +1,9 @@
+import {createContext} from "@nextui-org/react-utils";
+
+import {UseRatingReturn} from "./use-rating";
+
+export const [RatingProvider, useRatingContext] = createContext<UseRatingReturn>({
+  name: "RatingContext",
+  errorMessage:
+    "useRatingContext: `context` is undefined. Seems like you forgot to wrap all rating components within `<Rating />`",
+});\n- packages/components/rating/src/rating-icon.tsx (added, 43 changes)\n  Patch: @@ -0,0 +1,43 @@
+import {clsx} from "@nextui-org/shared-utils";
+
+import {useRatingContext} from "./rating-context";
+
+interface RatingIconProps {
+  offset: number;
+  icon?: React.ReactNode;
+  fillColor?: string;
+}
+
+export const RatingIcon = ({offset, icon, fillColor}: RatingIconProps) => {
+  const id = Math.random().toString(36);
+  const context = useRatingContext();
+  const {slots, isRTL, classNames, opacity, activeOpacity} = context;
+
+  icon = icon ?? context.icon;
+  fillColor = fillColor ?? context.fillColor;
+  const strokeColor = context.strokeColor ?? fillColor;
+  const iconStyles = slots.icon({class: clsx(classNames?.icon)});
+
+  return (
+    <svg
+      aria-label={`Rating icon filled to ${offset * 100}%`}
+      className={iconStyles}
+      data-slot="icon"
+      role="img"
+    >
+      <defs>
+        <linearGradient id={"grad" + id}>
+          <stop
+            offset={offset}
+            stopColor={fillColor}
+            stopOpacity={isRTL ? opacity : activeOpacity}
+          />
+          <stop stopColor={fillColor} stopOpacity={isRTL ? activeOpacity : opacity} />
+        </linearGradient>
+      </defs>
+      <g fill={`url(#${"grad" + id})`} stroke={strokeColor}>
+        {icon}
+      </g>
+    </svg>
+  );
+};\n- packages/components/rating/src/rating-segment.tsx (added, 132 changes)\n  Patch: @@ -0,0 +1,132 @@
+import {useMemo, useState} from "react";
+import {clsx, dataAttr} from "@nextui-org/shared-utils";
+import {useHover} from "@react-aria/interactions";
+import {Radio} from "@nextui-org/radio";
+import {chain} from "@react-aria/utils";
+
+import {useRatingContext} from "./rating-context";
+import {RatingIcon} from "./rating-icon";
+
+interface RatingSegmentProps {
+  index: number;
+  icon?: React.ReactNode;
+  fillColor?: string;
+}
+
+const RatingSegment = ({index, icon, fillColor}: RatingSegmentProps) => {
+  const context = useRatingContext();
+  const {
+    ratingValue,
+    isRTL,
+    isIconWrapperHovered,
+    shouldConsiderHover,
+    precision,
+    slots,
+    classNames,
+    isSingleSelection,
+    name,
+    focusWithin,
+    onChange,
+    onBlur,
+    setRatingValue,
+  } = context;
+
+  let value = ratingValue.selectedValue;
+
+  if (isIconWrapperHovered && shouldConsiderHover) {
+    value = ratingValue.hoveredValue;
+  }
+
+  const calculateOffsets = (value: number, index: number, isSingleSelection: boolean) => {
+    if (isSingleSelection) {
+      const singleOffset = Number(Math.floor(value) - 1 == index);
+
+      return {offset: singleOffset, offsetRTL: 1 - singleOffset};
+    }
+
+    if (Math.floor(value) > index) {
+      return {offset: 1, offsetRTL: 0};
+    }
+
+    if (Math.floor(value) < index) {
+      return {offset: 0, offsetRTL: 1};
+    }
+
+    const fractionalPart = value - Math.floor(value);
+
+    return {offset: fractionalPart, offsetRTL: 1 - fractionalPart};
+  };
+
+  const {offset, offsetRTL} = calculateOffsets(value, index, isSingleSelection);
+
+  const segmentStyles = slots.iconSegment({class: clsx(classNames?.iconSegment)});
+  const {isHovered, hoverProps} = useHover({});
+  const [isKeyPress, setIsKeyPress] = useState(false);
+
+  const radioButtons = useMemo(() => {
+    const numButtons = Math.floor(1 / precision);
+    const gridStyle = {
+      display: "grid",
+      gridTemplateColumns: `repeat(${numButtons}, 1fr)`,
+    };
+
+    return (
+      <div
+        className={slots.radioButtonsWrapper({class: classNames?.radioButtonsWrapper})}
+        style={gridStyle}
+      >
+        {Array.from(Array(numButtons)).map((_, idx) => {
+          const radioButtonValue =
+            idx === numButtons - 1 ? index + 1 : index + precision + idx * precision;
+          const radioButtonLabel = `${radioButtonValue}star`;
+
+          return (
+            <div
+              key={idx}
+              className={slots.radioButtonWrapper({class: classNames?.radioButtonWrapper})}
+              onMouseMove={() => {
+                setRatingValue({
+                  hoveredValue: radioButtonValue,
+                  selectedValue: ratingValue.selectedValue,
+                });
+              }}
+            >
+              <Radio
+                key={idx}
+                aria-label={radioButtonLabel}
+                classNames={{base: "w-full h-full m-0"}}
+                data-slot="radio"
+                name={name}
+                value={radioButtonValue.toString()}
+                onBlur={chain(onBlur, () => {
+                  setIsKeyPress(false);
+                })}
+                onChange={onChange}
+                onKeyUp={() => {
+                  setIsKeyPress(true);
+                }}
+              />
+            </div>
+          );
+        })}
+      </div>
+    );
+  }, [precision, name, ratingValue, setRatingValue]);
+
+  return (
+    <div
+      className={segmentStyles}
+      data-hovered={dataAttr(isHovered)}
+      data-selected={dataAttr(
+        index + 1 == Math.ceil(ratingValue.selectedValue) && isKeyPress && focusWithin,
+      )}
+      data-slot="segment"
+      {...hoverProps}
+    >
+      <RatingIcon fillColor={fillColor} icon={icon} offset={isRTL ? offsetRTL : offset} />
+      {radioButtons}
+    </div>
+  );
+};
+
+export default RatingSegment;\n- packages/components/rating/src/rating.tsx (added, 78 changes)\n  Patch: @@ -0,0 +1,78 @@
+import {forwardRef} from "@nextui-org/system";
+import {useMemo} from "react";
+import {Radio, RadioGroup} from "@nextui-org/radio";
+import {VisuallyHidden} from "@react-aria/visually-hidden";
+import {StarIcon} from "@nextui-org/shared-icons";
+
+import {UseRatingProps, useRating} from "./use-rating";
+import RatingSegment from "./rating-segment";
+import {RatingProvider} from "./rating-context";
+
+export interface RatingProps extends UseRatingProps {}
+
+const Rating = forwardRef<"div", RatingProps>((props, ref) => {
+  const context = useRating({...props, ref});
+
+  const {
+    Component,
+    children,
+    length,
+    ratingValue,
+    value,
+    name,
+    icon = <StarIcon />,
+    onChange,
+    onBlur,
+    setRatingValue,
+    getBaseProps,
+    getMainWrapperProps,
+    getIconWrapperProps,
+    getInputProps,
+    getRadioGroupProps,
+  } = context;
+
+  const IconList = useMemo(() => {
+    return (
+      <RadioGroup {...getRadioGroupProps()} data-slot="radiogroup">
+        <Radio
+          className={"absolute inset-0 top-0 opacity-0"}
+          data-slot="radio"
+          name={name}
+          value={"0"}
+          onBlur={onBlur}
+          onChange={onChange}
+        />
+        <div {...getIconWrapperProps()}>
+          {children ??
+            Array.from(Array(length)).map((_, idx) => (
+              <RatingSegment key={"segment-" + idx} icon={icon} index={idx} />
+            ))}
+        </div>
+      </RadioGroup>
+    );
+  }, [name, children, length, icon, onBlur, onChange, getIconWrapperProps, getRadioGroupProps]);
+
+  const Input = useMemo(
+    () => (
+      <VisuallyHidden>
+        <input {...getInputProps()} />
+      </VisuallyHidden>
+    ),
+    [value, ratingValue, setRatingValue, getInputProps],
+  );
+
+  return (
+    <Component {...getBaseProps()}>
+      <RatingProvider value={context}>
+        <div {...getMainWrapperProps()}>
+          {IconList}
+          {Input}
+        </div>
+      </RatingProvider>
+    </Component>
+  );
+});
+
+Rating.displayName = "NextUI.Rating";
+
+export default Rating;\n- packages/components/rating/src/use-rating.ts (added, 349 changes)\n  Patch: @@ -0,0 +1,349 @@
+import type {RatingSlots, RatingVariantProps, SlotsToClasses} from "@nextui-org/theme";
+
+import {
+  HTMLNextUIProps,
+  mapPropsVariants,
+  PropGetter,
+  useProviderContext,
+} from "@nextui-org/system";
+import {rating} from "@nextui-org/theme";
+import {ReactRef, useDOMRef} from "@nextui-org/react-utils";
+import {clsx, dataAttr, objectToDeps} from "@nextui-org/shared-utils";
+import {ReactNode, useCallback, useMemo, useRef, useState} from "react";
+import {useHover, useFocusWithin} from "@react-aria/interactions";
+import {mergeProps} from "@react-aria/utils";
+import {useLocale} from "@react-aria/i18n";
+import {AriaTextFieldProps} from "@react-types/textfield";
+import {useControlledState} from "@react-stately/utils";
+import {useSafeLayoutEffect} from "@nextui-org/use-safe-layout-effect";
+import {RadioGroupProps} from "@nextui-org/radio";
+import {ValidationError} from "@react-types/shared";
+
+export type RatingValueType = {
+  hoveredValue: number;
+  selectedValue: number;
+};
+
+interface Props extends HTMLNextUIProps<"div"> {
+  /**
+   * Ref to the DOM node.
+   */
+  ref?: ReactRef<HTMLInputElement | null>;
+  /*
+   * The Rating Segments that make up the Rating Component.
+   */
+  children?: ReactNode;
+  /**
+   * Ref to the DOM node.
+   */
+  baseRef?: ReactRef<HTMLDivElement | null>;
+  /**
+   * Icon to be used for rating. By default, star icon will be used.
+   */
+  icon?: React.ReactNode;
+  /**
+   * Color to be filled in the icon. By default, fillColor will be gold.
+   */
+  fillColor?: string;
+  /**
+   * Color for the stroke of the icon. By default, strokeColor will be equal to fillColor.
+   */
+  strokeColor?: string;
+  /**
+   * Opacity when the icon is not active. By default, opacity will be 0.4. Range [0, 1]
+   */
+  opacity?: number;
+  /**
+   * Opacity when the icon is active. By default, selectedOpacity will be 1. Range [0, 1]
+   */
+  activeOpacity?: number;
+  /**
+   * Precision fraction round-off for Rating value. Range (0, 1]
+   */
+  precision?: number;
+  /**
+   * Maximum value for the Rating.
+   */
+  length: number;
+  /**
+   * If true, then only the Icon corresponding to Rating value will be highlighted.
+   */
+  isSingleSelection?: boolean;
+  /**
+   * Boolean to disable the Rating Component.
+   */
+  isDisabled?: boolean;
+  /**
+   * Boolean to disable animation.
+   */
+  disableAnimation?: boolean;
+  /**
+   * Classname or List of classes to change the classNames of the element.
+   * if `className` is passed, it will be added to the base slot.
+   *
+   * @example
+   * ```ts
+   * <Rating classNames={{
+   *    base:"base-classes",
+   *    mainWrapper:"main-wrapper-classes",
+   *    iconWrapper: "icon-wrapper-classes",
+   *    iconSegement: "icon-segment-classes",
+   *    icon: "icon-classes",
+   *    input: "input-classes",
+   *    radioButtonsWrapper: "radio-buttons-wrapper-classes",
+   *    radioButtonWrapper: "radio-button-wrapper-classes",
+   *    label: "label-classes",
+   *    description: "description-classes",
+   *    errorMessage: "error-message-classes",
+   * }} />
+   * ```
+   */
+  classNames?: SlotsToClasses<RatingSlots>;
+  /**
+   * onValueChnage method gets called whenever the value of rating changes.
+   */
+  onValueChange?: (value: number) => void;
+  /**
+   * validate method
+   */
+  validate?: (value: string | null) => ValidationError | true | null | undefined;
+}
+
+export type UseRatingProps = Props & RatingVariantProps & Omit<AriaTextFieldProps, "onChange">;
+
+export function useRating(originalProps: UseRatingProps) {
+  const globalContext = useProviderContext();
+  const [props, variantProps] = mapPropsVariants(originalProps, rating.variantKeys);
+
+  const {
+    ref,
+    baseRef,
+    as,
+    className,
+    length = 5,
+    classNames,
+    strokeColor,
+    precision: precisionValue = 1,
+    fillColor = "gold",
+    opacity: opacityValue = 0.4,
+    activeOpacity: activeOpacityValue = 1,
+    children = null,
+    isSingleSelection = false,
+    icon,
+    defaultValue,
+    value,
+    onValueChange = () => {},
+    validationBehavior,
+    name,
+    errorMessage,
+    description,
+    onChange,
+    onBlur,
+    label,
+    ...otherProps
+  } = props;
+
+  const {
+    disableAnimation = globalContext?.disableAnimation ?? false,
+    isDisabled = originalProps.isDisabled ?? false,
+    isRequired = originalProps.isRequired ?? false,
+  } = originalProps;
+
+  const {direction} = useLocale();
+  const isRTL = direction === "rtl";
+
+  const Component = as || "div";
+
+  const domRef = useDOMRef<HTMLInputElement>(ref);
+  const baseDomRef = useDOMRef<HTMLDivElement>(baseRef);
+  const iconWrapperRef = useRef<HTMLDivElement>(null);
+
+  const slots = useMemo(
+    () =>
+      rating({
+        ...variantProps,
+        disableAnimation,
+        isDisabled,
+      }),
+    [objectToDeps(variantProps)],
+  );
+
+  const handleValueChange = useCallback(
+    (value: RatingValueType | undefined) => {
+      if (value && value.selectedValue != undefined && value.selectedValue != -1) {
+        onValueChange(value.selectedValue);
+      }
+    },
+    [onValueChange],
+  );
+
+  const [ratingValue, setRatingValue] = useControlledState<RatingValueType>(
+    props.value
+      ? {hoveredValue: Number(props.value), selectedValue: Number(props.value)}
+      : undefined,
+    props.defaultValue
+      ? {hoveredValue: Number(props.defaultValue), selectedValue: Number(props.defaultValue)}
+      : {hoveredValue: -1, selectedValue: -1},
+    handleValueChange,
+  );
+
+  // if we use `react-hook-form`, it will set the input value using the ref in register
+  // i.e. setting ref.current.value to something which is uncontrolled
+  // hence, sync the state with `ref.current.value`
+  useSafeLayoutEffect(() => {
+    if (!domRef.current || !domRef.current.value) return;
+    setRatingValue({
+      hoveredValue: Number(domRef.current.value),
+      selectedValue: Number(domRef.current.value),
+    });
+  }, [domRef.current]);
+
+  let precision = precisionValue;
+
+  if (precisionValue <= 0 || precisionValue > 1) precision = 1;
+
+  let opacity = opacityValue;
+
+  if (opacityValue < 0) opacity = 0;
+  if (opacityValue > 1) opacity = 1;
+
+  let activeOpacity = activeOpacityValue;
+
+  if (activeOpacityValue < 0) activeOpacity = 0;
+  if (activeOpacityValue > 1) activeOpacity = 1;
+
+  const isInvalid = props.isInvalid;
+
+  const {hoverProps, isHovered: isIconWrapperHovered} = useHover({isDisabled});
+  const shouldConsiderHover = Math.abs(Math.floor(1 / precision) - 1 / precision) < Number.EPSILON;
+
+  const baseStyles = clsx(classNames?.base, className);
+  const [focusWithin, setFocusWithin] = useState(false);
+  const {focusWithinProps} = useFocusWithin({
+    onFocusWithinChange: (focusWithin: boolean) => {
+      setFocusWithin(focusWithin);
+    },
+  });
+
+  const getBaseProps: PropGetter = useCallback(
+    (props = {}) => {
+      return {
+        ref: baseDomRef,
+        className: slots.base({class: baseStyles}),
+        ...mergeProps(props, focusWithinProps),
+        "data-slot": "base",
+        "data-disabled": dataAttr(isDisabled),
+        "data-invalid": dataAttr(isInvalid),
+        "data-required": dataAttr(originalProps?.isRequired),
+        "data-readonly": dataAttr(originalProps?.isReadOnly),
+        "data-hovered": dataAttr(isIconWrapperHovered),
+      };
+    },
+    [baseDomRef, slots, baseStyles, isDisabled, isInvalid, originalProps],
+  );
+
+  const getMainWrapperProps: PropGetter = useCallback(
+    (props = {}) => {
+      return {
+        className: slots.mainWrapper({class: clsx(classNames?.mainWrapper)}),
+        ...props,
+        "data-slot": "main-wrapper",
+      };
+    },
+    [slots],
+  );
+
+  const getIconWrapperProps: PropGetter = useCallback(
+    (props = {}) => {
+      return {
+        ref: iconWrapperRef,
+        className: slots.iconWrapper({class: clsx(classNames?.iconWrapper)}),
+        ...mergeProps(props, hoverProps),
+        "data-slot": "icon-wrapper",
+        "data-hover": dataAttr(isIconWrapperHovered),
+        "data-selected": dataAttr(ratingValue.selectedValue == 0 && focusWithin),
+      };
+    },
+    [iconWrapperRef, slots, hoverProps, ratingValue, setRatingValue],
+  );
+
+  const getInputProps: PropGetter = useCallback(
+    (props = {}) => {
+      return {
+        ref: domRef,
+        value: ratingValue.selectedValue == -1 ? "" : ratingValue.selectedValue,
+        className: slots.input({class: clsx(classNames?.input)}),
+        type: "number",
+        readOnly: true,
+        ...mergeProps(props, otherProps),
+        "data-slot": "input",
+      };
+    },
+    [domRef, ratingValue, slots, originalProps, originalProps.value],
+  );
+
+  const getRadioGroupProps = (props = {}): RadioGroupProps => {
+    return {
+      name,
+      orientation: "horizontal",
+      defaultValue,
+      description,
+      errorMessage,
+      isInvalid,
+      isRequired,
+      validationBehavior,
+      value: ratingValue.selectedValue != -1 ? ratingValue.selectedValue.toString() : null,
+      classNames: {
+        errorMessage: slots.errorMessage({class: classNames?.errorMessage}),
+        description: slots.description({class: classNames?.description}),
+        label: slots.label({class: classNames?.label}),
+      },
+      validate: originalProps.validate,
+      label: label,
+      onChange,
+      onValueChange: (e) => {
+        setRatingValue({selectedValue: Number(e), hoveredValue: Number(e)});
+      },
+      ...props,
+    };
+  };
+
+  return {
+    Component,
+    domRef,
+    children,
+    isSingleSelection,
+    precision,
+    length,
+    isRTL,
+    isIconWrapperHovered,
+    ratingValue,
+    classNames,
+    slots,
+    fillColor,
+    strokeColor,
+    isInvalid,
+    isRequired,
+    shouldConsiderHover,
+    opacity,
+    activeOpacity,
+    name,
+    description,
+    errorMessage,
+    validationBehavior,
+    icon,
+    defaultValue,
+    value,
+    focusWithin,
+    setRatingValue,
+    getBaseProps,
+    getMainWrapperProps,
+    getIconWrapperProps,
+    getInputProps,
+    getRadioGroupProps,
+    onChange,
+    onBlur,
+  };
+}
+
+export type UseRatingReturn = ReturnType<typeof useRating>;\n- packages/components/rating/stories/rating.stories.tsx (added, 296 changes)\n  Patch: @@ -0,0 +1,296 @@
+import type {ValidationResult} from "@react-types/shared";
+
+import React, {useState} from "react";
+import {Meta} from "@storybook/react";
+import {button, rating} from "@nextui-org/theme";
+import {useForm} from "react-hook-form";
+import {
+  AngryEmojicon,
+  HappyEmojicon,
+  HeartIcon,
+  LikeIcon,
+  MusicIcon,
+  SadEmojicon,
+  StarIcon,
+  StraightEmojicon,
+} from "@nextui-org/shared-icons";
+
+import {Rating, RatingProps, RatingSegment} from "../src";
+
+export default {
+  title: "Components/Rating",
+  component: Rating,
+  argTypes: {
+    size: {
+      control: {type: "select"},
+      options: ["sm", "md", "lg"],
+    },
+    isDisabled: {
+      control: {
+        type: "boolean",
+      },
+    },
+    disableAnimation: {
+      control: {
+        type: "boolean",
+      },
+    },
+    validationBehavior: {
+      control: {
+        type: "select",
+      },
+      options: ["aria", "native"],
+    },
+  },
+} as Meta<typeof Rating>;
+
+const defaultProps = {
+  ...rating.defaultVariants,
+};
+
+const Template = (args: RatingProps) => <Rating {...args} length={5} />;
+
+const WithReactHookFormTemplate = (args) => {
+  const {
+    register,
+    handleSubmit,
+    formState: {errors},
+  } = useForm();
+
+  const onSubmit = (data: any) => {
+    // eslint-disable-next-line no-console
+    alert("Submitted value: " + JSON.stringify(data));
+  };
+
+  if (args.validationBehavior === "aria") {
+    args = {
+      ...args,
+      "aria-required": true,
+    };
+  }
+
+  return (
+    <div className="w-screen h-screen flex flex-col">
+      <form className="flex flex-col gap-2" onSubmit={handleSubmit(onSubmit)}>
+        <Rating {...register("rating", {required: true})} {...args} length={5} />
+        {errors.rating && <span className="text-danger text-tiny">This field is required</span>}
+        <button className={button({class: "w-fit"})} type="submit">
+          Submit
+        </button>
+      </form>
+    </div>
+  );
+};
+
+const ErrorTemplate = (args) => {
+  const {register, handleSubmit} = useForm();
+
+  const onSubmit = (data: any) => {
+    // eslint-disable-next-line no-console
+    alert("Submitted value: " + JSON.stringify(data));
+  };
+
+  return (
+    <div className="w-screen h-screen flex flex-col">
+      <form className="flex flex-col gap-2" onSubmit={handleSubmit(onSubmit)}>
+        <Rating {...register("rating", {required: true})} {...args} length={5} />
+        <button className={button({class: "w-fit"})} type="submit">
+          Submit
+        </button>
+      </form>
+    </div>
+  );
+};
+
+const ControlledTemplate = (args) => {
+  const [value, setValue] = React.useState("2");
+
+  return (
+    <div className="w-full flex flex-col gap-2 max-w-[240px]">
+      <Rating {...args} length={5} value={value} onValueChange={setValue} />
+      <p className="text-default-500 text-tiny">Rating value: {value}</p>
+    </div>
+  );
+};
+
+const PrecisionTemplate = (args) => {
+  const [value1, setValue1] = useState(0);
+  const [value2, setValue2] = useState(0);
+
+  return (
+    <div className="w-full flex flex-col gap-2">
+      <div className="flex gap-x-5">
+        <Rating precision={0.25} onValueChange={setValue1} {...args} length={5} />
+        <span className="text-xs text-foreground-500">Precision 0.25: {value1}</span>
+      </div>
+      <div className="flex gap-x-5">
+        <Rating precision={0.2} onValueChange={setValue2} {...args} length={5} />
+        <span className="text-xs text-foreground-500">Precision 0.20: {value2}</span>
+      </div>
+    </div>
+  );
+};
+
+const CustomIconTemplate = (args) => {
+  const [value1, setValue1] = useState("0");
+  const [value2, setValue2] = useState("0");
+  const [value3, setValue3] = useState("0");
+
+  return (
+    <div className="w-full flex flex-col gap-2">
+      <div className="flex gap-x-10">
+        <Rating
+          {...args}
+          fillColor="red"
+          icon={<HeartIcon />}
+          length={5}
+          onValueChange={setValue1}
+        />
+        <span className="text-tiny text-foreground-500">Heart Rating: {value1}</span>
+      </div>
+      <div className="flex gap-x-10">
+        <Rating
+          {...args}
+          fillColor="green"
+          icon={<LikeIcon />}
+          length={5}
+          onValueChange={setValue2}
+        />
+        <span className="text-tiny text-foreground-500">Like Rating: {value2}</span>
+      </div>
+      <div className="flex gap-x-10">
+        <Rating
+          {...args}
+          fillColor="blue"
+          icon={<MusicIcon />}
+          length={5}
+          onValueChange={setValue3}
+        />
+        <div className="text-tiny text-foreground-500">Music Rating: {value3}</div>
+      </div>
+    </div>
+  );
+};
+
+const CustomSegmentTemplate = (args) => {
+  const [value, setValue] = useState(0);
+
+  return (
+    <div>
+      <Rating isSingleSelection length={4} onValueChange={setValue}>
+        <RatingSegment fillColor="red" icon={<AngryEmojicon />} index={0} {...args} />
+        <RatingSegment fillColor="orange" icon={<SadEmojicon />} index={1} {...args} />
+        <RatingSegment icon={<StraightEmojicon />} index={2} {...args} />
+        <RatingSegment fillColor="green" icon={<HappyEmojicon />} index={3} {...args} />
+      </Rating>
+      <div className="text-tiny text-foreground-500">Rating Value: {value}</div>
+    </div>
+  );
+};
+
+export const Default = {
+  render: Template,
+  args: {
+    ...defaultProps,
+  },
+};
+
+export const Accessibility = {
+  render: Template,
+  args: {
+    ...defaultProps,
+    length: 5,
+    "aria-label": "Rate this item",
+  },
+  parameters: {
+    a11y: {disable: false},
+  },
+};
+
+export const Required = {
+  render: WithReactHookFormTemplate,
+  args: {
+    ...defaultProps,
+    isRequired: true,
+  },
+};
+
+export const Disabled = {
+  render: Template,
+  args: {
+    ...defaultProps,
+    value: 3,
+    isDisabled: true,
+  },
+};
+
+export const ReadOnly = {
+  render: Template,
+  args: {
+    ...defaultProps,
+    value: 2,
+    isReadOnly: true,
+  },
+};
+
+export const WithDescription = {
+  render: Template,
+  args: {
+    ...defaultProps,
+    description: "Description for the rating component.",
+  },
+};
+
+export const WithErrorMessage = {
+  render: Template,
+  args: {
+    ...defaultProps,
+    errorMessage: "Error Message for the rating component.",
+    isInvalid: true,
+  },
+};
+
+export const WithErrorMessageFunction = {
+  render: ErrorTemplate,
+
+  args: {
+    ...defaultProps,
+    isRequired: true,
+    min: 1,
+    description: "Minimum rating value of 1 is required.",
+    errorMessage: (value: ValidationResult) => {
+      if (value.validationDetails.rangeUnderflow) {
+        return "Please rating value greater than or equal to 1.";
+      }
+    },
+  },
+};
+
+export const Controlled = {
+  render: ControlledTemplate,
+  args: {
+    ...defaultProps,
+    icon: StarIcon({}),
+  },
+};
+
+export const WithPrecision = {
+  render: PrecisionTemplate,
+  args: {
+    ...defaultProps,
+  },
+};
+
+export const CustomIcon = {
+  render: CustomIconTemplate,
+  args: {
+    ...defaultProps,
+  },
+};
+
+export const CustomSegments = {
+  render: CustomSegmentTemplate,
+  args: {
+    ...defaultProps,
+  },
+};\n- packages/components/rating/tsconfig.json (added, 10 changes)\n  Patch: @@ -0,0 +1,10 @@
+{
+  "extends": "../../../tsconfig.json",
+  "compilerOptions": {
+    "baseUrl": ".",
+    "paths": {
+      "tailwind-variants": ["../../../node_modules/tailwind-variants"]
+    },
+  },
+  "include": ["src", "index.ts"]
+}\n- packages/components/rating/tsup.config.ts (added, 8 changes)\n  Patch: @@ -0,0 +1,8 @@
+import {defineConfig} from "tsup";
+
+export default defineConfig({
+  clean: true,
+  target: "es2019",
+  format: ["cjs", "esm"],
+  banner: {js: '"use client";'},
+});\n- packages/core/react/package.json (modified, 1 changes)\n  Patch: @@ -86,6 +86,7 @@
     "@nextui-org/alert": "workspace:*",
     "@nextui-org/framer-utils": "workspace:*",
     "@nextui-org/drawer": "workspace:*",
+    "@nextui-org/rating": "workspace:*",
     "@react-aria/visually-hidden": "3.8.15"
   },
   "peerDependencies": {\n- packages/core/react/src/index.ts (modified, 1 changes)\n  Patch: @@ -45,6 +45,7 @@ export * from "@nextui-org/date-input";
 export * from "@nextui-org/date-picker";
 export * from "@nextui-org/alert";
 export * from "@nextui-org/drawer";
+export * from "@nextui-org/rating";
 
 /**
  * React Aria - Exports\n- packages/core/theme/src/components/index.ts (modified, 1 changes)\n  Patch: @@ -12,6 +12,7 @@ export * from "./chip";
 export * from "./badge";
 export * from "./checkbox";
 export * from "./radio";
+export * from "./rating";
 export * from "./pagination";
 export * from "./toggle";
 export * from "./accordion";\n
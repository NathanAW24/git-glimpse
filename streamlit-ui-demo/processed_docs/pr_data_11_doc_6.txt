Pull Request Number: 2970
Title: fix(dropdown): focus behaviour on press / enter keydown
Base Branch: canary
Head Branch: fix/eng-726
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/2970
State: MERGED
Created At: 2024-05-09T09:57:25Z
Merged At: 2024-05-19T19:40:28Z
Participants: wingkwong, jrgarciadev

Description:
Closes #2863
üìù Description
As the doc stated, when keydown (press /enter) on the trigger, the first menu item should be focused. This PR is to cover this missing behaviour.
‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit

New Features

Improved keyboard accessibility in dropdown menus: now focuses on the first item when opened with Space or Enter keys.
Added @nextui-org/test-utils as a dependency for the dropdown component.

Commits:
- fix(dropdown): set focus on the first item\n- feat(dropdown): add keyboard interactions tests\n- feat(changeset): add changeset\n- Merge branch 'canary' into fix/eng-726\n- fix(dropdown): use fireEvent.keyDown instead\n- chore(deps): add @nextui-org/test-utils to dropdown\n- refactor(dropdown): pass onKeyDown to menu trigger and don't hardcode autoFocus\n- chore(dropdown): remove autoFocus\n- fix(menu): pass userMenuProps to useTreeState and useAriaMenu and remove from getListProps\n- chore(changeset): add menu package\n

Labels:


Comments:
- linear: <p><a href="https://linear.app/nextui-inc/issue/ENG-726/[bug]-dropdownitem-not-getting-focused-properly-and-enter-or-space-not">ENG-726 [BUG] - DropdownItem not getting focused properly and 'Enter' | 'Space' not selecting the item.</a></p>\n- vercel: [vc]: #v2BzpA6jIKpEIv3Bh52QMNVoLTJkpVORmsP5m5Y6Mto=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi8zRmIySEFCYjZLaVdORzFkY0s5eXNpcGJ3M1Y5IiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtZW5nLTcyNi1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLWRvY3MtdjItZ2l0LWZpeC1lbmctNzI2LW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvQlh4UHRFSGl2N2U1SDZvbWpuSnBFYU1vak5IdiIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1maXgtZW5nLTcyNi1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LWVuZy03MjYtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/3Fb2HABb6KiWNG1dcK9ysipbw3V9)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-726-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fix-eng-726-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 19, 2024 2:12pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/BXxPtEHiv7e5H6omjnJpEaMojNHv)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-726-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fix-eng-726-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 19, 2024 2:12pm |


\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 6549a0b399f8a897b30425cd98dacac0060036ec

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 3 packages</summary>

  | Name                 | Type  |
| -------------------- | ----- |
| @nextui-org/dropdown | Patch |
| @nextui-org/menu     | Patch |
| @nextui-org/react    | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/eng-726?filename=.changeset/orange-apes-talk.md&value=---%0A%22%40nextui-org%2Fdropdown%22%3A%20patch%0A%22%40nextui-org%2Fmenu%22%3A%20patch%0A---%0A%0Afix(dropdown)%3A%20focus%20behaviour%20on%20press%20%2F%20enter%20keydown%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
The recent changes aim to improve the behavior of the `@nextui-org/dropdown` package by ensuring that the first item in the dropdown receives focus automatically when opened using the Space or Enter keys. These enhancements are designed to enhance accessibility and improve user interaction with keyboard inputs.

## Changes

| File Path                                      | Change Summary                                                                                           |
|------------------------------------------------|----------------------------------------------------------------------------------------------------------|
| `.changeset/heavy-kangaroos-stare.md`          | Introduces a patch to focus on the first dropdown item when the Space or Enter key is pressed.           |
| `packages/components/dropdown/__tests__/dropdown.test.tsx` | Adds test cases for keyboard interactions focusing on the first dropdown item using Enter and Space keys. |
| `packages/components/dropdown/package.json`     | Adds `@nextui-org/test-utils` as a dependency in the `package.json` file for the dropdown component.     |
| `packages/components/dropdown/src/use-dropdown.ts` | Adds `autoFocus: "first"` property to `MenuProps` in the `useDropdown` function for auto-focusing.     |
| `packages/components/menu/src/use-menu.ts`      | Updates the usage of props in the `useMenu` function to include `userMenuProps` alongside `otherProps`. |

## Assessment against linked issues

| Objective                                                                                                   | Addressed | Explanation                                                                                   |
|-------------------------------------------------------------------------------------------------------------|-----------|-----------------------------------------------------------------------------------------------|
| DropdownItem not getting focused properly when Dropdown opens with Space or Enter (Issue #2863)            | ‚úÖ        |                                                                                               |
| 'Enter' or 'Space' not selecting the item after focusing on DropdownItem (Issue #2863)                      | ‚ùì        | The changes address the focus issue, but it's unclear if the selection functionality is explicitly added. |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

.changeset/heavy-kangaroos-stare.md: ## Short summary

The new file introduces a patch for the `@nextui-org/dropdown` and `@nextui-org/menu` packages. It focuses on the first item when pressing the Space or Enter key on the dropdown menu open.

## Alterations to the declarations of exported or public entities

No alterations to the declarations of exported or public entities.

---

packages/components/dropdown/__tests__/dropdown.test.tsx: ### Summary

In the `dropdown.test.tsx` file, two new test cases were added under the `Keyboard interactions` describe block. These test cases simulate focusing on the first item in the dropdown menu using keyboard interactions for the keys `Enter` and `Space` respectively. The tests ensure that the correct item receives focus when these keys are pressed.

---

packages/components/dropdown/package.json: ## Short Summary
Added `@nextui-org/test-utils` as a dependency in the `package.json` file for the dropdown component, alongside existing dependencies like `@nextui-org/user`, `@nextui-org/image`, and `@nextui-org/shared-icons`.

## Alterations to the declarations of exported or public entities
- `@nextui-org/test-utils`: Added as a dependency in the `package.json` file for the dropdown component.

---

packages/components/dropdown/src/use-dropdown.ts: ### Summary

In the `useDropdown` function in `use-dropdown.ts`, the `autoFocus` property with the value `state.focusStrategy || true` has been added to the `MenuProps` object.
The `onKeyDown` property has been removed from the `menuTriggerProps` object.

---

packages/components/menu/src/use-menu.ts: ## Short Summary

The change in functionality involves updating the usage of props in the `useMenu` function in `use-menu.ts`. Specifically, the `innerState` and `menuProps` now include `userMenuProps` in addition to `otherProps`, affecting the state and ARIA menu props generation.

## Alterations to the declarations of exported or public entities

- `export function useMenu<T extends object>(props: UseMenuProps<T>)` in `packages/components/menu/src/use-menu.ts`
  - Before: `const innerState = useTreeState({...otherProps, children});`
  - After: `const innerState = useTreeState({...otherProps, ...userMenuProps, children});`
  - Before: `const {menuProps} = useAriaMenu(otherProps, state, domRef);`
  - After: `const {menuProps} = useAriaMenu({...otherProps, ...userMenuProps}, state, domRef);`

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

### PR Summary

**Title:** fix(dropdown): focus behaviour on press / enter keydown  
**User:** wingkwong  
**Number:** 2970  

**Description:**  
This pull request addresses the issue where the first menu item in a dropdown should be focused when the trigger is activated by pressing the "Enter" or "Space" key. The current behavior does not focus the first item as expected. This PR implements the missing behavior to ensure that the first menu item is focused upon keydown events on the trigger.

### Objectives from Linked Issues

**Linked Issue:** #2863  

**Title:** [BUG] - DropdownItem not getting focused properly and 'Enter' | 'Space' not selecting the item.

**Description:**  
- **NextUI Version:** 2.3.5
- **Bug Description:** When focusing on the DropdownTrigger and pressing "Space" to open the dropdown, the first item in the list should be focused, but it is not. Additionally, when a DropdownItem is focused and "Enter" or "Space" is pressed, the item should be selected, but it is not.
- **Steps to Reproduce:**
  1. Navigate to a page with a Dropdown and other components.
  2. Use the "Tab" key to focus on the Dropdown and press "Space".
  3. Observe that the first item in the Dropdown does not get focused.
  4. Use "Tab" to focus on the first Dropdown item.
  5. Use the keyboard arrow keys to select an item and press "Space".
  6. Observe that the item is not selected.
- **Expected Behavior:** Pressing "Space" while the Dropdown is focused should focus on the Dropdown items. Pressing "Enter" or "Space" should select the focused item.

**Operating System Version:** macOS  
**Browser:** Chrome

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->

<!--

### AI-generated summary of generated summaries

A patch has been introduced for the `@nextui-org/dropdown` package to enhance keyboard interactions. Specifically, when the dropdown menu is opened, pressing the Space or Enter key will now focus on the first item. This functionality was implemented by adding the `autoFocus` property to the `MenuProps` object in the `useDropdown` function, with the value set to `state.focusStrategy || true`.

To ensure this new feature works correctly, two new test cases were added to the `dropdown.test.tsx` file. These tests simulate focusing on the first item in the dropdown menu using the Enter and Space keys, verifying that the correct item receives focus.

Additionally, the `@nextui-org/test-utils` package was added as a dependency in the `package.json` file for the dropdown component, supporting the new test cases.

In the `useMenu` function in `use-menu.ts`, the functionality was updated to include `userMenuProps` alongside `otherProps` in the `innerState` and `menuProps`, affecting the state and ARIA menu props generation. This change ensures proper handling of user-defined menu props in the menu functionality.

### Alterations to the declarations of exported or public entities

- **`package.json`**:
  - **Before**: No `@nextui-org/test-utils` dependency.
  - **After**: Added `@nextui-org/test-utils` as a dependency.

- **`use-menu.ts`**:
  - **Before**: 
    - `export function useMenu<T extends object>(props: UseMenuProps<T>)`
      - `const innerState = useTreeState({...otherProps, children});`
      - `const {menuProps} = useAriaMenu(otherProps, state, domRef);`
  - **After**: 
    - `export function useMenu<T extends object>(props: UseMenuProps<T>)`
      - `const innerState = useTreeState({...otherProps, ...userMenuProps, children});`
      - `const {menuProps} = useAriaMenu({...otherProps, ...userMenuProps}, state, domRef);`

-->

<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 9c70e925830ee3e3fd697e12498cf9085fdda9f3 -->
<!-- 2de66ad2f817b46874e75a55ff08804bd1017417 -->
<!-- 6549a0b399f8a897b30425cd98dacac0060036ec -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/heavy-kangaroos-stare.md (added, 6 changes)\n  Patch: @@ -0,0 +1,6 @@
+---
+"@nextui-org/dropdown": patch
+"@nextui-org/menu": patch
+---
+
+Focus on the first item when pressing Space / Enter key on dropdown menu open (#2863)\n- packages/components/dropdown/__tests__/dropdown.test.tsx (modified, 81 changes)\n  Patch: @@ -1,7 +1,8 @@
 import * as React from "react";
-import {act, render} from "@testing-library/react";
+import {act, render, fireEvent} from "@testing-library/react";
 import {Button} from "@nextui-org/button";
 import userEvent from "@testing-library/user-event";
+import {keyCodes} from "@nextui-org/test-utils";
 import {User} from "@nextui-org/user";
 import {Image} from "@nextui-org/image";
 import {Avatar} from "@nextui-org/avatar";
@@ -538,3 +539,81 @@ describe("Dropdown", () => {
     spy.mockRestore();
   });
 });
+
+describe("Keyboard interactions", () => {
+  it("should focus on the first item on keyDown (Enter)", async () => {
+    const wrapper = render(
+      <Dropdown>
+        <DropdownTrigger>
+          <Button data-testid="trigger-test">Trigger</Button>
+        </DropdownTrigger>
+        <DropdownMenu disallowEmptySelection aria-label="Actions" selectionMode="single">
+          <DropdownItem key="new">New file</DropdownItem>
+          <DropdownItem key="copy">Copy link</DropdownItem>
+          <DropdownItem key="edit">Edit file</DropdownItem>
+          <DropdownItem key="delete" color="danger">
+            Delete file
+          </DropdownItem>
+        </DropdownMenu>
+      </Dropdown>,
+    );
+
+    let triggerButton = wrapper.getByTestId("trigger-test");
+
+    act(() => {
+      triggerButton.focus();
+    });
+
+    expect(triggerButton).toHaveFocus();
+
+    fireEvent.keyDown(triggerButton, {key: "Enter", charCode: keyCodes.Enter});
+
+    let menu = wrapper.queryByRole("menu");
+
+    expect(menu).toBeTruthy();
+
+    let menuItems = wrapper.getAllByRole("menuitemradio");
+
+    expect(menuItems.length).toBe(4);
+
+    expect(menuItems[0]).toHaveFocus();
+  });
+
+  it("should focus on the first item on keyDown (Space)", async () => {
+    const wrapper = render(
+      <Dropdown>
+        <DropdownTrigger>
+          <Button data-testid="trigger-test">Trigger</Button>
+        </DropdownTrigger>
+        <DropdownMenu disallowEmptySelection aria-label="Actions" selectionMode="single">
+          <DropdownItem key="new">New file</DropdownItem>
+          <DropdownItem key="copy">Copy link</DropdownItem>
+          <DropdownItem key="edit">Edit file</DropdownItem>
+          <DropdownItem key="delete" color="danger">
+            Delete file
+          </DropdownItem>
+        </DropdownMenu>
+      </Dropdown>,
+    );
+
+    let triggerButton = wrapper.getByTestId("trigger-test");
+
+    act(() => {
+      triggerButton.focus();
+    });
+
+    expect(triggerButton).toHaveFocus();
+
+    fireEvent.keyDown(triggerButton, {key: " ", charCode: keyCodes.Space});
+
+    let menu = wrapper.queryByRole("menu");
+
+    expect(menu).toBeTruthy();
+
+    let menuItems = wrapper.getAllByRole("menuitemradio");
+
+    expect(menuItems.length).toBe(4);
+
+    expect(menuItems[0]).toHaveFocus();
+  });
+});\n- packages/components/dropdown/package.json (modified, 1 changes)\n  Patch: @@ -59,6 +59,7 @@
     "@nextui-org/user": "workspace:*",
     "@nextui-org/image": "workspace:*",
     "@nextui-org/shared-icons": "workspace:*",
+    "@nextui-org/test-utils": "workspace:*",
     "framer-motion": "^11.0.22",
     "clean-package": "2.2.0",
     "react": "^18.0.0",\n- packages/components/dropdown/src/use-dropdown.ts (modified, 2 changes)\n  Patch: @@ -126,7 +126,7 @@ export function useDropdown(props: UseDropdownProps) {
   ) => {
     // These props are not needed for the menu trigger since it is handled by the popover trigger.
     // eslint-disable-next-line @typescript-eslint/no-unused-vars
-    const {onKeyDown, onPress, onPressStart, ...otherMenuTriggerProps} = menuTriggerProps;
+    const {onPress, onPressStart, ...otherMenuTriggerProps} = menuTriggerProps;
 
     return {
       ...mergeProps(otherMenuTriggerProps, {isDisabled}, originalProps),\n- packages/components/menu/src/use-menu.ts (modified, 6 changes)\n  Patch: @@ -119,11 +119,11 @@ export function useMenu<T extends object>(props: UseMenuProps<T>) {
   const domRef = useDOMRef(ref);
   const shouldFilterDOMProps = typeof Component === "string";
 
-  const innerState = useTreeState({...otherProps, children});
+  const innerState = useTreeState({...otherProps, ...userMenuProps, children});
 
   const state = propState || innerState;
 
-  const {menuProps} = useAriaMenu(otherProps, state, domRef);
+  const {menuProps} = useAriaMenu({...otherProps, ...userMenuProps}, state, domRef);
 
   const slots = useMemo(() => menu({className}), [className]);
   const baseStyles = clsx(classNames?.base, className);
@@ -144,9 +144,7 @@ export function useMenu<T extends object>(props: UseMenuProps<T>) {
     return {
       "data-slot": "list",
       className: slots.list({class: classNames?.list}),
-      ...userMenuProps,
       ...menuProps,
-
       ...props,
     };
   };\n- pnpm-lock.yaml (modified, 10 changes)\n  Patch: @@ -1468,6 +1468,9 @@ importers:
       '@nextui-org/system':
         specifier: workspace:*
         version: link:../../core/system
+      '@nextui-org/test-utils':
+        specifier: workspace:*
+        version: link:../../utilities/test-utils
       '@nextui-org/theme':
         specifier: workspace:*
         version: link:../../core/theme
@@ -5967,10 +5970,6 @@ packages:
     peerDependencies:
       '@effect-ts/otel-node': '*'
     peerDependenciesMeta:
-      '@effect-ts/core':
-        optional: true
-      '@effect-ts/otel':
-        optional: true
       '@effect-ts/otel-node':
         optional: true
     dependencies:
@@ -22464,9 +22463,6 @@ packages:
     resolution: {integrity: sha512-W+gxAq7aQ9dJIg/XLKGcRT0cvnStFAQHPaI0pvD0U2l6IVLueUAm3nwN7lkY62zZNmlvNx6jNtE4wlbS+CyqSg==}
     engines: {node: '>= 12.0.0'}
     hasBin: true
-    peerDependenciesMeta:
-      '@parcel/core':
-        optional: true
     dependencies:
       '@parcel/config-default': 2.12.0(@parcel/core@2.12.0)(typescript@4.9.5)
       '@parcel/core': 2.12.0\n
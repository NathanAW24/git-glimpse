Pull Request Number: 1846
Title: fix(docs): sorting in table use-case example
Base Branch: canary
Head Branch: docs/table-usecase
Author: ARajgor
URL: https://github.com/nextui-org/nextui/pull/1846
State: OPEN
Created At: 2023-11-01T05:31:06Z
Merged At: None
Participants: ARajgor, jrgarciadev, soplayer, miguelxmarquez, brycelund, wingkwong

Description:
Closes #1839
üìù Description

Table use-case example has a sorting issue.

‚õ≥Ô∏è Current behavior (updates)

It sorts the elements displayed in the current view. that is defined by the number of rows per page so if 5 rows show per page then sorting works only on those 5 elements.

üöÄ New behavior

Now it will consider the whole dataset for sorting. Works perfectly fine on any column or any number of rows per page. Also fixed the code for both React and Typescript.

üí£ Is this a breaking change (Yes/No):
No
üìù Additional Information

Commits:
- fix(docs): sorting in table use-case example\n- fix(docs): sorting in table use-case example\n- Merge branch 'docs/table-usecase' of https://github.com/ARajgor/nextui into docs/table-usecase\n

Labels:


Comments:
- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: ff36d3204b0202387194853b6466d5e4dbfee36d

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/ARajgor/nextui/new/docs/table-usecase?filename=.changeset/cuddly-boxes-return.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A---%0A%0Afix(docs)%3A%20sorting%20in%20table%20use-case%20example%0A)

\n- vercel: [vc]: #gd3asrv/ycJAumvQTj4d3KS95hglAKNoYbHlTUnhGSc=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvNEdnZllqb2NTdzR5MWtzcW1xcWRIUHV3Q2lSQSIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWFyYWpnb3ItZG9jcy10YWItYzg2YTMwLW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLWFyYWpnb3ItZG9jcy10YWItYzg2YTMwLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fSx7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi8yNUNETXByN01iaFN2SjFhTUNEWndCd1R2eXVlIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1mb3JrLWFyYWpnb3ItZG9jcy10YWJsZS11c2VjYXNlLW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktZG9jcy12Mi1naXQtZm9yay1hcmFqZ29yLWRvY3MtdGFibGUtdXNlY2FzZS1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/25CDMpr7MbhSvJ1aMCDZwBwTvyue)) | [Visit Preview](https://vercel.live/open-feedback/nextui-docs-v2-git-fork-arajgor-docs-table-usecase-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-fork-arajgor-docs-table-usecase-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 24, 2023 2:41pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/4GgfYjocSw4y1ksqmqqdHPuwCiRA)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-arajgor-docs-tab-c86a30-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-arajgor-docs-tab-c86a30-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 24, 2023 2:41pm |


\n- vercel: @ARajgor is attempting to deploy a commit to the **NextUI** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%224a1199fea39f80b9888677c8e8eb5e1c3eb136d8%22%7D%2C%22id%22%3A%22Qmbv7YS9M5ctBfpdWnfeCaXM1aEv47VtrFB7j7ZzezBkXB%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A1846%2C%22repo%22%3A%22nextui%22%7D).

\n- jrgarciadev: Thank you! @ARajgor could you apply the same fix for the `custom-styles` example?\n- ARajgor: > Thank you! @ARajgor could you apply the same fix for the `custom-styles` example?

Done.\n- soplayer: Maybe it's just me ... (new to React)

But I was dealing with (a lot of) `undefined` 'values in my project

And comparing with `undefined` will always returns `zero` in the current implementation

Totally breaks the sort... I basically debugged everything else before that :/

So maybe a little fix would be nice to save other newbies some time :D

For now I just cast `first` and `second` to the empty string with ` || ""`

Also can someone explain me how the useMemo() works ? when i put a log inside the function it always get executed on the sort although none of the dependencies have changed and literally nothing else happens besides me just spamming the sort button

Thanks !

\n

Files Changed:
- apps/docs/content/components/table/custom-styles.ts (modified, 39 changes)\n  Patch: @@ -360,8 +360,6 @@ export default function App() {
   });
   const [page, setPage] = React.useState(1);
 
-  const pages = Math.ceil(users.length / rowsPerPage);
-
   const hasSearchFilter = Boolean(filterValue);
 
   const headerColumns = React.useMemo(() => {
@@ -387,22 +385,20 @@ export default function App() {
     return filteredUsers;
   }, [users, filterValue, statusFilter]);
 
-  const items = React.useMemo(() => {
+  const pages = Math.ceil(filteredItems.length / rowsPerPage);
+  
+  const sortedItems = React.useMemo(() => {
     const start = (page - 1) * rowsPerPage;
     const end = start + rowsPerPage;
 
-    return filteredItems.slice(start, end);
-  }, [page, filteredItems, rowsPerPage]);
-
-  const sortedItems = React.useMemo(() => {
-    return [...items].sort((a, b) => {
+    return [...filteredItems].sort((a, b) => {
       const first = a[sortDescriptor.column];
       const second = b[sortDescriptor.column];
       const cmp = first < second ? -1 : first > second ? 1 : 0;
 
       return sortDescriptor.direction === "descending" ? -cmp : cmp;
     });
-  }, [sortDescriptor, items]);
+  }, [sortDescriptor, page, filteredItems, rowsPerPage]);
 
   const renderCell = React.useCallback((user, columnKey) => {
     const cellValue = user[columnKey];
@@ -598,11 +594,11 @@ export default function App() {
         <span className="text-small text-default-400">
           {selectedKeys === "all"
             ? "All items selected"
-            : \`\${selectedKeys.size} of \${items.length} selected\`}
+            : \`\${selectedKeys.size} of \${filteredItems.length} selected\`}
         </span>
       </div>
     );
-  }, [selectedKeys, items.length, page, pages, hasSearchFilter]);
+  }, [selectedKeys, page, pages, hasSearchFilter]);
 
   const classNames = React.useMemo(
     () => ({
@@ -715,8 +711,6 @@ export default function App() {
   });
   const [page, setPage] = React.useState(1);
 
-  const pages = Math.ceil(users.length / rowsPerPage);
-
   const hasSearchFilter = Boolean(filterValue);
 
   const headerColumns = React.useMemo(() => {
@@ -742,22 +736,21 @@ export default function App() {
     return filteredUsers;
   }, [users, filterValue, statusFilter]);
 
-  const items = React.useMemo(() => {
+  const pages = Math.ceil(filteredItems.length / rowsPerPage);
+
+  const sortedItems = React.useMemo(() => {
     const start = (page - 1) * rowsPerPage;
     const end = start + rowsPerPage;
 
-    return filteredItems.slice(start, end);
-  }, [page, filteredItems, rowsPerPage]);
-
-  const sortedItems = React.useMemo(() => {
-    return [...items].sort((a: User, b: User) => {
+    return [...filteredItems].sort((a: User, b: User) => {
       const first = a[sortDescriptor.column as keyof User] as number;
       const second = b[sortDescriptor.column as keyof User] as number;
       const cmp = first < second ? -1 : first > second ? 1 : 0;
 
       return sortDescriptor.direction === "descending" ? -cmp : cmp;
-    });
-  }, [sortDescriptor, items]);
+    }).slice(start, end);
+  }, [sortDescriptor, page, filteredItems, rowsPerPage]);
+
 
   const renderCell = React.useCallback((user: User, columnKey: React.Key) => {
     const cellValue = user[columnKey as keyof User];
@@ -953,11 +946,11 @@ export default function App() {
         <span className="text-small text-default-400">
           {selectedKeys === "all"
             ? "All items selected"
-            : \`\${selectedKeys.size} of \${items.length} selected\`}
+            : \`\${selectedKeys.size} of \${filteredItems.length} selected\`}
         </span>
       </div>
     );
-  }, [selectedKeys, items.length, page, pages, hasSearchFilter]);
+  }, [selectedKeys, page, pages, hasSearchFilter]);
 
   const classNames = React.useMemo(
     () => ({\n- apps/docs/content/components/table/use-case.ts (modified, 32 changes)\n  Patch: @@ -719,22 +719,18 @@ export default function App() {
 
   const pages = Math.ceil(filteredItems.length / rowsPerPage);
 
-  const items = React.useMemo(() => {
+  const sortedItems = React.useMemo(() => {
     const start = (page - 1) * rowsPerPage;
     const end = start + rowsPerPage;
-
-    return filteredItems.slice(start, end);
-  }, [page, filteredItems, rowsPerPage]);
-
-  const sortedItems = React.useMemo(() => {
-    return [...items].sort((a, b) => {
+    
+    return [...filteredItems].sort((a, b) => {
       const first = a[sortDescriptor.column];
       const second = b[sortDescriptor.column];
       const cmp = first < second ? -1 : first > second ? 1 : 0;
 
       return sortDescriptor.direction === "descending" ? -cmp : cmp;
-    });
-  }, [sortDescriptor, items]);
+    }).slice(start, end);
+  }, [sortDescriptor, page, filteredItems, rowsPerPage]);
 
   const renderCell = React.useCallback((user, columnKey) => {
     const cellValue = user[columnKey];
@@ -930,7 +926,7 @@ export default function App() {
         </div>
       </div>
     );
-  }, [selectedKeys, items.length, page, pages, hasSearchFilter]);
+  }, [selectedKeys, page, pages, hasSearchFilter]);
 
   return (
     <Table
@@ -1048,30 +1044,26 @@ export default function App() {
 
   const pages = Math.ceil(filteredItems.length / rowsPerPage);
 
-  const items = React.useMemo(() => {
+  const sortedItems = React.useMemo(() => {
     const start = (page - 1) * rowsPerPage;
     const end = start + rowsPerPage;
 
-    return filteredItems.slice(start, end);
-  }, [page, filteredItems, rowsPerPage]);
-
-  const sortedItems = React.useMemo(() => {
-    return [...items].sort((a: User, b: User) => {
+    return [...filteredItems].sort((a: User, b: User) => {
       const first = a[sortDescriptor.column as keyof User] as number;
       const second = b[sortDescriptor.column as keyof User] as number;
       const cmp = first < second ? -1 : first > second ? 1 : 0;
 
       return sortDescriptor.direction === "descending" ? -cmp : cmp;
-    });
-  }, [sortDescriptor, items]);
+    }).slice(start, end);
+  }, [sortDescriptor, page, filteredItems, rowsPerPage]);
 
   const renderCell = React.useCallback((user: User, columnKey: React.Key) => {
     const cellValue = user[columnKey as keyof User];
 
     switch (columnKey) {
       case "name":
         return (
-          <User
+          <User 
             avatarProps={{radius: "lg", src: user.avatar}}
             description={user.email}
             name={cellValue}
@@ -1259,7 +1251,7 @@ export default function App() {
         </div>
       </div>
     );
-  }, [selectedKeys, items.length, page, pages, hasSearchFilter]);
+  }, [selectedKeys, page, pages, hasSearchFilter]);
 
   return (
     <Table\n
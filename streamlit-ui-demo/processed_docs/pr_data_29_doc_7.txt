Pull Request Number: 385
Title: v1.0.6-beta.5
Base Branch: main
Head Branch: next
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/385
State: MERGED
Created At: 2022-04-01T13:14:17Z
Merged At: 2022-04-01T13:22:32Z
Participants: jrgarciadev, codecov-commenter, tianenpang, richtone

Description:
Types of changes


 Bug fix (non-breaking change which fixes an issue)
 New feature (non-breaking change which adds functionality)
 Breaking change (fix or feature that would cause existing functionality to not work as expected)
 Documentation Only
 Refactor

Description, Motivation and Context

refactor(react-button): Button component has been migrated to @react-aria/button providing better accessibility and event handling.
-fix(react-modal): Modal open animation behaviour, the same opacity animation was added to BackdropContent as the Modal
-fix(react-pagination): noMargin and !rounded collision styles avoided
-fix(react-button): required prop added




Screenshots - Animations

Commits:
- fix[react](modal): Modal css prop\n- Merge pull request #376 from nextui-org/fix#369/modal-css-error

Fix#369/modal css error\n- reafactor[react](button): migrated to react-aria, work in progress, tests missing\n- refactor(docs): theme switch performance improved\n- fix: add appearance-in animation for backdrop content\n- feat(react-button): warning onClick avoided, disabled styled improved, clickable prop removed\n- Merge pull request #377 from TianenPang/fix/modal-animation-behavior

Fix #288 modal animation behavior\n- Merge branch 'next' of github.com:nextui-org/nextui into refactor/button-migration-to-react-aria\n- Input {required} parameter fix (again)\n- refactor(react-button): needless styles removed\n- Merge pull request #382 from richtone/fix/InputRequiredParameter

Input {required} parameter fix (again)\n- Merge branch 'next' of github.com:nextui-org/nextui into next\n- fix(react-pagination): noMargin and !rounded compoundVariant added\n- Merge branch 'next' of github.com:nextui-org/nextui into refactor/button-migration-to-react-aria\n- fix(react-button): test passing\n- feat(docs-button): button documentation updated\n- chore(docs-button): error loading button removed\n- Merge pull request #384 from nextui-org/refactor/button-migration-to-react-aria

Refactor/button migration to react aria\n- Merge branch 'next' of github.com:nextui-org/nextui into next\n- Merge pull request #383 from nextui-org/fix/no-margin-pagination

Fix/no margin pagination\n- Merge branch 'next' of github.com:nextui-org/nextui into next\n- v1.0.6-beta.5\n

Labels:


Comments:
- codecov-commenter: # [Codecov](https://codecov.io/gh/nextui-org/nextui/pull/385?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) Report
> Merging [#385](https://codecov.io/gh/nextui-org/nextui/pull/385?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) (150de13) into [main](https://codecov.io/gh/nextui-org/nextui/commit/56788bc9b871097359660a87ef1bde367ac51802?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) (56788bc) will **increase** coverage by `0.11%`.
> The diff coverage is `76.27%`.

```diff
@@            Coverage Diff             @@
##             main     #385      +/-   ##
==========================================
+ Coverage   74.90%   75.01%   +0.11%     
==========================================
  Files         162      162              
  Lines        2594     2622      +28     
  Branches      767      770       +3     
==========================================
+ Hits         1943     1967      +24     
- Misses        642      646       +4     
  Partials        9        9              
```


| [Impacted Files](https://codecov.io/gh/nextui-org/nextui/pull/385?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) | Coverage Δ | |
|---|---|---|
| [packages/react/src/backdrop/backdrop.tsx](https://codecov.io/gh/nextui-org/nextui/pull/385/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2JhY2tkcm9wL2JhY2tkcm9wLnRzeA==) | `60.00% <ø> (ø)` | |
| [packages/react/src/button/button.styles.ts](https://codecov.io/gh/nextui-org/nextui/pull/385/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2J1dHRvbi9idXR0b24uc3R5bGVzLnRz) | `100.00% <ø> (ø)` | |
| [packages/react/src/button/utils.tsx](https://codecov.io/gh/nextui-org/nextui/pull/385/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2J1dHRvbi91dGlscy50c3g=) | `72.72% <0.00%> (+4.15%)` | :arrow_up: |
| [packages/react/src/input/input.tsx](https://codecov.io/gh/nextui-org/nextui/pull/385/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2lucHV0L2lucHV0LnRzeA==) | `93.54% <ø> (ø)` | |
| [packages/react/src/loading/loading.styles.ts](https://codecov.io/gh/nextui-org/nextui/pull/385/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2xvYWRpbmcvbG9hZGluZy5zdHlsZXMudHM=) | `100.00% <ø> (ø)` | |
| [packages/react/src/loading/loading.tsx](https://codecov.io/gh/nextui-org/nextui/pull/385/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2xvYWRpbmcvbG9hZGluZy50c3g=) | `100.00% <ø> (ø)` | |
| [packages/react/src/modal/modal.tsx](https://codecov.io/gh/nextui-org/nextui/pull/385/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL21vZGFsL21vZGFsLnRzeA==) | `95.34% <ø> (ø)` | |
| [packages/react/src/pagination/pagination.styles.ts](https://codecov.io/gh/nextui-org/nextui/pull/385/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL3BhZ2luYXRpb24vcGFnaW5hdGlvbi5zdHlsZXMudHM=) | `100.00% <ø> (ø)` | |
| [packages/react/src/theme/stitches.config.ts](https://codecov.io/gh/nextui-org/nextui/pull/385/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL3RoZW1lL3N0aXRjaGVzLmNvbmZpZy50cw==) | `70.00% <ø> (ø)` | |
| [packages/react/src/use-drip/use-drip.ts](https://codecov.io/gh/nextui-org/nextui/pull/385/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL3VzZS1kcmlwL3VzZS1kcmlwLnRz) | `76.47% <ø> (ø)` | |
| ... and [5 more](https://codecov.io/gh/nextui-org/nextui/pull/385/diff?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nextui-org/nextui/pull/385?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nextui-org/nextui/pull/385?src=pr&el=footer&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None). Last update [56788bc...150de13](https://codecov.io/gh/nextui-org/nextui/pull/385?src=pr&el=lastupdated&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None).
\n

Files Changed:
- apps/docs/content/components/button/loading.ts (modified, 22 changes)\n  Patch: @@ -1,31 +1,25 @@
 const App = `import { Button, Grid, Loading } from "@nextui-org/react";
-
 export default function App() {
   return (
     <Grid.Container gap={2}>
       <Grid>
-        <Button auto clickable={false} color="primary" css={{ px: "$13" }}>
-          <Loading color="white" size="sm" />
-        </Button>
-      </Grid>
-      <Grid>
-        <Button auto clickable={false} color="secondary" css={{ px: "$13" }}>
-          <Loading type="spinner" color="white" size="sm" />
+        <Button disabled auto bordered color="primary" css={{ px: "$13" }}>
+          <Loading color="currentColor" size="sm" />
         </Button>
       </Grid>
       <Grid>
-        <Button auto clickable={false} color="success" css={{ px: "$13" }}>
-          <Loading type="points" color="white" size="sm" />
+        <Button disabled auto bordered color="secondary" css={{ px: "$13" }}>
+          <Loading type="spinner" color="currentColor" size="sm" />
         </Button>
       </Grid>
       <Grid>
-        <Button auto clickable={false} color="warning" css={{ px: "$13" }}>
-          <Loading type="points-opacity" color="white" size="sm" />
+        <Button disabled auto bordered color="success" css={{ px: "$13" }}>
+          <Loading type="points" color="currentColor" size="sm" />
         </Button>
       </Grid>
       <Grid>
-        <Button auto clickable={false} color="error" css={{ px: "$13" }}>
-          <Loading type="spinner" color="white" size="sm" />
+        <Button disabled auto bordered color="warning" css={{ px: "$13" }}>
+          <Loading type="points-opacity" color="currentColor" size="sm" />
         </Button>
       </Grid>
     </Grid.Container>\n- apps/docs/content/docs/components/button.mdx (modified, 64 changes)\n  Patch: @@ -100,30 +100,46 @@ import { Button } from '@nextui-org/react';
 
 #### Button Props
 
-| Attribute        | Type                                            | Accepted values                  | Description                               | Default   |
-| ---------------- | ----------------------------------------------- | -------------------------------- | ----------------------------------------- | --------- |
-| **color**        | `NormalColors`                                  | [NormalColors](#normal-colors)   | Change button color                       | `default` |
-| **size**         | `NormalSizes`                                   | [NormalSizes](#normal-sizes)     | Change button size                        | `medium`  |
-| **disabled**     | `boolean`                                       | `true/false`                     | Disable button                            | `false`   |
-| **clickable**    | `boolean`                                       | `true/false`                     | Inidicates if button is clickable         | `false`   |
-| **bordered**     | `boolean`                                       | `true/false`                     | Bordered button                           | `false`   |
-| **flat**         | `boolean`                                       | `true/false`                     | Flat button                               | `false`   |
-| **rounded**      | `boolean`                                       | `true/false`                     | Rounded button                            | `false`   |
-| **ghost**        | `boolean`                                       | `true/false`                     | The opposite color                        | `false`   |
-| **shadow**       | `boolean`                                       | `true/false`                     | Display shadow effect                     | `false`   |
-| **ripple**       | `boolean`                                       | `true/false`                     | Display drip animation                    | `true`    |
-| **auto**         | `boolean`                                       | `true/false`                     | Autoscale button width                    | `false`   |
-| **animated**     | `boolean`                                       | `true/false`                     | Display drip and scale animation          | `true`    |
-| **borderWeight** | `NormalWeights`                                 | [NormalWeights](#normal-weights) | Border weight for `bordered` button       | `normal`  |
-| **autoFocus**    | `boolean`                                       | `true/false`                     | Automatically focus button                | `false`   |
-| **onClick**      | `MouseEventHandler`                             | -                                | Button click handler                      | -         |
-| **icon**         | `ReactNode`                                     | -                                | Show icon in button                       | -         |
-| **iconRight**    | `ReactNode`                                     | -                                | Show icon on the other side of the button | -         |
-| **type**         | `ButtonHTMLAttributes.type`                     | `button` `reset` `submit`        | Native type of button element             | `button`  |
-| **ref**          | <Code>Ref<HTMLButtonElement &#124; null></Code> | -                                | forwardRef                                | -         |
-| **css**          | `Stitches.CSS`                                  | -                                | Override Default CSS style                | -         |
-| **as**           | `keyof JSX.IntrinsicElements`                   | -                                | Changes which tag component outputs       | `button`  |
-| ...              | `ButtonHTMLAttributes`                          | `'id', 'className', ...`         | Button native props                       | -         |
+| Attribute        | Type                                            | Description                               | Default   |
+| ---------------- | ----------------------------------------------- | ----------------------------------------- | --------- |
+| **color**        | [NormalColors](#normal-colors)                  | Change button color                       | `default` |
+| **size**         | [NormalSizes](#normal-sizes)                    | Change button size                        | `medium`  |
+| **disabled**     | `boolean`                                       | Disable button                            | `false`   |
+| **bordered**     | `boolean`                                       | Bordered button                           | `false`   |
+| **flat**         | `boolean`                                       | Flat button                               | `false`   |
+| **rounded**      | `boolean`                                       | Rounded button                            | `false`   |
+| **ghost**        | `boolean`                                       | The opposite color                        | `false`   |
+| **shadow**       | `boolean`                                       | Display shadow effect                     | `false`   |
+| **ripple**       | `boolean`                                       | Display drip animation                    | `true`    |
+| **auto**         | `boolean`                                       | Autoscale button width                    | `false`   |
+| **animated**     | `boolean`                                       | Display drip and scale animation          | `true`    |
+| **borderWeight** | [NormalWeights](#normal-weights)                | Border weight for `bordered` button       | `normal`  |
+| **autoFocus**    | `boolean`                                       | Automatically focus button                | `false`   |
+| **onClick**      | `MouseEventHandler`                             | Button click handler                      | -         |
+| **icon**         | `ReactNode`                                     | Show icon in button                       | -         |
+| **iconRight**    | `ReactNode`                                     | Show icon on the other side of the button | -         |
+| **type**         | `button` `reset` `submit`                       | Native type of button element             | `button`  |
+| **ref**          | <Code>Ref<HTMLButtonElement &#124; null></Code> | forwardRef                                | -         |
+| **css**          | `Stitches.CSS`                                  | Override Default CSS style                | -         |
+| **as**           | `keyof JSX.IntrinsicElements`                   | Changes which tag component outputs       | `button`  |
+| ...              | `'id', 'className', ...`                        | Button native props                       | -         |
+
+<Spacer y={2} />
+
+#### Button Accessibility Props
+
+| Attribute               | Type                                              | Description                                                                                                                                                                                                                                                                                   | Default |
+| ----------------------- | ------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------- |
+| **id**                  | `string`                                          | The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id)                                                                                                                                                                            | -       |
+| **excludeFromTabOrder** | `boolean`                                         | Whether to exclude the element from the sequential tab order. If true, the element will not be focusable via the keyboard by tabbing. This should be avoided except in rare scenarios where an alternative means of accessing the element or its functionality via the keyboard is available. | -       |
+| **aria-expanded**       | `boolean`                                         | Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.                                                                                                                                                                                   | -       |
+| **aria-haspopup**       | `boolean` `menu` `listbox` `tree` `grid` `dialog` | Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.                                                                                                                                                                | -       |
+| **aria-controls**       | `string`                                          | Identifies the element (or elements) whose contents or presence are controlled by the current element.                                                                                                                                                                                        | -       |
+| **aria-pressed**        | `boolean`                                         | Indicates the current "pressed" state of toggle buttons.                                                                                                                                                                                                                                      | -       |
+| **aria-label**          | `string`                                          | Defines a string value that labels the current element                                                                                                                                                                                                                                        | -       |
+| **aria-labelledby**     | `string`                                          | Identifies the element (or elements) that labels the current element                                                                                                                                                                                                                          | -       |
+| **aria-describedby**    | `string`                                          | Identifies the element (or elements) that describes the object.                                                                                                                                                                                                                               | -       |
+| **aria-details**        | `string`                                          | Identifies the element (or elements) that provide a detailed, extended description for the object.                                                                                                                                                                                            | -       |
 
 <Spacer y={2} />
 \n- apps/docs/content/docs/components/loading.mdx (modified, 30 changes)\n  Patch: @@ -19,7 +19,7 @@ import { Loading } from '@nextui-org/react';
 <Playground
   title="Default"
   desc="Indicate an action is running."
- files={loadingContent.default_loading}
+  files={loadingContent.default_loading}
 />
 
 <Playground
@@ -60,33 +60,35 @@ import { Loading } from '@nextui-org/react';
 
 #### Loading Props
 
-| Attribute              | Type                           | Accepted values                  | Description                                | Default   |
-| ---------------------- | ------------------------------ | -------------------------------- | ------------------------------------------ | --------- |
-| **size**               | `NormalSizes`                  | [NormalSizes](#normal-sizes)     | Loading size                               | `medium`  |
-| **color**              | `SimpleColors`                 | [SimpleColors](#simple-colors)   | Change loading color                       | `primary` |
-| **textColor**          | `SimpleColors`                 | [SimpleColors](#simple-colors)   | Change loading text color                  | `default` |
-| **type**               | `NormalLoaders`                | [NormalLoaders](#normal-loaders) | Selected or not (in single)                | `default` |
-| **gradientBackground** | `string/null`                  | -                                | Set a background for gradient loading type | -         |
-| **css**                | `Stitches.CSS`                 | -                                | Override Default CSS style                 | -         |
-| **as**                 | `keyof JSX.IntrinsicElements`  | -                                | Changes which tag component outputs        | `span`    |
-| ...                    | `HTMLAttributes`               | `'id', 'className', ...`         | Native props                               | -         |
+| Attribute              | Type                          | Accepted values                  | Description                                | Default   |
+| ---------------------- | ----------------------------- | -------------------------------- | ------------------------------------------ | --------- |
+| **size**               | `NormalSizes`                 | [NormalSizes](#normal-sizes)     | Loading size                               | `medium`  |
+| **color**              | `LoadingColors`               | [LoadingColors](#loading-colors) | Change loading color                       | `primary` |
+| **textColor**          | `SimpleColors`                | [SimpleColors](#simple-colors)   | Change loading text color                  | `default` |
+| **type**               | `NormalLoaders`               | [NormalLoaders](#normal-loaders) | Selected or not (in single)                | `default` |
+| **gradientBackground** | `string/null`                 | -                                | Set a background for gradient loading type | -         |
+| **css**                | `Stitches.CSS`                | -                                | Override Default CSS style                 | -         |
+| **as**                 | `keyof JSX.IntrinsicElements` | -                                | Changes which tag component outputs        | `span`    |
+| ...                    | `HTMLAttributes`              | `'id', 'className', ...`         | Native props                               | -         |
 
 <Spacer y={2} />
 
 ### Loading types
 
 <Spacer y={1} />
 
-#### Simple Colors
+#### Loading Colors
 
 ```ts
-type SimpleColors =
+type LoadingColors =
+  | 'white'
   | 'default'
   | 'primary'
   | 'secondary'
   | 'success'
   | 'warning'
-  | 'error';
+  | 'error'
+  | 'currentColor';
 ```
 
 #### Normal Sizes\n- apps/docs/package.json (modified, 4 changes)\n  Patch: @@ -1,6 +1,6 @@
 {
   "name": "@nextui-org/docs",
-  "version": "1.0.5-beta.5",
+  "version": "1.0.6-beta.5",
   "private": true,
   "scripts": {
     "dev": "next dev",
@@ -16,7 +16,7 @@
     "@codesandbox/sandpack-react": "0.14.3",
     "@mapbox/rehype-prism": "^0.6.0",
     "@mdx-js/react": "^1.6.22",
-    "@nextui-org/react": "1.0.5-beta.5",
+    "@nextui-org/react": "1.0.6-beta.5",
     "@types/lodash": "^4.14.170",
     "algoliasearch": "^4.10.3",
     "canvas-confetti": "^1.4.0",\n- apps/docs/src/components/hero/components.tsx (modified, 6 changes)\n  Patch: @@ -58,10 +58,14 @@ const HeroComponents = () => {
       />
       <ThemeSwitch
         css={{
+          color: '$black',
           position: 'absolute',
           top: '-170%',
           right: '-120%',
-          animation: `${levitating} 13s ease infinite 1s reverse`
+          animation: `${levitating} 13s ease infinite 1s reverse`,
+          '.nextui-switch-circle': {
+            bg: '$white'
+          }
         }}
       />
       <UserTwitterCard\n- apps/docs/src/components/theme-switch/index.tsx (modified, 13 changes)\n  Patch: @@ -1,22 +1,25 @@
 import React from 'react';
-import { Moon, Sun } from '../icons';
+import { Moon } from '../icons';
 import { Switch, SwitchProps, useTheme } from '@nextui-org/react';
 import { useTheme as useNextTheme } from 'next-themes';
 
 export const ThemeToggle: React.FC<Partial<SwitchProps>> = ({ ...props }) => {
+  const [isSelfDark, setIsSelfDark] = React.useState(false);
+
   const { setTheme } = useNextTheme();
   const { isDark } = useTheme();
 
   const handleToggleTheme = () => {
-    setTheme(isDark ? 'light' : 'dark');
+    const nextTheme = isDark ? 'light' : 'dark';
+    setIsSelfDark(nextTheme === 'dark');
+    setTheme(nextTheme);
   };
 
   return (
     <Switch
       size="xl"
-      checked={isDark}
-      iconOn={<Moon filled />}
-      iconOff={<Sun filled />}
+      checked={isSelfDark || isDark}
+      icon={<Moon filled />}
       onChange={handleToggleTheme}
       {...props}
     />\n- examples/create-next-app/package.json (modified, 2 changes)\n  Patch: @@ -9,7 +9,7 @@
     "lint": "next lint"
   },
   "dependencies": {
-    "@nextui-org/react": "1.0.5-beta.5",
+    "@nextui-org/react": "1.0.6-beta.5",
     "next": "11.0.0",
     "react": "17.0.2",
     "react-dom": "17.0.2"\n- examples/create-react-app/package.json (modified, 2 changes)\n  Patch: @@ -3,7 +3,7 @@
   "version": "0.1.0",
   "private": true,
   "dependencies": {
-    "@nextui-org/react": "1.0.5-beta.5",
+    "@nextui-org/react": "1.0.6-beta.5",
     "@testing-library/jest-dom": "^5.11.4",
     "@testing-library/react": "^11.1.0",
     "@testing-library/user-event": "^12.1.10",\n- examples/vite-react-typescript/package.json (modified, 2 changes)\n  Patch: @@ -8,7 +8,7 @@
     "preview": "vite preview"
   },
   "dependencies": {
-    "@nextui-org/react": "1.0.5-beta.5",
+    "@nextui-org/react": "1.0.6-beta.5",
     "react": "^17.0.2",
     "react-dom": "^17.0.2"
   },\n- packages/react/package.json (modified, 4 changes)\n  Patch: @@ -1,6 +1,6 @@
 {
   "name": "@nextui-org/react",
-  "version": "1.0.5-beta.5",
+  "version": "1.0.6-beta.5",
   "license": "MIT",
   "description": "🚀 Beautiful and modern React UI library.",
   "homepage": "https://nextui.org",
@@ -55,6 +55,7 @@
   },
   "dependencies": {
     "@babel/runtime": "7.9.6",
+    "@react-aria/button": "3.4.3",
     "@react-aria/checkbox": "3.3.0",
     "@react-aria/focus": "3.5.1",
     "@react-aria/i18n": "3.3.6",
@@ -67,6 +68,7 @@
     "@react-stately/data": "3.4.5",
     "@react-stately/table": "3.1.1",
     "@react-stately/toggle": "3.2.4",
+    "@react-types/button": "^3.4.4",
     "@react-types/grid": "3.0.1",
     "@react-types/shared": "3.11.0",
     "@stitches/react": "1.2.7"\n- packages/react/src/backdrop/backdrop.styles.ts (modified, 29 changes)\n  Patch: @@ -1,4 +1,16 @@
-import { styled, VariantProps } from '../theme/stitches.config';
+import { styled, keyframes, VariantProps } from '../theme/stitches.config';
+
+const appearanceIn = keyframes({
+  '0%': {
+    opacity: 0
+  },
+  '60%': {
+    opacity: 0.75
+  },
+  '100%': {
+    opacity: 1
+  }
+});
 
 export const StyledBackdropContent = styled('div', {
   position: 'relative',
@@ -11,6 +23,21 @@ export const StyledBackdropContent = styled('div', {
   '@sm': {
     width: '90%',
     maxWidth: '90%'
+  },
+  variants: {
+    animated: {
+      true: {
+        '&': {
+          animationName: appearanceIn,
+          animationDuration: '200ms',
+          animationTimingFunction: 'ease-in',
+          animationDirection: 'normal'
+        }
+      },
+      false: {
+        transition: 'none'
+      }
+    }
   }
 });
 \n- packages/react/src/backdrop/backdrop.tsx (modified, 1 changes)\n  Patch: @@ -123,6 +123,7 @@ const Backdrop: React.FC<React.PropsWithChildren<BackdropProps>> = React.memo(
             blur={blur}
           />
           <StyledBackdropContent
+            animated={animated}
             className={`${preClass}-content`}
             onClick={childrenClickHandler}
             css={{\n- packages/react/src/button/__tests__/__snapshots__/group.test.tsx.snap (modified, 10 changes)\n  Patch: @@ -1,22 +1,22 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`ButtonGroup buttons should be displayed vertically 1`] = `"<div class=\\"nextui-c-Prclt nextui-c-Prclt-RvQzI-vertical-true nextui-c-Prclt-gimGqK-size-md\\"><button data-state=\\"ready\\" class=\\"nextui-c-hIebJk nextui-c-PJLV nextui-c-hIebJk-ikltse-color-default nextui-c-hIebJk-bWGFbV-size-md nextui-c-hIebJk-cwXrJp-borderWeight-normal nextui-c-hIebJk-yxrPS-animated-true nextui-c-hIebJk-exaRme-auto-true nextui-c-hIebJk-gglxka-cv nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-c-hIebJk-iPJLV-css nextui-button nextui-button--ready\\" type=\\"button\\"><span class=\\"nextui-button-text\\">action1</span></button><button data-state=\\"ready\\" class=\\"nextui-c-hIebJk nextui-c-PJLV nextui-c-hIebJk-ikltse-color-default nextui-c-hIebJk-bWGFbV-size-md nextui-c-hIebJk-cwXrJp-borderWeight-normal nextui-c-hIebJk-yxrPS-animated-true nextui-c-hIebJk-exaRme-auto-true nextui-c-hIebJk-gglxka-cv nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-c-hIebJk-iPJLV-css nextui-button nextui-button--ready\\" type=\\"button\\"><span class=\\"nextui-button-text\\">action2</span></button></div>"`;
+exports[`ButtonGroup buttons should be displayed vertically 1`] = `"<div class=\\"nextui-c-ixPsne nextui-c-ixPsne-hodFzn-vertical-true nextui-c-ixPsne-gimGqK-size-md\\"><button data-state=\\"ready\\" class=\\"nextui-c-kZXRhs nextui-c-PJLV nextui-c-kZXRhs-ikltse-color-default nextui-c-kZXRhs-bWGFbV-size-md nextui-c-kZXRhs-cwXrJp-borderWeight-normal nextui-c-kZXRhs-exaRme-auto-true nextui-c-kZXRhs-gglxka-cv nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-c-kZXRhs-iPJLV-css nextui-button nextui-button--ready\\" type=\\"button\\"><span class=\\"nextui-button-text\\">action1</span></button><button data-state=\\"ready\\" class=\\"nextui-c-kZXRhs nextui-c-PJLV nextui-c-kZXRhs-ikltse-color-default nextui-c-kZXRhs-bWGFbV-size-md nextui-c-kZXRhs-cwXrJp-borderWeight-normal nextui-c-kZXRhs-exaRme-auto-true nextui-c-kZXRhs-gglxka-cv nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-c-kZXRhs-iPJLV-css nextui-button nextui-button--ready\\" type=\\"button\\"><span class=\\"nextui-button-text\\">action2</span></button></div>"`;
 
-exports[`ButtonGroup props should be passed to each button 1`] = `"<div class=\\"nextui-c-Prclt nextui-c-Prclt-giKUWk-vertical-false nextui-c-Prclt-iAoIqM-size-xs\\"><button data-state=\\"ready\\" class=\\"nextui-c-hIebJk nextui-c-PJLV nextui-c-hIebJk-iXIgqZ-color-success nextui-c-hIebJk-fRPbnQ-size-xs nextui-c-hIebJk-cwXrJp-borderWeight-normal nextui-c-hIebJk-yxrPS-animated-true nextui-c-hIebJk-exaRme-auto-true nextui-c-hIebJk-gNZcsS-cv nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-c-hIebJk-iPJLV-css nextui-button nextui-button--ready\\" type=\\"button\\"><span class=\\"nextui-button-text\\">action</span></button></div>"`;
+exports[`ButtonGroup props should be passed to each button 1`] = `"<div class=\\"nextui-c-ixPsne nextui-c-ixPsne-dTYTTz-vertical-false nextui-c-ixPsne-iAoIqM-size-xs\\"><button data-state=\\"ready\\" class=\\"nextui-c-kZXRhs nextui-c-PJLV nextui-c-kZXRhs-iXIgqZ-color-success nextui-c-kZXRhs-fRPbnQ-size-xs nextui-c-kZXRhs-cwXrJp-borderWeight-normal nextui-c-kZXRhs-exaRme-auto-true nextui-c-kZXRhs-gNZcsS-cv nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-c-kZXRhs-iPJLV-css nextui-button nextui-button--ready\\" type=\\"button\\"><span class=\\"nextui-button-text\\">action</span></button></div>"`;
 
-exports[`ButtonGroup props should be passed to each button 2`] = `"<div class=\\"nextui-c-Prclt nextui-c-Prclt-giKUWk-vertical-false nextui-c-Prclt-iAoIqM-size-xs\\"><button data-state=\\"ready\\" class=\\"nextui-c-hIebJk nextui-c-PJLV nextui-c-hIebJk-iXIgqZ-color-success nextui-c-hIebJk-fRPbnQ-size-xs nextui-c-hIebJk-cwXrJp-borderWeight-normal nextui-c-hIebJk-cyFBRX-flat-true nextui-c-hIebJk-yxrPS-animated-true nextui-c-hIebJk-exaRme-auto-true nextui-c-hIebJk-gNZcsS-cv nextui-c-hIebJk-bXueNC-cv nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-c-hIebJk-iPJLV-css nextui-button nextui-button--ready\\" type=\\"button\\"><span class=\\"nextui-button-text\\">action</span></button></div>"`;
+exports[`ButtonGroup props should be passed to each button 2`] = `"<div class=\\"nextui-c-ixPsne nextui-c-ixPsne-dTYTTz-vertical-false nextui-c-ixPsne-iAoIqM-size-xs\\"><button data-state=\\"ready\\" class=\\"nextui-c-kZXRhs nextui-c-PJLV nextui-c-kZXRhs-iXIgqZ-color-success nextui-c-kZXRhs-fRPbnQ-size-xs nextui-c-kZXRhs-cwXrJp-borderWeight-normal nextui-c-kZXRhs-cyFBRX-flat-true nextui-c-kZXRhs-exaRme-auto-true nextui-c-kZXRhs-gNZcsS-cv nextui-c-kZXRhs-bXueNC-cv nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-c-kZXRhs-iPJLV-css nextui-button nextui-button--ready\\" type=\\"button\\"><span class=\\"nextui-button-text\\">action</span></button></div>"`;
 
-exports[`ButtonGroup should render correctly 1`] = `"<div class=\\"nextui-c-Prclt nextui-c-Prclt-giKUWk-vertical-false nextui-c-Prclt-gimGqK-size-md\\"><button data-state=\\"ready\\" class=\\"nextui-c-hIebJk nextui-c-PJLV nextui-c-hIebJk-ikltse-color-default nextui-c-hIebJk-bWGFbV-size-md nextui-c-hIebJk-cwXrJp-borderWeight-normal nextui-c-hIebJk-yxrPS-animated-true nextui-c-hIebJk-exaRme-auto-true nextui-c-hIebJk-gglxka-cv nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-c-hIebJk-iPJLV-css nextui-button nextui-button--ready\\" type=\\"button\\"><span class=\\"nextui-button-text\\">action</span></button></div>"`;
+exports[`ButtonGroup should render correctly 1`] = `"<div class=\\"nextui-c-ixPsne nextui-c-ixPsne-dTYTTz-vertical-false nextui-c-ixPsne-gimGqK-size-md\\"><button data-state=\\"ready\\" class=\\"nextui-c-kZXRhs nextui-c-PJLV nextui-c-kZXRhs-ikltse-color-default nextui-c-kZXRhs-bWGFbV-size-md nextui-c-kZXRhs-cwXrJp-borderWeight-normal nextui-c-kZXRhs-exaRme-auto-true nextui-c-kZXRhs-gglxka-cv nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-c-kZXRhs-iPJLV-css nextui-button nextui-button--ready\\" type=\\"button\\"><span class=\\"nextui-button-text\\">action</span></button></div>"`;
 
 exports[`ButtonGroup should render different variants 1`] = `ReactWrapper {}`;
 
 exports[`ButtonGroup should render different variants 2`] = `
 <NextUI - Button
   animated={true}
   auto={false}
+  autoFocus={false}
   bordered={false}
   className=""
-  clickable={true}
   disabled={false}
   ghost={false}
   ripple={true}\n- packages/react/src/button/__tests__/__snapshots__/icon.test.tsx.snap (modified, 6 changes)\n  Patch: @@ -1,7 +1,7 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`ButtonIcon should render correctly 1`] = `"<button data-state=\\"ready\\" class=\\"nextui-c-hIebJk nextui-c-PJLV nextui-c-hIebJk-ikltse-color-default nextui-c-hIebJk-bWGFbV-size-md nextui-c-hIebJk-cwXrJp-borderWeight-normal nextui-c-hIebJk-yxrPS-animated-true nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-c-hIebJk-iPJLV-css nextui-button nextui-button--ready\\" type=\\"button\\"><span class=\\"nextui-c-bDGMeb nextui-button-icon\\"><svg></svg></span><div class=\\"nextui-button-text nextui-button-text-left\\">action</div></button>"`;
+exports[`ButtonIcon should render correctly 1`] = `"<button data-state=\\"ready\\" class=\\"nextui-c-kZXRhs nextui-c-PJLV nextui-c-kZXRhs-ikltse-color-default nextui-c-kZXRhs-bWGFbV-size-md nextui-c-kZXRhs-cwXrJp-borderWeight-normal nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-c-kZXRhs-iPJLV-css nextui-button nextui-button--ready\\" type=\\"button\\"><span class=\\"nextui-c-bDGMeb nextui-button-icon\\"><svg></svg></span><div class=\\"nextui-button-text nextui-button-text-left\\">action</div></button>"`;
 
-exports[`ButtonIcon should work with right 1`] = `"<button data-state=\\"ready\\" class=\\"nextui-c-hIebJk nextui-c-PJLV nextui-c-hIebJk-ikltse-color-default nextui-c-hIebJk-bWGFbV-size-md nextui-c-hIebJk-cwXrJp-borderWeight-normal nextui-c-hIebJk-yxrPS-animated-true nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-c-hIebJk-iPJLV-css nextui-button nextui-button--ready\\" type=\\"button\\"><span class=\\"nextui-c-bDGMeb nextui-c-bDGMeb-jeNDWm-isRight-true nextui-button-icon nextui-button-icon-right\\"><svg></svg></span><div class=\\"nextui-button-text nextui-button-text-right\\">action</div></button>"`;
+exports[`ButtonIcon should work with right 1`] = `"<button data-state=\\"ready\\" class=\\"nextui-c-kZXRhs nextui-c-PJLV nextui-c-kZXRhs-ikltse-color-default nextui-c-kZXRhs-bWGFbV-size-md nextui-c-kZXRhs-cwXrJp-borderWeight-normal nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-c-kZXRhs-iPJLV-css nextui-button nextui-button--ready\\" type=\\"button\\"><span class=\\"nextui-c-bDGMeb nextui-c-bDGMeb-jeNDWm-isRight-true nextui-button-icon nextui-button-icon-right\\"><svg></svg></span><div class=\\"nextui-button-text nextui-button-text-right\\">action</div></button>"`;
 
-exports[`ButtonIcon should work without text 1`] = `"<button data-state=\\"ready\\" class=\\"nextui-c-hIebJk nextui-c-PJLV nextui-c-hIebJk-ikltse-color-default nextui-c-hIebJk-bWGFbV-size-md nextui-c-hIebJk-cwXrJp-borderWeight-normal nextui-c-hIebJk-yxrPS-animated-true nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-c-hIebJk-iPJLV-css nextui-button nextui-button--ready\\" type=\\"button\\"><span class=\\"nextui-c-bDGMeb nextui-c-bDGMeb-jeNDWm-isRight-true nextui-c-bDGMeb-iyYGWO-isSingle-true nextui-button-icon nextui-button-icon-right nextui-button-icon-single\\"><svg></svg></span></button>"`;
+exports[`ButtonIcon should work without text 1`] = `"<button data-state=\\"ready\\" class=\\"nextui-c-kZXRhs nextui-c-PJLV nextui-c-kZXRhs-ikltse-color-default nextui-c-kZXRhs-bWGFbV-size-md nextui-c-kZXRhs-cwXrJp-borderWeight-normal nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-c-kZXRhs-iPJLV-css nextui-button nextui-button--ready\\" type=\\"button\\"><span class=\\"nextui-c-bDGMeb nextui-c-bDGMeb-jeNDWm-isRight-true nextui-c-bDGMeb-iyYGWO-isSingle-true nextui-c-bDGMeb-bVsTEo-cv nextui-button-icon nextui-button-icon-right nextui-button-icon-single\\"><svg></svg></span></button>"`;\n- packages/react/src/button/__tests__/__snapshots__/index.test.tsx.snap (modified, 4 changes)\n  Patch: @@ -6,9 +6,9 @@ exports[`Button should render different variants 2`] = `
 <NextUI - Button
   animated={true}
   auto={false}
+  autoFocus={false}
   bordered={false}
   className=""
-  clickable={true}
   disabled={false}
   ghost={false}
   ripple={true}
@@ -22,9 +22,9 @@ exports[`Button should render empty button correctly 1`] = `
 <NextUI - Button
   animated={true}
   auto={false}
+  autoFocus={false}
   bordered={false}
   className=""
-  clickable={true}
   disabled={false}
   ghost={false}
   ripple={true}\n- packages/react/src/button/__tests__/index.test.tsx (modified, 72 changes)\n  Patch: @@ -1,6 +1,8 @@
 import React from 'react';
 import { mount } from 'enzyme';
 import Button from '../index';
+import userEvent from '@testing-library/user-event';
+import { FocusableRef } from '@react-types/shared';
 
 describe('Button', () => {
   it('should render correctly', () => {
@@ -49,6 +51,38 @@ describe('Button', () => {
     expect(<Button />).toMatchSnapshot();
   });
 
+  it('should render different variants', () => {
+    const wrapper = mount(
+      <div>
+        <Button flat>button</Button>
+        <Button light color="warning">
+          light
+        </Button>
+        <Button flat color="success">
+          button
+        </Button>
+        <Button flat color="warning">
+          button
+        </Button>
+        <Button rounded>button</Button>
+        <Button flat>button</Button>
+        <Button shadow>button</Button>
+        <Button ghost>button</Button>
+        <Button bordered>button</Button>
+        <Button auto>button</Button>
+        <Button animated={false}>button</Button>
+      </div>
+    );
+    expect(wrapper).toMatchSnapshot();
+    expect(<Button>button</Button>).toMatchSnapshot();
+  });
+
+  it('ref should be forwarded', () => {
+    const ref = React.createRef<HTMLButtonElement>();
+    const wrapper = mount(<Button ref={ref}>action</Button>);
+    expect(() => wrapper.unmount()).not.toThrow();
+  });
+
   it('should trigger callback function', () => {
     const WrapperButton = () => {
       const [state, setState] = React.useState<string>('state1');
@@ -58,6 +92,7 @@ describe('Button', () => {
     expect(wrapper.text()).toContain('state1');
 
     wrapper.simulate('click');
+    userEvent.click(wrapper.find('button').getDOMNode());
     expect(wrapper.text()).toContain('state2');
   });
 
@@ -73,47 +108,14 @@ describe('Button', () => {
     const wrapper = mount(<WrapperButton />);
     expect(wrapper.text()).toContain('state1');
 
-    wrapper.simulate('click');
+    userEvent.click(wrapper.find('button').getDOMNode());
     expect(wrapper.text()).toContain('state1');
     expect(wrapper.text()).not.toContain('state2');
   });
 
-  it('should render different variants', () => {
-    const wrapper = mount(
-      <div>
-        <Button flat>button</Button>
-        <Button light color="warning">
-          light
-        </Button>
-        <Button flat color="success">
-          button
-        </Button>
-        <Button flat color="warning">
-          button
-        </Button>
-        <Button rounded>button</Button>
-        <Button flat>button</Button>
-        <Button shadow>button</Button>
-        {/* <Button ghost>button</Button>
-        <Button bordered>button</Button> */}
-        <Button auto>button</Button>
-        <Button animated={false}>button</Button>
-      </div>
-    );
-    expect(wrapper).toMatchSnapshot();
-    expect(<Button>button</Button>).toMatchSnapshot();
-  });
-
   it('should remove expired events', () => {
     const wrapper = mount(<Button>button</Button>);
-    wrapper.simulate('click');
-    expect(() => wrapper.unmount()).not.toThrow();
-  });
-
-  it('ref should be forwarded', () => {
-    const ref = React.createRef<HTMLButtonElement>();
-    const wrapper = mount(<Button ref={ref}>action</Button>);
-    expect(wrapper.find('button').getDOMNode()).toEqual(ref.current);
+    userEvent.click(wrapper.find('button').getDOMNode());
     expect(() => wrapper.unmount()).not.toThrow();
   });
 });\n- packages/react/src/button/button.stories.tsx (modified, 20 changes)\n  Patch: @@ -47,28 +47,28 @@ export const Sizes = () => (
 export const Loadings = () => (
   <Grid.Container gap={2}>
     <Grid>
-      <Button auto clickable={false} color="primary" css={{ px: '$13' }}>
-        <Loading color="white" size="sm" />
+      <Button auto disabled color="primary" css={{ px: '$13' }}>
+        <Loading color="currentColor" size="sm" />
       </Button>
     </Grid>
     <Grid>
-      <Button auto clickable={false} color="secondary" css={{ px: '$13' }}>
-        <Loading type="spinner" color="white" size="sm" />
+      <Button auto disabled color="secondary" css={{ px: '$13' }}>
+        <Loading type="spinner" color="currentColor" size="sm" />
       </Button>
     </Grid>
     <Grid>
-      <Button auto clickable={false} color="success" css={{ px: '$13' }}>
-        <Loading type="points" color="white" size="sm" />
+      <Button auto disabled color="success" css={{ px: '$13' }}>
+        <Loading type="points" color="currentColor" size="sm" />
       </Button>
     </Grid>
     <Grid>
-      <Button auto clickable={false} color="warning" css={{ px: '$13' }}>
-        <Loading type="points-opacity" color="white" size="sm" />
+      <Button auto disabled color="warning" css={{ px: '$13' }}>
+        <Loading type="points-opacity" color="currentColor" size="sm" />
       </Button>
     </Grid>
     <Grid>
-      <Button auto clickable={false} color="error" css={{ px: '$13' }}>
-        <Loading type="spinner" color="white" size="sm" />
+      <Button auto disabled color="error" css={{ px: '$13' }}>
+        <Loading type="spinner" color="currentColor" size="sm" />
       </Button>
     </Grid>
   </Grid.Container>\n- packages/react/src/button/button.styles.ts (modified, 84 changes)\n  Patch: @@ -9,6 +9,8 @@ export const StyledButton = styled(
   'button',
   {
     $$buttonBorderRadius: '$radii$md',
+    $$buttonHoverOpacity: 0.85,
+    $$buttonPressedScale: 0.97,
     dflex: 'center',
     appearance: 'none',
     boxSizing: ' border-box',
@@ -25,9 +27,6 @@ export const StyledButton = styled(
     pe: 'auto',
     p: 0,
     br: '$$buttonBorderRadius',
-    '&:hover': {
-      opacity: 0.85
-    },
     '@motion': {
       transition: 'none'
     },
@@ -185,23 +184,7 @@ export const StyledButton = styled(
           bs: '$sm'
         }
       },
-      disabled: {
-        true: {
-          pe: 'none'
-        }
-      },
-      clickable: {
-        false: {
-          cursor: 'default',
-          pe: 'none'
-        }
-      },
       animated: {
-        true: {
-          '&:active': {
-            transform: 'scale(0.97)'
-          }
-        },
         false: {
           transition: 'none'
         }
@@ -216,9 +199,25 @@ export const StyledButton = styled(
         true: {
           $$buttonBorderRadius: '$radii$pill'
         }
+      },
+      isPressed: {
+        true: {}
+      },
+      isHovered: {
+        true: {
+          opacity: '$$buttonHoverOpacity'
+        }
       }
     },
     compoundVariants: [
+      // isPressed && animated
+      {
+        isPressed: true,
+        animated: true,
+        css: {
+          transform: 'scale($$buttonPressedScale)'
+        }
+      },
       // size / auto
       {
         auto: true,
@@ -260,16 +259,6 @@ export const StyledButton = styled(
           minWidth: 'min-content'
         }
       },
-      // animated / disabled
-      {
-        animated: true,
-        disabled: true,
-        css: {
-          '&:active': {
-            transform: 'none'
-          }
-        }
-      },
       // shadow / color
       {
         shadow: true,
@@ -473,68 +462,61 @@ export const StyledButton = styled(
           }
         }
       },
-      // ghost / color
+      // ghost / color && isHovered
       {
         ghost: true,
+        isHovered: true,
         color: 'default',
         css: {
-          '&:hover': {
-            bg: '$primary'
-          }
+          bg: '$primary'
         }
       },
       {
         ghost: true,
+        isHovered: true,
         color: 'primary',
         css: {
-          '&:hover': {
-            bg: '$primary'
-          }
+          bg: '$primary'
         }
       },
       {
         ghost: true,
+        isHovered: true,
         color: 'secondary',
         css: {
-          '&:hover': {
-            bg: '$secondary'
-          }
+          bg: '$secondary'
         }
       },
       {
         ghost: true,
+        isHovered: true,
         color: 'success',
         css: {
-          '&:hover': {
-            bg: '$success'
-          }
+          bg: '$success'
         }
       },
       {
         ghost: true,
+        isHovered: true,
         color: 'warning',
         css: {
-          '&:hover': {
-            bg: '$warning'
-          }
+          bg: '$warning'
         }
       },
       {
         ghost: true,
+        isHovered: true,
         color: 'error',
         css: {
-          '&:hover': {
-            bg: '$error'
-          }
+          bg: '$error'
         }
       },
       {
         ghost: true,
         color: 'gradient',
+        isHovered: true,
         css: {
-          '&:hover': {
-            bg: '$gradient'
-          }
+          bg: '$gradient'
         }
       },
       // flat / color\n- packages/react/src/button/button.tsx (modified, 301 changes)\n  Patch: @@ -1,12 +1,16 @@
-import React, {
-  useRef,
-  useMemo,
-  MouseEvent,
-  useImperativeHandle,
-  PropsWithoutRef,
-  RefAttributes
-} from 'react';
+import React, { useMemo, PropsWithoutRef, RefAttributes } from 'react';
 import { useFocusRing } from '@react-aria/focus';
+import { useButton } from '@react-aria/button';
+import { useHover } from '@react-aria/interactions';
+import {
+  FocusableRef,
+  PressEvents,
+  PressEvent,
+  FocusableProps
+} from '@react-types/shared';
+import { AriaButtonProps } from '@react-types/button';
+import { mergeProps } from '@react-aria/utils';
+
 import useWarning from '../use-warning';
 import ButtonDrip from '../utils/drip';
 import { CSS } from '../theme/stitches.config';
@@ -19,14 +23,14 @@ import clsx from '../utils/clsx';
 import useDrip from '../use-drip';
 import StyledButton, { ButtonVariantsProps } from './button.styles';
 import withDefaults from '../utils/with-defaults';
+import { useFocusableRef } from '../utils/dom';
 import { __DEV__ } from '../utils/assertion';
 
-export interface Props {
+export interface Props extends PressEvents, FocusableProps, AriaButtonProps {
   light?: boolean;
   color?: NormalColors;
   flat?: boolean;
   animated?: boolean;
-  clickable?: boolean;
   disabled?: boolean;
   ghost?: boolean;
   bordered?: boolean;
@@ -37,16 +41,16 @@ export interface Props {
   onClick?: React.MouseEventHandler<HTMLButtonElement>;
   as?: keyof JSX.IntrinsicElements;
   className?: string;
-  type?: React.ButtonHTMLAttributes<HTMLButtonElement>['type'];
+  children?: React.ReactNode | undefined;
 }
 
 const defaultProps = {
-  clickable: true,
   ghost: false,
   bordered: false,
   ripple: true,
   animated: true,
   disabled: false,
+  autoFocus: false,
   auto: false,
   className: '',
   type: 'button'
@@ -56,112 +60,132 @@ type NativeAttrs = Omit<React.ButtonHTMLAttributes<unknown>, keyof Props>;
 
 export type ButtonProps = Props &
   NativeAttrs &
-  ButtonVariantsProps & { css?: CSS };
-
-const Button = React.forwardRef<
-  HTMLButtonElement,
-  React.PropsWithChildren<ButtonProps>
->(({ ...btnProps }, ref: React.Ref<HTMLButtonElement | null>) => {
-  const buttonRef = useRef<HTMLButtonElement>(null);
-  useImperativeHandle(ref, () => buttonRef.current);
-  const groupConfig = useButtonGroupContext();
-  const filteredProps = filterPropsWithGroup(btnProps, groupConfig);
-  const cssColors = getCssColors(filteredProps);
-
-  /* eslint-disable @typescript-eslint/no-unused-vars */
-  const {
-    flat,
-    children,
-    disabled,
-    animated,
-    light,
-    ripple,
-    bordered,
-    auto,
-    borderWeight,
-    onClick,
-    icon,
-    iconRight,
-    ghost,
-    clickable,
-    className,
-    ...props
-  } = filteredProps;
-  /* eslint-enable @typescript-eslint/no-unused-vars */
-  if (__DEV__ && filteredProps.color === 'gradient' && (flat || light)) {
-    useWarning(
-      'Using the gradient color on flat and light buttons will have no effect.'
+  Omit<ButtonVariantsProps, 'isPressed' | 'isHovered'> & { css?: CSS };
+
+const Button = React.forwardRef(
+  (
+    { onClick, onPress, as, css, ...btnProps }: ButtonProps,
+    ref: React.Ref<HTMLButtonElement | null>
+  ) => {
+    const groupConfig = useButtonGroupContext();
+    const filteredProps = filterPropsWithGroup(btnProps, groupConfig);
+    const cssColors = getCssColors(filteredProps);
+
+    /* eslint-disable @typescript-eslint/no-unused-vars */
+    const {
+      flat,
+      children,
+      disabled,
+      animated,
+      light,
+      ripple,
+      bordered,
+      auto,
+      borderWeight,
+      icon,
+      iconRight,
+      ghost,
+      autoFocus,
+      className,
+      ...props
+    } = filteredProps;
+
+    const handleDrip = (
+      e: React.MouseEvent<HTMLButtonElement> | PressEvent
+    ) => {
+      if (animated && ripple && buttonRef.current) {
+        onDripClickHandler(e);
+      }
+    };
+
+    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {
+      handleDrip(e);
+      onClick?.(e);
+    };
+
+    const handlePress = (e: PressEvent) => {
+      if (e.pointerType === 'keyboard' || e.pointerType === 'virtual') {
+        handleDrip(e);
+      }
+      onPress?.(e);
+    };
+
+    // TODO: Improve types for refs
+    const buttonRef = useFocusableRef(ref as FocusableRef<HTMLElement>);
+    const { buttonProps, isPressed } = useButton(
+      {
+        ...btnProps,
+        isDisabled: disabled,
+        elementType: as,
+        onPress: handlePress
+      } as AriaButtonProps,
+      buttonRef
     );
-  }
-  const hasIcon = icon || iconRight;
-  const isRight = Boolean(iconRight);
-
-  const {
-    isFocusVisible,
-    focusProps
-  }: {
-    isFocusVisible: boolean;
-    focusProps: Omit<
-      React.HTMLAttributes<HTMLButtonElement>,
-      keyof ButtonProps
-    >;
-  } = useFocusRing();
-
-  const { onClick: onDripClickHandler, ...dripBindings } = useDrip(
-    false,
-    buttonRef
-  );
-
-  const clickHandler = (event: MouseEvent<HTMLButtonElement>) => {
-    if (disabled || !clickable) return;
-    if (animated && ripple && buttonRef.current) {
-      onDripClickHandler(event);
+
+    const { hoverProps, isHovered } = useHover({ isDisabled: disabled });
+    const {
+      isFocusVisible,
+      focusProps
+    }: {
+      isFocusVisible: boolean;
+      focusProps: Omit<
+        React.HTMLAttributes<HTMLButtonElement>,
+        keyof ButtonProps
+      >;
+    } = useFocusRing({ autoFocus });
+
+    const { onClick: onDripClickHandler, ...dripBindings } = useDrip(
+      false,
+      buttonRef
+    );
+
+    // TODO: remove this when we can use the new onPress(e) => e.clientX && e.clientY API
+    buttonProps.onClick = handleClick;
+
+    /* eslint-enable @typescript-eslint/no-unused-vars */
+    if (__DEV__ && filteredProps.color === 'gradient' && (flat || light)) {
+      useWarning(
+        'Using the gradient color on flat and light buttons will have no effect.'
+      );
     }
-    onClick && onClick(event);
-  };
-
-  const getState = useMemo(() => {
-    return disabled ? 'disabled' : 'ready';
-  }, [disabled]);
-
-  return (
-    <StyledButton
-      ref={buttonRef}
-      borderWeight={borderWeight}
-      auto={auto}
-      flat={flat}
-      light={light}
-      ghost={ghost}
-      bordered={bordered || ghost}
-      clickable={clickable}
-      data-state={getState}
-      disabled={disabled}
-      animated={animated}
-      onClick={clickHandler}
-      isFocusVisible={isFocusVisible}
-      className={clsx('nextui-button', `nextui-button--${getState}`, className)}
-      css={{
-        ...cssColors,
-        ...(props.css as any)
-      }}
-      {...focusProps}
-      {...props}
-    >
-      {React.Children.count(children) === 0 ? (
-        <ButtonIcon
-          isSingle
-          isAuto={auto}
-          isRight={isRight}
-          isGradientButtonBorder={
-            props.color === 'gradient' && (bordered || ghost)
-          }
-        >
-          {hasIcon}
-        </ButtonIcon>
-      ) : hasIcon ? (
-        <>
+    const hasIcon = icon || iconRight;
+    const isRight = Boolean(iconRight);
+
+    const getState = useMemo(() => {
+      if (isPressed) return 'pressed';
+      if (isHovered) return 'hovered';
+      return disabled ? 'disabled' : 'ready';
+    }, [disabled, isHovered, isPressed]);
+
+    return (
+      <StyledButton
+        as={as}
+        ref={buttonRef}
+        borderWeight={borderWeight}
+        auto={auto}
+        flat={flat}
+        light={light}
+        ghost={ghost}
+        bordered={bordered || ghost}
+        data-state={getState}
+        animated={animated}
+        isPressed={isPressed}
+        isHovered={isHovered}
+        isFocusVisible={isFocusVisible && !disabled}
+        className={clsx(
+          'nextui-button',
+          `nextui-button--${getState}`,
+          className
+        )}
+        css={{
+          ...(css as any),
+          ...cssColors
+        }}
+        {...mergeProps(buttonProps, focusProps, hoverProps, props)}
+      >
+        {React.Children.count(children) === 0 ? (
           <ButtonIcon
-            isSingle={false}
+            isSingle
             isAuto={auto}
             isRight={isRight}
             isGradientButtonBorder={
@@ -170,22 +194,35 @@ const Button = React.forwardRef<
           >
             {hasIcon}
           </ButtonIcon>
-          <div
-            className={clsx('nextui-button-text', {
-              'nextui-button-text-right': isRight,
-              'nextui-button-text-left': !isRight
-            })}
-          >
-            {children}
-          </div>
-        </>
-      ) : (
-        <span className="nextui-button-text">{children}</span>
-      )}
-      <ButtonDrip color="white" {...dripBindings} />
-    </StyledButton>
-  );
-});
+        ) : hasIcon ? (
+          <>
+            <ButtonIcon
+              isSingle={false}
+              isAuto={auto}
+              isRight={isRight}
+              isGradientButtonBorder={
+                props.color === 'gradient' && (bordered || ghost)
+              }
+            >
+              {hasIcon}
+            </ButtonIcon>
+            <div
+              className={clsx('nextui-button-text', {
+                'nextui-button-text-right': isRight,
+                'nextui-button-text-left': !isRight
+              })}
+            >
+              {children}
+            </div>
+          </>
+        ) : (
+          <span className="nextui-button-text">{children}</span>
+        )}
+        <ButtonDrip color="white" {...dripBindings} />
+      </StyledButton>
+    );
+  }
+);
 
 type ButtonComponent<T, P = {}> = React.ForwardRefExoticComponent<
   PropsWithoutRef<P> & RefAttributes<T>
@@ -200,6 +237,6 @@ if (__DEV__) {
 Button.toString = () => '.nextui-button';
 
 export default withDefaults(Button, defaultProps) as ButtonComponent<
-  HTMLButtonElement,
+  HTMLElement,
   ButtonProps
 >;\n- packages/react/src/button/utils.tsx (modified, 20 changes)\n  Patch: @@ -41,7 +41,10 @@ export const getCssColors = (props: React.PropsWithChildren<ButtonProps>) => {
   }
   const defaultDisabledCss = {
     bg: '$accents2',
-    color: '$accents4'
+    color: '$accents4',
+    transform: 'none',
+    boxShadow: 'none',
+    pe: 'none'
   };
 
   if (!props.bordered && !props.flat && !props.ghost && !props.light) {
@@ -51,22 +54,21 @@ export const getCssColors = (props: React.PropsWithChildren<ButtonProps>) => {
     return {
       color: '$accents4',
       backgroundImage:
-        'linear-gradient($background, $background), linear-gradient($accents2, $accents2)'
+        'linear-gradient($background, $background), linear-gradient($accents2, $accents2)',
+      transform: 'none',
+      boxShadow: 'none',
+      pe: 'none',
+      pl: '$$buttonBorderWeight',
+      pr: '$$buttonBorderWeight'
     };
   }
-  if (props.bordered) {
+  if (props.bordered || props.ghost || props.light) {
     return {
       ...defaultDisabledCss,
       bg: 'transparent',
       borderColor: '$accents2'
     };
   }
-  if (props.ghost || props.light) {
-    return {
-      ...defaultDisabledCss,
-      bg: 'transparent'
-    };
-  }
   if (props.flat) {
     return {
       ...defaultDisabledCss,\n- packages/react/src/input/input.tsx (modified, 1 changes)\n  Patch: @@ -329,6 +329,7 @@ const Input = React.forwardRef<FormElement, InputProps>(
               placeholder={inputPlaceholder}
               disabled={disabled}
               readOnly={readOnly}
+              required={required}
               onFocus={focusHandler}
               onBlur={blurHandler}
               onChange={changeHandler}\n- packages/react/src/loading/loading.styles.ts (modified, 3 changes)\n  Patch: @@ -49,6 +49,9 @@ export const StyledLoadingContainer = styled('div', {
   position: 'relative',
   variants: {
     color: {
+      currentColor: {
+        $$loadingColor: 'currentColor'
+      },
       white: {
         $$loadingColor: '$colors$white'
       },\n- packages/react/src/loading/loading.tsx (modified, 6 changes)\n  Patch: @@ -54,13 +54,13 @@ const Loading: React.FC<React.PropsWithChildren<LoadingProps>> = ({
         <>
           <StyledLoading
             className={`${preClass} ${preClass}-${type}`}
+            type={type}
+            size={size}
+            aria-label={ariaLabel}
             css={{
               ...(loadingCss as any),
               ...loadingGradientCSS
             }}
-            type={type}
-            size={size}
-            aria-label={ariaLabel}
           >
             <i className="_1" />
             <i className="_2" />\n- packages/react/src/modal/modal.stories.tsx (modified, 16 changes)\n  Patch: @@ -1,6 +1,5 @@
 import React, { useState } from 'react';
 import { Meta } from '@storybook/react';
-import useTheme from '../use-theme';
 import Modal from './index';
 import Button from '../button';
 import Text from '../text';
@@ -101,7 +100,6 @@ export const Default = () => {
 
 export const WithCloseButton = () => {
   const [visible, setVisible] = useState(false);
-  const theme = useTheme();
   const handler = () => setVisible(true);
 
   const closeHandler = () => {
@@ -136,7 +134,7 @@ export const WithCloseButton = () => {
             color="primary"
             size="lg"
             placeholder="Email"
-            contentLeft={<Mail theme={theme} />}
+            contentLeft={<Mail fill="currentColor" />}
           />
           <Input
             clearable
@@ -145,7 +143,7 @@ export const WithCloseButton = () => {
             color="primary"
             size="lg"
             placeholder="Password"
-            contentLeft={<Password theme={theme} />}
+            contentLeft={<Password fill="currentColor" />}
           />
           <Row justify="space-between">
             <Checkbox>
@@ -174,7 +172,6 @@ export const WithCloseButton = () => {
 
 export const WithUseModal = () => {
   const { setVisible, bindings } = useModal();
-  const theme = useTheme();
 
   return (
     <div>
@@ -199,7 +196,7 @@ export const WithUseModal = () => {
             color="primary"
             size="lg"
             placeholder="Email"
-            contentLeft={<Mail theme={theme} />}
+            contentLeft={<Mail fill="currentColor" />}
           />
           <Input
             clearable
@@ -208,7 +205,7 @@ export const WithUseModal = () => {
             color="primary"
             size="lg"
             placeholder="Password"
-            contentLeft={<Password theme={theme} />}
+            contentLeft={<Password fill="currentColor" />}
           />
           <Row justify="space-between">
             <Checkbox>
@@ -237,7 +234,6 @@ export const WithUseModal = () => {
 
 export const NoAnimated = () => {
   const { setVisible, bindings } = useModal();
-  const theme = useTheme();
 
   return (
     <div>
@@ -262,7 +258,7 @@ export const NoAnimated = () => {
             color="primary"
             size="lg"
             placeholder="Email"
-            contentLeft={<Mail theme={theme} />}
+            contentLeft={<Mail fill="currentColor" />}
           />
           <Input
             clearable
@@ -271,7 +267,7 @@ export const NoAnimated = () => {
             color="primary"
             size="lg"
             placeholder="Password"
-            contentLeft={<Password theme={theme} />}
+            contentLeft={<Password fill="currentColor" />}
           />
           <Row justify="space-between">
             <Checkbox>\n- packages/react/src/modal/modal.tsx (modified, 9 changes)\n  Patch: @@ -27,7 +27,6 @@ interface Props {
   onOpen?: () => void;
   onClose?: () => void;
   className?: string;
-  as?: keyof JSX.IntrinsicElements;
 }
 
 const defaultProps = {
@@ -45,8 +44,8 @@ const defaultProps = {
 type NativeAttrs = Omit<React.DialogHTMLAttributes<unknown>, keyof Props>;
 
 export type ModalProps = Props &
-  typeof defaultProps &
   NativeAttrs &
+  Partial<typeof defaultProps> &
   ModalWrapperProps;
 
 const Modal: React.FC<React.PropsWithChildren<ModalProps>> = ({
@@ -162,10 +161,6 @@ type ModalComponent<P = {}> = React.FC<P> & {
   Footer: typeof ModalFooter;
 };
 
-type ComponentProps = Partial<typeof defaultProps> &
-  Omit<Props, keyof typeof defaultProps> &
-  NativeAttrs;
-
 if (__DEV__) {
   Backdrop.displayName = 'NextUI - Modal';
 }
@@ -174,4 +169,4 @@ Modal.toString = () => '.nextui-modal';
 
 Modal.defaultProps = defaultProps;
 
-export default Modal as ModalComponent<ComponentProps>;
+export default Modal as ModalComponent<ModalProps>;\n- packages/react/src/pagination/pagination.styles.ts (modified, 8 changes)\n  Patch: @@ -368,6 +368,14 @@ export const StyledPagination = styled('nav', {
       css: {
         $$paginationItemRadius: '0px'
       }
+    },
+    {
+      // !rounded && noMargin
+      rounded: false,
+      noMargin: true,
+      css: {
+        $$paginationItemRadius: '0px'
+      }
     }
   ],
   defaultVariants: {\n- packages/react/src/theme/stitches.config.ts (modified, 2 changes)\n  Patch: @@ -52,7 +52,7 @@ export const cssFocusVisible = css({
   variants: {
     isFocusVisible: {
       true: {
-        outline: 'transparent  solid 2px',
+        outline: 'transparent solid 2px',
         outlineOffset: '2px',
         boxShadow: '0 0 0 2px $colors$background, 0 0 0 4px $colors$primary'
       },\n- packages/react/src/use-drip/use-drip.ts (modified, 3 changes)\n  Patch: @@ -1,3 +1,4 @@
+import { PressEvent } from '@react-types/shared';
 import React, { useState } from 'react';
 
 const useDrip = (
@@ -7,7 +8,7 @@ const useDrip = (
   visible: boolean;
   x: number;
   y: number;
-  onClick: (event: React.MouseEvent<HTMLElement>) => void;
+  onClick: (event: React.MouseEvent<HTMLElement> | PressEvent) => void;
   onCompleted: () => void;
 } => {
   const [dripVisible, setDripVisible] = useState<boolean>(initialValue);\n- packages/react/src/utils/dom.ts (modified, 49 changes)\n  Patch: @@ -1,3 +1,11 @@
+import {
+  DOMRef,
+  DOMRefValue,
+  FocusableRef,
+  FocusableRefValue
+} from '@react-types/shared';
+import { RefObject, useImperativeHandle, useRef } from 'react';
+
 export function canUseDOM(): boolean {
   return !!(
     typeof window !== 'undefined' &&
@@ -91,3 +99,44 @@ export function detectTouch() {
     window.ontouchend === null
   );
 }
+
+export function createDOMRef<T extends HTMLElement = HTMLElement>(
+  ref: RefObject<T>
+) {
+  return {
+    UNSAFE_getDOMNode() {
+      return ref.current;
+    }
+  } as DOMRefValue<T>;
+}
+
+export function createFocusableRef<T extends HTMLElement = HTMLElement>(
+  domRef: RefObject<T>,
+  focusableRef: RefObject<HTMLElement> = domRef
+): FocusableRefValue<T> {
+  return {
+    ...createDOMRef(domRef),
+    focus() {
+      if (focusableRef.current) {
+        focusableRef.current.focus();
+      }
+    }
+  };
+}
+
+export function useDOMRef<T extends HTMLElement = HTMLElement>(
+  ref: DOMRef<T>
+): RefObject<T> {
+  let domRef = useRef<T>(null);
+  useImperativeHandle(ref, () => createDOMRef(domRef));
+  return domRef;
+}
+
+export function useFocusableRef<T extends HTMLElement = HTMLElement>(
+  ref: FocusableRef<T>,
+  focusableRef?: RefObject<HTMLElement>
+): RefObject<T> {
+  let domRef = useRef<T>(null);
+  useImperativeHandle(ref, () => createFocusableRef(domRef, focusableRef));
+  return domRef;
+}\n- packages/storybook/package.json (modified, 2 changes)\n  Patch: @@ -4,7 +4,7 @@
   "main": "index.js",
   "license": "MIT",
   "dependencies": {
-    "@nextui-org/react": "1.0.5-beta.5"
+    "@nextui-org/react": "1.0.6-beta.5"
   },
   "devDependencies": {
     "@babel/core": "^7.16.7",\n
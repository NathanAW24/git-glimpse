Pull Request Number: 2648
Title: fix: selectedKeys are not present in the collection warning in async case
Base Branch: main
Head Branch: fix/eng-572
Author: wingkwong
URL: https://github.com/nextui-org/nextui/pull/2648
State: MERGED
Created At: 2024-04-05T09:25:18Z
Merged At: 2024-04-14T19:37:27Z
Participants: wingkwong, jrgarciadev

Description:
Closes #2605
üìù Description

When isLoading is true, skip checking missing keys since the collection hasn't built yet.
Changed isLoading to true in use-pokemon-list.ts  by default to avoid cases like false -> true -> false.

‚õ≥Ô∏è Current behavior (updates)
Currently when the data is being fetched (isLoading = true), the warning is shown saying defaultSelectedKeys is not in the collection.
üöÄ New behavior

as mentioned in description

üí£ Is this a breaking change (Yes/No):
No
üìù Additional Information

Summary by CodeRabbit

Bug Fixes

Patched issues in "@nextui-org/use-aria-multiselect" and "@nextui-org/stories-utils" packages to fix a warning about SELECT defaultSelectedKeys.


Refactor

Enhanced useMultiSelectListState to better handle loading states.


Chores

Adjusted initial loading state in usePokemonList for improved user experience.

Commits:
- fix(hook): add AsyncLoadable & show warning after data is loaded\n- fix(hooks): change isLoading default state to true\n- refactor(hooks): move the logic to missingKeys\n- refactor(changeset): rephrase changeset description\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 6516161946fe93ede6681a37ecedaf755cc25eb8

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 4 packages</summary>

  | Name                             | Type  |
| -------------------------------- | ----- |
| @nextui-org/use-aria-multiselect | Patch |
| @nextui-org/stories-utils        | Patch |
| @nextui-org/select               | Patch |
| @nextui-org/react                | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/wingkwong/nextui/new/fix/eng-572?filename=.changeset/thick-hairs-tie.md&value=---%0A%22%40nextui-org%2Fuse-aria-multiselect%22%3A%20patch%0A%22%40nextui-org%2Fstories-utils%22%3A%20patch%0A---%0A%0Afix%3A%20selectedKeys%20are%20not%20present%20in%20the%20collection%20warning%20in%20async%20case%0A)

\n- vercel: [vc]: #GQGyp4zNBYYjXBIGsh2KYoNfEpX5BMHWwOB9dyha1RA=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvRGFVRzZMMkNQNlR0NG10REJXaGtIWkFzZUVEUSIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLXdpbmdrd29uZy1maXgtZW5nLTU3Mi1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZm9yay13aW5na3dvbmctZml4LWVuZy01NzItbmV4dHVpLW9yZy52ZXJjZWwuYXBwIn19XX0=
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/DaUG6L2CP6Tt4mtDBWhkHZAseEDQ)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-wingkwong-fix-eng-572-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-wingkwong-fix-eng-572-nextui-org.vercel.app?via=pr-comment-feedback-link) | Apr 5, 2024 9:36am |

\n- vercel: @wingkwong is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%22f3b826967a826f6146a440fa40ef90349f256bfc%22%7D%2C%22id%22%3A%22QmTt5rqNGwKj2GQY9DYu9LCBunorPD5ovzet7SQSH2Co4i%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A2648%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: rate limited by coderabbit.ai -->

> [!WARNING]
> ## Rate Limit Exceeded
> 
> @wingkwong has exceeded the limit for the number of commits or files that can be reviewed per hour. Please wait **19 minutes and 21 seconds** before requesting another review.
> 
> <details>
> 
> <summary>How to resolve this issue?</summary>
> 
> After the wait time has elapsed, a review can be triggered using the `@coderabbitai review` command as a PR comment. Alternatively, push new commits to this PR.
> 
> We recommend that you space out your commits to avoid hitting the rate limit.
> 
> </details>
> 
> <details>
> 
> <summary>How do rate limits work?</summary>
> 
> CodeRabbit enforces hourly rate limits for each developer per organization.
> Our paid plans have higher rate limits than the trial, open-source and free plans. In all cases, we re-allow further reviews after a brief timeout.
> Please see our [FAQ](https://coderabbit.ai/docs/faq) for further information.
> 
> </details>
> 
> <details>
> <summary>Commits</summary>
> Files that changed from the base of the PR and between ef900a185131b6172c18c63634b043b5144051c8 and 6516161946fe93ede6681a37ecedaf755cc25eb8.
> </details>

<!-- end of auto-generated comment: rate limited by coderabbit.ai --><!-- walkthrough_start -->

## Walkthrough

The update introduces patches for the `@nextui-org/use-aria-multiselect` and `@nextui-org/stories-utils` packages to address a specific issue with the Select component. When using asynchronous items with a `defaultSelectedKeys` prop, a warning was displayed if those keys weren't present in the initial collection. This was misleading during loading states. The patches ensure that this warning is suppressed when the `isLoading` prop is true, aligning with the expected behavior of asynchronous loading.

## Changes

| File(s)                                                                 | Change Summary                                                                                         |
|-------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------|
| `.changeset/rare-plums-speak.md`                                        | Introduced patches for specific packages to address issue #2605.                                       |
| `...hooks/use-aria-multiselect/src/use-multiselect-list-state.ts`       | Extended `MultiSelectListProps` and updated `useMultiSelectListState` to account for `isLoading`.     |
| `...utilities/stories-utils/src/hooks/use-pokemon-list.ts`              | Changed the initial `isLoading` state to `true` to reflect async loading behavior.                    |

## Assessment against linked issues

| Objective                                                                 | Addressed | Explanation |
|----------------------------------------------------------------------------|-----------|-------------|
| Suppress warning for `defaultSelectedKeys` when `isLoading` is true (#2605) | ‚úÖ         |             |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->
<!--


.changeset/rare-plums-speak.md: The new file introduces patches for "@nextui-org/use-aria-multiselect" and "@nextui-org/stories-utils" packages. It addresses a warning related to SELECT defaultSelectedKeys not present in the collection (#2605).

---

packages/hooks/use-aria-multiselect/src/use-multiselect-list-state.ts: In the `use-multiselect-list-state.ts` file, the `MultiSelectListProps` interface now extends `AsyncLoadable` in addition to `CollectionBase` and `MultipleSelection`. The `useMultiSelectListState` function has been updated to check for `props?.isLoading` before evaluating `missingKeys`.

---

packages/utilities/stories-utils/src/hooks/use-pokemon-list.ts: In the `usePokemonList` hook within `use-pokemon-list.ts`, the initial state of `isLoading` has been changed from `false` to `true`.

-->
<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: short summary by coderabbit.ai -->
<!--


### PR Objectives

This Pull Request (PR) aims to address a warning issue identified in issue #2605, where the `Select` component in the NextUI library generates a warning when `defaultSelectedKeys` are used in conjunction with asynchronous item loading. The warning states that "selectedKeys are not present in the collection," which occurs even when the `isLoading` prop is set to `true`, indicating that the items are being loaded asynchronously.

The PR introduces changes to ensure that when the `isLoading` prop is `true`, indicating that the items for the `Select` component are being loaded asynchronously, the `defaultSelectedKeys` should not trigger a warning about the keys not being present in the collection. This adjustment aims to improve the developer experience by eliminating unnecessary warnings when using the `Select` component with asynchronous data loading.

The changes are encapsulated in modifications to the `use-aria-multiselect` and `stories-utils` packages within the NextUI library. Specifically, the `useMultiSelectListState` function within the `use-aria-multiselect` package has been updated to include a check for the `isLoading` prop before evaluating `missingKeys`. This adjustment prevents the warning from being triggered when `defaultSelectedKeys` are specified, and the items are still loading. Additionally, the `usePokemonList` hook within the `stories-utils` package has been updated to reflect an initial `isLoading` state of `true`, aligning with the asynchronous loading behavior.

The PR also includes a new changeset file, `rare-plums-speak.md`, which documents the patches for the affected packages and provides a brief overview of the issue being addressed.

### AI-generated Summary of Generated Summaries

This Pull Request (PR) addresses issue #2605 in the NextUI library, which involves a warning being incorrectly triggered when using `defaultSelectedKeys` with the `Select` component during asynchronous item loading. The core of the problem lies in the component's inability to recognize that the absence of `selectedKeys` in the collection is expected behavior when items are still being fetched (`isLoading` is `true`).

To resolve this issue, the PR implements changes in two main areas of the NextUI library: the `use-aria-multiselect` package and the `stories-utils` package. In the `use-aria-multiselect` package, the `useMultiSelectListState` function is enhanced to include a condition that checks the `isLoading` prop before assessing `missingKeys`. This modification ensures that the warning about `selectedKeys` not being present in the collection is suppressed during asynchronous loading, thereby aligning the component's behavior with the expected asynchronous data fetching process.

Additionally, the `usePokemonList` hook within the `stories-utils` package is updated to start with an initial `isLoading` state set to `true`. This change further supports the asynchronous loading scenario by correctly initializing the loading state, which is consistent with the expected behavior when fetching data asynchronously.

Together, these updates effectively eliminate the unnecessary warning when using `defaultSelectedKeys` with asynchronous item loading in the `Select` component, improving the developer experience and ensuring the component behaves as intended during asynchronous operations.

-->
<!-- end of auto-generated comment: short summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- f3b826967a826f6146a440fa40ef90349f256bfc -->
<!-- ef900a185131b6172c18c63634b043b5144051c8 -->

<!-- commit_ids_reviewed_end --><!-- tweet_start -->

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<!-- tweet_end --><!-- tips_start -->

---

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/coderabbit-overrides.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/rare-plums-speak.md (added, 6 changes)\n  Patch: @@ -0,0 +1,6 @@
+---
+"@nextui-org/use-aria-multiselect": patch
+"@nextui-org/stories-utils": patch
+---
+
+Fixed an issue where a warning was triggered in the Select component when `defaultSelectedKeys` were used and items were still loading (#2605).\n- packages/hooks/use-aria-multiselect/src/use-multiselect-list-state.ts (modified, 9 changes)\n  Patch: @@ -1,8 +1,11 @@
 import {ListState, useListState} from "@react-stately/list";
-import {CollectionBase, MultipleSelection, Node} from "@react-types/shared";
+import {CollectionBase, MultipleSelection, AsyncLoadable, Node} from "@react-types/shared";
 import {Key, useMemo} from "react";
 
-export interface MultiSelectListProps<T> extends CollectionBase<T>, MultipleSelection {}
+export interface MultiSelectListProps<T>
+  extends CollectionBase<T>,
+    AsyncLoadable,
+    MultipleSelection {}
 
 export interface MultiSelectListState<T> extends ListState<T> {
   /** The keys for the currently selected items. */
@@ -26,7 +29,7 @@ export function useMultiSelectListState<T extends object>(
   } = useListState<T>(props);
 
   const missingKeys: Key[] = useMemo(() => {
-    if (selectedKeys.size !== 0) {
+    if (!props.isLoading && selectedKeys.size !== 0) {
       return Array.from(selectedKeys)
         .filter(Boolean)
         .filter((key) => !collection.getItem(`${key}`));\n- packages/utilities/stories-utils/src/hooks/use-pokemon-list.ts (modified, 2 changes)\n  Patch: @@ -14,7 +14,7 @@ export type UsePokemonListProps = {
 export function usePokemonList({fetchDelay = 0}: UsePokemonListProps = {}) {
   const [items, setItems] = useState<Pokemon[]>([]);
   const [hasMore, setHasMore] = useState(true);
-  const [isLoading, setIsLoading] = useState(false);
+  const [isLoading, setIsLoading] = useState(true);
   const [offset, setOffset] = useState(0);
   const limit = 20; // Number of items per page, adjust as necessary
 \n
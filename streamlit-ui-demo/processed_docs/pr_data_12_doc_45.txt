Pull Request Number: 2737
Title: fix(date-picker): invalid and disabled props removed
Base Branch: main
Head Branch: fix/date-range-picker-input
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/2737
State: MERGED
Created At: 2024-04-16T15:37:38Z
Merged At: 2024-04-16T15:37:50Z
Participants: jrgarciadev

Description:
Closes # 
üìù Description
The DateRangePicker input is currenly always disabled/readonly
‚õ≥Ô∏è Current behavior (updates)
The DateRangePicker input is currenly always disabled/readonly
üöÄ New behavior
Static props removed from DateRange Field
üí£ Is this a breaking change (Yes/No): No

üìù Additional Information

Summary by CodeRabbit

Refactor

Updated the date range picker by removing static properties to enhance flexibility and user interaction.

Commits:
- fix(date-picker): invalid and disabled props removed\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 593d3c6e318dbb30be6bbc5471651e5b3b5ca3dd

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name                    | Type  |
| ----------------------- | ----- |
| @nextui-org/date-picker | Patch |
| @nextui-org/react       | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/fix/date-range-picker-input?filename=.changeset/nine-peas-mix.md&value=---%0A%22%40nextui-org%2Fdate-picker%22%3A%20patch%0A---%0A%0Afix(date-picker)%3A%20invalid%20and%20disabled%20props%20removed%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The recent update involves modifications to the `@nextui-org/date-picker` package, particularly affecting the `DateRangePickerField` component. Notably, the static properties `isInvalid` and `isDisabled` have been removed from the initialization process in the `useDateFieldState` function. This change simplifies the component's state management by reducing the number of properties it handles directly.

## Changes

| File Path                         | Change Summary                                                                 |
|-----------------------------------|-------------------------------------------------------------------------------|
| `.changeset/red-jobs-rest.md`     | Introduced changes to `@nextui-org/date-picker`, removing static props.       |
| `.../date-picker/src/...field.tsx`| Removed `isInvalid` and `isDisabled` properties from `useDateFieldState` call.|

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->
<!--


.changeset/red-jobs-rest.md: The new file introduces a change related to the "@nextui-org/date-picker" package, specifically removing static props from the date range input picker field.

---

packages/components/date-picker/src/date-range-picker-field.tsx: In the `DateRangePickerField` function in `date-range-picker-field.tsx`, the `isInvalid` and `isDisabled` properties were removed from the `useDateFieldState` call, affecting the initialization of these properties.

-->
<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: short summary by coderabbit.ai -->
<!--


### PR Objectives

The pull request (PR) number 2737 is titled "fix(date-picker): invalid and disabled props removed" and aims to address an issue with the `DateRangePicker` component in the NextUI library. The main objective of this PR is to modify the behavior of the `DateRangePicker` input, which is currently always set to disabled or readonly. This behavior is adjusted by removing static properties that enforce this state.

The description provided in the PR details that the `DateRangePickerField` function within the `date-range-picker-field.tsx` file has been modified. Specifically, the `isInvalid` and `isDisabled` properties were removed from the `useDateFieldState` call. This change is intended to make the date range input field interactive, as opposed to being perpetually disabled or readonly.

The PR does not introduce any breaking changes, ensuring that existing implementations of the NextUI `DateRangePicker` will not be adversely affected by this update. Additionally, there is no mention of linked GitHub issues in the PR, suggesting that this change might have been identified internally or during development rather than in response to a user-submitted issue.

### AI-Generated Summary of Generated Summaries

The pull request introduces changes to the `DateRangePickerField` component by removing the `isInvalid` and `isDisabled` properties from the `useDateFieldState` function call in the `date-range-picker-field.tsx` file. This adjustment effectively makes the date range input field interactive, removing the previous static behavior where the field was always disabled or readonly.

-->
<!-- end of auto-generated comment: short summary by coderabbit.ai -->

---

<details>

<summary>Recent Review Details</summary>

**Configuration used: .coderabbit.yaml**

<details>
<summary>Commits</summary>
Files that changed from the base of the PR and between ed1dbbc1721caca0f00cf55cca1281d6b3b634f6 and 593d3c6e318dbb30be6bbc5471651e5b3b5ca3dd.
</details>


<details>
<summary>Files selected for processing (2)</summary>

* .changeset/red-jobs-rest.md (1 hunks)
* packages/components/date-picker/src/date-range-picker-field.tsx (1 hunks)

</details>







<details><summary>Additional comments not posted (3)</summary><blockquote>
<details><summary>.changeset/red-jobs-rest.md (1)</summary><blockquote>

`5-5`: Ensure the changeset description is clear and detailed.

Consider adding more details about the impact of the changes on the user or system, to provide better context for the patch version update.

</blockquote></details>
<details><summary>packages/components/date-picker/src/date-range-picker-field.tsx (2)</summary><blockquote>

`44-44`: Removal of `isInvalid` and `isDisabled` properties.

The removal of these properties from the `useDateFieldState` call is intended to make the date range input field interactive. This change aligns with the PR's objective to adjust the behavior of the `DateRangePicker` input.

---

`44-44`: Consider handling potential validation issues.

With the removal of `isInvalid` and `isDisabled`, ensure that there are still adequate mechanisms in place to handle form validation and user feedback for invalid or disabled states.

</blockquote></details></blockquote></details>



</details><!-- commit_ids_reviewed_start -->

<!-- 593d3c6e318dbb30be6bbc5471651e5b3b5ca3dd -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- vercel: [vc]: #af4bkhTGtBO2eBPPfzjIKQ+VI0H5Us8cfnlFG3snRFU=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi9EOG13WHZTTXdBdHJ6aVRlRFhzN1ZTZGQ3eDhwIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1maXgtZGF0ZS1yYW5nZS1waWNrZXItaW5wdXQtbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIn0seyJuYW1lIjoibmV4dHVpLXN0b3J5Ym9vay12MiIsInJvb3REaXJlY3RvcnkiOiJwYWNrYWdlcy9zdG9yeWJvb2siLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktc3Rvcnlib29rLXYyLzNXVmpHZWZiWFk3Vld2bnFyRGVvMm1XcXJMaXEiLCJwcmV2aWV3VXJsIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZml4LWRhdGUtcmFuZ2UtcGlja2VyLWlucHV0LW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJQRU5ESU5HIn1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Updated (UTC) |
| :--- | :----- | :------ | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/D8mwXvSMwAtrziTeDXs7VSdd7x8p)) | [Visit Preview](https://nextui-docs-v2-git-fix-date-range-picker-input-nextui-org.vercel.app) | Apr 16, 2024 3:37pm |
| **nextui-storybook-v2** | üîÑ Building ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/3WVjGefbXY7VWvnqrDeo2mWqrLiq)) | [Visit Preview](https://nextui-storybook-v2-git-fix-date-range-picker-input-nextui-org.vercel.app) | Apr 16, 2024 3:37pm |


\n

Files Changed:
- .changeset/red-jobs-rest.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/date-picker": patch
+---
+
+Static props removed from date range input picker field\n- packages/components/date-picker/src/date-range-picker-field.tsx (modified, 2 changes)\n  Patch: @@ -44,8 +44,6 @@ function DateRangePickerField<T extends DateValue>(
   let state = useDateFieldState({
     ...otherProps,
     locale,
-    isInvalid: true,
-    isDisabled: true,
     validationBehavior: "native",
     createCalendar:
       !createCalendarProp || typeof createCalendarProp !== "function"\n
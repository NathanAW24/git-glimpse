Pull Request Number: 3036
Title: feat: add form component
Base Branch: beta/release-next
Head Branch: feat/form-component
Author: ryo-manba
URL: https://github.com/nextui-org/nextui/pull/3036
State: MERGED
Created At: 2024-05-21T15:37:09Z
Merged At: 2024-11-27T19:51:01Z
Participants: ryo-manba, jrgarciadev, Scholar01, wingkwong

Description:
üìù Description
Added a Form component and upgraded the entire react-aria version to resolve typecheck errors from version mismatches.
The details of the react-aria update are provided in the inline comments of the following PR.
#3732
‚õ≥Ô∏è Current behavior (updates)
Currently, there is no Form component available, and the version of react-aria does not support the latest features related to form handling.
üöÄ New behavior
The new Form component has been added, allowing users to utilize features such as validation behavior switching and error handling through serverErrors. Additionally, the react-aria version has been updated to incorporate the latest form-related improvements.

  
    
    

    form-demo.mov
    
  

  

  


üí£ Is this a breaking change (Yes/No):
No.
üìù Additional Information
A guideline on how to use the new Form component will be added in a separate PR.
It will be based on the following reference.
React Aria Forms Guide
Test
Please verify the following in each story.

The Form component allows toggling of validationBehavior.
Error messages are correctly displayed based on the name field when provided via serverErrors.


Summary by CodeRabbit


New Features

Introduced form validation capabilities across various components including DatePicker, Autocomplete, and Dropdown.



Bug Fixes

Enhanced error handling and validation checks in the Dropdown and Autocomplete components.



Documentation

Updated stories in Storybook for DatePicker and DateRangePicker to demonstrate new server-side validation features.



Chores

Updated multiple dependencies across various packages to ensure compatibility and access to the latest features and fixes.

Commits:
- chore: add support validationBehavior aria\n- Merge branch 'canary' into chore/validation-behavior-external\n- chore: add validationBehavior to Provider\n- chore: add autocomplete validation test\n- chore: add checkbox validation test\n- fix(input): require condition\n- docs: add description of validationBehavior props\n- chore: add support validationBehavior props for date components\n- docs(dates): add description of validationBehavior props\n- chore: add changeset\n- chore: format\n- chore: fix test\n- fix: select validationBehavior is not support yet\n- fix: select validationBehavior not supported yet\n- feat: add form component with input support\n- feat: add support form context\n- Merge branch 'canary' into feat/form-component\n- Merge branch 'canary' into feat/form-component\n- chore: wip add support for  form server errors\n- chore: add support checkbox server validation\n- chore: add support radio server validation\n- chore: update pnpm-lock.yaml\n- chore: add support input server validation\n- chore: add support autocomplete server validation\n- Merge branch 'canary' into feat/form-component\n- chore(form): add server validation stories\n- Merge remote-tracking branch 'origin' into feat/form-component\n- chore: fix test\n- chore: add date-picker validation test\n- chore: update form stories\n- chore: add changeset\n- chore: update react-aria version\n- chore: add pnpm-lock.yaml\n- chore: update react-aria version\n- chore: add comment\n- chore: update react-aria version\n- chore: fix change set\n- Merge branch 'canary' into feat/form-component\n- Merge branch 'canary' into feat/form-component\n- chore: export form component in the main package\n- fix: conflicts\n- fix: conflicts\n- Merge branch 'canary' into feat/form-component\n- chore: upgrade react-aria\n- chore: fixed internationalized/date version\n- fix: build error\n- chore: upgrade docs react-aria version\n- fix: remove comment\n- fix: debug setting\n- Merge branch 'canary' into feat/form-component\n

Labels:
üëÄ Status: To Review

Comments:
- vercel: [vc]: #bhnc2i62NYzYTK1rrXdyP7vIW1Y5ryJq1j8a3NZ0Htc=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktZG9jcy12MiIsInJvb3REaXJlY3RvcnkiOiJhcHBzL2RvY3MiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktZG9jcy12Mi83bXg2Skp5UmVMRm1ZN3FvNzdEUmtEZDZMYlJuIiwicHJldmlld1VybCI6Im5leHR1aS1kb2NzLXYyLWdpdC1mZWF0LWZvcm0tY29tcG9uZW50LW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktZG9jcy12Mi1naXQtZmVhdC1mb3JtLWNvbXBvbmVudC1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX0seyJuYW1lIjoibmV4dHVpLXN0b3J5Ym9vay12MiIsInJvb3REaXJlY3RvcnkiOiJwYWNrYWdlcy9zdG9yeWJvb2siLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vbmV4dHVpLW9yZy9uZXh0dWktc3Rvcnlib29rLXYyLzM3cUxGYnAyYjNWQnE0Z0M5M29MWkdQTjJHVGEiLCJwcmV2aWV3VXJsIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZmVhdC1mb3JtLWNvbXBvbmVudC1uZXh0dWktb3JnLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiREVQTE9ZRUQiLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibmV4dHVpLXN0b3J5Ym9vay12Mi1naXQtZmVhdC1mb3JtLWNvbXBvbmVudC1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-docs-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs-v2/7mx6JJyReLFmY7qo77DRkDd6LbRn)) | [Visit Preview](https://nextui-docs-v2-git-feat-form-component-nextui-org.vercel.app) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-docs-v2-git-feat-form-component-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 27, 2024 7:56pm |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/37qLFbp2b3VBq4gC93oLZGPN2GTa)) | [Visit Preview](https://nextui-storybook-v2-git-feat-form-component-nextui-org.vercel.app) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-feat-form-component-nextui-org.vercel.app?via=pr-comment-feedback-link) | Nov 27, 2024 7:56pm |


\n- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 1aab6281339e9f951a81510eb9eb7d04a379d7a8

**The changes in this PR will be included in the next version bump.**



Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/nextui-org/nextui/new/feat/form-component?filename=.changeset/wicked-ducks-collect.md&value=---%0A%22%40fake-scope%2Ffake-pkg%22%3A%20patch%0A---%0A%0Afeat%3A%20add%20form%20component%0A)

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: skip review by coderabbit.ai -->

> [!IMPORTANT]
> ## Review skipped
> 
> Auto reviews are disabled on base/target branches other than the default branch.
> 
> <details>
> <summary>üóÇÔ∏è Base branches to auto review (5)</summary>
> 
> * main
> * canary
> * fix/.*
> * chore/.*
> * feat/.*
> 
> </details>
> 
> Please check the settings in the CodeRabbit UI or the `.coderabbit.yaml` file in this repository. To trigger a single review, invoke the `@coderabbitai review` command.
> 
> You can disable this status message by setting the `reviews.review_status` to `false` in the CodeRabbit configuration file.

<!-- end of auto-generated comment: skip review by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
This pull request includes extensive updates to the `package.json` files across multiple packages in the `@nextui-org` project. The updates primarily focus on incrementing dependency versions for various `@react-aria`, `@react-stately`, and `@react-types` packages, as well as adding new dependencies like `@nextui-org/form` in several components. Additionally, some files introduce modifications to testing suites and type definitions, particularly enhancing type safety in the `useDropdown` hook.

## Changes

| File Path                                      | Change Summary                                                                                                               |
|------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------|
| apps/docs/package.json                         | Updated versions for dependencies, including `@internationalized/date` and several `@react-aria` packages.                |
| package.json                                   | Updated to version `2.0.0`, modified `devDependencies` for `@react-types/link` and `@react-types/shared`.                 |
| packages/components/checkbox/package.json      | Added dependency `@nextui-org/form`, updated several `@react-aria` and `@react-stately` packages.                        |
| packages/components/date-picker/__tests__/date-picker.test.tsx | Added validation tests for the `DatePicker` component, including server-side validation checks.                             |
| packages/components/date-picker/package.json   | Updated `@internationalized/date`, added `@nextui-org/form`, and updated several `@react-aria` and `@react-stately` packages. |
| packages/components/date-picker/src/use-date-picker.ts | Enhanced `useDatePicker` hook with new validation behavior and optional classNames property.                                 |
| packages/components/date-picker/src/use-date-range-picker.ts | Enhanced `useDateRangePicker` hook with new validation behavior and optional classNames property.                           |
| packages/components/date-picker/stories/date-picker.stories.tsx | Added a new story for server-side validation in the `DatePicker`.                                                          |
| packages/components/date-picker/stories/date-range-picker.stories.tsx | Added a new story for server-side validation in the `DateRangePicker`.                                                    |
| packages/core/react/package.json               | Added `@nextui-org/form`, restored `@nextui-org/alert`, removed `@nextui-org/drawer`, updated `@react-aria/visually-hidden`. |
| packages/core/react/src/index.ts               | Added export for `@nextui-org/form`.                                                                                       |
| packages/core/system/package.json              | Updated `@internationalized/date`, added `@react-aria/i18n`, and updated several other dependencies.                       |
| ...                                            | ... (similar updates for other packages like `accordion`, `alert`, `button`, etc.)                                        |
| packages/hooks/use-draggable/package.json      | Updated `@react-aria/interactions` from `^3.21.1` to `3.22.4`.                                                             |
| packages/hooks/use-intersection-observer/package.json | Updated versions for `@react-aria/utils`, `@react-aria/ssr`, and `@react-types/shared`.                                   |
| packages/hooks/use-pagination/package.json      | Updated `@react-aria/i18n` from `3.12.2` to `3.12.3`.                                                                      |
| packages/utilities/aria-utils/package.json     | Updated several dependencies, including `@react-aria/utils`, `@react-stately/collections`, and `@react-types/shared`.     |
| .vscode/settings.json                          | Fixed JSON syntax for Tailwind CSS configuration.                                                                          |
| packages/components/dropdown/src/use-dropdown.ts | Updated return type of `useDropdown` function to `UseDropdownReturn`, enhancing type clarity.                             |

## Sequence Diagram(s)
```mermaid
sequenceDiagram
    participant User
    participant DatePicker
    participant Form

    User->>Form: Submit with DatePicker
    Form->>DatePicker: Validate input
    DatePicker-->>Form: Return validation result
    Form-->>User: Display validation feedback
```

## Possibly related PRs
- **#3302**: This PR introduces month and year pickers to the `DateRangePicker` and `RangeCalendar` components, which is directly related to the updates in the `package.json` for the `@nextui-org/date-picker` and `@nextui-org/calendar` packages in the main PR, as both involve enhancements to date selection functionalities.
- **#3501**: This PR adds `@react-types/shared` to the dependencies of the `system-rsc` package, which is relevant as it reflects ongoing maintenance and updates to dependencies that may also affect the components in the main PR.
- **#3843**: Although this PR focuses on fixing image URLs, it is part of the broader documentation and component updates that may relate to the overall maintenance and enhancement efforts reflected in the main PR.

## Suggested labels
`üìã Scope : Docs`

## Suggested reviewers
- jrgarciadev
- wingkwong

<!-- walkthrough_end -->

<!-- internal state start -->


<!--  -->

<!-- internal state end -->
<!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://docs.coderabbit.ai) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- jrgarciadev: @ryo-manba please pull the changes from canary \n- jrgarciadev: @ryo-manba fix conflicts \n- ryo-manba: @jrgarciadev I've fixed it.
\n- ryo-manba: When merging, please close the related issue in this PR.
- https://github.com/nextui-org/nextui/pull/3732
\n- Scholar01: Thank you for your contribution, I have been looking forward to this update for a long time!

Because in nextjs, collection controls will fail in server-side components, which is painful for me.\n- Scholar01: üëÄüëÄ üôè\n- jrgarciadev: @ryo-manba I uninstalled `react-aria-components` and moved only the needed types and functions to the `form` package this helps with decreasing the package size https://github.com/nextui-org/nextui/pull/3036/commits/3cf79887508b64e6a3efd4d319b51823598ee003, all tests passed\n

Files Changed:
- .changeset/fuzzy-lies-brush.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/table": patch
+---
+
+The `layoutNode` prop has been removed due to the update to react-aria.\n- .changeset/polite-mails-kneel.md (added, 47 changes)\n  Patch: @@ -0,0 +1,47 @@
+---
+"@nextui-org/accordion": patch
+"@nextui-org/avatar": patch
+"@nextui-org/breadcrumbs": patch
+"@nextui-org/button": patch
+"@nextui-org/calendar": patch
+"@nextui-org/card": patch
+"@nextui-org/chip": patch
+"@nextui-org/date-input": patch
+"@nextui-org/divider": patch
+"@nextui-org/dropdown": patch
+"@nextui-org/kbd": patch
+"@nextui-org/link": patch
+"@nextui-org/listbox": patch
+"@nextui-org/menu": patch
+"@nextui-org/modal": patch
+"@nextui-org/navbar": patch
+"@nextui-org/pagination": patch
+"@nextui-org/popover": patch
+"@nextui-org/progress": patch
+"@nextui-org/select": patch
+"@nextui-org/slider": patch
+"@nextui-org/snippet": patch
+"@nextui-org/switch": patch
+"@nextui-org/tabs": patch
+"@nextui-org/tooltip": patch
+"@nextui-org/user": patch
+"@nextui-org/react": patch
+"@nextui-org/system": patch
+"@nextui-org/system-rsc": patch
+"@nextui-org/use-aria-accordion": patch
+"@nextui-org/use-aria-accordion-item": patch
+"@nextui-org/use-aria-button": patch
+"@nextui-org/use-aria-link": patch
+"@nextui-org/use-aria-menu": patch
+"@nextui-org/use-aria-modal-overlay": patch
+"@nextui-org/use-aria-multiselect": patch
+"@nextui-org/use-aria-overlay": patch
+"@nextui-org/use-aria-toggle-button": patch
+"@nextui-org/use-disclosure": patch
+"@nextui-org/use-intersection-observer": patch
+"@nextui-org/use-is-mobile": patch
+"@nextui-org/use-pagination": patch
+"@nextui-org/aria-utils": patch
+---
+
+update react-aria version\n- .changeset/purple-berries-play.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/form": patch
+---
+
+add form component\n- .changeset/sharp-pianos-pump.md (added, 9 changes)\n  Patch: @@ -0,0 +1,9 @@
+---
+"@nextui-org/autocomplete": patch
+"@nextui-org/checkbox": patch
+"@nextui-org/date-picker": patch
+"@nextui-org/input": patch
+"@nextui-org/radio": patch
+---
+
+support server validation with form\n- .vscode/settings.json (modified, 2 changes)\n  Patch: @@ -10,5 +10,5 @@
   },
   "tailwindCSS.experimental.classRegex": [
     ["([\"'`][^\"'`]*.*?[\"'`])", "[\"'`]([^\"'`]*).*?[\"'`]"]
-  ]
+  ],
 }\n- apps/docs/package.json (modified, 18 changes)\n  Patch: @@ -20,7 +20,7 @@
     "@emotion/is-prop-valid": "^1.3.1",
     "@iconify/icons-solar": "^1.2.3",
     "@iconify/react": "^4.1.1",
-    "@internationalized/date": "3.5.5",
+    "@internationalized/date": "3.5.6",
     "@mapbox/rehype-prism": "^0.6.0",
     "@nextui-org/aria-utils": "workspace:*",
     "@nextui-org/badge": "workspace:*",
@@ -39,14 +39,14 @@
     "@nextui-org/use-infinite-scroll": "workspace:*",
     "@nextui-org/use-is-mobile": "workspace:*",
     "@radix-ui/react-scroll-area": "^1.0.5",
-    "@react-aria/focus": "3.17.1",
-    "@react-aria/i18n": "3.11.1",
-    "@react-aria/interactions": "3.21.3",
-    "@react-aria/selection": "3.18.1",
-    "@react-aria/ssr": "3.9.4",
-    "@react-aria/utils": "3.24.1",
+    "@react-aria/focus": "3.18.4",
+    "@react-aria/i18n": "3.12.3",
+    "@react-aria/interactions": "3.22.4",
+    "@react-aria/selection": "3.20.1",
+    "@react-aria/ssr": "3.9.6",
+    "@react-aria/utils": "3.25.3",
     "@react-aria/virtualizer": "3.10.1",
-    "@react-aria/visually-hidden": "3.8.12",
+    "@react-aria/visually-hidden": "3.8.17",
     "@react-stately/data": "3.11.4",
     "@react-stately/layout": "3.13.9",
     "@react-stately/tree": "3.8.1",
@@ -100,7 +100,7 @@
     "@docusaurus/utils": "2.0.0-beta.3",
     "@next/bundle-analyzer": "^13.4.6",
     "@next/env": "^13.4.12",
-    "@react-types/shared": "3.24.1",
+    "@react-types/shared": "3.25.0",
     "@tailwindcss/typography": "^0.5.9",
     "@types/canvas-confetti": "^1.4.2",
     "@types/marked": "^5.0.0",\n- package.json (modified, 6 changes)\n  Patch: @@ -69,9 +69,9 @@
     "@commitlint/cli": "^17.2.0",
     "@commitlint/config-conventional": "^17.2.0",
     "@react-bootstrap/babel-preset": "^2.1.0",
-    "@react-types/link": "^3.4.4",
-    "@react-types/shared": "3.24.1",
-    "@storybook/react": "^8.4.5",
+    "@react-types/link": "3.5.7",
+    "@react-types/shared": "3.25.0",
+   "@storybook/react": "^8.4.5",
     "@swc/core": "^1.3.35",
     "@swc/jest": "^0.2.24",
     "@testing-library/dom": "^10.4.0",\n- packages/components/accordion/package.json (modified, 14 changes)\n  Patch: @@ -55,13 +55,13 @@
     "@nextui-org/divider": "workspace:*",
     "@nextui-org/use-aria-accordion": "workspace:*",
     "@nextui-org/dom-animation": "workspace:*",
-    "@react-aria/interactions": "3.22.2",
-    "@react-aria/focus": "3.18.2",
-    "@react-aria/utils": "3.25.2",
-    "@react-stately/tree": "3.8.4",
-    "@react-aria/button": "3.9.8",
-    "@react-types/accordion": "3.0.0-alpha.23",
-    "@react-types/shared": "3.24.1"
+    "@react-aria/interactions": "3.22.4",
+    "@react-aria/focus": "3.18.4",
+    "@react-aria/utils": "3.25.3",
+    "@react-stately/tree": "3.8.5",
+    "@react-aria/button": "3.10.1",
+    "@react-types/accordion": "3.0.0-alpha.24",
+    "@react-types/shared": "3.25.0"
   },
   "devDependencies": {
     "@nextui-org/theme": "workspace:*",\n- packages/components/alert/package.json (modified, 6 changes)\n  Patch: @@ -47,9 +47,9 @@
     "@nextui-org/react-utils": "workspace:*",
     "@nextui-org/shared-icons": "workspace:*",
     "@nextui-org/shared-utils": "workspace:*",
-    "@nextui-org/button": "workspace:*",
-    "@react-stately/utils": "3.10.1",
-    "@react-aria/utils": "3.24.1"
+    "@react-stately/utils": "3.10.4",
+    "@react-aria/utils": "3.25.3",
+    "@nextui-org/button": "workspace:*"
   },
   "devDependencies": {
     "@nextui-org/system": "workspace:*",\n- packages/components/autocomplete/__tests__/autocomplete.test.tsx (modified, 194 changes)\n  Patch: @@ -3,6 +3,7 @@ import * as React from "react";
 import {within, render, renderHook, act} from "@testing-library/react";
 import userEvent, {UserEvent} from "@testing-library/user-event";
 import {useForm} from "react-hook-form";
+import {Form} from "@nextui-org/form";
 
 import {Autocomplete, AutocompleteItem, AutocompleteProps, AutocompleteSection} from "../src";
 import {Modal, ModalContent, ModalBody, ModalHeader, ModalFooter} from "../../modal/src";
@@ -588,6 +589,60 @@ describe("Autocomplete", () => {
     expect(autocomplete2).toHaveFocus();
   });
 
+  it("should work when key equals textValue", async () => {
+    const wrapper = render(
+      <Autocomplete
+        aria-label="Favorite Animal"
+        data-testid="when-key-equals-textValue"
+        defaultSelectedKey="cat"
+        items={itemsData}
+        label="Favorite Animal"
+      >
+        {(item) => <AutocompleteItem key={item.value}>{item.value}</AutocompleteItem>}
+      </Autocomplete>,
+    );
+
+    const autocomplete = wrapper.getByTestId("when-key-equals-textValue");
+
+    const user = userEvent.setup();
+
+    await user.click(autocomplete);
+
+    expect(autocomplete).toHaveValue("cat");
+    expect(autocomplete).toHaveAttribute("aria-expanded", "true");
+
+    let listboxItems = wrapper.getAllByRole("option");
+
+    await user.click(listboxItems[1]);
+
+    expect(autocomplete).toHaveValue("dog");
+    expect(autocomplete).toHaveAttribute("aria-expanded", "false");
+  });
+
+  it("should work when key equals textValue (controlled)", async () => {
+    const wrapper = render(
+      <ControlledAutocomplete data-testid="when-key-equals-textValue" items={itemsData}>
+        {(item) => <AutocompleteItem key={item.value}>{item.value}</AutocompleteItem>}
+      </ControlledAutocomplete>,
+    );
+
+    const autocomplete = wrapper.getByTestId("when-key-equals-textValue");
+
+    const user = userEvent.setup();
+
+    await user.click(autocomplete);
+
+    expect(autocomplete).toHaveValue("cat");
+    expect(autocomplete).toHaveAttribute("aria-expanded", "true");
+
+    let listboxItems = wrapper.getAllByRole("option");
+
+    await user.click(listboxItems[1]);
+
+    expect(autocomplete).toHaveValue("dog");
+    expect(autocomplete).toHaveAttribute("aria-expanded", "false");
+  });
+
   describe("validation", () => {
     let user;
 
@@ -598,9 +653,9 @@ describe("Autocomplete", () => {
     describe("validationBehavior=native", () => {
       it("supports isRequired", async () => {
         const {getByTestId, getByRole, findByRole} = render(
-          <form data-testid="form">
+          <Form data-testid="form">
             <AutocompleteExample isRequired validationBehavior="native" />
-          </form>,
+          </Form>,
         );
 
         const input = getByRole("combobox") as HTMLInputElement;
@@ -628,15 +683,71 @@ describe("Autocomplete", () => {
         await user.click(items[0]);
         expect(input).toHaveAttribute("aria-describedby");
       });
+
+      it("supports server validation", async () => {
+        function Test() {
+          const [serverErrors, setServerErrors] = React.useState({});
+          const onSubmit = (e) => {
+            e.preventDefault();
+            setServerErrors({
+              value: "Invalid value.",
+            });
+          };
+
+          return (
+            <Form validationErrors={serverErrors} onSubmit={onSubmit}>
+              <AutocompleteExample data-testid="input" name="value" validationBehavior="native" />
+              <button data-testid="submit" type="submit">
+                Submit
+              </button>
+            </Form>
+          );
+        }
+
+        const {getByTestId, getByRole} = render(<Test />);
+
+        const input = getByTestId("input") as HTMLInputElement;
+
+        expect(input).not.toHaveAttribute("aria-describedby");
+
+        await user.click(getByTestId("submit"));
+
+        expect(input).toHaveAttribute("aria-describedby");
+        expect(document.getElementById(input.getAttribute("aria-describedby")!)).toHaveTextContent(
+          "Invalid value.",
+        );
+        expect(input.validity.valid).toBe(false);
+
+        await user.tab({shift: true});
+        await user.keyboard("[ArrowRight]Ze");
+
+        act(() => {
+          jest.runAllTimers();
+        });
+
+        const listbox = getByRole("listbox");
+        const items = within(listbox).getAllByRole("option");
+
+        await user.click(items[0]);
+        act(() => {
+          jest.runAllTimers();
+        });
+
+        expect(input).toHaveAttribute("aria-describedby");
+        await user.tab();
+
+        expect(input).not.toHaveAttribute("aria-describedby");
+        expect(input.validity.valid).toBe(true);
+      });
     });
 
     describe("validationBehavior=aria", () => {
       it("supports validate function", async () => {
         let {getByRole, findByRole} = render(
           <form data-testid="form">
             <AutocompleteExample
-              defaultInputValue="Penguin"
-              validate={(v) => (v.inputValue === "Penguin" ? "Invalid value" : null)}
+              defaultSelectedKey="penguin"
+              validate={(v) => (v.selectedKey === "penguin" ? "Invalid value" : null)}
               validationBehavior="aria"
             />
           </form>,
@@ -664,61 +775,42 @@ describe("Autocomplete", () => {
         expect(input).not.toHaveAttribute("aria-describedby");
         expect(input).not.toHaveAttribute("aria-invalid");
       });
-    });
-  });
 
-  it("should work when key equals textValue", async () => {
-    const wrapper = render(
-      <Autocomplete
-        aria-label="Favorite Animal"
-        data-testid="when-key-equals-textValue"
-        defaultSelectedKey="cat"
-        items={itemsData}
-        label="Favorite Animal"
-      >
-        {(item) => <AutocompleteItem key={item.value}>{item.value}</AutocompleteItem>}
-      </Autocomplete>,
-    );
-
-    const autocomplete = wrapper.getByTestId("when-key-equals-textValue");
-
-    const user = userEvent.setup();
-
-    await user.click(autocomplete);
-
-    expect(autocomplete).toHaveValue("cat");
-    expect(autocomplete).toHaveAttribute("aria-expanded", "true");
-
-    let listboxItems = wrapper.getAllByRole("option");
-
-    await user.click(listboxItems[1]);
-
-    expect(autocomplete).toHaveValue("dog");
-    expect(autocomplete).toHaveAttribute("aria-expanded", "false");
-  });
-
-  it("should work when key equals textValue (controlled)", async () => {
-    const wrapper = render(
-      <ControlledAutocomplete data-testid="when-key-equals-textValue" items={itemsData}>
-        {(item) => <AutocompleteItem key={item.value}>{item.value}</AutocompleteItem>}
-      </ControlledAutocomplete>,
-    );
+      it("supports server validation", async () => {
+        const {getByTestId, getByRole} = render(
+          <Form validationErrors={{value: "Invalid value"}}>
+            <AutocompleteExample data-testid="input" name="value" />
+          </Form>,
+        );
 
-    const autocomplete = wrapper.getByTestId("when-key-equals-textValue");
+        const input = getByTestId("input");
 
-    const user = userEvent.setup();
+        expect(input).toHaveAttribute("aria-describedby");
+        expect(input).toHaveAttribute("aria-invalid", "true");
+        expect(document.getElementById(input.getAttribute("aria-describedby")!)).toHaveTextContent(
+          "Invalid value",
+        );
 
-    await user.click(autocomplete);
+        await user.tab();
+        await user.keyboard("[ArrowRight]Ze");
 
-    expect(autocomplete).toHaveValue("cat");
-    expect(autocomplete).toHaveAttribute("aria-expanded", "true");
+        act(() => {
+          jest.runAllTimers();
+        });
 
-    let listboxItems = wrapper.getAllByRole("option");
+        const listbox = getByRole("listbox");
+        const items = within(listbox).getAllByRole("option");
 
-    await user.click(listboxItems[1]);
+        await user.click(items[0]);
+        act(() => {
+          jest.runAllTimers();
+        });
 
-    expect(autocomplete).toHaveValue("dog");
-    expect(autocomplete).toHaveAttribute("aria-expanded", "false");
+        await user.tab();
+        expect(input).not.toHaveAttribute("aria-describedby");
+        expect(input).not.toHaveAttribute("aria-invalid");
+      });
+    });
   });
 });
 \n- packages/components/autocomplete/package.json (modified, 23 changes)\n  Patch: @@ -41,6 +41,7 @@
     "react-dom": ">=18 || >=19.0.0-rc.0"
   },
   "dependencies": {
+    "@nextui-org/form": "workspace:*",
     "@nextui-org/aria-utils": "workspace:*",
     "@nextui-org/button": "workspace:*",
     "@nextui-org/input": "workspace:*",
@@ -53,15 +54,15 @@
     "@nextui-org/spinner": "workspace:*",
     "@nextui-org/use-aria-button": "workspace:*",
     "@nextui-org/use-safe-layout-effect": "workspace:*",
-    "@react-aria/combobox": "3.10.3",
-    "@react-aria/focus": "3.18.2",
-    "@react-aria/i18n": "3.12.2",
-    "@react-aria/interactions": "3.22.2",
-    "@react-aria/utils": "3.25.2",
-    "@react-aria/visually-hidden": "3.8.15",
-    "@react-stately/combobox": "3.9.2",
-    "@react-types/combobox": "3.12.1",
-    "@react-types/shared": "3.24.1"
+    "@react-aria/combobox": "3.10.5",
+    "@react-aria/focus": "3.18.4",
+    "@react-aria/i18n": "3.12.3",
+    "@react-aria/interactions": "3.22.4",
+    "@react-aria/utils": "3.25.3",
+    "@react-aria/visually-hidden": "3.8.17",
+    "@react-stately/combobox": "3.10.0",
+    "@react-types/combobox": "3.13.0",
+    "@react-types/shared": "3.25.0"
   },
   "devDependencies": {
     "@nextui-org/avatar": "workspace:*",
@@ -70,12 +71,12 @@
     "@nextui-org/system": "workspace:*",
     "@nextui-org/theme": "workspace:*",
     "@nextui-org/use-infinite-scroll": "workspace:*",
-    "@react-stately/data": "3.11.6",
+    "@react-stately/data": "3.11.7",
     "clean-package": "2.2.0",
     "framer-motion": "11.9.0",
     "react": "^18.0.0",
     "react-dom": "^18.0.0",
     "react-hook-form": "^7.51.3"
   },
   "clean-package": "../../../clean-package.config.json"
-}
\ No newline at end of file
+}\n- packages/components/autocomplete/src/use-autocomplete.ts (modified, 4 changes)\n  Patch: @@ -18,6 +18,7 @@ import {chain, mergeProps} from "@react-aria/utils";
 import {ButtonProps} from "@nextui-org/button";
 import {AsyncLoadable, PressEvent} from "@react-types/shared";
 import {useComboBox} from "@react-aria/combobox";
+import {FormContext, useSlottedContext} from "@nextui-org/form";
 import {ariaShouldCloseOnInteractOutside} from "@nextui-org/aria-utils";
 
 interface Props<T> extends Omit<HTMLNextUIProps<"input">, keyof ComboBoxProps<T>> {
@@ -137,6 +138,7 @@ export type UseAutocompleteProps<T> = Props<T> &
 
 export function useAutocomplete<T extends object>(originalProps: UseAutocompleteProps<T>) {
   const globalContext = useProviderContext();
+  const {validationBehavior: formValidationBehavior} = useSlottedContext(FormContext) || {};
 
   const [props, variantProps] = mapPropsVariants(originalProps, autocomplete.variantKeys);
   const disableAnimation =
@@ -178,7 +180,7 @@ export function useAutocomplete<T extends object>(originalProps: UseAutocomplete
     isVirtualized,
     maxListboxHeight = 256,
     itemHeight = 32,
-    validationBehavior = globalContext?.validationBehavior ?? "aria",
+    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "aria",
     className,
     classNames,
     errorMessage,\n- packages/components/autocomplete/stories/autocomplete.stories.tsx (modified, 35 changes)\n  Patch: @@ -18,6 +18,7 @@ import {useInfiniteScroll} from "@nextui-org/use-infinite-scroll";
 import {PetBoldIcon, SearchLinearIcon, SelectorIcon} from "@nextui-org/shared-icons";
 import {Avatar} from "@nextui-org/avatar";
 import {Button} from "@nextui-org/button";
+import {Form} from "@nextui-org/form";
 
 import {Autocomplete, AutocompleteItem, AutocompleteProps, AutocompleteSection} from "../src";
 
@@ -855,6 +856,33 @@ const WithReactHookFormTemplate = (args: AutocompleteProps) => {
   );
 };
 
+const ServerValidationTemplate = (args: AutocompleteProps) => {
+  const [serverErrors, setServerErrors] = React.useState({});
+  const onSubmit = (e) => {
+    e.preventDefault();
+    setServerErrors({
+      animals: "Please select a valid animal.",
+    });
+  };
+
+  return (
+    <Form
+      className="flex flex-col items-start gap-2"
+      validationErrors={serverErrors}
+      onSubmit={onSubmit}
+    >
+      <Autocomplete {...args} className="max-w-xs" label="Favorite Animal" name="animals">
+        <AutocompleteItem key="red_panda">Red Panda</AutocompleteItem>
+        <AutocompleteItem key="cat">Cat</AutocompleteItem>
+        <AutocompleteItem key="dog">Dog</AutocompleteItem>
+      </Autocomplete>
+      <button className={button({color: "primary"})} type="submit">
+        Submit
+      </button>
+    </Form>
+  );
+};
+
 export const Default = {
   render: Template,
   args: {
@@ -1030,6 +1058,13 @@ export const WithValidation = {
   },
 };
 
+export const WithServerValidation = {
+  render: ServerValidationTemplate,
+  args: {
+    ...defaultProps,
+  },
+};
+
 export const WithSections = {
   render: WithSectionsTemplate,
 \n- packages/components/avatar/package.json (modified, 6 changes)\n  Patch: @@ -43,9 +43,9 @@
     "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/react-utils": "workspace:*",
     "@nextui-org/use-image": "workspace:*",
-    "@react-aria/interactions": "3.22.2",
-    "@react-aria/focus": "3.18.2",
-    "@react-aria/utils": "3.25.2"
+    "@react-aria/interactions": "3.22.4",
+    "@react-aria/focus": "3.18.4",
+    "@react-aria/utils": "3.25.3"
   },
   "devDependencies": {
     "@nextui-org/theme": "workspace:*",\n- packages/components/breadcrumbs/package.json (modified, 10 changes)\n  Patch: @@ -43,11 +43,11 @@
     "@nextui-org/react-utils": "workspace:*",
     "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/shared-icons": "workspace:*",
-    "@react-aria/focus": "3.18.2",
-    "@react-aria/breadcrumbs": "3.5.16",
-    "@react-aria/utils": "3.25.2",
-    "@react-types/breadcrumbs": "3.7.7",
-    "@react-types/shared": "3.24.1"
+    "@react-aria/focus": "3.18.4",
+    "@react-aria/breadcrumbs": "3.5.18",
+    "@react-aria/utils": "3.25.3",
+    "@react-types/breadcrumbs": "3.7.8",
+    "@react-types/shared": "3.25.0"
   },
   "devDependencies": {
     "@nextui-org/theme": "workspace:*",\n- packages/components/button/package.json (modified, 12 changes)\n  Patch: @@ -46,12 +46,12 @@
     "@nextui-org/use-aria-button": "workspace:*",
     "@nextui-org/ripple": "workspace:*",
     "@nextui-org/spinner": "workspace:*",
-    "@react-aria/button": "3.9.8",
-    "@react-aria/interactions": "3.22.2",
-    "@react-aria/utils": "3.25.2",
-    "@react-aria/focus": "3.18.2",
-    "@react-types/shared": "3.24.1",
-    "@react-types/button": "3.9.6"
+    "@react-aria/button": "3.10.1",
+    "@react-aria/interactions": "3.22.4",
+    "@react-aria/utils": "3.25.3",
+    "@react-aria/focus": "3.18.4",
+    "@react-types/shared": "3.25.0",
+    "@react-types/button": "3.10.0"
   },
   "devDependencies": {
     "@nextui-org/theme": "workspace:*",\n- packages/components/calendar/package.json (modified, 26 changes)\n  Patch: @@ -48,18 +48,18 @@
     "@nextui-org/use-aria-button": "workspace:*",
     "@nextui-org/button": "workspace:*",
     "@nextui-org/dom-animation": "workspace:*",
-    "@internationalized/date": "3.5.5",
-    "@react-aria/calendar": "3.5.11",
-    "@react-aria/focus": "3.18.2",
-    "@react-aria/i18n": "3.12.2",
-    "@react-stately/calendar": "3.5.4",
-    "@react-types/button": "3.9.6",
-    "@react-aria/visually-hidden": "3.8.15",
-    "@react-aria/utils": "3.25.2",
-    "@react-stately/utils": "3.10.3",
-    "@react-types/calendar": "3.4.9",
-    "@react-aria/interactions": "3.22.2",
-    "@react-types/shared": "3.24.1",
+    "@internationalized/date": "3.5.6",
+    "@react-aria/calendar": "3.5.13",
+    "@react-aria/focus": "3.18.4",
+    "@react-aria/i18n": "3.12.3",
+    "@react-stately/calendar": "3.5.5",
+    "@react-types/button": "3.10.0",
+    "@react-aria/visually-hidden": "3.8.17",
+    "@react-aria/utils": "3.25.3",
+    "@react-stately/utils": "3.10.4",
+    "@react-types/calendar": "3.4.10",
+    "@react-aria/interactions": "3.22.4",
+    "@react-types/shared": "3.25.0",
     "scroll-into-view-if-needed": "3.0.10",
     "@types/lodash.debounce": "^4.0.7"
   },
@@ -74,4 +74,4 @@
     "react-dom": "^18.0.0"
   },
   "clean-package": "../../../clean-package.config.json"
-}
\ No newline at end of file
+}\n- packages/components/card/package.json (modified, 10 changes)\n  Patch: @@ -45,11 +45,11 @@
     "@nextui-org/react-utils": "workspace:*",
     "@nextui-org/use-aria-button": "workspace:*",
     "@nextui-org/ripple": "workspace:*",
-    "@react-aria/focus": "3.18.2",
-    "@react-aria/utils": "3.25.2",
-    "@react-aria/interactions": "3.22.2",
-    "@react-aria/button": "3.9.8",
-    "@react-types/shared": "3.24.1"
+    "@react-aria/focus": "3.18.4",
+    "@react-aria/utils": "3.25.3",
+    "@react-aria/interactions": "3.22.4",
+    "@react-aria/button": "3.10.1",
+    "@react-types/shared": "3.25.0"
   },
   "devDependencies": {
     "@nextui-org/theme": "workspace:*",\n- packages/components/checkbox/__tests__/checkbox-group.test.tsx (modified, 84 changes)\n  Patch: @@ -1,5 +1,6 @@
 import * as React from "react";
 import {act, render} from "@testing-library/react";
+import {Form} from "@nextui-org/form";
 import userEvent, {UserEvent} from "@testing-library/user-event";
 
 import {CheckboxGroup, Checkbox} from "../src";
@@ -281,6 +282,60 @@ describe("Checkbox.Group", () => {
           expect(input.validity.valid).toBe(true);
         }
       });
+
+      it("supports server validation", async () => {
+        function Test() {
+          const [serverErrors, setServerErrors] = React.useState({});
+          const onSubmit = (e) => {
+            e.preventDefault();
+            setServerErrors({
+              terms: "You must accept the terms.",
+            });
+          };
+
+          return (
+            <Form validationErrors={serverErrors} onSubmit={onSubmit}>
+              <CheckboxGroup
+                label="Agree to the following"
+                name="terms"
+                validationBehavior="native"
+              >
+                <Checkbox value="terms">Terms and conditions</Checkbox>
+                <Checkbox value="cookies">Cookies</Checkbox>
+                <Checkbox value="privacy">Privacy policy</Checkbox>
+              </CheckboxGroup>
+              <button type="submit">Submit</button>
+            </Form>
+          );
+        }
+
+        const {getAllByRole, getByRole} = render(<Test />);
+
+        const group = getByRole("group");
+
+        expect(group).not.toHaveAttribute("aria-describedby");
+        const button = getByRole("button");
+
+        expect(button).toBeVisible();
+        await user.click(button);
+
+        expect(group).toHaveAttribute("aria-describedby");
+        expect(document.getElementById(group.getAttribute("aria-describedby")!)).toHaveTextContent(
+          "You must accept the terms.",
+        );
+
+        const checkboxes = getAllByRole("checkbox") as HTMLInputElement[];
+
+        for (let input of checkboxes) {
+          expect(input.validity.valid).toBe(false);
+        }
+
+        await user.click(checkboxes[0]);
+        expect(group).not.toHaveAttribute("aria-describedby");
+        for (let input of checkboxes) {
+          expect(input.validity.valid).toBe(true);
+        }
+      });
     });
 
     describe("validationBehavior=aria", () => {
@@ -320,6 +375,35 @@ describe("Checkbox.Group", () => {
         await user.click(checkboxes[2]);
         expect(group).toHaveAttribute("aria-describedby");
       });
+
+      it("supports server validation", async () => {
+        const {getAllByRole, getByRole} = render(
+          <Form validationBehavior="aria" validationErrors={{terms: "You must accept the terms"}}>
+            <CheckboxGroup label="Agree to the following" name="terms">
+              <Checkbox value="terms">Terms and conditions</Checkbox>
+              <Checkbox value="cookies">Cookies</Checkbox>
+              <Checkbox value="privacy">Privacy policy</Checkbox>
+            </CheckboxGroup>
+          </Form>,
+        );
+
+        const group = getByRole("group");
+
+        expect(group).toHaveAttribute("aria-describedby");
+        expect(document.getElementById(group.getAttribute("aria-describedby")!)).toHaveTextContent(
+          "You must accept the terms",
+        );
+
+        const checkboxes = getAllByRole("checkbox");
+
+        for (let input of checkboxes) {
+          expect(input).toHaveAttribute("aria-invalid", "true");
+        }
+
+        // TODO: Fix the following functions to work
+        // await user.click(checkboxes[0]);
+        // expect(group).not.toHaveAttribute("aria-describedby");
+      });
     });
   });
 });\n- packages/components/checkbox/package.json (modified, 21 changes)\n  Patch: @@ -40,19 +40,20 @@
     "react-dom": ">=18 || >=19.0.0-rc.0"
   },
   "dependencies": {
+    "@nextui-org/form": "workspace:*",
     "@nextui-org/react-utils": "workspace:*",
     "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/use-callback-ref": "workspace:*",
     "@nextui-org/use-safe-layout-effect": "workspace:*",
-    "@react-aria/checkbox": "3.14.6",
-    "@react-aria/focus": "3.18.2",
-    "@react-aria/interactions": "3.22.2",
-    "@react-aria/utils": "3.25.2",
-    "@react-aria/visually-hidden": "3.8.15",
-    "@react-stately/checkbox": "3.6.8",
-    "@react-stately/toggle": "3.7.7",
-    "@react-types/checkbox": "3.8.3",
-    "@react-types/shared": "3.24.1"
+    "@react-aria/checkbox": "3.14.8",
+    "@react-aria/focus": "3.18.4",
+    "@react-aria/interactions": "3.22.4",
+    "@react-aria/utils": "3.25.3",
+    "@react-aria/visually-hidden": "3.8.17",
+    "@react-stately/checkbox": "3.6.9",
+    "@react-stately/toggle": "3.7.8",
+    "@react-types/checkbox": "3.8.4",
+    "@react-types/shared": "3.25.0"
   },
   "devDependencies": {
     "@nextui-org/chip": "workspace:*",
@@ -67,4 +68,4 @@
     "react-hook-form": "^7.51.3"
   },
   "clean-package": "../../../clean-package.config.json"
-}
\ No newline at end of file
+}\n- packages/components/checkbox/src/checkbox-group.tsx (modified, 7 changes)\n  Patch: @@ -1,5 +1,4 @@
 import {forwardRef} from "@nextui-org/system";
-import {useMemo} from "react";
 
 import {CheckboxGroupProvider} from "./checkbox-group-context";
 import {UseCheckboxGroupProps, useCheckboxGroup} from "./use-checkbox-group";
@@ -21,16 +20,14 @@ const CheckboxGroup = forwardRef<"div", CheckboxGroupProps>((props, ref) => {
     getErrorMessageProps,
   } = useCheckboxGroup({...props, ref});
 
-  const errorMessageContent = useMemo(() => errorMessage, [isInvalid]);
-
   return (
     <div {...getGroupProps()}>
       {label && <span {...getLabelProps()}>{label}</span>}
       <div {...getWrapperProps()}>
         <CheckboxGroupProvider value={context}>{children}</CheckboxGroupProvider>
       </div>
-      {isInvalid && errorMessageContent ? (
-        <div {...getErrorMessageProps()}>{errorMessageContent}</div>
+      {isInvalid && errorMessage ? (
+        <div {...getErrorMessageProps()}>{errorMessage}</div>
       ) : description ? (
         <div {...getDescriptionProps()}>{description}</div>
       ) : null}\n- packages/components/checkbox/src/use-checkbox-group.ts (modified, 8 changes)\n  Patch: @@ -2,7 +2,6 @@ import type {CheckboxGroupSlots, SlotsToClasses} from "@nextui-org/theme";
 import type {AriaCheckboxGroupProps} from "@react-types/checkbox";
 import type {Orientation} from "@react-types/shared";
 import type {ReactRef} from "@nextui-org/react-utils";
-import type {CheckboxGroupProps} from "@react-types/checkbox";
 import type {HTMLNextUIProps, PropGetter} from "@nextui-org/system";
 
 import {useProviderContext} from "@nextui-org/system";
@@ -13,6 +12,7 @@ import {useCheckboxGroup as useReactAriaCheckboxGroup} from "@react-aria/checkbo
 import {CheckboxGroupState, useCheckboxGroupState} from "@react-stately/checkbox";
 import {filterDOMProps, useDOMRef} from "@nextui-org/react-utils";
 import {clsx, safeAriaLabel} from "@nextui-org/shared-utils";
+import {FormContext, useSlottedContext} from "@nextui-org/form";
 
 import {CheckboxProps} from "./index";
 
@@ -71,6 +71,7 @@ export type ContextType = {
 
 export function useCheckboxGroup(props: UseCheckboxGroupProps) {
   const globalContext = useProviderContext();
+  const {validationBehavior: formValidationBehavior} = useSlottedContext(FormContext) || {};
 
   const {
     as,
@@ -89,7 +90,7 @@ export function useCheckboxGroup(props: UseCheckboxGroupProps) {
     orientation = "vertical",
     lineThrough = false,
     isDisabled = false,
-    validationBehavior = globalContext?.validationBehavior ?? "aria",
+    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "aria",
     disableAnimation = globalContext?.disableAnimation ?? false,
     isReadOnly,
     isRequired,
@@ -105,7 +106,7 @@ export function useCheckboxGroup(props: UseCheckboxGroupProps) {
 
   const domRef = useDOMRef(ref);
 
-  const checkboxGroupProps = useMemo<CheckboxGroupProps>(() => {
+  const checkboxGroupProps = useMemo(() => {
     return {
       ...otherProps,
       value,
@@ -136,7 +137,6 @@ export function useCheckboxGroup(props: UseCheckboxGroupProps) {
   ]);
 
   const groupState = useCheckboxGroupState(checkboxGroupProps);
-
   const {
     labelProps,
     groupProps,\n- packages/components/checkbox/src/use-checkbox.ts (modified, 6 changes)\n  Patch: @@ -18,6 +18,7 @@ import {
 } from "@react-aria/checkbox";
 import {useSafeLayoutEffect} from "@nextui-org/use-safe-layout-effect";
 import {mergeRefs} from "@nextui-org/react-utils";
+import {FormContext, useSlottedContext} from "@nextui-org/form";
 
 import {useCheckboxGroupContext} from "./checkbox-group-context";
 
@@ -75,6 +76,7 @@ export type UseCheckboxProps = Omit<Props, "defaultChecked"> &
 export function useCheckbox(props: UseCheckboxProps = {}) {
   const globalContext = useProviderContext();
   const groupContext = useCheckboxGroupContext();
+  const {validationBehavior: formValidationBehavior} = useSlottedContext(FormContext) || {};
   const isInGroup = !!groupContext;
 
   const {
@@ -97,7 +99,9 @@ export function useCheckbox(props: UseCheckboxProps = {}) {
     validationState,
     isInvalid = validationState ? validationState === "invalid" : groupContext?.isInvalid ?? false,
     isIndeterminate = false,
-    validationBehavior = groupContext?.validationBehavior ?? "aria",
+    validationBehavior = isInGroup
+      ? groupContext.validationBehavior
+      : formValidationBehavior ?? globalContext?.validationBehavior ?? "aria",
     defaultSelected,
     classNames,
     className,\n- packages/components/checkbox/stories/checkbox-group.stories.tsx (modified, 45 changes)\n  Patch: @@ -4,6 +4,7 @@ import React from "react";
 import {Meta} from "@storybook/react";
 import {checkbox} from "@nextui-org/theme";
 import {button} from "@nextui-org/theme";
+import {Form} from "@nextui-org/form";
 
 import {CheckboxGroup, Checkbox, CheckboxGroupProps} from "../src";
 
@@ -90,7 +91,7 @@ const InvalidTemplate = (args: CheckboxGroupProps) => {
 const FormTemplate = (args: CheckboxGroupProps) => {
   return (
     <form
-      className="flex flex-col items-start gap-4"
+      className="flex flex-col items-start gap-2"
       onSubmit={(e) => {
         const formData = new FormData(e.currentTarget);
         const selectedCities = formData.getAll("favorite-cities");
@@ -135,6 +136,40 @@ const ControlledTemplate = (args: CheckboxGroupProps) => {
   );
 };
 
+const ServerValidationTemplate = (args: CheckboxGroupProps) => {
+  const [serverErrors, setServerErrors] = React.useState({});
+
+  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
+    e.preventDefault();
+
+    setServerErrors({
+      terms: "Please select a valid animal.",
+    });
+  };
+
+  return (
+    <Form
+      className="flex flex-col items-start gap-2"
+      validationErrors={serverErrors}
+      onSubmit={onSubmit}
+    >
+      <CheckboxGroup
+        {...args}
+        label="Agree to the following"
+        name="terms"
+        validationBehavior="native"
+      >
+        <Checkbox value="terms">Terms and conditions</Checkbox>
+        <Checkbox value="cookies">Cookies</Checkbox>
+        <Checkbox value="privacy">Privacy policy</Checkbox>
+      </CheckboxGroup>
+      <button className={button({color: "primary"})} type="submit">
+        Submit
+      </button>
+    </Form>
+  );
+};
+
 export const Default = {
   render: Template,
 
@@ -253,6 +288,14 @@ export const WithValidation = {
   },
 };
 
+export const WithServerValidation = {
+  render: ServerValidationTemplate,
+
+  args: {
+    ...defaultProps,
+  },
+};
+
 export const DisableAnimation = {
   render: Template,
 \n- packages/components/checkbox/stories/checkbox.stories.tsx (modified, 2 changes)\n  Patch: @@ -75,7 +75,7 @@ const ControlledTemplate = (args: CheckboxProps) => {
 const FormTemplate = (args: CheckboxProps) => {
   return (
     <form
-      className="flex flex-col items-start gap-4"
+      className="flex flex-col items-start gap-2"
       onSubmit={(e) => {
         e.preventDefault();
         const checkbox = e.target["check"] as HTMLInputElement;\n- packages/components/chip/package.json (modified, 8 changes)\n  Patch: @@ -43,10 +43,10 @@
     "@nextui-org/shared-icons": "workspace:*",
     "@nextui-org/shared-utils": "workspace:*",
     "@nextui-org/react-utils": "workspace:*",
-    "@react-aria/focus": "3.18.2",
-    "@react-aria/interactions": "3.22.2",
-    "@react-aria/utils": "3.25.2",
-    "@react-types/checkbox": "3.8.3"
+    "@react-aria/focus": "3.18.4",
+    "@react-aria/interactions": "3.22.4",
+    "@react-aria/utils": "3.25.3",
+    "@react-types/checkbox": "3.8.4"
   },
   "devDependencies": {
     "@nextui-org/theme": "workspace:*",\n- packages/components/date-input/package.json (modified, 17 changes)\n  Patch: @@ -40,15 +40,16 @@
     "react-dom": ">=18 || >=19.0.0-rc.0"
   },
   "dependencies": {
+    "@nextui-org/form": "workspace:*",
     "@nextui-org/react-utils": "workspace:*",
     "@nextui-org/shared-utils": "workspace:*",
-    "@internationalized/date": "3.5.5",
-    "@react-aria/datepicker": "3.11.2",
-    "@react-aria/i18n": "3.12.2",
-    "@react-stately/datepicker": "3.10.2",
-    "@react-types/datepicker": "3.8.2",
-    "@react-types/shared": "3.24.1",
-    "@react-aria/utils": "3.25.2"
+    "@internationalized/date": "3.5.6",
+    "@react-aria/datepicker": "3.11.4",
+    "@react-aria/i18n": "3.12.3",
+    "@react-stately/datepicker": "3.10.3",
+    "@react-types/datepicker": "3.8.3",
+    "@react-types/shared": "3.25.0",
+    "@react-aria/utils": "3.25.3"
   },
   "devDependencies": {
     "@nextui-org/system": "workspace:*",
@@ -60,4 +61,4 @@
     "react-dom": "^18.0.0"
   },
   "clean-package": "../../../clean-package.config.json"
-}
\ No newline at end of file
+}\n- packages/components/date-input/src/use-date-input.ts (modified, 4 changes)\n  Patch: @@ -18,6 +18,7 @@ import {useDateFieldState} from "@react-stately/datepicker";
 import {objectToDeps, clsx, dataAttr, getGregorianYearOffset} from "@nextui-org/shared-utils";
 import {dateInput, cn} from "@nextui-org/theme";
 import {useMemo} from "react";
+import {FormContext, useSlottedContext} from "@nextui-org/form";
 
 type NextUIBaseProps<T extends DateValue> = Omit<
   HTMLNextUIProps<"div">,
@@ -115,6 +116,7 @@ export type UseDateInputProps<T extends DateValue> = Props<T> &
 
 export function useDateInput<T extends DateValue>(originalProps: UseDateInputProps<T>) {
   const globalContext = useProviderContext();
+  const {validationBehavior: formValidationBehavior} = useSlottedContext(FormContext) || {};
 
   const [props, variantProps] = mapPropsVariants(originalProps, dateInput.variantKeys);
 
@@ -144,7 +146,7 @@ export function useDateInput<T extends DateValue>(originalProps: UseDateInputPro
     innerWrapperProps: innerWrapperPropsProp,
     errorMessageProps: errorMessagePropsProp,
     descriptionProps: descriptionPropsProp,
-    validationBehavior = globalContext?.validationBehavior ?? "aria",
+    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "aria",
     shouldForceLeadingZeros = true,
     minValue = globalContext?.defaultDates?.minDate ??
       new CalendarDate(calendarProp, 1900 + gregorianYearOffset, 1, 1),\n- packages/components/date-input/src/use-time-input.ts (modified, 4 changes)\n  Patch: @@ -14,6 +14,7 @@ import {useTimeFieldState} from "@react-stately/datepicker";
 import {objectToDeps, clsx, dataAttr} from "@nextui-org/shared-utils";
 import {dateInput} from "@nextui-org/theme";
 import {useMemo} from "react";
+import {FormContext, useSlottedContext} from "@nextui-org/form";
 
 type NextUIBaseProps<T extends TimeValue> = Omit<
   HTMLNextUIProps<"div">,
@@ -74,6 +75,7 @@ export type UseTimeInputProps<T extends TimeValue> = Props<T> &
 
 export function useTimeInput<T extends TimeValue>(originalProps: UseTimeInputProps<T>) {
   const globalContext = useProviderContext();
+  const {validationBehavior: formValidationBehavior} = useSlottedContext(FormContext) || {};
 
   const [props, variantProps] = mapPropsVariants(originalProps, dateInput.variantKeys);
 
@@ -92,7 +94,7 @@ export function useTimeInput<T extends TimeValue>(originalProps: UseTimeInputPro
     fieldProps: fieldPropsProp,
     errorMessageProps: errorMessagePropsProp,
     descriptionProps: descriptionPropsProp,
-    validationBehavior = globalContext?.validationBehavior ?? "aria",
+    validationBehavior = formValidationBehavior ?? globalContext?.validationBehavior ?? "aria",
     shouldForceLeadingZeros = true,
     minValue,
     maxValue,\n- packages/components/date-picker/__tests__/date-picker.test.tsx (modified, 220 changes)\n  Patch: @@ -1,10 +1,11 @@
 /* eslint-disable jsx-a11y/no-autofocus */
 import * as React from "react";
-import {render, act, fireEvent, waitFor} from "@testing-library/react";
+import {render, act, fireEvent, waitFor, within} from "@testing-library/react";
 import {pointerMap, triggerPress} from "@nextui-org/test-utils";
 import userEvent from "@testing-library/user-event";
 import {CalendarDate, CalendarDateTime} from "@internationalized/date";
 import {NextUIProvider} from "@nextui-org/system";
+import {Form} from "@nextui-org/form";
 
 import {DatePicker as DatePickerBase, DatePickerProps} from "../src";
 
@@ -232,7 +233,7 @@ describe("DatePicker", () => {
     });
 
     it("should apply custom dateInput classNames", function () {
-      const {getByRole, getByText} = render(
+      const {getByText} = render(
         <DatePicker
           dateInputClassNames={{
             inputWrapper: "border-green-500",
@@ -246,7 +247,9 @@ describe("DatePicker", () => {
 
       expect(label).toHaveClass("text-green-500");
 
-      const inputWrapper = getByRole("group");
+      const inputWrapper = document.querySelector<HTMLButtonElement>(
+        `div[data-slot="input-wrapper"]`,
+      )!;
 
       expect(inputWrapper).toHaveClass("border-green-500");
     });
@@ -739,4 +742,215 @@ describe("DatePicker", () => {
       expect(dialog).not.toBeVisible();
     });
   });
+
+  describe("validation", () => {
+    describe("validationBehavior=native", () => {
+      it("supports isRequired", async () => {
+        const {getByRole, getByTestId} = render(
+          <form data-testid="form">
+            <DatePicker isRequired label="Date" name="date" validationBehavior="native" />
+          </form>,
+        );
+
+        const group = getByRole("group");
+        const input = document.querySelector("input[name=date]") as HTMLInputElement;
+
+        expect(input).toHaveAttribute("required");
+        expect(input.validity.valid).toBe(false);
+        expect(group).not.toHaveAttribute("aria-describedby");
+
+        act(() => {
+          (getByTestId("form") as HTMLFormElement).checkValidity();
+        });
+
+        expect(group).toHaveAttribute("aria-describedby");
+        const getDescription = () =>
+          group
+            .getAttribute("aria-describedby")
+            ?.split(" ")
+            .map((d) => document.getElementById(d)?.textContent)
+            .join(" ");
+
+        expect(getDescription()).toContain("Constraints not satisfied");
+        expect(document.activeElement).toBe(within(group).getAllByRole("spinbutton")[0]);
+
+        await user.keyboard("[ArrowUp][Tab][ArrowUp][Tab][ArrowUp]");
+
+        expect(getDescription()).toContain("Constraints not satisfied");
+        expect(input.validity.valid).toBe(true);
+      });
+    });
+
+    it("supports validate function", async () => {
+      const {getByRole, getByTestId} = render(
+        <Form data-testid="form">
+          <DatePicker
+            defaultValue={new CalendarDate(2020, 2, 3)}
+            label="Value"
+            name="date"
+            validate={(v) => (v.year < 2022 ? "Invalid value" : null)}
+            validationBehavior="native"
+          />
+        </Form>,
+      );
+
+      const group = getByRole("group");
+      const input = document.querySelector("input[name=date]") as HTMLInputElement;
+      const getDescription = () =>
+        group
+          .getAttribute("aria-describedby")
+          ?.split(" ")
+          .map((d) => document.getElementById(d)?.textContent)
+          .join(" ");
+
+      expect(getDescription()).not.toContain("Invalid value");
+      expect(input.validity.valid).toBe(false);
+
+      act(() => {
+        (getByTestId("form") as HTMLFormElement).checkValidity();
+      });
+
+      expect(group).toHaveAttribute("aria-describedby");
+      expect(getDescription()).toContain("Invalid value");
+      expect(document.activeElement).toBe(within(group).getAllByRole("spinbutton")[0]);
+
+      await user.keyboard("[ArrowRight][ArrowRight]2024");
+
+      expect(getDescription()).toContain("Invalid value");
+      expect(input.validity.valid).toBe(true);
+    });
+
+    it("supports server validation", async () => {
+      function Test() {
+        const [serverErrors, setServerErrors] = React.useState({});
+        const onSubmit = (e) => {
+          e.preventDefault();
+          setServerErrors({
+            date: "Invalid value",
+          });
+        };
+
+        return (
+          <Form validationErrors={serverErrors} onSubmit={onSubmit}>
+            <DatePicker label="Value" name="date" validationBehavior="native" />
+            <button data-testid="submit" type="submit">
+              Submit
+            </button>
+          </Form>
+        );
+      }
+
+      const {getByTestId, getByRole} = render(<Test />);
+
+      const group = getByRole("group");
+      const input = document.querySelector("input[name=date]") as HTMLInputElement;
+
+      expect(group).not.toHaveAttribute("aria-describedby");
+
+      await user.click(getByTestId("submit"));
+
+      const getDescription = () =>
+        group
+          .getAttribute("aria-describedby")
+          ?.split(" ")
+          .map((d) => document.getElementById(d)?.textContent)
+          .join(" ");
+
+      expect(getDescription()).toContain("Invalid value");
+      expect(input.validity.valid).toBe(false);
+
+      await user.tab({shift: true});
+      await user.tab({shift: true});
+      await user.keyboard("2024[ArrowLeft]2[ArrowLeft]2");
+      act(() => (document.activeElement as HTMLInputElement)?.blur());
+
+      expect(getDescription()).not.toContain("Invalid value");
+      expect(input.validity.valid).toBe(true);
+    });
+
+    describe("validationBehavior=aria", () => {
+      it("supports minValue and maxValue", async () => {
+        const {getByRole} = render(
+          <Form data-testid="form">
+            <DatePicker
+              defaultValue={new CalendarDate(2019, 2, 3)}
+              label="Date"
+              maxValue={new CalendarDate(2024, 2, 3)}
+              minValue={new CalendarDate(2020, 2, 3)}
+              name="date"
+            />
+          </Form>,
+        );
+
+        const group = getByRole("group");
+        const getDescription = () =>
+          group
+            .getAttribute("aria-describedby")
+            ?.split(" ")
+            .map((d) => document.getElementById(d)?.textContent)
+            .join(" ");
+
+        expect(getDescription()).toContain("Value must be 2/3/2020 or later.");
+
+        await user.keyboard("[Tab][Tab][Tab][ArrowUp]");
+        expect(getDescription()).not.toContain("Value must be 2/3/2020 or later.");
+
+        await user.keyboard("[ArrowUp][ArrowUp][ArrowUp][ArrowUp][ArrowUp]");
+        expect(getDescription()).toContain("Value must be 2/3/2024 or earlier.");
+
+        await user.keyboard("[ArrowDown]");
+        expect(getDescription()).not.toContain("Value must be 2/3/2024 or earlier.");
+      });
+
+      it("supports validate function", async () => {
+        const {getByRole} = render(
+          <Form data-testid="form">
+            <DatePicker
+              defaultValue={new CalendarDate(2020, 2, 3)}
+              label="Value"
+              validate={(v) => (v.year < 2022 ? "Invalid value" : null)}
+            />
+          </Form>,
+        );
+
+        const group = getByRole("group");
+
+        expect(group).toHaveAttribute("aria-describedby");
+        const getDescription = () =>
+          group
+            .getAttribute("aria-describedby")
+            ?.split(" ")
+            .map((d) => document.getElementById(d)?.textContent)
+            .join(" ");
+
+        expect(getDescription()).toContain("Invalid value");
+
+        await user.keyboard("[Tab][ArrowRight][ArrowRight]2024");
+        expect(getDescription()).not.toContain("Invalid value");
+      });
+
+      it("supports server validation", async () => {
+        const {getByRole} = render(
+          <Form validationErrors={{value: "Invalid value"}}>
+            <DatePicker defaultValue={new CalendarDate(2020, 2, 3)} label="Value" name="value" />
+          </Form>,
+        );
+
+        const group = getByRole("group");
+
+        expect(group).toHaveAttribute("aria-describedby");
+        const getDescription = () =>
+          group
+            .getAttribute("aria-describedby")
+            ?.split(" ")
+            .map((d) => document.getElementById(d)?.textContent)
+            .join(" ");
+
+        expect(getDescription()).toContain("Invalid value");
+
+        await user.keyboard("[Tab][ArrowRight][ArrowRight]2024[Tab]");
+        expect(getDescription()).not.toContain("Invalid value");
+      });
+    });
+  });
 });\n
Pull Request Number: 2958
Title: fix(input): added hover and focus to input when label placement is outside-left
Base Branch: canary
Head Branch: fix/input
Author: ShrinidhiUpadhyaya
URL: https://github.com/nextui-org/nextui/pull/2958
State: MERGED
Created At: 2024-05-06T22:07:06Z
Merged At: 2024-09-07T10:21:31Z
Participants: ShrinidhiUpadhyaya, wingkwong

Description:
Closes #2328
üìù Description
When clicked or hovered on the label with outside-left placement, input doesn't get focus and no hover effect.
‚õ≥Ô∏è Current behavior (updates)

  
    
    

    InputFocusNotWorking.mp4
    
  

  

  


üöÄ New behavior

  
    
    

    InputFocusWorking.mp4
    
  

  

  


üí£ Is this a breaking change (Yes/No):
üìù Additional Information


const {isHovered, hoverProps} = useHover({isDisabled: !!originalProps?.isDisabled}); can also be renamed as    const {isHovered: isInputHovered, hoverProps: inputHoverProps} = useHover({isDisabled: !!originalProps?.isDisabled}); so the hover variables can be easily identified for the input and the label.


If the PR gets accepted please use my GitHub email-id (shrinidhiupadhyaya1195@gmail.com) instead of my other email-id for the Co-authored-by: message.



Summary by CodeRabbit

Bug Fixes

Improved hover and focus behaviors for input labels when placed outside-left.
Enhanced label interaction by enabling pointer events on them.

Commits:
- fix(range-calendar): hide only dates outside the month #2890\n- fix(range-calendar): corrected spelling mistake in changeset description\n- fix(range-calendar): corrected capitalization in changeset description\n- fix(input): added hover and focus to input when label placement is outside-left #2328\n- Merge branch 'fix/input-focus' into fix/input\n- fix(input): label props mergeProps precedence change\n

Labels:


Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 45bdab4174291b8c7e3dea57ce40168c787c15f5

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 3 packages</summary>

  | Name                     | Type  |
| ------------------------ | ----- |
| @nextui-org/input        | Patch |
| @nextui-org/autocomplete | Patch |
| @nextui-org/react        | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/ShrinidhiUpadhyaya/nextui/new/fix/input?filename=.changeset/tough-dodos-buy.md&value=---%0A%22%40nextui-org%2Finput%22%3A%20patch%0A%22%40nextui-org%2Ftheme%22%3A%20patch%0A---%0A%0Afix(input)%3A%20added%20hover%20and%20focus%20to%20input%20when%20label%20placement%20is%20outside-left%20%232328%0A)

\n- vercel: [vc]: #BxgTwuHbO4WJuj9tuJFsBFLsBV9lk+f+SGtv7C2SqA4=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvM2ZhSG5UUEgzMmJleUpDQjQ2eDR3dlBQUEVtcSIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLXNocmluaWRoaXVwYWRoeWEtMmRjZjNhLW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLXNocmluaWRoaXVwYWRoeWEtMmRjZjNhLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/3faHnTPH32beyJCB46x4wvPPPEmq)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-shrinidhiupadhya-2dcf3a-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-shrinidhiupadhya-2dcf3a-nextui-org.vercel.app?via=pr-comment-feedback-link) | May 12, 2024 8:06pm |

\n- vercel: Someone is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%220b9d69135b95a22cae46b8afda28effdcc5e1877%22%7D%2C%22id%22%3A%22Qmbd8D8Kj7mdZhk2JUjWYuj5pC61tvHmf7XiX8hxYmfSnF%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A2958%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough
This patch addresses issues with the hover and focus behavior of the `@nextui-org/input` module, particularly when labels are placed outside-left. It introduces a new hover state for labels, updates data attributes for hover states, and modifies label style definitions to enhance pointer event handling.

## Changes

| File Path                                | Change Summary                                                                                     |
|------------------------------------------|----------------------------------------------------------------------------------------------------|
| `.changeset/lucky-schools-travel.md`     | Patch introduction for hover and focus issues with outside-left label placement.                   |
| `.../components/input/src/use-input.ts`  | Added `isLabelHovered` state; updated `data-hover` attributes; adjusted label dependency list.    |
| `.../core/theme/src/components/input.ts` | Updated label style definition to include `pointer-events-auto`.                                   |

## Assessment against linked issues

| Objective                                                                 | Addressed | Explanation |
|----------------------------------------------------------------------------|-----------|-------------|
| #2328: Input should focus when clicking on `outside-left` label placement. | ‚úÖ         |             |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->
<!--


.changeset/lucky-schools-travel.md: ## Short summary

The new file introduces a patch for the `@nextui-org/input` module, addressing issues related to hover and focus behavior when the label placement is set to outside-left.

## Alterations to the declarations of exported or public entities

No alterations to the declarations of exported or public entities were made in this patch.

---

packages/components/input/src/use-input.ts: ### Summary

- Added a new hover state `isLabelHovered` and corresponding hover props for the label in the `useInput` function.
- Updated the data attributes for `data-hover` to consider both `isHovered` and `isLabelHovered`.
- Included `isLabelHovered` in the list of dependencies for the label properties.
- Adjusted the `data-hover` attribute in `getInputProps` to consider both `isHovered` and `isLabelHovered`.

---

packages/core/theme/src/components/input.ts: ## Short Summary
In the `input.ts` file of the `packages/core/theme/src/components` directory, the `label` style definition has been updated to include `pointer-events-auto`.

## Alterations to the declarations of exported or public entities
- `label: "relative text-foreground pr-2 rtl:pr-0 rtl:pl-2"` in `input.ts` in `packages/core/theme/src/components` ‚Üí `label: "relative text-foreground pr-2 rtl:pr-0 rtl:pl-2 pointer-events-auto"` in `input.ts` in `packages/core/theme/src/components`

-->
<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->
<!--


### PR Summary

**Title:** fix(input): added hover and focus to input when label placement is outside-left #2328

**Pull Request Number:** 2958

**Description:**
This pull request addresses an issue identified in issue #2328, where input fields with a label having an `outside-left` placement did not receive focus or show hover effects when interacted with. The problem was documented with a demonstration of the current behavior, which can be viewed via a provided link. The PR introduces a new behavior where the input field now correctly receives focus and displays hover effects when the label is clicked or hovered over. This change is also demonstrated through a link to a visual representation of the updated behavior.

**Linked Issue:**
Issue #2328 describes a bug in the NextUI library version 2.2.9, where clicking on a label with `outside-left` placement does not focus the associated input field. This issue was reproducible across multiple browsers including Chrome, Safari, and Firefox. The expected behavior, as described, is for the input field to behave similarly to other label placements, where clicking on the label focuses the input field.

**Additional Information in PR:**
The PR suggests a potential improvement in the code readability by renaming variables related to hover properties to clearly distinguish between those used for the input and the label. Furthermore, the contributor requests that if the PR is accepted, their GitHub email should be used in the Co-authored-by message instead of their other email.

This pull request aims to enhance user interaction with input fields in the NextUI library by ensuring consistency in focus and hover behaviors across different label placements.

-->
<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- This is an auto-generated comment: shorter summary by coderabbit.ai -->
<!--


### AI-generated Summary of Generated Summaries

Recent updates have been made to the `@nextui-org/input` module, focusing on enhancing user interaction with input components, particularly concerning hover and focus behaviors. These changes are primarily concentrated in two areas: the handling of hover states and the styling of input labels.

1. **Hover State Enhancements**:
   - A new hover state named `isLabelHovered` has been introduced within the `useInput` function in the `input/src` directory. This state is specifically designed to track the hover status of labels when they are positioned outside-left of the input field.
   - The `data-hover` attribute has been updated to reflect the new hover state. It now considers both `isHovered` (existing hover state for the input field itself) and `isLabelHovered` to provide a more integrated hover response. This change ensures that both the input field and its label react appropriately to hover interactions.

2. **Label Styling Adjustments**:
   - In the `input.ts` file located in the `core/theme/src/components` directory, the CSS for the label component has been modified to include `pointer-events: auto`. This alteration allows the label to receive pointer events, which is crucial for implementing the new hover functionality. Previously, labels might have been unresponsive to such interactions depending on their CSS settings.

These updates are aimed at improving the usability and accessibility of input components by making them more responsive to user interactions. The changes do not alter any exported or public entity declarations but refine the internal workings and user experience of the components.

### Alterations to the Declarations of Exported or Public Entities

- **`input.ts` in `packages/core/theme/src/components`**:
  - Before: `label: "relative text-foreground pr-2 rtl:pr-0 rtl:pl-2"`
  - After: `label: "relative text-foreground pr-2 rtl:pr-0 rtl:pl-2 pointer-events-auto"`

No other alterations to the declarations of exported or public entities were reported in the provided summaries.

-->
<!-- end of auto-generated comment: shorter summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 0b9d69135b95a22cae46b8afda28effdcc5e1877 -->
<!-- 45bdab4174291b8c7e3dea57ce40168c787c15f5 -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit testing code for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit testing code for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit testing code.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- Please see the [configuration documentation](https://docs.coderabbit.ai/guides/configure-coderabbit) for more information.
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json`

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n

Files Changed:
- .changeset/lucky-schools-travel.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/input": patch
+---
+
+Fixed hover and focus of input when label placement is outside-left (#2328)\n- packages/components/input/src/use-input.ts (modified, 24 changes)\n  Patch: @@ -185,6 +185,10 @@ export function useInput<T extends HTMLInputElement | HTMLTextAreaElement = HTML
 
   const {isHovered, hoverProps} = useHover({isDisabled: !!originalProps?.isDisabled});
 
+  const {isHovered: isLabelHovered, hoverProps: labelHoverProps} = useHover({
+    isDisabled: !!originalProps?.isDisabled,
+  });
+
   const {focusProps: clearFocusProps, isFocusVisible: isClearButtonFocusVisible} = useFocusRing();
 
   const {focusWithinProps} = useFocusWithin({
@@ -259,7 +263,7 @@ export function useInput<T extends HTMLInputElement | HTMLTextAreaElement = HTML
         "data-focus-visible": dataAttr(isFocusVisible),
         "data-readonly": dataAttr(originalProps.isReadOnly),
         "data-focus": dataAttr(isFocused),
-        "data-hover": dataAttr(isHovered),
+        "data-hover": dataAttr(isHovered || isLabelHovered),
         "data-required": dataAttr(originalProps.isRequired),
         "data-invalid": dataAttr(isInvalid),
         "data-disabled": dataAttr(originalProps.isDisabled),
@@ -277,6 +281,7 @@ export function useInput<T extends HTMLInputElement | HTMLTextAreaElement = HTML
       isFilled,
       isFocused,
       isHovered,
+      isLabelHovered,
       isInvalid,
       hasHelper,
       hasLabel,
@@ -299,11 +304,10 @@ export function useInput<T extends HTMLInputElement | HTMLTextAreaElement = HTML
       return {
         "data-slot": "label",
         className: slots.label({class: classNames?.label}),
-        ...labelProps,
-        ...props,
+        ...mergeProps(labelProps, labelHoverProps, props),
       };
     },
-    [slots, labelProps, classNames?.label],
+    [slots, isLabelHovered, labelProps, classNames?.label],
   );
 
   const getInputProps: PropGetter = useCallback(
@@ -356,7 +360,7 @@ export function useInput<T extends HTMLInputElement | HTMLTextAreaElement = HTML
       return {
         ref: inputWrapperRef,
         "data-slot": "input-wrapper",
-        "data-hover": dataAttr(isHovered),
+        "data-hover": dataAttr(isHovered || isLabelHovered),
         "data-focus-visible": dataAttr(isFocusVisible),
         "data-focus": dataAttr(isFocused),
         className: slots.inputWrapper({
@@ -374,7 +378,15 @@ export function useInput<T extends HTMLInputElement | HTMLTextAreaElement = HTML
         },
       };
     },
-    [slots, isHovered, isFocusVisible, isFocused, inputValue, classNames?.inputWrapper],
+    [
+      slots,
+      isHovered,
+      isLabelHovered,
+      isFocusVisible,
+      isFocused,
+      inputValue,
+      classNames?.inputWrapper,
+    ],
   );
 
   const getInnerWrapperProps: PropGetter = useCallback(\n- packages/core/theme/src/components/input.ts (modified, 2 changes)\n  Patch: @@ -172,7 +172,7 @@ const input = tv({
         base: "flex-row items-center flex-nowrap data-[has-helper=true]:items-start",
         inputWrapper: "flex-1",
         mainWrapper: "flex flex-col",
-        label: "relative text-foreground pr-2 rtl:pr-0 rtl:pl-2",
+        label: "relative text-foreground pr-2 rtl:pr-0 rtl:pl-2 pointer-events-auto",
       },
       inside: {
         label: "text-tiny cursor-text",\n
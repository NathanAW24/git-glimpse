Pull Request Number: 435
Title: refactor: use react-aria/checkbox prop types instead for better integration
Base Branch: next
Head Branch: fix/checkbox-initialchecked
Author: tianenpang
URL: https://github.com/nextui-org/nextui/pull/435
State: MERGED
Created At: 2022-04-27T02:05:22Z
Merged At: 2022-05-08T13:47:10Z
Participants: tianenpang, codecov-commenter, jrgarciadev

Description:
Closes #431
📝 Description
Refactor Checkbox, the properties are now integrated with @react-aria/checkbox via mapping, which usually results in missing or unstructured props.
⛳️ Current behavior (updates)
Use the props type provided by @react-aria/checkbox and discard the property mapping for better integration and ease of future updates.
🚀 New behavior



OLD APIs
NEW APIs




checked
isSelected


initialChecked
defaultSelected


disabled
isDisabled


indeterminate
isIndeterminate


readOnly
isReadOnly


required
isRequired


animated
disableAnimation


rounded
isRounded


line
lineThrough



💣 Is this a breaking change (Yes/No):
Yes

Commits:
- fix: remove initialChecked from label props\n- refactor: checkbox\n- fix: rename use-checkbox-group\n- refactor: update apis owned by nextui and fix table integration\n- Merge branch 'next' into fix/checkbox-initialchecked\n

Labels:


Comments:
- codecov-commenter: # [Codecov](https://codecov.io/gh/nextui-org/nextui/pull/435?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) Report
> Merging [#435](https://codecov.io/gh/nextui-org/nextui/pull/435?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) (f37300c) into [main](https://codecov.io/gh/nextui-org/nextui/commit/15c006102566f25638a1a17ba9569002ea2d2401?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) (15c0061) will **increase** coverage by `0.06%`.
> The diff coverage is `96.42%`.

```diff
@@            Coverage Diff             @@
##             main     #435      +/-   ##
==========================================
+ Coverage   74.77%   74.83%   +0.06%     
==========================================
  Files         174      175       +1     
  Lines        2791     2806      +15     
  Branches      822      835      +13     
==========================================
+ Hits         2087     2100      +13     
- Misses        694      696       +2     
  Partials       10       10              
```


| [Impacted Files](https://codecov.io/gh/nextui-org/nextui/pull/435?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None) | Coverage Δ | |
|---|---|---|
| [packages/react/src/checkbox/checkbox.styles.ts](https://codecov.io/gh/nextui-org/nextui/pull/435/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2NoZWNrYm94L2NoZWNrYm94LnN0eWxlcy50cw==) | `100.00% <ø> (ø)` | |
| [packages/react/src/table/table-checkbox-cell.tsx](https://codecov.io/gh/nextui-org/nextui/pull/435/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL3RhYmxlL3RhYmxlLWNoZWNrYm94LWNlbGwudHN4) | `100.00% <ø> (ø)` | |
| [...ages/react/src/table/table-select-all-checkbox.tsx](https://codecov.io/gh/nextui-org/nextui/pull/435/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL3RhYmxlL3RhYmxlLXNlbGVjdC1hbGwtY2hlY2tib3gudHN4) | `85.71% <ø> (-0.96%)` | :arrow_down: |
| [packages/react/src/table/utils.ts](https://codecov.io/gh/nextui-org/nextui/pull/435/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL3RhYmxlL3V0aWxzLnRz) | `80.00% <ø> (-7.50%)` | :arrow_down: |
| [packages/react/src/checkbox/use-checkbox.ts](https://codecov.io/gh/nextui-org/nextui/pull/435/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2NoZWNrYm94L3VzZS1jaGVja2JveC50cw==) | `91.30% <91.30%> (ø)` | |
| [packages/react/src/checkbox/checkbox-context.ts](https://codecov.io/gh/nextui-org/nextui/pull/435/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2NoZWNrYm94L2NoZWNrYm94LWNvbnRleHQudHM=) | `100.00% <100.00%> (ø)` | |
| [packages/react/src/checkbox/checkbox-group.tsx](https://codecov.io/gh/nextui-org/nextui/pull/435/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2NoZWNrYm94L2NoZWNrYm94LWdyb3VwLnRzeA==) | `100.00% <100.00%> (ø)` | |
| [packages/react/src/checkbox/checkbox.tsx](https://codecov.io/gh/nextui-org/nextui/pull/435/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2NoZWNrYm94L2NoZWNrYm94LnRzeA==) | `100.00% <100.00%> (ø)` | |
| [packages/react/src/checkbox/use-checkboxGroup.ts](https://codecov.io/gh/nextui-org/nextui/pull/435/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None#diff-cGFja2FnZXMvcmVhY3Qvc3JjL2NoZWNrYm94L3VzZS1jaGVja2JveEdyb3VwLnRz) | `100.00% <100.00%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/nextui-org/nextui/pull/435?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/nextui-org/nextui/pull/435?src=pr&el=footer&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None). Last update [15c0061...f37300c](https://codecov.io/gh/nextui-org/nextui/pull/435?src=pr&el=lastupdated&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=None).
\n

Files Changed:
- apps/docs/content/components/checkbox/color.ts (modified, 13 changes)\n  Patch: @@ -1,28 +1,29 @@
 const App = `import { Checkbox, Spacer } from "@nextui-org/react";
+
 export default function App() {
   return (
     <>
-      <Checkbox color="primary" initialChecked={true}>
+      <Checkbox color="primary" defaultSelected={true}>
         Primary
       </Checkbox>
       <Spacer />
-      <Checkbox color="secondary" initialChecked={true}>
+      <Checkbox color="secondary" defaultSelected={true}>
         Secondary
       </Checkbox>
       <Spacer />
-      <Checkbox color="success" initialChecked={true}>
+      <Checkbox color="success" defaultSelected={true}>
         Success
       </Checkbox>
       <Spacer />
-      <Checkbox color="warning" initialChecked={true}>
+      <Checkbox color="warning" defaultSelected={true}>
         Warning
       </Checkbox>
       <Spacer />
-      <Checkbox color="error" initialChecked={true}>
+      <Checkbox color="error" defaultSelected={true}>
         Error
       </Checkbox>
       <Spacer />
-      <Checkbox color="gradient" initialChecked={true}>
+      <Checkbox color="gradient" defaultSelected={true}>
         Gradient
       </Checkbox>
     </>\n- apps/docs/content/components/checkbox/controlled-vs-uncontrolled.ts (modified, 4 changes)\n  Patch: @@ -6,9 +6,9 @@ export default function App() {
 
   return (
     <>
-      <Checkbox initialChecked color="success">Subscribe (uncontrolled)</Checkbox>
+      <Checkbox defaultSelected={true} color="success">Subscribe (uncontrolled)</Checkbox>
       <Spacer x={1} />
-      <Checkbox checked={selected} color="success" onChange={setSelected} >
+      <Checkbox isSelected={selected} color="success" onChange={setSelected} >
         Subscribe (controlled)
       </Checkbox>
     </>\n- apps/docs/content/components/checkbox/default.ts (modified, 2 changes)\n  Patch: @@ -1,7 +1,7 @@
 const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
-  return <Checkbox initialChecked={true}>Option</Checkbox>;
+  return <Checkbox defaultSelected={true}>Option</Checkbox>;
 }`;
 
 const react = {\n- apps/docs/content/components/checkbox/disabled.ts (modified, 2 changes)\n  Patch: @@ -2,7 +2,7 @@ const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Checkbox disabled initialChecked={true}>
+    <Checkbox isDisabled={true} defaultSelected={true}>
       Default
     </Checkbox>
   );\n- apps/docs/content/components/checkbox/interminate.ts (modified, 2 changes)\n  Patch: @@ -2,7 +2,7 @@ const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Checkbox indeterminate initialChecked={true}>
+    <Checkbox isIndeterminate={true} defaultSelected={true}>
       Option
     </Checkbox>
   );\n- apps/docs/content/components/checkbox/label-color.ts (modified, 10 changes)\n  Patch: @@ -3,23 +3,23 @@ const App = `import { Checkbox, Spacer } from "@nextui-org/react";
 export default function App() {
   return (
     <>
-      <Checkbox color="primary" labelColor="primary" initialChecked={true}>
+      <Checkbox color="primary" labelColor="primary" defaultSelected={true}>
         Primary
       </Checkbox>
       <Spacer />
-      <Checkbox color="secondary" labelColor="secondary" initialChecked={true}>
+      <Checkbox color="secondary" labelColor="secondary" defaultSelected={true}>
         Secondary
       </Checkbox>
       <Spacer />
-      <Checkbox color="success" labelColor="success" initialChecked={true}>
+      <Checkbox color="success" labelColor="success" defaultSelected={true}>
         Success
       </Checkbox>
       <Spacer />
-      <Checkbox color="warning" labelColor="warning" initialChecked={true}>
+      <Checkbox color="warning" labelColor="warning" defaultSelected={true}>
         Warning
       </Checkbox>
       <Spacer />
-      <Checkbox color="error" labelColor="error" initialChecked={true}>
+      <Checkbox color="error" labelColor="error" defaultSelected={true}>
         Error
       </Checkbox>
     </>\n- apps/docs/content/components/checkbox/line-through.ts (modified, 2 changes)\n  Patch: @@ -2,7 +2,7 @@ const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Checkbox line initialChecked={true}>
+    <Checkbox lineThrough={true} defaultSelected={true}>
       Option
     </Checkbox>
   );\n- apps/docs/content/components/checkbox/no-animated.ts (modified, 2 changes)\n  Patch: @@ -2,7 +2,7 @@ const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Checkbox line animated={false} initialChecked={true}>
+    <Checkbox disableAnimation={true} defaultSelected={true} lineThrough={true}>
       Option
     </Checkbox>
   );\n- apps/docs/content/components/checkbox/rounded.ts (modified, 2 changes)\n  Patch: @@ -2,7 +2,7 @@ const App = `import { Checkbox } from "@nextui-org/react";
 
 export default function App() {
   return (
-    <Checkbox rounded color="primary" initialChecked={true}>
+    <Checkbox isRounded={true} defaultSelected={true} color="primary">
       Rounded option
     </Checkbox>
   );\n- apps/docs/content/components/checkbox/size.ts (modified, 10 changes)\n  Patch: @@ -3,23 +3,23 @@ const App = `import { Checkbox, Spacer } from "@nextui-org/react";
 export default function App() {
   return (
     <>
-      <Checkbox initialChecked={true} size="xs">
+      <Checkbox defaultSelected={true} size="xs">
         mini
       </Checkbox>
       <Spacer />
-      <Checkbox initialChecked={true} size="sm">
+      <Checkbox defaultSelected={true} size="sm">
         small
       </Checkbox>
       <Spacer />
-      <Checkbox initialChecked={true} size="md">
+      <Checkbox defaultSelected={true} size="md">
         medium
       </Checkbox>
       <Spacer />
-      <Checkbox initialChecked={true} size="lg">
+      <Checkbox defaultSelected={true} size="lg">
         large
       </Checkbox>
       <Spacer />
-      <Checkbox initialChecked={true} size="xl">
+      <Checkbox defaultSelected={true} size="xl">
         xlarge
       </Checkbox>
     </>\n- apps/docs/content/docs/components/checkbox-group.mdx (modified, 5 changes)\n  Patch: @@ -64,11 +64,10 @@ import { Checkbox } from '@nextui-org/react';
 | **size**         | [NormalSizes](#normal-sizes)                      | The size of the component                                          | `medium`  |
 | **color**        | [NormalColors](#normal-colors)                    | The color of the component                                         | `default` |
 | **labelColor**   | [SimpleColors](#simple-colors)                    | The color of the label                                             | `default` |
-| **disabled**     | `boolean`                                         | Whether the checkbox group is disabled                             | `false`   |
-| **readOnly**     | `boolean`                                         | Whether the input can be selected but not changed by the user.     | `false`   |
+| **isDisabled**   | `boolean`                                         | Whether the checkbox group is disabled                             | `false`   |
+| **isReadOnly**   | `boolean`                                         | Whether the input can be selected but not changed by the user.     | `false`   |
 | **css**          | `Stitches.CSS`                                    | Override Default CSS style                                         | -         |
 | **as**           | `keyof JSX.IntrinsicElements`                     | Changes which tag component outputs                                | `div`     |
-| ...              | `HTMLDivAttributes`                               | Native element props                                               | -         |
 
 <Spacer y={1} />
 \n- apps/docs/content/docs/components/checkbox.mdx (modified, 53 changes)\n  Patch: @@ -49,33 +49,33 @@ import { Checkbox } from '@nextui-org/react';
 
 <Playground
   title="Rounded"
-  desc="You can change the full style to a rounded `Checkbox` with the `rounded` property."
+  desc="You can change the full style to a rounded `Checkbox` with the `isRounded` property."
   files={checkboxContent.rounded}
 />
 
 <Playground
   title="Indeterminate"
-  desc="A `Checkbox` can be in an indeterminate state, controlled using the `interminate` prop."
+  desc="A `Checkbox` can be in an indeterminate state, controlled using the `isIndeterminate` prop."
   files={checkboxContent.interminate}
 />
 
 <Playground
   title="Line Through"
-  desc="Add a line in the middle of the label when the `Checkbox` is checked with the property `line`"
+  desc="Add a line in the middle of the label when the `Checkbox` is checked with the property `lineThrough`"
   files={checkboxContent.lineThrough}
 />
 
 <Playground
   title="Controlled vs Uncontrolled"
-  desc="Checkboxes are not selected by default. The `initialChecked` prop can be used to set the default state (uncontrolled). Alternatively, the `checked` prop can be used to make the selected state controlled."
+  desc="Checkboxes are not selected by default. The `defaultSelected` prop can be used to set the default state (uncontrolled). Alternatively, the `isSelected` prop can be used to make the selected state controlled."
   files={checkboxContent.controlledVsUncontrolled}
 />
 
 > Note: See React's documentation on [uncontrolled components](https://reactjs.org/docs/uncontrolled-components.html) for more info.
 
 <Playground
   title="No Animated"
-  desc="You can disable the animation of the entire `Checkbox` with the property `animated={false}`."
+  desc="You can disable the animation of the entire `Checkbox` with the property `disableAnimation={true}`."
   files={checkboxContent.noAnimation}
 />
 
@@ -87,28 +87,27 @@ import { Checkbox } from '@nextui-org/react';
 
 #### Checkbox Props
 
-| Attribute          | Type                           | Description                                                                                                                                                    | Default   |
-| ------------------ | ------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- |
-| **children**       | `ReactNode`                    | The label for the element                                                                                                                                      | -         |
-| **value**          | `string`                       | The value of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefvalue) | -         |
-| **label**          | `string`                       | The label for the element                                                                                                                                      | -         |
-| **name**           | `string`                       | The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname)   | -         |
-| **color**          | [NormalColors](#normal-colors) | The color of the component                                                                                                                                     | `default` |
-| **labelColor**     | [SimpleColors](#simple-colors) | The color of the label                                                                                                                                         | `default` |
-| **size**           | [NormalSizes](#normal-sizes)   | The size of the component                                                                                                                                      | `md`      |
-| **checked**        | `boolean`                      | Whether the element should be checked (controlled)                                                                                                             | `false`   |
-| **initialChecked** | `boolean`                      | Whether the element should be checked (uncontrolled)                                                                                                           | `false`   |
-| **animated**       | `boolean`                      | Whether the checkbox has animations                                                                                                                            | `true`    |
-| **disabled**       | `boolean`                      | Whether the input is disabled                                                                                                                                  | `false`   |
-| **indeterminate**  | `boolean`                      | Indeterminism is presentational only. The indeterminate visual representation remains regardless of user interaction.                                          | `false`   |
-| **rounded**        | `boolean`                      | Whether the checkbox is rounded                                                                                                                                | `false`   |
-| **line**           | `boolean`                      | Line in the middle of the label when the `Checkbox` is checked                                                                                                 | -         |
-| **readOnly**       | `boolean`                      | Whether the input can be selected but not changed by the user.                                                                                                 | `false`   |
-| **required**       | `boolean`                      | Whether user input is required on the input before form submission.                                                                                            | `false`   |
-| **autoFocus**      | `boolean`                      | Whether the element should receive focus on render                                                                                                             |
-| **css**            | `Stitches.CSS`                 | Override Default CSS style                                                                                                                                     | -         |
-| **as**             | `keyof JSX.IntrinsicElements`  | Changes which tag component outputs                                                                                                                            | `label`   |
-| ...                | `HTMLLabelElement`             | Native element props                                                                                                                                           | -         |
+| Attribute            | Type                           | Description                                                                                                                                                    | Default   |
+| -------------------- | ------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- |
+| **children**         | `ReactNode`                    | The label for the element                                                                                                                                      | -         |
+| **value**            | `string`                       | The value of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefvalue) | -         |
+| **label**            | `string`                       | The label for the element                                                                                                                                      | -         |
+| **name**             | `string`                       | The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname)   | -         |
+| **color**            | [NormalColors](#normal-colors) | The color of the component                                                                                                                                     | `default` |
+| **labelColor**       | [SimpleColors](#simple-colors) | The color of the label                                                                                                                                         | `default` |
+| **size**             | [NormalSizes](#normal-sizes)   | The size of the component                                                                                                                                      | `md`      |
+| **isSelected**       | `boolean`                      | Whether the element should be selected (controlled)                                                                                                            | `false`   |
+| **defaultSelected**  | `boolean`                      | Whether the element should be selected (uncontrolled)                                                                                                          | `false`   |
+| **disableAnimation** | `boolean`                      | Whether the checkbox has animations                                                                                                                            | `false`   |
+| **isDisabled**       | `boolean`                      | Whether the input is disabled                                                                                                                                  | `false`   |
+| **isIndeterminate**  | `boolean`                      | Indeterminism is presentational only. The indeterminate visual representation remains regardless of user interaction.                                          | `false`   |
+| **isRounded**        | `boolean`                      | Whether the checkbox is rounded                                                                                                                                | `false`   |
+| **lineThrough**      | `boolean`                      | Line in the middle of the label when the `Checkbox` is checked                                                                                                 | -         |
+| **isReadOnly**       | `boolean`                      | Whether the input can be selected but not changed by the user.                                                                                                 | `false`   |
+| **isRequired**       | `boolean`                      | Whether user input is required on the input before form submission.                                                                                            | `false`   |
+| **autoFocus**        | `boolean`                      | Whether the element should receive focus on render                                                                                                             |
+| **css**              | `Stitches.CSS`                 | Override Default CSS style                                                                                                                                     | -         |
+| **as**               | `keyof JSX.IntrinsicElements`  | Changes which tag component outputs                                                                                                                            | `label`   |
 
 <Spacer y={1} />
 \n- apps/docs/content/docs/manifest.json (modified, 8 changes)\n  Patch: @@ -143,13 +143,15 @@
                         },
                         {
                             "title": "Checkbox",
+                            "updated": true,
                             "keywords": "check, radio, selectable, checkbox, box",
                             "path": "/docs/components/checkbox.mdx"
                         },
                         {
-                          "title": "Checkbox Group",
-                          "keywords": "check, radio, selectable, checkbox, box, group, items",
-                          "path": "/docs/components/checkbox-group.mdx"
+                            "title": "Checkbox Group",
+                            "updated": true,
+                            "keywords": "check, radio, selectable, checkbox, box, group, items",
+                            "path": "/docs/components/checkbox-group.mdx"
                         },
                         {
                             "title": "Radio",\n- packages/react/src/checkbox/__tests__/__snapshots__/group.test.tsx.snap (modified, 2 changes)\n  Patch: @@ -1,3 +1,3 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`Checkbox Group should work correctly with different sizes 1`] = `"<div><div aria-label=\\"Single city xs size\\" role=\\"group\\" id=\\"react-aria8640499258-3\\" class=\\"nextui-c-fixGjY nextui-c-fixGjY-eWknYe-size-xs\\"><div role=\\"presentation\\" class=\\"nextui-c-fixGjY nextui-c-fixGjY-bKMXFm-row-false\\"><label value=\\"sydney\\" class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-eWknYe-size-xs nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"sydney\\"><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-indeterminate-false nextui-c-dRkEHU-fHZZDy-size-xs nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">Sydney</span></label></div></div><div value=\\"\\" aria-label=\\"Single city sm size\\" role=\\"group\\" id=\\"react-aria8640499258-5\\" class=\\"nextui-c-fixGjY nextui-c-fixGjY-ewcQbF-size-sm\\"><div role=\\"presentation\\" class=\\"nextui-c-fixGjY nextui-c-fixGjY-bKMXFm-row-false\\"><label value=\\"sydney\\" class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-ewcQbF-size-sm nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"sydney\\"><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-indeterminate-false nextui-c-dRkEHU-fHZZDy-size-sm nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">Sydney</span></label></div></div><div value=\\"\\" aria-label=\\"Single city md size\\" role=\\"group\\" id=\\"react-aria8640499258-7\\" class=\\"nextui-c-fixGjY nextui-c-fixGjY-daexIA-size-md\\"><div role=\\"presentation\\" class=\\"nextui-c-fixGjY nextui-c-fixGjY-bKMXFm-row-false\\"><label value=\\"sydney\\" class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-daexIA-size-md nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"sydney\\"><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-indeterminate-false nextui-c-dRkEHU-gXZkKf-size-md nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">Sydney</span></label></div></div><div value=\\"\\" aria-label=\\"Single city lg size\\" role=\\"group\\" id=\\"react-aria8640499258-9\\" class=\\"nextui-c-fixGjY nextui-c-fixGjY-jcUEBU-size-lg\\"><div role=\\"presentation\\" class=\\"nextui-c-fixGjY nextui-c-fixGjY-bKMXFm-row-false\\"><label value=\\"sydney\\" class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-jcUEBU-size-lg nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"sydney\\"><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-indeterminate-false nextui-c-dRkEHU-gAAEng-size-lg nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">Sydney</span></label></div></div></div>"`;
+exports[`Checkbox Group should work correctly with different sizes 1`] = `"<div><div class=\\"nextui-c-fixGjY nextui-c-fixGjY-eWknYe-size-xs nextui-checkbox-group\\" aria-label=\\"Single city xs size\\" role=\\"group\\" id=\\"react-aria5851143538-3\\"><div class=\\"nextui-c-fixGjY nextui-c-fixGjY-bKMXFm-row-false nextui-checkbox-group-items\\" role=\\"presentation\\"><label class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-eWknYe-size-xs nextui-c-ipcjYY-eWhiMK-disableAnimation-false nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"sydney\\"></div><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-isIndeterminate-false nextui-c-dRkEHU-fHZZDy-size-xs nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">Sydney</span></label></div></div><div class=\\"nextui-c-fixGjY nextui-c-fixGjY-ewcQbF-size-sm nextui-checkbox-group\\" aria-label=\\"Single city sm size\\" role=\\"group\\" id=\\"react-aria5851143538-5\\"><div class=\\"nextui-c-fixGjY nextui-c-fixGjY-bKMXFm-row-false nextui-checkbox-group-items\\" role=\\"presentation\\"><label class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-ewcQbF-size-sm nextui-c-ipcjYY-eWhiMK-disableAnimation-false nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"sydney\\"></div><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-isIndeterminate-false nextui-c-dRkEHU-fHZZDy-size-sm nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">Sydney</span></label></div></div><div class=\\"nextui-c-fixGjY nextui-c-fixGjY-daexIA-size-md nextui-checkbox-group\\" aria-label=\\"Single city md size\\" role=\\"group\\" id=\\"react-aria5851143538-7\\"><div class=\\"nextui-c-fixGjY nextui-c-fixGjY-bKMXFm-row-false nextui-checkbox-group-items\\" role=\\"presentation\\"><label class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-daexIA-size-md nextui-c-ipcjYY-eWhiMK-disableAnimation-false nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"sydney\\"></div><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-isIndeterminate-false nextui-c-dRkEHU-gXZkKf-size-md nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">Sydney</span></label></div></div><div class=\\"nextui-c-fixGjY nextui-c-fixGjY-jcUEBU-size-lg nextui-checkbox-group\\" aria-label=\\"Single city lg size\\" role=\\"group\\" id=\\"react-aria5851143538-9\\"><div class=\\"nextui-c-fixGjY nextui-c-fixGjY-bKMXFm-row-false nextui-checkbox-group-items\\" role=\\"presentation\\"><label class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-jcUEBU-size-lg nextui-c-ipcjYY-eWhiMK-disableAnimation-false nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"sydney\\"></div><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-isIndeterminate-false nextui-c-dRkEHU-gAAEng-size-lg nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">Sydney</span></label></div></div></div>"`;\n- packages/react/src/checkbox/__tests__/__snapshots__/index.test.tsx.snap (modified, 2 changes)\n  Patch: @@ -1,3 +1,3 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`Checkbox should work correctly with different sizes 1`] = `"<div><label value=\\"\\" class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-eWknYe-size-xs nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"\\"><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-indeterminate-false nextui-c-dRkEHU-fHZZDy-size-xs nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">mini</span></label><label value=\\"\\" class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-ewcQbF-size-sm nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"\\"><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-indeterminate-false nextui-c-dRkEHU-fHZZDy-size-sm nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">small</span></label><label value=\\"\\" class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-daexIA-size-md nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"\\"><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-indeterminate-false nextui-c-dRkEHU-gXZkKf-size-md nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">medium</span></label><label value=\\"\\" class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-jcUEBU-size-lg nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"\\"><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-indeterminate-false nextui-c-dRkEHU-gAAEng-size-lg nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">large</span></label><label value=\\"\\" class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-bXPkMt-size-xl nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"\\"><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-indeterminate-false nextui-c-dRkEHU-gAAEng-size-xl nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">xlarge</span></label></div>"`;
+exports[`Checkbox should work correctly with different sizes 1`] = `"<div><label class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-eWknYe-size-xs nextui-c-ipcjYY-eWhiMK-disableAnimation-false nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"\\"></div><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-isIndeterminate-false nextui-c-dRkEHU-fHZZDy-size-xs nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">mini</span></label><label class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-ewcQbF-size-sm nextui-c-ipcjYY-eWhiMK-disableAnimation-false nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"\\"></div><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-isIndeterminate-false nextui-c-dRkEHU-fHZZDy-size-sm nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">small</span></label><label class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-daexIA-size-md nextui-c-ipcjYY-eWhiMK-disableAnimation-false nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"\\"></div><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-isIndeterminate-false nextui-c-dRkEHU-gXZkKf-size-md nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">medium</span></label><label class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-jcUEBU-size-lg nextui-c-ipcjYY-eWhiMK-disableAnimation-false nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"\\"></div><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-isIndeterminate-false nextui-c-dRkEHU-gAAEng-size-lg nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">large</span></label><label class=\\"nextui-c-ipcjYY nextui-c-ipcjYY-bXPkMt-size-xl nextui-c-ipcjYY-eWhiMK-disableAnimation-false nextui-checkbox-label nextui-checkbox--uncheked\\"><div class=\\"nextui-c-cKnKee nextui-c-PJLV nextui-c-cKnKee-jewhUT-color-default nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-checkbox-container\\"><div style=\\"border: 0px; clip-path: inset(50%); height: 1px; margin: 0px -1px -1px 0px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;\\"><input class=\\"nextui-checkbox-input\\" type=\\"checkbox\\" aria-checked=\\"false\\" value=\\"\\"></div><div class=\\"nextui-c-hxyvmy nextui-checkbox-mask\\"><i class=\\"nextui-c-dRkEHU nextui-c-dRkEHU-hwMtuN-isIndeterminate-false nextui-c-dRkEHU-gAAEng-size-xl nextui-icon-check\\"><div class=\\"nextui-c-canwKd nextui-icon-check-line1\\"></div><div class=\\"nextui-c-foDRAA nextui-icon-check-line2\\"></div></i></div></div><span class=\\"nextui-c-jCeINs nextui-c-jCeINs-cyFBRX-color-default nextui-checkbox-text\\">xlarge</span></label></div>"`;\n- packages/react/src/checkbox/__tests__/group.test.tsx (modified, 2 changes)\n  Patch: @@ -81,7 +81,7 @@ describe('Checkbox Group', () => {
     let value = ['sydney'];
     const wrapper = mount(
       <Checkbox.Group
-        disabled
+        isDisabled
         label="Select cities"
         defaultValue={['sydney']}
         onChange={(val) => (value = val)}\n- packages/react/src/checkbox/__tests__/index.test.tsx (modified, 32 changes)\n  Patch: @@ -20,9 +20,7 @@ const expectCheckboxToHaveARIAChecked = (
 
 describe('Checkbox', () => {
   it('should render correctly', () => {
-    const wrapper = mount(
-      <Checkbox initialChecked={true}>Buenos Aires</Checkbox>
-    );
+    const wrapper = mount(<Checkbox isSelected={true}>Buenos Aires</Checkbox>);
     expect(() => wrapper.unmount()).not.toThrow();
   });
 
@@ -41,18 +39,16 @@ describe('Checkbox', () => {
   });
 
   it('should work correctly with initial value', () => {
-    let wrapper = mount(
-      <Checkbox initialChecked={true}>Buenos Aires</Checkbox>
-    );
+    let wrapper = mount(<Checkbox isSelected={true}>Buenos Aires</Checkbox>);
     expectCheckboxIsChecked(wrapper, true);
 
-    wrapper = mount(<Checkbox initialChecked={false}>Buenos Aires</Checkbox>);
+    wrapper = mount(<Checkbox isSelected={false}>Buenos Aires</Checkbox>);
     expectCheckboxIsChecked(wrapper, false);
 
-    wrapper = mount(<Checkbox initialChecked>Buenos Aires</Checkbox>);
+    wrapper = mount(<Checkbox isSelected>Buenos Aires</Checkbox>);
     expectCheckboxIsChecked(wrapper, true);
 
-    wrapper = mount(<Checkbox initialChecked={false}>Buenos Aires</Checkbox>);
+    wrapper = mount(<Checkbox isSelected={false}>Buenos Aires</Checkbox>);
     expectCheckboxIsChecked(wrapper, false);
 
     expect(() => wrapper.unmount()).not.toThrow();
@@ -63,7 +59,7 @@ describe('Checkbox', () => {
       const [state, setState] = React.useState<string>('state1');
 
       return (
-        <Checkbox initialChecked onChange={() => setState('state2')}>
+        <Checkbox isSelected onChange={() => setState('state2')}>
           {state}
         </Checkbox>
       );
@@ -82,7 +78,7 @@ describe('Checkbox', () => {
       const [state, setState] = React.useState<string>('state1');
 
       return (
-        <Checkbox disabled onChange={() => setState('state2')}>
+        <Checkbox isDisabled onChange={() => setState('state2')}>
           {state}
         </Checkbox>
       );
@@ -100,27 +96,29 @@ describe('Checkbox', () => {
 
   it('should work correctly with indeterminate value', () => {
     let wrapper = mount(
-      <Checkbox checked indeterminate>
+      <Checkbox isSelected isIndeterminate>
         Buenos Aires
       </Checkbox>
     );
 
     expect(getCheckboxElement(wrapper).props()['aria-checked']).toBe('mixed');
 
-    wrapper = mount(<Checkbox indeterminate={false}>Buenos Aires</Checkbox>);
+    wrapper = mount(<Checkbox isIndeterminate={false}>Buenos Aires</Checkbox>);
     expect(getCheckboxElement(wrapper).props()['aria-checked']).toBe(false);
 
     expect(() => wrapper.unmount()).not.toThrow();
   });
 
   it('should work correctly with line-through value', () => {
-    let wrapper = mount(<Checkbox line>Buenos Aires</Checkbox>);
+    let wrapper = mount(<Checkbox lineThrough>Buenos Aires</Checkbox>);
     let icon = wrapper.find('.nextui-checkbox-text').at(0).getDOMNode();
-    expect((icon as HTMLInputElement).className).toContain('line-true');
+    expect((icon as HTMLInputElement).className).toContain('lineThrough-true');
 
-    wrapper = mount(<Checkbox line={false}>Buenos Aires</Checkbox>);
+    wrapper = mount(<Checkbox lineThrough={false}>Buenos Aires</Checkbox>);
     icon = wrapper.find('.nextui-checkbox-text').at(0).getDOMNode();
-    expect((icon as HTMLInputElement).className).not.toContain('line-true');
+    expect((icon as HTMLInputElement).className).not.toContain(
+      'lineThrough-true'
+    );
 
     expect(() => wrapper.unmount()).not.toThrow();
   });\n- packages/react/src/checkbox/checkbox-context.ts (modified, 24 changes)\n  Patch: @@ -1,14 +1,22 @@
-import React from 'react';
-import { CheckboxGroupState } from '@react-stately/checkbox';
-import { NormalColors, NormalSizes, SimpleColors } from '../utils/prop-types';
+import { createContext, useContext } from 'react';
+import type { CheckboxGroupState } from '@react-stately/checkbox';
+import type {
+  NormalColors,
+  NormalSizes,
+  SimpleColors
+} from '../utils/prop-types';
 
-export interface CheckboxConfig extends CheckboxGroupState {
-  color: NormalColors;
+export interface ICheckboxGroupContext {
   size: NormalSizes;
+  color: NormalColors;
   labelColor: SimpleColors;
-  inGroup: boolean;
+  groupState: CheckboxGroupState;
 }
 
-export const CheckboxContext = React.createContext<CheckboxConfig | null>(null);
+const CheckboxGroupContext = createContext<ICheckboxGroupContext | undefined>(
+  undefined
+);
+
+export const CheckboxGroupProvider = CheckboxGroupContext.Provider;
 
-export const useCheckbox = () => React.useContext(CheckboxContext);
+export const useCheckboxGroupContext = () => useContext(CheckboxGroupContext);\n- packages/react/src/checkbox/checkbox-group.tsx (modified, 131 changes)\n  Patch: @@ -1,124 +1,81 @@
-import React, { useMemo, RefAttributes, PropsWithoutRef } from 'react';
-import { useCheckboxGroupState } from '@react-stately/checkbox';
-import { AriaCheckboxGroupProps } from '@react-types/checkbox';
-import { useCheckboxGroup } from '@react-aria/checkbox';
-import { mergeProps } from '@react-aria/utils';
-
-import { CheckboxContext } from './checkbox-context';
-import { NormalSizes, NormalColors, SimpleColors } from '../utils/prop-types';
+import React from 'react';
+import clsx from '../utils/clsx';
+import { useDOMRef } from '../utils/dom';
+import { __DEV__ } from '../utils/assertion';
+import { CheckboxGroupProvider } from './checkbox-context';
+import { useCheckboxGroup, UseCheckboxGroupProps } from './use-checkboxGroup';
 import {
   StyledCheckboxGroup,
   StyledCheckboxGroupLabel,
   StyledCheckboxGroupContainer
 } from './checkbox.styles';
-import { CSS } from '../theme/stitches.config';
-import { useDOMRef } from '../utils/dom';
+import type { CSS } from '../theme/stitches.config';
 
-interface Props
-  extends Omit<
-    AriaCheckboxGroupProps,
-    'isDisabled' | 'isReadOnly' | 'defaultChecked'
-  > {
-  color?: NormalColors;
-  labelColor?: SimpleColors;
-  row?: boolean;
-  disabled?: boolean;
-  readOnly?: boolean;
-  size?: NormalSizes;
+interface Props extends UseCheckboxGroupProps {
+  css?: CSS;
+  className?: string;
+  children?: React.ReactNode;
+  as?: keyof JSX.IntrinsicElements;
 }
 
-const defaultProps = {
-  color: 'default' as NormalColors,
-  labelColor: 'default' as SimpleColors,
-  disabled: false,
-  readOnly: false,
-  row: false,
-  size: 'md' as NormalSizes
-};
+// type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props>;
 
-type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props>;
-
-export type CheckboxGroupProps = Props &
-  typeof defaultProps &
-  NativeAttrs & { css?: CSS };
+export type CheckboxGroupProps = Props;
 
 const CheckboxGroup = React.forwardRef<HTMLDivElement, CheckboxGroupProps>(
   (
-    {
-      color,
-      labelColor,
-      disabled,
-      size,
-      label,
-      children,
-      readOnly,
-      row,
-      ...props
-    },
-    ref: React.Ref<HTMLDivElement | null>
+    props: CheckboxGroupProps,
+    forwardedRef: React.Ref<HTMLDivElement | null>
   ) => {
-    const domRef = useDOMRef(ref);
-    const state = useCheckboxGroupState({
-      ...props,
-      isDisabled: disabled,
-      isReadOnly: readOnly
-    });
-    const { groupProps } = useCheckboxGroup(
-      {
-        ...props,
-        'aria-label':
-          props['aria-label'] ||
-          (typeof label === 'string' ? label : undefined),
-        isDisabled: disabled,
-        isReadOnly: readOnly
-      },
-      state
-    );
+    const { className, as, css, children, label, ...otherProps } = props;
+
+    const { size, row, groupProps, groupState, getProviderValue } =
+      useCheckboxGroup({ ...otherProps, label });
 
-    const providerValue = useMemo(() => {
-      return {
-        ...state,
-        color: color,
-        size: size,
-        labelColor: labelColor,
-        inGroup: true
-      };
-    }, [state, color, size, labelColor]);
+    const ref = useDOMRef(forwardedRef);
 
     return (
       <StyledCheckboxGroup
-        ref={domRef}
+        className={clsx('nextui-checkbox-group', className)}
+        as={as}
+        ref={ref}
+        css={css}
         size={size}
-        {...mergeProps(props, groupProps)}
+        {...groupProps}
       >
         {label && (
-          <StyledCheckboxGroupLabel disabled={disabled}>
+          <StyledCheckboxGroupLabel
+            className="nextui-checkbox-group-label"
+            disabled={groupState.isDisabled}
+          >
             {label}
           </StyledCheckboxGroupLabel>
         )}
-        <StyledCheckboxGroupContainer role="presentation" row={row}>
-          <CheckboxContext.Provider value={providerValue}>
+        <StyledCheckboxGroupContainer
+          className="nextui-checkbox-group-items"
+          role="presentation"
+          row={row}
+        >
+          <CheckboxGroupProvider value={getProviderValue}>
             {children}
-          </CheckboxContext.Provider>
+          </CheckboxGroupProvider>
         </StyledCheckboxGroupContainer>
       </StyledCheckboxGroup>
     );
   }
 );
-CheckboxGroup.defaultProps = defaultProps;
-
-CheckboxGroup.displayName = 'NextUI.CheckboxGroup';
-CheckboxGroup.toString = () => '.nextui-checkbox-group';
 
 type CheckboxGroupComponent<T, P = {}> = React.ForwardRefExoticComponent<
-  PropsWithoutRef<P> & RefAttributes<T>
+  React.PropsWithoutRef<P> & React.RefAttributes<T>
 >;
 
-type ComponentProps = Partial<typeof defaultProps> &
-  Omit<Props, keyof typeof defaultProps> &
-  NativeAttrs & { css?: CSS };
+if (__DEV__) {
+  CheckboxGroup.displayName = 'NextUI.CheckboxGroup';
+}
+
+CheckboxGroup.toString = () => '.nextui-checkbox-group';
 
 export default CheckboxGroup as CheckboxGroupComponent<
   HTMLDivElement,
-  ComponentProps
+  CheckboxGroupProps
 >;\n- packages/react/src/checkbox/checkbox.stories.tsx (modified, 222 changes)\n  Patch: @@ -1,20 +1,26 @@
 import React from 'react';
-import { Story, Meta } from '@storybook/react';
-import { NormalSizes, NormalColors } from '../utils/prop-types';
-import Checkbox, { CheckboxProps } from './index';
+import { Meta } from '@storybook/react';
+import Checkbox from './index';
 
 const argTypes = {
   color: {
     name: 'color',
-    type: { name: 'NormalTypes', required: false },
+    type: { name: 'string', required: false },
     control: {
       type: 'radio',
-      options: ['primary', 'secondary', 'success', 'warning', 'error']
+      options: [
+        'default',
+        'primary',
+        'secondary',
+        'success',
+        'warning',
+        'error'
+      ]
     }
   },
-  textColor: {
-    name: 'textColor',
-    type: { name: 'NormalTypes', required: false },
+  labelColor: {
+    name: 'labelColor',
+    type: { name: 'string', required: false },
     control: {
       type: 'radio',
       options: [
@@ -31,11 +37,11 @@ const argTypes = {
     name: 'size',
     control: {
       type: 'radio',
-      options: ['mini', 'small', 'medium', 'large', 'xlarge']
+      options: ['md', 'xs', 'sm', 'lg', 'xl']
     }
   },
-  disabled: {
-    name: 'disabled',
+  isDisabled: {
+    name: 'isDisabled',
     type: { name: 'boolean', required: false },
     control: {
       type: 'boolean'
@@ -49,150 +55,210 @@ export default {
   argTypes
 } as Meta;
 
-const Template: Story<CheckboxProps> = (args) => <Checkbox {...args} />;
+export const Default = () => {
+  return (
+    <Checkbox size="md" color="default" labelColor="default">
+      Option
+    </Checkbox>
+  );
+};
 
-export const Default = Template.bind({});
-Default.args = {
-  label: 'Option',
-  color: 'default' as NormalColors,
-  textColor: 'default' as NormalColors,
-  size: 'md' as NormalSizes
+export const Label = () => {
+  return (
+    <Checkbox size="md" color="default" labelColor="default" label="Option" />
+  );
 };
 
-export const Colors = () => (
+export const Disabled = () => (
   <div style={{ display: 'flex', flexDirection: 'column' }}>
-    <Checkbox color="primary" initialChecked={true}>
-      Primary
+    <Checkbox defaultSelected size="xl">
+      Enabled
     </Checkbox>
     <br />
-    <Checkbox color="secondary" initialChecked={true}>
-      Secondary
+    <Checkbox isDisabled defaultSelected size="xl">
+      Disabled
+    </Checkbox>
+  </div>
+);
+
+export const Sizes = () => (
+  <div style={{ display: 'flex', flexDirection: 'column' }}>
+    <Checkbox defaultSelected size="xs">
+      mini
     </Checkbox>
     <br />
-    <Checkbox color="success" initialChecked={true}>
-      Success
+    <Checkbox defaultSelected size="sm">
+      small
     </Checkbox>
     <br />
-    <Checkbox color="warning" initialChecked={true}>
-      Warning
+    <Checkbox defaultSelected size="md">
+      medium
     </Checkbox>
     <br />
-    <Checkbox color="error" initialChecked={true}>
-      Error
+    <Checkbox defaultSelected size="lg">
+      large
+    </Checkbox>
+    <br />
+    <Checkbox defaultSelected size="xl">
+      xlarge
     </Checkbox>
   </div>
 );
 
-export const TextColors = () => (
+export const Colors = () => (
   <div style={{ display: 'flex', flexDirection: 'column' }}>
-    <Checkbox color="primary" labelColor="primary" initialChecked={true}>
+    <Checkbox color="primary" defaultSelected>
       Primary
     </Checkbox>
     <br />
-    <Checkbox color="secondary" labelColor="secondary" initialChecked={true}>
+    <Checkbox color="secondary" defaultSelected>
       Secondary
     </Checkbox>
     <br />
-    <Checkbox color="success" labelColor="success" initialChecked={true}>
+    <Checkbox color="success" defaultSelected>
       Success
     </Checkbox>
     <br />
-    <Checkbox color="warning" labelColor="warning" initialChecked={true}>
+    <Checkbox color="warning" defaultSelected>
       Warning
     </Checkbox>
     <br />
-    <Checkbox color="error" labelColor="error" initialChecked={true}>
+    <Checkbox color="error" defaultSelected>
       Error
     </Checkbox>
   </div>
 );
 
-export const Sizes = () => (
+export const LabelColors = () => (
   <div style={{ display: 'flex', flexDirection: 'column' }}>
-    <Checkbox initialChecked={true} size="xs">
-      mini
+    <Checkbox color="primary" labelColor="primary" defaultSelected>
+      Primary
     </Checkbox>
     <br />
-    <Checkbox initialChecked={true} size="sm">
-      small
+    <Checkbox color="secondary" labelColor="secondary" defaultSelected>
+      Secondary
     </Checkbox>
     <br />
-    <Checkbox initialChecked={true} size="md">
-      medium
+    <Checkbox color="success" labelColor="success" defaultSelected>
+      Success
     </Checkbox>
     <br />
-    <Checkbox initialChecked={true} size="lg">
-      large
+    <Checkbox color="warning" labelColor="warning" defaultSelected>
+      Warning
     </Checkbox>
     <br />
-    <Checkbox initialChecked={true} size="xl">
-      xlarge
+    <Checkbox color="error" labelColor="error" defaultSelected>
+      Error
     </Checkbox>
   </div>
 );
 
 export const Rounded = () => (
   <div style={{ display: 'flex', flexDirection: 'column' }}>
-    <Checkbox rounded color="primary" initialChecked={true}>
+    <Checkbox isRounded color="primary" defaultSelected>
       Primary
     </Checkbox>
     <br />
-    <Checkbox rounded color="secondary" initialChecked={true}>
+    <Checkbox isRounded color="secondary" defaultSelected>
       Secondary
     </Checkbox>
     <br />
-    <Checkbox rounded color="success" initialChecked={true}>
+    <Checkbox isRounded color="success" defaultSelected>
       Success
     </Checkbox>
     <br />
-    <Checkbox rounded color="warning" initialChecked={true}>
+    <Checkbox isRounded color="warning" defaultSelected>
       Warning
     </Checkbox>
     <br />
-    <Checkbox rounded color="error" initialChecked={true}>
+    <Checkbox isRounded color="error" defaultSelected>
       Error
     </Checkbox>
   </div>
 );
 
-export const Disabled = () => (
-  <div style={{ display: 'flex', flexDirection: 'column' }}>
-    <Checkbox initialChecked={true} size="xl">
-      Enabled
+export const Indeterminate = () => {
+  return (
+    <Checkbox size="lg" color="primary" defaultSelected isIndeterminate>
+      Option
     </Checkbox>
-    <br />
-    <Checkbox disabled initialChecked={true} size="xl">
-      Disabled
+  );
+};
+
+export const LineThrough = () => {
+  return (
+    <Checkbox size="lg" color="primary" defaultSelected lineThrough>
+      Option
     </Checkbox>
-  </div>
-);
+  );
+};
+
+export const Controlled = () => {
+  const [selected, setSelected] = React.useState<boolean>(true);
+
+  const [groupSelected, setGroupSelected] = React.useState<string[]>([
+    'buenos-aires',
+    'sydney'
+  ]);
 
-export const Indeterminate = Template.bind({});
-Indeterminate.args = {
-  checked: true,
-  indeterminate: true,
-  label: 'Option',
-  color: 'primary' as NormalColors,
-  size: 'large' as NormalSizes
+  React.useEffect(() => {
+    console.log('Checkbox ', selected);
+  }, [selected]);
+
+  React.useEffect(() => {
+    console.log('CheckboxGroup ', groupSelected);
+  }, [groupSelected]);
+
+  return (
+    <div style={{ display: 'flex', flexDirection: 'row', gap: 200 }}>
+      <Checkbox color="success" isSelected={selected} onChange={setSelected}>
+        Subscribe (controlled)
+      </Checkbox>
+      <Checkbox.Group
+        color="warning"
+        labelColor="primary"
+        label="Select cities"
+        value={groupSelected}
+        onChange={setGroupSelected}
+      >
+        <Checkbox value="buenos-aires" color="primary">
+          Buenos Aires
+        </Checkbox>
+        <Checkbox value="sydney" labelColor="warning">
+          Sydney
+        </Checkbox>
+        <Checkbox value="london" labelColor="error">
+          London
+        </Checkbox>
+        <Checkbox value="tokyo">Tokyo</Checkbox>
+      </Checkbox.Group>
+    </div>
+  );
 };
 
-export const LineThrough = Template.bind({});
-LineThrough.args = {
-  checked: true,
-  line: true,
-  label: 'Option',
-  color: 'primary' as NormalColors,
-  size: 'large' as NormalSizes
+export const NoAnimated = () => {
+  return (
+    <div style={{ display: 'flex', flexDirection: 'column' }}>
+      <Checkbox size="md" disableAnimation={true} defaultSelected>
+        Option
+      </Checkbox>
+      <br />
+      <Checkbox size="md" disableAnimation={true} lineThrough defaultSelected>
+        Option
+      </Checkbox>
+    </div>
+  );
 };
 
 export const Group = () => {
   const handleGroupChange = (value: string[]) => console.log(value);
+
   return (
     <Checkbox.Group
       color="warning"
       labelColor="primary"
-      defaultValue={['buenos-aires']}
       label="Select cities"
+      defaultValue={['buenos-aires']}
       onChange={handleGroupChange}
     >
       <Checkbox value="buenos-aires" color="primary">
@@ -201,19 +267,19 @@ export const Group = () => {
       <Checkbox value="sydney" labelColor="warning">
         Sydney
       </Checkbox>
-      <Checkbox value="london" labelColor="error">
+      <Checkbox value="london" labelColor="error" isDisabled>
         London
       </Checkbox>
       <Checkbox value="tokyo">Tokyo</Checkbox>
     </Checkbox.Group>
   );
 };
 
-export const Row = () => (
+export const GroupRow = () => (
   <Checkbox.Group
-    defaultValue={['1']}
     color="warning"
     label="Select cities"
+    defaultValue={['1']}
     row
   >
     <Checkbox value="1" color="primary">\n- packages/react/src/checkbox/checkbox.styles.ts (modified, 75 changes)\n  Patch: @@ -1,8 +1,5 @@
-import {
-  styled,
-  cssFocusVisible,
-  VariantProps
-} from '../theme/stitches.config';
+import { styled, cssFocusVisible } from '../theme/stitches.config';
+import type { VariantProps } from '../theme/stitches.config';
 
 export const StyledCheckboxLabel = styled('label', {
   d: 'inline-flex',
@@ -47,7 +44,7 @@ export const StyledCheckboxLabel = styled('label', {
         opacity: 0.8
       }
     },
-    animated: {
+    disableAnimation: {
       false: {
         transition: 'none'
       }
@@ -82,7 +79,7 @@ export const StyledIconCheckFirstLine = styled('div', {
     }
   },
   variants: {
-    indeterminate: {
+    isIndeterminate: {
       true: {
         display: 'none'
       }
@@ -95,19 +92,19 @@ export const StyledIconCheckFirstLine = styled('div', {
         }
       }
     },
-    animated: {
-      false: {
+    disableAnimation: {
+      true: {
         '&:after': {
           transition: 'none'
         }
       }
     }
   },
   compoundVariants: [
-    // checked && !animated
+    // checked && disableAnimation
     {
       checked: true,
-      animated: false,
+      disableAnimation: true,
       css: {
         '&:after': {
           transition: 'none'
@@ -143,7 +140,7 @@ export const StyledIconCheckSecondLine = styled('div', {
     }
   },
   variants: {
-    indeterminate: {
+    isIndeterminate: {
       true: {
         display: 'none'
       }
@@ -156,19 +153,19 @@ export const StyledIconCheckSecondLine = styled('div', {
         }
       }
     },
-    animated: {
-      false: {
+    disableAnimation: {
+      true: {
         '&:after': {
           transition: 'none'
         }
       }
     }
   },
   compoundVariants: [
-    // checked && !animated
+    // checked && disableAnimation
     {
       checked: true,
-      animated: false,
+      disableAnimation: true,
       css: {
         '&:after': {
           transition: 'none'
@@ -202,7 +199,7 @@ export const StyledIconCheck = styled('i', {
     }
   },
   variants: {
-    indeterminate: {
+    isIndeterminate: {
       true: {
         opacity: 1,
         transform: 'rotate(0deg)',
@@ -245,8 +242,8 @@ export const StyledIconCheck = styled('i', {
         opacity: 1
       }
     },
-    animated: {
-      false: {
+    disableAnimation: {
+      true: {
         transition: 'none',
         '&:after': {
           transition: 'none'
@@ -255,41 +252,41 @@ export const StyledIconCheck = styled('i', {
     }
   },
   compoundVariants: [
-    // indeterminate && xs size
+    // isIndeterminate && xs size
     {
-      indeterminate: true,
+      isIndeterminate: true,
       size: 'xs',
       css: {
         scale: '0.5'
       }
     },
-    // indeterminate && sm size
+    // isIndeterminate && sm size
     {
-      indeterminate: true,
+      isIndeterminate: true,
       size: 'sm',
       css: {
         scale: '0.5'
       }
     },
-    // indeterminate && md size
+    // isIndeterminate && md size
     {
-      indeterminate: true,
+      isIndeterminate: true,
       size: 'md',
       css: {
         scale: '0.8'
       }
     },
-    // indeterminate && lg size
+    // isIndeterminate && lg size
     {
-      indeterminate: true,
+      isIndeterminate: true,
       size: 'lg',
       css: {
         transform: 'none'
       }
     },
-    // indeterminate && xl size
+    // isIndeterminate && xl size
     {
-      indeterminate: true,
+      isIndeterminate: true,
       size: 'lg',
       css: {
         transform: 'none'
@@ -355,7 +352,7 @@ export const StyledCheckboxMask = styled('div', {
         }
       }
     },
-    indeterminate: {
+    isIndeterminate: {
       true: {
         '&:before': {
           opacity: 0,
@@ -367,8 +364,8 @@ export const StyledCheckboxMask = styled('div', {
         }
       }
     },
-    animated: {
-      false: {
+    disableAnimation: {
+      true: {
         '&:before': {
           transition: 'none'
         },
@@ -417,7 +414,7 @@ export const StyledCheckboxText = styled('span', {
         color: '$error'
       }
     },
-    line: {
+    lineThrough: {
       true: {
         '&:before': {
           content: '',
@@ -441,8 +438,8 @@ export const StyledCheckboxText = styled('span', {
         color: '$accents5'
       }
     },
-    animated: {
-      false: {
+    disableAnimation: {
+      true: {
         transition: 'none',
         '&:before': {
           transition: 'none'
@@ -452,7 +449,7 @@ export const StyledCheckboxText = styled('span', {
   },
   compoundVariants: [
     {
-      line: true,
+      lineThrough: true,
       checked: true,
       css: {
         opacity: 0.6,
@@ -521,7 +518,7 @@ export const StyledCheckboxContainer = styled(
           $$checkboxColorHover: '$colors$gradient'
         }
       },
-      rounded: {
+      isRounded: {
         true: {
           br: '$pill'
         }
@@ -532,8 +529,8 @@ export const StyledCheckboxContainer = styled(
           cursor: 'not-allowed'
         }
       },
-      animated: {
-        false: {
+      disableAnimation: {
+        true: {
           transition: 'none'
         }
       },\n- packages/react/src/checkbox/checkbox.tsx (modified, 215 changes)\n  Patch: @@ -1,17 +1,14 @@
-import React, { useMemo, useRef, PropsWithoutRef, RefAttributes } from 'react';
-import { FocusableRef } from '@react-types/shared';
+import React, { useMemo } from 'react';
+import { mergeProps } from '@react-aria/utils';
 import { useFocusRing } from '@react-aria/focus';
 import { useHover } from '@react-aria/interactions';
-import { useToggleState } from '@react-stately/toggle';
-import { AriaCheckboxProps } from '@react-types/checkbox';
-import { useCheckbox, useCheckboxGroupItem } from '@react-aria/checkbox';
-import { mergeProps } from '@react-aria/utils';
-
-import { useCheckbox as useCheckboxContext } from './checkbox-context';
+import { usePress } from '@react-aria/interactions';
+import { VisuallyHidden } from '@react-aria/visually-hidden';
+import clsx from '../utils/clsx';
 import CheckboxGroup from './checkbox-group';
-import { NormalSizes, NormalColors, SimpleColors } from '../utils/prop-types';
-import { CSS } from '../theme/stitches.config';
+import { __DEV__ } from '../utils/assertion';
 import { useFocusableRef } from '../utils/dom';
+import { useCheckbox, UseCheckboxProps } from './use-checkbox';
 import {
   StyledCheckboxLabel,
   StyledCheckboxContainer,
@@ -21,182 +18,145 @@ import {
   StyledIconCheckSecondLine,
   StyledCheckboxText
 } from './checkbox.styles';
-import { mapPropsToReactAriaAttr } from './utils';
-import { __DEV__ } from '../utils/assertion';
-import clsx from '../utils/clsx';
+import type { CSS } from '../theme/stitches.config';
+import type { FocusRingAria } from '@react-aria/focus';
+import type { FocusableRef } from '@react-types/shared';
+import type { PressResult } from '@react-aria/interactions';
+
 
-interface Props
-  extends Omit<
-    AriaCheckboxProps,
-    | 'isDisabled'
-    | 'isSelected'
-    | 'defaultSelected'
-    | 'isIndeterminate'
-    | 'isReadOnly'
-    | 'isRequired'
-  > {
-  color?: NormalColors;
-  size?: NormalSizes;
+interface Props extends UseCheckboxProps {
+  css?: CSS;
   label?: string;
-  labelColor?: SimpleColors;
-  line?: boolean;
-  indeterminate?: boolean;
-  animated?: boolean;
-  rounded?: boolean;
-  required?: boolean;
-  disabled?: boolean;
-  checked?: boolean;
-  initialChecked?: boolean;
-  readOnly?: boolean;
-  autoFocus?: boolean;
   className?: string;
+  children?: React.ReactNode;
   as?: keyof JSX.IntrinsicElements;
 }
 
-const defaultProps = {
-  value: '',
-  size: 'md' as NormalSizes,
-  color: 'default' as NormalColors,
-  labelColor: 'default' as SimpleColors,
-  disabled: false,
-  initialChecked: false,
-  indeterminate: false,
-  readOnly: false,
-  required: false,
-  rounded: false,
-  autoFocus: false,
-  line: false,
-  animated: true,
-  className: ''
-};
+// type NativeAttrs = Omit<React.LabelHTMLAttributes<unknown>, keyof Props>;
+
+export type CheckboxProps = Props;
 
-type NativeAttrs = Omit<React.LabelHTMLAttributes<unknown>, keyof Props>;
-export type CheckboxProps = Props &
-  typeof defaultProps &
-  NativeAttrs & { css?: CSS };
+interface IFocusRingAria extends FocusRingAria {
+  focusProps: Omit<React.HTMLAttributes<HTMLElement>, keyof CheckboxProps>;
+}
+
+interface IPressResult extends PressResult {
+  pressProps: Omit<React.HTMLAttributes<HTMLElement>, keyof CheckboxProps>;
+}
 
 const Checkbox = React.forwardRef<HTMLLabelElement, CheckboxProps>(
-  (checkboxProps, ref: React.Ref<HTMLLabelElement | null>) => {
-    const mappedProps = mapPropsToReactAriaAttr(checkboxProps);
+  (props: CheckboxProps, forwardedRef: React.Ref<HTMLLabelElement | null>) => {
+    const { className, as, css, children, label, ...otherProps } = props;
 
     const {
-      line,
-      rounded,
-      indeterminate,
-      disabled,
       size,
-      className,
-      children,
-      label,
       color,
       labelColor,
-      animated,
-      autoFocus,
-      // @ts-ignore
-      initialChecked,
-      ...props
-    } = checkboxProps;
-
-    const groupState = useCheckboxContext();
+      isRounded,
+      lineThrough,
+      disableAnimation,
+      isIndeterminate,
+      inputRef,
+      inputProps
+    } = useCheckbox({ ...otherProps, children: children ?? label });
 
     const inputRef = useRef<HTMLInputElement>(null);
     const domRef = useFocusableRef<HTMLLabelElement>(
       ref as FocusableRef<HTMLLabelElement>,
       inputRef
     );
 
-    const { inputProps } = groupState?.inGroup
-      ? useCheckboxGroupItem(mappedProps, groupState, inputRef)
-      : useCheckbox(mappedProps, useToggleState(mappedProps), inputRef);
+    const { hoverProps, isHovered } = useHover({
+      isDisabled: inputProps.disabled
+    });
 
-    const { hoverProps, isHovered } = useHover({ isDisabled: disabled });
+    // TODO: Event's propagation wasn't stopped https://github.com/adobe/react-spectrum/issues/2383
+    const { pressProps }: IPressResult = usePress({
+      isDisabled: inputProps.disabled
+    });
 
-    const {
-      isFocusVisible,
-      focusProps
-    }: {
-      isFocusVisible: boolean;
-      focusProps: Omit<React.HTMLAttributes<HTMLElement>, keyof CheckboxProps>;
-    } = useFocusRing({ autoFocus });
-
-    const checkboxColor = groupState?.color || color;
-    const checkboxSize = groupState?.size || size;
-    const textColor = groupState?.labelColor || labelColor;
-
-    const getState = useMemo(() => {
+    const { focusProps, isFocusVisible }: IFocusRingAria = useFocusRing({
+      autoFocus: inputProps.autoFocus
+    });
+
+    const checkboxState = useMemo(() => {
       if (isHovered) return 'hovered';
-      return inputProps.checked && indeterminate
+      return isIndeterminate && inputProps.checked
         ? 'mixed'
         : inputProps.checked
         ? 'checked'
         : 'uncheked';
-    }, [isHovered, inputProps.checked, indeterminate]);
+    }, [isHovered, isIndeterminate, inputProps.checked]);
 
     return (
       <StyledCheckboxLabel
-        {...mergeProps(hoverProps, props)}
-        ref={domRef}
         className={clsx(
           'nextui-checkbox-label',
-          `nextui-checkbox--${getState}`,
+          `nextui-checkbox--${checkboxState}`,
           className
         )}
-        size={checkboxSize}
-        animated={animated}
+        as={as}
+        ref={ref}
+        css={css}
+        size={size}
         isHovered={isHovered}
         disabled={inputProps.disabled}
+        disableAnimation={disableAnimation}
+        {...mergeProps(hoverProps, pressProps)}
       >
         <StyledCheckboxContainer
           className="nextui-checkbox-container"
-          color={checkboxColor}
-          rounded={rounded}
-          animated={animated}
-          isFocusVisible={isFocusVisible}
+          color={color}
+          isRounded={isRounded}
           isHovered={isHovered}
           disabled={inputProps.disabled}
+          isFocusVisible={isFocusVisible}
+          disableAnimation={disableAnimation}
           {...focusProps}
         >
-          <input
-            ref={inputRef}
-            className="nextui-checkbox-input"
-            {...mergeProps(inputProps, focusProps)}
-          />
+          <VisuallyHidden>
+            <input
+              ref={inputRef}
+              className="nextui-checkbox-input"
+              {...mergeProps(inputProps, focusProps)}
+            />
+          </VisuallyHidden>
           <StyledCheckboxMask
             className="nextui-checkbox-mask"
-            animated={animated}
-            indeterminate={indeterminate}
             checked={inputProps.checked}
+            isIndeterminate={isIndeterminate}
+            disableAnimation={disableAnimation}
           >
             <StyledIconCheck
               className="nextui-icon-check"
-              size={checkboxSize}
-              indeterminate={indeterminate}
-              animated={animated}
+              size={size}
               checked={inputProps.checked}
+              isIndeterminate={isIndeterminate}
+              disableAnimation={disableAnimation}
             >
               <StyledIconCheckFirstLine
                 className="nextui-icon-check-line1"
-                indeterminate={indeterminate}
-                animated={animated}
                 checked={inputProps.checked}
+                isIndeterminate={isIndeterminate}
+                disableAnimation={disableAnimation}
               />
               <StyledIconCheckSecondLine
                 className="nextui-icon-check-line2"
-                indeterminate={indeterminate}
-                animated={animated}
                 checked={inputProps.checked}
+                isIndeterminate={isIndeterminate}
+                disableAnimation={disableAnimation}
               />
             </StyledIconCheck>
           </StyledCheckboxMask>
         </StyledCheckboxContainer>
         {(children || label) && (
           <StyledCheckboxText
             className="nextui-checkbox-text"
-            color={textColor}
-            line={line}
-            animated={animated}
+            color={labelColor}
+            lineThrough={lineThrough}
             checked={inputProps.checked}
             disabled={inputProps.disabled}
+            disableAnimation={disableAnimation}
           >
             {children || label}
           </StyledCheckboxText>
@@ -206,22 +166,19 @@ const Checkbox = React.forwardRef<HTMLLabelElement, CheckboxProps>(
   }
 );
 
-Checkbox.defaultProps = defaultProps;
-
-if (__DEV__) {
-  Checkbox.displayName = 'NextUI.Checkbox';
-}
 
-Checkbox.toString = () => '.nextui-checkbox';
+Checkbox.defaultProps = defaultProps;
 
 type CheckboxComponent<T, P = {}> = React.ForwardRefExoticComponent<
-  PropsWithoutRef<P> & RefAttributes<T>
+  React.PropsWithoutRef<P> & React.RefAttributes<T>
 > & {
   Group: typeof CheckboxGroup;
 };
 
-type ComponentProps = Partial<typeof defaultProps> &
-  Omit<Props, keyof typeof defaultProps> &
-  NativeAttrs & { css?: CSS };
+if (__DEV__) {
+  Checkbox.displayName = 'NextUI.Checkbox';
+}
+
+Checkbox.toString = () => '.nextui-checkbox';
 
-export default Checkbox as CheckboxComponent<HTMLLabelElement, ComponentProps>;
+export default Checkbox as CheckboxComponent<HTMLLabelElement, CheckboxProps>;\n- packages/react/src/checkbox/use-checkbox.ts (added, 88 changes)\n  Patch: @@ -0,0 +1,88 @@
+import { useMemo, useRef } from 'react';
+import { useToggleState } from '@react-stately/toggle';
+import {
+  useCheckbox as useReactAriaCheckbox,
+  useCheckboxGroupItem as useReactAriaCheckboxGroupItem
+} from '@react-aria/checkbox';
+import { __DEV__ } from '../utils/assertion';
+import { useCheckboxGroupContext } from './checkbox-context';
+import type { AriaCheckboxProps } from '@react-types/checkbox';
+import type {
+  NormalSizes,
+  NormalColors,
+  SimpleColors
+} from '../utils/prop-types';
+
+export interface UseCheckboxProps extends AriaCheckboxProps {
+  isRounded?: boolean;
+  lineThrough?: boolean;
+  disableAnimation?: boolean;
+  size?: NormalSizes;
+  color?: NormalColors;
+  labelColor?: SimpleColors;
+}
+
+/**
+ * @internal
+ */
+export const useCheckbox = (props: UseCheckboxProps) => {
+  const group = useCheckboxGroupContext();
+
+  const {
+    size = group?.size ?? 'md',
+    color = group?.color ?? 'default',
+    labelColor = group?.labelColor ?? 'default',
+    lineThrough,
+    isRounded = false,
+    disableAnimation = false,
+    isIndeterminate = false,
+    ...otherProps
+  } = props;
+
+  if (group && __DEV__) {
+    const warningMessage =
+      'The Checkbox.Group is being used, `%s` will be ignored. Use the `%s` of the Checkbox.Group instead.';
+    if ('isSelected' in otherProps) {
+      console.warn(warningMessage, 'isSelected', 'value');
+    }
+    if ('defaultSelected' in otherProps) {
+      console.warn(warningMessage, 'defaultSelected', 'defaultValue');
+    }
+  }
+
+  const inputRef = useRef<HTMLInputElement>(null);
+
+  const ariaCheckboxProps = useMemo(() => {
+    return {
+      ...otherProps,
+      isIndeterminate,
+      value: otherProps.value ?? ''
+    };
+  }, [otherProps, isIndeterminate]);
+
+  const { inputProps } = group
+    ? useReactAriaCheckboxGroupItem(
+        ariaCheckboxProps,
+        group.groupState,
+        inputRef
+      )
+    : useReactAriaCheckbox(
+        ariaCheckboxProps,
+        useToggleState(ariaCheckboxProps),
+        inputRef
+      );
+
+  return {
+    size,
+    color,
+    labelColor,
+    isRounded,
+    lineThrough,
+    disableAnimation,
+    isIndeterminate,
+    inputRef,
+    inputProps
+  };
+};
+
+export type UseCheckboxReturn = ReturnType<typeof useCheckbox>;\n- packages/react/src/checkbox/use-checkboxGroup.ts (added, 48 changes)\n  Patch: @@ -0,0 +1,48 @@
+import { useMemo } from 'react';
+import { useCheckboxGroupState } from '@react-stately/checkbox';
+import { useCheckboxGroup as useReactAriaCheckboxGroup } from '@react-aria/checkbox';
+import type { ICheckboxGroupContext } from './checkbox-context';
+import type { AriaCheckboxGroupProps } from '@react-types/checkbox';
+import type {
+  NormalSizes,
+  NormalColors,
+  SimpleColors
+} from '../utils/prop-types';
+
+export interface UseCheckboxGroupProps extends AriaCheckboxGroupProps {
+  row?: boolean;
+  size?: NormalSizes;
+  color?: NormalColors;
+  labelColor?: SimpleColors;
+}
+
+/**
+ * @internal
+ */
+export const useCheckboxGroup = (props: UseCheckboxGroupProps = {}) => {
+  const {
+    size = 'md',
+    color = 'default',
+    labelColor = 'default',
+    row = false,
+    ...otherProps
+  } = props;
+
+  const groupState = useCheckboxGroupState(otherProps);
+
+  const { groupProps } = useReactAriaCheckboxGroup(otherProps, groupState);
+
+  const getProviderValue = useMemo<ICheckboxGroupContext>(() => {
+    return { size, color, labelColor, groupState };
+  }, [size, color, labelColor, groupState]);
+
+  return {
+    size,
+    row,
+    groupProps,
+    groupState,
+    getProviderValue
+  };
+};
+
+export type UseCheckboxGroupReturn = ReturnType<typeof useCheckboxGroup>;\n- packages/react/src/checkbox/utils.ts (removed, 13 changes)\n  Patch: @@ -1,13 +0,0 @@
-import { CheckboxProps } from './checkbox';
-
-export const mapPropsToReactAriaAttr = (checkboxProps: CheckboxProps) => {
-  return {
-    ...checkboxProps,
-    isIndeterminate: checkboxProps.indeterminate,
-    isDisabled: checkboxProps.disabled,
-    isReadOnly: checkboxProps.readOnly,
-    isRequired: checkboxProps.required,
-    isSelected: checkboxProps.checked,
-    defaultSelected: checkboxProps.initialChecked
-  };
-};\n- packages/react/src/table/__tests__/__snapshots__/index.test.tsx.snap (modified, 6 changes)\n  Patch: @@ -1,5 +1,7 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`Table should render a static table correctly with sorting 1`] = `"<div class=\\"nextui-c-hWZRae nextui-c-hWZRae-gikTHb-shadow-true nextui-c-hWZRae-bzEnZV-borderWeight-normal nextui-c-hWZRae-iPJLV-css nextui-table-container\\"><table class=\\"nextui-c-cuoPNV nextui-c-cuoPNV-dicOIe-color-primary nextui-c-cuoPNV-fPgLZC-lineWeight-light nextui-table\\" aria-label=\\"Test sorting table\\" id=\\"react-aria9051012084-15\\" role=\\"grid\\" tabindex=\\"0\\" aria-describedby=\\"\\"><thead class=\\"nextui-c-PJLV nextui-table-row-group\\" role=\\"rowgroup\\"><tr class=\\"nextui-c-fRbcxI nextui-table-header-row\\" role=\\"row\\"><th class=\\"nextui-c-gkciFS nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-column-header\\" tabindex=\\"-1\\" data-key=\\".0.0\\" role=\\"columnheader\\" id=\\"react-aria9051012084-15-.0.0\\">NAME</th><th class=\\"nextui-c-gkciFS nextui-c-PJLV nextui-c-gkciFS-hjbeJO-allowsSorting-true nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-column-header\\" tabindex=\\"-1\\" data-key=\\".0.1\\" role=\\"columnheader\\" id=\\"react-aria9051012084-15-.0.1\\" aria-sort=\\"none\\" aria-describedby=\\"react-aria-description-0\\">TYPE<svg role=\\"presentation\\" aria-hidden=\\"true\\" focusable=\\"false\\" class=\\"nextui-c-cqpNQI nextui-c-cqpNQI-ihOkgrg-css nextui-table-sort-icon\\" width=\\"22\\" height=\\"22\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path d=\\"M12 2C6.49 2 2 6.49 2 12C2 17.51 6.49 22 12 22C17.51 22 22 17.51 22 12C22 6.49 17.51 2 12 2ZM16.06 11.27L12.53 14.8C12.38 14.95 12.19 15.02 12 15.02C11.81 15.02 11.62 14.95 11.47 14.8L7.94 11.27C7.65 10.98 7.65 10.5 7.94 10.21C8.23 9.92 8.71 9.92 9 10.21L12 13.21L15 10.21C15.29 9.92 15.77 9.92 16.06 10.21C16.35 10.5 16.35 10.97 16.06 11.27Z\\"></path></svg></th><th class=\\"nextui-c-gkciFS nextui-c-PJLV nextui-c-gkciFS-hjbeJO-allowsSorting-true nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-column-header\\" tabindex=\\"-1\\" data-key=\\".0.2\\" role=\\"columnheader\\" id=\\"react-aria9051012084-15-.0.2\\" aria-sort=\\"none\\" aria-describedby=\\"react-aria-description-0\\">DATE MODIFIED<svg role=\\"presentation\\" aria-hidden=\\"true\\" focusable=\\"false\\" class=\\"nextui-c-cqpNQI nextui-c-cqpNQI-ihOkgrg-css nextui-table-sort-icon\\" width=\\"22\\" height=\\"22\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path d=\\"M12 2C6.49 2 2 6.49 2 12C2 17.51 6.49 22 12 22C17.51 22 22 17.51 22 12C22 6.49 17.51 2 12 2ZM16.06 11.27L12.53 14.8C12.38 14.95 12.19 15.02 12 15.02C11.81 15.02 11.62 14.95 11.47 14.8L7.94 11.27C7.65 10.98 7.65 10.5 7.94 10.21C8.23 9.92 8.71 9.92 9 10.21L12 13.21L15 10.21C15.29 9.92 15.77 9.92 16.06 10.21C16.35 10.5 16.35 10.97 16.06 11.27Z\\"></path></svg></th></tr><tr aria-hidden=\\"true\\" class=\\"nextui-c-gNVTSf nextui-c-gNVTSf-hakyQ-inline-false nextui-c-gNVTSf-icCJVMZ-css nextui-table-hidden-row\\"></tr></thead><tbody class=\\"nextui-c-PJLV nextui-c-PJLV-iccTTUn-css nextui-table-body\\" role=\\"rowgroup\\"><tr class=\\"nextui-c-bUbfzy nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-row\\" role=\\"row\\" tabindex=\\"-1\\" data-key=\\"1\\" aria-labelledby=\\"react-aria9051012084-15-1-.0.0\\" aria-hidden=\\"false\\"><td class=\\"nextui-c-PJLV nextui-c-coKxkr nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-cell\\" tabindex=\\"-1\\" data-key=\\"1.0\\" role=\\"rowheader\\" id=\\"react-aria9051012084-15-1-.0.0\\">Games</td><td class=\\"nextui-c-PJLV nextui-c-coKxkr nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-cell\\" tabindex=\\"-1\\" data-key=\\"1.1\\" role=\\"gridcell\\">File folder</td><td class=\\"nextui-c-PJLV nextui-c-coKxkr nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-cell\\" tabindex=\\"-1\\" data-key=\\"1.2\\" role=\\"gridcell\\">6/7/2020</td></tr></tbody></table></div>"`;
 
-exports[`Table should render correctly 1`] = `"<div class=\\"nextui-c-hWZRae nextui-c-hWZRae-gikTHb-shadow-true nextui-c-hWZRae-bzEnZV-borderWeight-normal nextui-c-hWZRae-iPJLV-css nextui-table-container\\"><table class=\\"nextui-c-cuoPNV nextui-c-cuoPNV-dicOIe-color-primary nextui-c-cuoPNV-fPgLZC-lineWeight-light nextui-table\\" aria-label=\\"Test example table\\" id=\\"react-aria9051012084-2\\" role=\\"grid\\" tabindex=\\"0\\" aria-describedby=\\"\\"><thead class=\\"nextui-c-PJLV nextui-table-row-group\\" role=\\"rowgroup\\"><tr class=\\"nextui-c-fRbcxI nextui-table-header-row\\" role=\\"row\\"><th class=\\"nextui-c-gkciFS nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-column-header\\" tabindex=\\"-1\\" data-key=\\".0.0\\" role=\\"columnheader\\" id=\\"react-aria9051012084-2-.0.0\\">NAME</th><th class=\\"nextui-c-gkciFS nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-column-header\\" tabindex=\\"-1\\" data-key=\\".0.1\\" role=\\"columnheader\\" id=\\"react-aria9051012084-2-.0.1\\">TYPE</th><th class=\\"nextui-c-gkciFS nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-column-header\\" tabindex=\\"-1\\" data-key=\\".0.2\\" role=\\"columnheader\\" id=\\"react-aria9051012084-2-.0.2\\">DATE MODIFIED</th></tr><tr aria-hidden=\\"true\\" class=\\"nextui-c-gNVTSf nextui-c-gNVTSf-hakyQ-inline-false nextui-c-gNVTSf-icCJVMZ-css nextui-table-hidden-row\\"></tr></thead><tbody class=\\"nextui-c-PJLV nextui-c-PJLV-iccTTUn-css nextui-table-body\\" role=\\"rowgroup\\"><tr class=\\"nextui-c-bUbfzy nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-row\\" role=\\"row\\" tabindex=\\"-1\\" data-key=\\"1\\" aria-labelledby=\\"react-aria9051012084-2-1-.0.0\\" aria-hidden=\\"false\\"><td class=\\"nextui-c-PJLV nextui-c-coKxkr nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-cell\\" tabindex=\\"-1\\" data-key=\\"1.0\\" role=\\"rowheader\\" id=\\"react-aria9051012084-2-1-.0.0\\">Games</td><td class=\\"nextui-c-PJLV nextui-c-coKxkr nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-cell\\" tabindex=\\"-1\\" data-key=\\"1.1\\" role=\\"gridcell\\">File folder</td><td class=\\"nextui-c-PJLV nextui-c-coKxkr nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-cell\\" tabindex=\\"-1\\" data-key=\\"1.2\\" role=\\"gridcell\\">6/7/2020</td></tr></tbody></table></div>"`;
+exports[`Table should render a static table correctly with sorting 1`] = `"<div class=\\"nextui-c-hWZRae nextui-c-hWZRae-gikTHb-shadow-true nextui-c-hWZRae-bzEnZV-borderWeight-normal nextui-c-hWZRae-iPJLV-css nextui-table-container\\"><table class=\\"nextui-c-cuoPNV nextui-c-cuoPNV-dicOIe-color-primary nextui-c-cuoPNV-fPgLZC-lineWeight-light nextui-table\\" aria-label=\\"Test sorting table\\" id=\\"react-aria4099748288-15\\" role=\\"grid\\" tabindex=\\"0\\" aria-describedby=\\"\\"><thead class=\\"nextui-c-PJLV nextui-table-row-group\\" role=\\"rowgroup\\"><tr class=\\"nextui-c-fRbcxI nextui-table-header-row\\" role=\\"row\\"><th class=\\"nextui-c-gkciFS nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-column-header\\" tabindex=\\"-1\\" data-key=\\".0.0\\" role=\\"columnheader\\" id=\\"react-aria4099748288-15-.0.0\\">NAME</th><th class=\\"nextui-c-gkciFS nextui-c-PJLV nextui-c-gkciFS-hjbeJO-allowsSorting-true nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-column-header\\" tabindex=\\"-1\\" data-key=\\".0.1\\" role=\\"columnheader\\" id=\\"react-aria4099748288-15-.0.1\\" aria-sort=\\"none\\" aria-describedby=\\"react-aria-description-0\\">TYPE<svg role=\\"presentation\\" aria-hidden=\\"true\\" focusable=\\"false\\" class=\\"nextui-c-cqpNQI nextui-c-cqpNQI-ihOkgrg-css nextui-table-sort-icon\\" width=\\"22\\" height=\\"22\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path d=\\"M12 2C6.49 2 2 6.49 2 12C2 17.51 6.49 22 12 22C17.51 22 22 17.51 22 12C22 6.49 17.51 2 12 2ZM16.06 11.27L12.53 14.8C12.38 14.95 12.19 15.02 12 15.02C11.81 15.02 11.62 14.95 11.47 14.8L7.94 11.27C7.65 10.98 7.65 10.5 7.94 10.21C8.23 9.92 8.71 9.92 9 10.21L12 13.21L15 10.21C15.29 9.92 15.77 9.92 16.06 10.21C16.35 10.5 16.35 10.97 16.06 11.27Z\\"></path></svg></th><th class=\\"nextui-c-gkciFS nextui-c-PJLV nextui-c-gkciFS-hjbeJO-allowsSorting-true nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-column-header\\" tabindex=\\"-1\\" data-key=\\".0.2\\" role=\\"columnheader\\" id=\\"react-aria4099748288-15-.0.2\\" aria-sort=\\"none\\" aria-describedby=\\"react-aria-description-0\\">DATE MODIFIED<svg role=\\"presentation\\" aria-hidden=\\"true\\" focusable=\\"false\\" class=\\"nextui-c-cqpNQI nextui-c-cqpNQI-ihOkgrg-css nextui-table-sort-icon\\" width=\\"22\\" height=\\"22\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path d=\\"M12 2C6.49 2 2 6.49 2 12C2 17.51 6.49 22 12 22C17.51 22 22 17.51 22 12C22 6.49 17.51 2 12 2ZM16.06 11.27L12.53 14.8C12.38 14.95 12.19 15.02 12 15.02C11.81 15.02 11.62 14.95 11.47 14.8L7.94 11.27C7.65 10.98 7.65 10.5 7.94 10.21C8.23 9.92 8.71 9.92 9 10.21L12 13.21L15 10.21C15.29 9.92 15.77 9.92 16.06 10.21C16.35 10.5 16.35 10.97 16.06 11.27Z\\"></path></svg></th></tr><tr aria-hidden=\\"true\\" class=\\"nextui-c-gNVTSf nextui-c-gNVTSf-hakyQ-inline-false nextui-c-gNVTSf-icCJVMZ-css nextui-table-hidden-row\\"></tr></thead><tbody class=\\"nextui-c-PJLV nextui-c-PJLV-iccTTUn-css nextui-table-body\\" role=\\"rowgroup\\"><tr class=\\"nextui-c-bUbfzy nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-row\\" role=\\"row\\" tabindex=\\"-1\\" data-key=\\"1\\" aria-labelledby=\\"react-aria4099748288-15-1-.0.0\\" aria-hidden=\\"false\\"><td class=\\"nextui-c-PJLV nextui-c-coKxkr nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-cell\\" tabindex=\\"-1\\" data-key=\\"1.0\\" role=\\"rowheader\\" id=\\"react-aria4099748288-15-1-.0.0\\">Games</td><td class=\\"nextui-c-PJLV nextui-c-coKxkr nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-cell\\" tabindex=\\"-1\\" data-key=\\"1.1\\" role=\\"gridcell\\">File folder</td><td class=\\"nextui-c-PJLV nextui-c-coKxkr nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-cell\\" tabindex=\\"-1\\" data-key=\\"1.2\\" role=\\"gridcell\\">6/7/2020</td></tr></tbody></table></div>"`;
+
+exports[`Table should render correctly 1`] = `"<div class=\\"nextui-c-hWZRae nextui-c-hWZRae-gikTHb-shadow-true nextui-c-hWZRae-bzEnZV-borderWeight-normal nextui-c-hWZRae-iPJLV-css nextui-table-container\\"><table class=\\"nextui-c-cuoPNV nextui-c-cuoPNV-dicOIe-color-primary nextui-c-cuoPNV-fPgLZC-lineWeight-light nextui-table\\" aria-label=\\"Test example table\\" id=\\"react-aria4099748288-2\\" role=\\"grid\\" tabindex=\\"0\\" aria-describedby=\\"\\"><thead class=\\"nextui-c-PJLV nextui-table-row-group\\" role=\\"rowgroup\\"><tr class=\\"nextui-c-fRbcxI nextui-table-header-row\\" role=\\"row\\"><th class=\\"nextui-c-gkciFS nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-column-header\\" tabindex=\\"-1\\" data-key=\\".0.0\\" role=\\"columnheader\\" id=\\"react-aria4099748288-2-.0.0\\">NAME</th><th class=\\"nextui-c-gkciFS nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-column-header\\" tabindex=\\"-1\\" data-key=\\".0.1\\" role=\\"columnheader\\" id=\\"react-aria4099748288-2-.0.1\\">TYPE</th><th class=\\"nextui-c-gkciFS nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-column-header\\" tabindex=\\"-1\\" data-key=\\".0.2\\" role=\\"columnheader\\" id=\\"react-aria4099748288-2-.0.2\\">DATE MODIFIED</th></tr><tr aria-hidden=\\"true\\" class=\\"nextui-c-gNVTSf nextui-c-gNVTSf-hakyQ-inline-false nextui-c-gNVTSf-icCJVMZ-css nextui-table-hidden-row\\"></tr></thead><tbody class=\\"nextui-c-PJLV nextui-c-PJLV-iccTTUn-css nextui-table-body\\" role=\\"rowgroup\\"><tr class=\\"nextui-c-bUbfzy nextui-c-PJLV nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-row\\" role=\\"row\\" tabindex=\\"-1\\" data-key=\\"1\\" aria-labelledby=\\"react-aria4099748288-2-1-.0.0\\" aria-hidden=\\"false\\"><td class=\\"nextui-c-PJLV nextui-c-coKxkr nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-cell\\" tabindex=\\"-1\\" data-key=\\"1.0\\" role=\\"rowheader\\" id=\\"react-aria4099748288-2-1-.0.0\\">Games</td><td class=\\"nextui-c-PJLV nextui-c-coKxkr nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-cell\\" tabindex=\\"-1\\" data-key=\\"1.1\\" role=\\"gridcell\\">File folder</td><td class=\\"nextui-c-PJLV nextui-c-coKxkr nextui-c-PJLV-gulvcB-isFocusVisible-false nextui-table-cell\\" tabindex=\\"-1\\" data-key=\\"1.2\\" role=\\"gridcell\\">6/7/2020</td></tr></tbody></table></div>"`;
+\n- packages/react/src/table/table-checkbox-cell.tsx (modified, 6 changes)\n  Patch: @@ -7,7 +7,6 @@ import { useFocusRing } from '@react-aria/focus';
 import { mergeProps } from '@react-aria/utils';
 import Checkbox, { CheckboxProps } from '../checkbox';
 import { StyledTableCell, TableVariantsProps } from './table.styles';
-import { mapPropsToCheckboxAttr } from './utils';
 import clsx from '../utils/clsx';
 
 type CellProps<T> = GridNode<T> & { parentKey?: React.Key };
@@ -51,7 +50,6 @@ const TableCheckboxCell = React.forwardRef<
       state
     );
     const { isFocusVisible, focusProps } = useFocusRing();
-    const mappedProps = mapPropsToCheckboxAttr(checkboxProps);
 
     return (
       <StyledTableCell
@@ -61,9 +59,9 @@ const TableCheckboxCell = React.forwardRef<
         {...mergeProps(gridCellProps, focusProps, props)}
       >
         <Checkbox
-          {...mappedProps}
+          {...checkboxProps}
           color={color as CheckboxProps['color']}
-          animated={animated}
+          disableAnimation={!animated}
           css={{ display: 'inherit' }}
         />
       </StyledTableCell>\n- packages/react/src/table/table-select-all-checkbox.tsx (modified, 7 changes)\n  Patch: @@ -11,7 +11,6 @@ import { useFocusRing } from '@react-aria/focus';
 import { mergeProps } from '@react-aria/utils';
 import Checkbox, { CheckboxProps } from '../checkbox';
 import { StyledTableHeaderCell, TableVariantsProps } from './table.styles';
-import { mapPropsToCheckboxAttr } from './utils';
 import clsx from '../utils/clsx';
 
 interface Props<T> {
@@ -54,8 +53,6 @@ const TableSelectAllCheckbox = React.forwardRef<
     const { checkboxProps } = useTableSelectAllCheckbox(state);
     const { isFocusVisible, focusProps } = useFocusRing();
 
-    const mappedProps = mapPropsToCheckboxAttr(checkboxProps);
-
     return (
       <StyledTableHeaderCell
         ref={tableCellRef}
@@ -67,9 +64,9 @@ const TableSelectAllCheckbox = React.forwardRef<
           <VisuallyHidden>{checkboxProps['aria-label']}</VisuallyHidden>
         ) : (
           <Checkbox
-            {...mappedProps}
+            {...checkboxProps}
             color={color as CheckboxProps['color']}
-            animated={animated}
+            disableAnimation={!animated}
             css={{
               display: 'inherit',
               $$checkboxBorderColor: '$colors$accents3'\n- packages/react/src/table/utils.ts (modified, 20 changes)\n  Patch: @@ -1,5 +1,4 @@
 import React, { ReactNode } from 'react';
-import { AriaCheckboxProps } from '@react-types/checkbox';
 import { TableCollection } from '@react-types/table';
 
 export const hasPaginationChild = (
@@ -25,22 +24,3 @@ export const isInfinityScroll = (collection: TableCollection<unknown>) => {
     typeof bodyProps?.onLoadMore === 'function'
   );
 };
-
-export const mapPropsToCheckboxAttr = (ariaProps: AriaCheckboxProps) => {
-  const {
-    isSelected,
-    defaultSelected,
-    isIndeterminate,
-    isReadOnly,
-    isRequired,
-    ...ariaCheckboxProps
-  } = ariaProps;
-  return {
-    checked: isSelected,
-    initialChecked: defaultSelected,
-    indeterminate: isIndeterminate,
-    readOnly: isReadOnly,
-    required: isRequired,
-    ...ariaCheckboxProps
-  };
-};\n
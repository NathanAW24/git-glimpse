Pull Request Number: 3476
Title: feat(date-picker): added isOpen and onOpenChange
Base Branch: canary
Head Branch: feat/date-picker-isOpen
Author: ShrinidhiUpadhyaya
URL: https://github.com/nextui-org/nextui/pull/3476
State: OPEN
Created At: 2024-07-15T17:01:28Z
Merged At: None
Participants: ShrinidhiUpadhyaya, wingkwong, jrgarciadev

Description:
Closes #3457
üìù Description
Added isOpen prop and onOpenChange event, so that they could be used to control visibility of the DatePicker popover.
‚õ≥Ô∏è Current behavior (updates)
üöÄ New behavior
üí£ Is this a breaking change (Yes/No):
üìù Additional Information
If the PR gets accepted please use my GitHub email-id (shrinidhiupadhyaya1195@gmail.com) instead of my other email-id for the Co-authored-by: message.

Summary by CodeRabbit

New Features

Added isOpen and onOpenChange functionalities to the DatePicker component for improved control over the date picker's visibility.

Commits:
- ci(changesets): version packages\n- Merge pull request #1 from ShrinidhiUpadhyaya/changeset-release/canary

ci(changesets): :package: version packages\n- Merge branch 'canary' of https://github.com/ShrinidhiUpadhyaya/nextui into canary\n- feat(date-picker): added isOpen, onOpenChange #3457\n- Revert "Merge pull request #1 from ShrinidhiUpadhyaya/changeset-release/canary"

This reverts commit 69cc6ea1d3d7084e5dbef172e5b5f2d9d81740e5, reversing
changes made to ec7c4173875f02981182a3b513936c15a698ad06.\n- feat(date-picker): added changeset & updated preset template in stories\n- feat(date-picker): updated preset example in docs\n

Labels:
üöß Status: Changes Requested

Comments:
- changeset-bot: ###  ü¶ã  Changeset detected

Latest commit: 67af7103019bc1a7de3929f66fb16966467632be

**The changes in this PR will be included in the next version bump.**

<details><summary>This PR includes changesets to release 2 packages</summary>

  | Name                    | Type  |
| ----------------------- | ----- |
| @nextui-org/date-picker | Patch |
| @nextui-org/react       | Patch |

</details>

Not sure what this means? [Click here  to learn what changesets are](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add another changeset to this PR](https://github.com/ShrinidhiUpadhyaya/nextui/new/feat/date-picker-isOpen?filename=.changeset/fifty-olives-admire.md&value=---%0A%22%40nextui-org%2Fdocs%22%3A%20patch%0A%22%40nextui-org%2Fdate-picker%22%3A%20patch%0A---%0A%0Afeat(date-picker)%3A%20added%20isOpen%20and%20onOpenChange%0A)

\n- vercel: [vc]: #3WN9m3vmX0bvNdljXfncEtGr3Ix7UvGlGZqvv+7YiJs=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvRkFtcnZOTldLUE56MWg0cVJhOE5icG1CMm5FRiIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLXNocmluaWRoaXVwYWRoeWEtYWEwZWQxLW5leHR1aS1vcmcudmVyY2VsLmFwcCIsIm5leHRDb21taXRTdGF0dXMiOiJERVBMT1lFRCIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLXNocmluaWRoaXVwYWRoeWEtYWEwZWQxLW5leHR1aS1vcmcudmVyY2VsLmFwcCJ9fV19
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/FAmrvNNWKPNz1h4qRa8NbpmB2nEF)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-shrinidhiupadhya-aa0ed1-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-shrinidhiupadhya-aa0ed1-nextui-org.vercel.app?via=pr-comment-feedback-link) | Jul 16, 2024 2:32pm |

\n- vercel: Someone is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%221a2e393a55b9bd5cdcce90ecbddfe1147cb9f25f%22%7D%2C%22id%22%3A%22QmZK6tDiXGKKzHEiQMNa1UHErJWukTfFqBNcpEoE59yMaM%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A3476%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- This is an auto-generated comment: failure by coderabbit.ai -->

> [!CAUTION]
> ## Review failed
> 
> The head commit changed during the review from 5b9a42dcc0dc44e05385b6d40f8b7c7bdc11ac6e to 67af7103019bc1a7de3929f66fb16966467632be.

<!-- end of auto-generated comment: failure by coderabbit.ai --><!-- walkthrough_start -->

## Walkthrough

The changes introduce the ability to manage the visibility state of the `DatePicker` component in the `@nextui-org/date-picker` package. This includes adding `isOpen` state management and `onOpenChange` handlers to control and respond to the opening and closing of the date picker. These updates aim to enhance user interaction, especially addressing issues where the DatePicker would not dismiss after selecting a date from a preset.

## Changes

| File Path                                                 | Change Summary                                                                                                                                      |
|-----------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|
| `.../date-picker/src/use-date-picker-base.ts`             | Added `onOpenChange` property to the `props` object and destructured object.                                                                         |
| `.../date-picker/src/use-date-picker.ts`                  | Included handling for `onOpenChange` with the `isOpen` parameter and exposed them in the return object.                                              |
| `.changeset/silent-countries-drum.md`                     | Documented the addition of `isOpen` and `onOpenChange` functionalities to the DatePicker component.                                                  |
| `.../date-picker/stories/date-picker.stories.tsx`         | Added `isOpen` state and `setIsOpen` handler for visibility management of the date picker. Modified button handlers to update `isOpen` state.        |
| `.../docs/content/components/date-picker/preset.ts`       | Added `isOpen` state management and modified button `onPress` handlers to set `isOpen` to `false` after updating the value. Included the `onOpenChange` handler. |

## Sequence Diagram(s)

N/A

## Assessment against linked issues

| Objective (Issue)                                                          | Addressed | Explanation |
|----------------------------------------------------------------------------|-----------|-------------|
| Fix bug where DatePicker does not dismiss after selecting a date from Preset (#3457) | ‚úÖ         |             |
| Ensure `onOpenChange` triggers properly when DatePicker visibility changes (#3457) | ‚úÖ         |             |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->

<!--

# Existing changesets

packages/components/date-picker/src/use-date-picker-base.ts: ## Short Summary

In the `useDatePickerBase` function in `use-date-picker-base.ts`, an `onOpenChange` property was added to the `props` object and also to the destructured object, which was previously not present.

---

packages/components/date-picker/src/use-date-picker.ts: ## Short Summary

In the `use-date-picker.ts` file, the `useDatePicker` function now includes handling for `onOpenChange` by calling it with the `isOpen` parameter. Additionally, it exposes `isOpen` and `onOpenChange` in the return object.

---

.changeset/silent-countries-drum.md: ## AI-generated summary of changes

The new file introduces a patch for the `@nextui-org/date-picker` package. It adds `isOpen` and `onOpenChanged` functionalities to the DatePicker component, enhancing user interaction and control over the date picker's visibility.

---

packages/components/date-picker/stories/date-picker.stories.tsx: ## AI-generated summary of changes

Added a state `isOpen` to manage the visibility of the date picker calendar. Modified the `onPress` handlers for the buttons to set the selected date and close the calendar by updating the `isOpen` state accordingly.

## Alterations to the declarations of exported or public entities

- Added: 
  - `const [isOpen, setIsOpen] = React.useState<boolean>(false)` in `packages/components/date-picker/stories/date-picker.stories.tsx`
  - `isOpen={isOpen}` in `packages/components/date-picker/stories/date-picker.stories.tsx`
  - `onOpenChange={setIsOpen}` in `packages/components/date-picker/stories/date-picker.stories.tsx`


# New changesets

apps/docs/content/components/date-picker/preset.ts: ## AI-generated summary of changes

Added state management for the `isOpen` boolean in the component using `React.useState`. Modified the button `onPress` handlers to also set `isOpen` to `false` after updating the value. Added `isOpen` prop to the `DatePicker` component and `onOpenChange` handler to manage the visibility of the date picker.



## Alterations to the declarations of exported or public entities

- `const [isOpen, setIsOpen] = React.useState<boolean>(false)` added in function `App` in `preset.ts`
- `isOpen={isOpen}` added to `DatePicker` component in function `App` in `preset.ts`
- `onOpenChange={setIsOpen}` added to `DatePicker` component in function `App` in `preset.ts`

-->

<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: pr objectives by coderabbit.ai -->

<!--

## PR Summary

### Title
feat(date-picker): added isOpen and onOpenChange

### Description
This pull request, created by ShrinidhiUpadhyaya, adds an `isOpen` prop and an `onOpenChange` event to the `DatePicker` component. These additions allow for control over the visibility of the `DatePicker` popover. The PR aims to close issue #3457.

## Objectives from Linked Issues

### Issue #3457: [BUG] - Unable to dismiss DatePicker after date selected by Preset

- **NextUI Version**: 2.4.2
- **Bug Description**: The `DatePicker` does not dismiss after a date is selected from a preset. The `popoverProps -> onOpenChange` event does not trigger when the `DatePicker` is shown.
- **Steps to Reproduce**:
  1. Open the `DatePicker` by clicking the selector button.
  2. Select a date from the calendar, which closes the `DatePicker`.
  3. Reopen the `DatePicker` and select a date using the "Today" preset button.
  4. The `DatePicker` does not close after selecting a date from the preset.
- **Expected Behavior**: The `DatePicker` should be dismissible programmatically.
- **Operating System**: Windows
- **Browser**: Chrome

## Comments Summary

1. **ShrinidhiUpadhyaya**: Asked whether the changeset should be marked as a minor or a patch.
2. **wingkwong**: Suggested marking it as a patch first.

-->

<!-- end of auto-generated comment: pr objectives by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 1a2e393a55b9bd5cdcce90ecbddfe1147cb9f25f -->
<!-- e53186fb5d95af3d31f0072485f1c2c986623dee -->
<!-- 67af7103019bc1a7de3929f66fb16966467632be -->

<!-- commit_ids_reviewed_end --><!-- tips_start -->

---

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>‚ù§Ô∏è Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<details>
<summary>ü™ß Tips</summary>

### Chat

There are 3 ways to chat with [CodeRabbit](https://coderabbit.ai):

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
  - `I pushed a fix in commit <commit_id>, please review it.`
  - `Generate unit testing code for this file.`
  - `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
  - `@coderabbitai generate unit testing code for this file.`
  -	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
  - `@coderabbitai gather interesting stats about this repository and render them as a table. Additionally, render a pie chart showing the language distribution in the codebase.`
  - `@coderabbitai read src/utils.ts and generate unit testing code.`
  - `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`
  - `@coderabbitai help me debug CodeRabbit configuration file.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (Invoked using PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger an incremental review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai full review` to do a full review from scratch and review all the files again.
- `@coderabbitai summary` to regenerate the summary of the PR.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai configuration` to show the current CodeRabbit configuration for the repository.
- `@coderabbitai help` to get help.

### Other keywords and placeholders

- Add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.
- Add `@coderabbitai summary` to generate the high-level summary at a specific location in the PR description.
- Add `@coderabbitai` anywhere in the PR title to generate the title automatically.

### Documentation and Community

- Visit our [Documentation](https://coderabbit.ai/docs) for detailed information on how to use CodeRabbit.
- Join our [Discord Community](http://discord.gg/coderabbit) to get help, request features, and share feedback.
- Follow us on [X/Twitter](https://twitter.com/coderabbitai) for updates and announcements.

</details>

<!-- tips_end -->\n- ShrinidhiUpadhyaya: @wingkwong For the changeset, should it be a minor or a patch?\n- wingkwong: mark it patch first\n- ShrinidhiUpadhyaya: > please include test cases

I was testing while adding the test cases and i noticed a bug. Consider the below code where you toggle `isOpen` using a component like `Button` in the below code.

 ```
 const [isOpen, setIsOpen] = React.useState<boolean>(false);

<Button
    onClick={() => {
       console.log("Toggle Outside", isOpen);
       setIsOpen(!isOpen);
   }}
>
   Toggle Outside
</Button>
```

**Bugs:-**
1. `onOpenChange` is not triggered when you click on `Button` to show the date picker, but the `DatePicker` is shown.
2. `onOpenChange` gets triggered when you click on `Button` to hide the date picker, but the `DatePicker` is not hidden, it flickers for a second and stays.

Note:-
1. You could add the above code to `Presets` template in `DatePicker` to test.
2. I observed similar bug inside the `Popover` component in the `OpenChange` template.

Could you tell me how you want me to proceed further? Do we need to fix this or do you want me to write the test cases only for the rendering of `DatePicker`\n- wingkwong: Please fix the bug as well.

> I observed similar bug inside the Popover component in the OpenChange template.

I couldn't reproduce in canary branch nor production. `onOpenChange` is triggered no matter I open it or close it.\n- ShrinidhiUpadhyaya: > Please fix the bug as well.
> 
> > I observed similar bug inside the Popover component in the OpenChange template.
> 
> I couldn't reproduce in canary branch nor production. `onOpenChange` is triggered no matter I open it or close it.

Could you please check by changing the `OpenChangeTemplate` in `popover.stories.tsx`. 

The code looks something like this
```
const OpenChangeTemplate = (args: PopoverProps) => {
  const [isOpen, setIsOpen] = React.useState(false);

  return (
    <div className="flex flex-col gap-2">
      <Button
        className="mb-10"
        onClick={() => {
          console.log("Toggle Outside", isOpen);
          setIsOpen(!isOpen);
        }}
      > 
        Toggle Outside
      </Button>
      <Popover
        {...args}
        isOpen={isOpen}
        style={{
          zIndex: 10,
        }}
        onOpenChange={(open) => {
          console.log("Popover: onOpenChange", open);
          setIsOpen(open);
        }}
      >
        <PopoverTrigger>
          <Button>Open Popover</Button>
        </PopoverTrigger>
        <PopoverContent>
          <div className="px-1 py-2">
            <div className="text-sm font-bold">Popover Content</div>
            <div className="text-xs">This is a content of the popover</div>
          </div>
        </PopoverContent>
      </Popover>
      <p className="text-sm">isOpen: {isOpen ? "true" : "false"}</p>
    </div>
  );
};
```

\n

Files Changed:
- .changeset/silent-countries-drum.md (added, 5 changes)\n  Patch: @@ -0,0 +1,5 @@
+---
+"@nextui-org/date-picker": patch
+---
+
+Added isOpen and onOpenChanged to DatePicker (#3457)\n- apps/docs/content/components/date-picker/preset.ts (modified, 30 changes)\n  Patch: @@ -6,6 +6,7 @@ export default function App() {
   let defaultDate = today(getLocalTimeZone());
 
   const [value, setValue] = React.useState(defaultDate);
+  const [isOpen, setIsOpen] = React.useState<boolean>(false);
 
   let {locale} = useLocale();
   let formatter = useDateFormatter({dateStyle: "full"});
@@ -65,9 +66,30 @@ export default function App() {
             size="sm"
             variant="bordered"
           >
-            <Button onPress={() => setValue(now)}>Today</Button>
-            <Button onPress={() => setValue(nextWeek)}>Next week</Button>
-            <Button onPress={() => setValue(nextMonth)}>Next month</Button>
+            <Button 
+              onPress={() => {
+                setValue(now);
+                setIsOpen(false);
+              }}
+            >
+              Today
+            </Button>
+            <Button 
+              onPress={() => {
+                setValue(nextWeek);
+                setIsOpen(false);
+              }}
+            >
+              Next week
+            </Button>
+            <Button 
+              onPress={() => {
+                setValue(nextMonth);
+                setIsOpen(false);
+              }}
+            >
+              Next month
+            </Button>
           </ButtonGroup>
         }
         calendarProps={{
@@ -80,8 +102,10 @@ export default function App() {
             variant: "bordered",
           },
         }}
+        isOpen={isOpen}
         value={value}
         onChange={setValue}
+        onOpenChange={setIsOpen}
         label="Event date"
       />
       <p className="text-default-500 text-sm">\n- packages/components/date-picker/src/use-date-picker-base.ts (modified, 2 changes)\n  Patch: @@ -143,6 +143,7 @@ export function useDatePickerBase<T extends DateValue>(originalProps: UseDatePic
     CalendarTopContent,
     CalendarBottomContent,
     createCalendar,
+    onOpenChange,
   } = props;
 
   const {
@@ -297,6 +298,7 @@ export function useDatePickerBase<T extends DateValue>(originalProps: UseDatePic
     selectorButtonProps,
     selectorIconProps,
     onClose,
+    onOpenChange,
   };
 }
 \n- packages/components/date-picker/src/use-date-picker.ts (modified, 4 changes)\n  Patch: @@ -88,13 +88,15 @@ export function useDatePicker<T extends DateValue>({
     selectorButtonProps,
     selectorIconProps,
     onClose,
+    onOpenChange,
   } = useDatePickerBase({...originalProps, validationBehavior});
 
   let state: DatePickerState = useDatePickerState({
     ...originalProps,
     validationBehavior,
     shouldCloseOnSelect: () => !state.hasTime,
     onOpenChange: (isOpen) => {
+      onOpenChange?.(isOpen);
       if (!isOpen) {
         onClose();
       }
@@ -228,6 +230,8 @@ export function useDatePicker<T extends DateValue>({
 
   return {
     state,
+    isOpen: state.isOpen,
+    onOpenChange,
     endContent,
     selectorIcon,
     showTimeField,\n- packages/components/date-picker/stories/date-picker.stories.tsx (modified, 30 changes)\n  Patch: @@ -197,6 +197,7 @@ const PresetsTemplate = (args: DatePickerProps) => {
   let defaultDate = today(getLocalTimeZone());
 
   const [value, setValue] = React.useState<DateValue>(defaultDate);
+  const [isOpen, setIsOpen] = React.useState<boolean>(false);
 
   let {locale} = useLocale();
   let formatter = useDateFormatter({dateStyle: "full"});
@@ -256,9 +257,30 @@ const PresetsTemplate = (args: DatePickerProps) => {
             size="sm"
             variant="bordered"
           >
-            <Button onPress={() => setValue(now)}>Today</Button>
-            <Button onPress={() => setValue(nextWeek)}>Next week</Button>
-            <Button onPress={() => setValue(nextMonth)}>Next month</Button>
+            <Button
+              onPress={() => {
+                setValue(now);
+                setIsOpen(false);
+              }}
+            >
+              Today
+            </Button>
+            <Button
+              onPress={() => {
+                setValue(nextWeek);
+                setIsOpen(false);
+              }}
+            >
+              Next week
+            </Button>
+            <Button
+              onPress={() => {
+                setValue(nextMonth);
+                setIsOpen(false);
+              }}
+            >
+              Next month
+            </Button>
           </ButtonGroup>
         }
         calendarProps={{
@@ -271,8 +293,10 @@ const PresetsTemplate = (args: DatePickerProps) => {
             variant: "bordered",
           },
         }}
+        isOpen={isOpen}
         value={value}
         onChange={setValue}
+        onOpenChange={setIsOpen}
         {...args}
         label="Event date"
       />\n
Pull Request Number: 2547
Title: feat direct control navbar-menu
Base Branch: canary
Head Branch: feat/navbar-menu
Author: valguzin55
URL: https://github.com/nextui-org/nextui/pull/2547
State: CLOSED
Created At: 2024-03-19T07:56:33Z
Merged At: None
Participants: valguzin55, wingkwong

Description:
Closes # 
üìù Description
add direct control state navbar-menu open/close for 2 or more navbarmenu in navbar
‚õ≥Ô∏è Current behavior (updates)

Please describe the current behavior that you are modifying

üöÄ New behavior

Please describe the behavior or changes this PR adds

üí£ Is this a breaking change (Yes/No):

üìù Additional Information

Summary by CodeRabbit

New Features

Added control over the navbar menu's open state with the new isOpen property.

Commits:
- feat direct control navbar-menu\n

Labels:
üöß Status: Changes Requested

Comments:
- changeset-bot: ###  ‚ö†Ô∏è  No Changeset found

Latest commit: 1000630bc8c21643f8f1825746e052806c033001

Merging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**

<details><summary>This PR includes no changesets</summary>

  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types

</details>

[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).

[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/valguzin55/nextui/new/feat/navbar-menu?filename=.changeset/sharp-candles-allow.md&value=---%0A%22%40nextui-org%2Fnavbar%22%3A%20patch%0A---%0A%0Afeat%20direct%20control%20navbar-menu%0A)

\n- vercel: [vc]: #OOB0XTL1lKBmS52Ok/rRt4yzdGNV4/l5I9dKaau4x0g=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJuZXh0dWktc3Rvcnlib29rLXYyIiwicm9vdERpcmVjdG9yeSI6InBhY2thZ2VzL3N0b3J5Ym9vayIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9uZXh0dWktb3JnL25leHR1aS1zdG9yeWJvb2stdjIvRk5xZm5Wb1VHQ2Jza1lQcGh2WlBkVU5Zb0J0SCIsInByZXZpZXdVcmwiOiJuZXh0dWktc3Rvcnlib29rLXYyLWdpdC1mb3JrLXZhbGd1emluNTUtZmVhdC00YWU0ZTItbmV4dHVpLW9yZy52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IkRFUExPWUVEIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6Im5leHR1aS1zdG9yeWJvb2stdjItZ2l0LWZvcmstdmFsZ3V6aW41NS1mZWF0LTRhZTRlMi1uZXh0dWktb3JnLnZlcmNlbC5hcHAifX1dfQ==
**The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Comments | Updated (UTC) |
| :--- | :----- | :------ | :------- | :------ |
| **nextui-storybook-v2** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook-v2/FNqfnVoUGCbskYPphvZPdUNYoBtH)) | [Visit Preview](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-valguzin55-feat-4ae4e2-nextui-org.vercel.app?via=pr-comment-visit-preview-link&passThrough=1) | üí¨ [**Add feedback**](https://vercel.live/open-feedback/nextui-storybook-v2-git-fork-valguzin55-feat-4ae4e2-nextui-org.vercel.app?via=pr-comment-feedback-link) | Mar 19, 2024 7:59am |

\n- vercel: @valguzin55 is attempting to deploy a commit to the **NextUI Inc** Team on [Vercel](https://vercel.com).

A member of the Team first needs to [authorize it](https://vercel.com/git/authorize?team=NextUI%20Inc&type=github&job=%7B%22headInfo%22%3A%7B%22sha%22%3A%221000630bc8c21643f8f1825746e052806c033001%22%7D%2C%22id%22%3A%22QmesSwZWHcXLABpBjnfWp3QP3k2uMUo2G8uC6BSYsacdbG%22%2C%22org%22%3A%22nextui-org%22%2C%22prId%22%3A2547%2C%22repo%22%3A%22nextui%22%7D).

\n- coderabbitai: <!-- This is an auto-generated comment: summarize by coderabbit.ai -->
<!-- walkthrough_start -->

## Walkthrough

The update introduces a new `isOpen` prop to the `NavbarMenu` component, allowing external control over the menu's visibility. Adjustments have been made to the internal state management to accommodate this new prop. Additionally, there are updates in the destructuring and access patterns of certain properties within the component, enhancing its efficiency and readability.

## Changes

| File(s)                                     | Change Summary                                                                                   |
|---------------------------------------------|--------------------------------------------------------------------------------------------------|
| `packages/.../navbar-menu.tsx`              | Introduced `isOpen` prop for external control of menu visibility; updated state logic and property access patterns. |

<!-- walkthrough_end --><!-- This is an auto-generated comment: raw summary by coderabbit.ai -->
<!--


packages/components/navbar/src/navbar-menu.tsx: ## Short summary

In this update to `NavbarMenu`, the `isOpen` prop is introduced to control the menu's open state. The logic for determining the `isMenuOpen` state has been adjusted based on the presence of `isOpen`. Additionally, there are changes in how certain properties are destructured and accessed within the component.



-->
<!-- end of auto-generated comment: raw summary by coderabbit.ai --><!-- This is an auto-generated comment: short summary by coderabbit.ai -->
<!--


### PR Objectives

The pull request titled "feat direct control navbar-menu" (PR #2547) introduces a significant update to the handling of navbar menus within a specific software component library. The primary objective of this PR is to add functionality that allows for direct control over the open/close state of navbar menus. This feature is particularly aimed at scenarios where there are two or more `NavbarMenu` components within a single navbar, providing developers with the ability to programmatically manage the visibility of each menu.

The description of the PR outlines the addition of a new `isOpen` prop to the `NavbarMenu` component. This prop serves as a means to directly control the open state of the navbar menu, offering a more flexible and explicit mechanism for managing menu visibility compared to the existing behavior.

Before this update, the open/close state of navbar menus was likely managed internally within the component or through indirect means. The current behavior, as described in the PR, does not provide details on how the open/close state was handled but implies that it lacked the direct control now introduced.

The new behavior introduced by the PR allows developers to specify the open state of each `NavbarMenu` component within a navbar through the `isOpen` prop. This change is designed to enhance the usability and flexibility of the navbar component, making it more adaptable to various use cases where multiple menus exist within a single navbar.

The PR does not explicitly mention whether this change constitutes a breaking change for existing users of the `NextUI` library. However, the introduction of a new prop and the modification of the component's behavior could potentially require adjustments in how developers currently implement the `NavbarMenu` component.

In addition to the main feature addition, the PR also includes changes to how certain properties are destructured and accessed within the `NavbarMenu` component. These changes are likely related to the implementation of the new `isOpen` prop and the adjustments made to the component's logic to accommodate direct control over the menu's visibility.

### AI-Generated Summary of Generated Summaries

The pull request introduces a significant enhancement to the `NavbarMenu` component by adding an `isOpen` prop, enabling direct control over the menu's open/close state. This feature is particularly beneficial in scenarios involving multiple navbar menus, allowing for explicit management of each menu's visibility. The update signifies a shift from the possibly indirect or internally managed open/close state to a more straightforward and developer-friendly approach. The introduction of the `isOpen` prop necessitates adjustments in the component's logic, specifically in determining the `isMenuOpen` state, and also leads to changes in property destructuring and access patterns within the component. While the PR does not explicitly address the implications of this change as a breaking update, the introduction of new functionality and modifications to existing behaviors could require users of the library to update their implementations of the `NavbarMenu` component.

-->
<!-- end of auto-generated comment: short summary by coderabbit.ai --><!-- commit_ids_reviewed_start -->

<!-- 1000630bc8c21643f8f1825746e052806c033001 -->

<!-- commit_ids_reviewed_end --><!-- tweet_start -->

Thank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on your favorite social media?

<details>
<summary>Share</summary>

- [X](https://twitter.com/intent/tweet?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A&url=https%3A//coderabbit.ai)
- [Mastodon](https://mastodon.social/share?text=I%20just%20used%20%40coderabbitai%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20the%20proprietary%20code.%20Check%20it%20out%3A%20https%3A%2F%2Fcoderabbit.ai)
- [Reddit](https://www.reddit.com/submit?title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&text=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code.%20Check%20it%20out%3A%20https%3A//coderabbit.ai)
- [LinkedIn](https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcoderabbit.ai&mini=true&title=Great%20tool%20for%20code%20review%20-%20CodeRabbit&summary=I%20just%20used%20CodeRabbit%20for%20my%20code%20review%2C%20and%20it%27s%20fantastic%21%20It%27s%20free%20for%20OSS%20and%20offers%20a%20free%20trial%20for%20proprietary%20code)

</details>

<!-- tweet_end --><!-- tips_start -->

---

<details>
<summary>Tips</summary>

### Chat

There are 3 ways to chat with CodeRabbit:

- Review comments: Directly reply to a review comment made by CodeRabbit. Example:
	- `I pushed a fix in commit <commit_id>.`
	- `Generate unit-tests for this file.`
	- `Open a follow-up GitHub issue for this discussion.`
- Files and specific lines of code (under the "Files changed" tab): Tag `@coderabbitai` in a new review comment at the desired location with your query. Examples:
	- `@coderabbitai generate unit tests for this file.`
	-	`@coderabbitai modularize this function.`
- PR comments: Tag `@coderabbitai` in a new PR comment to ask questions about the PR branch. For the best results, please provide a very specific query, as very limited context is provided in this mode. Examples:
	- `@coderabbitai generate interesting stats about this repository and render them as a table.`
	- `@coderabbitai show all the console.log statements in this repository.`
	- `@coderabbitai read src/utils.ts and generate unit tests.`
	- `@coderabbitai read the files in the src/scheduler package and generate a class diagram using mermaid and a README in the markdown format.`

Note: Be mindful of the bot's finite context window. It's strongly recommended to break down tasks such as reading entire modules into smaller chunks. For a focused discussion, use review comments to chat about specific files and their changes, instead of using the PR comments.

### CodeRabbit Commands (invoked as PR comments)

- `@coderabbitai pause` to pause the reviews on a PR.
- `@coderabbitai resume` to resume the paused reviews.
- `@coderabbitai review` to trigger a review. This is useful when automatic reviews are disabled for the repository.
- `@coderabbitai resolve` resolve all the CodeRabbit review comments.
- `@coderabbitai help` to get help.


Additionally, you can add `@coderabbitai ignore` anywhere in the PR description to prevent this PR from being reviewed.

### CodeRabbit Configration File (`.coderabbit.yaml`)

- You can programmatically configure CodeRabbit by adding a `.coderabbit.yaml` file to the root of your repository.
- The JSON schema for the configuration file is available [here](https://coderabbit.ai/integrations/coderabbit-overrides.v2.json).
- If your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: `# yaml-language-server: $schema=https://coderabbit.ai/integrations/coderabbit-overrides.v2.json`

### CodeRabbit Discord Community

Join our [Discord Community](https://discord.com/invite/GsXnASn26c) to get help, request features, and share feedback.

</details>

<!-- tips_end -->\n- wingkwong: Closing - inactivity.\n

Files Changed:
- packages/components/navbar/src/navbar-menu.tsx (modified, 31 changes)\n  Patch: @@ -21,32 +21,51 @@ export interface NavbarMenuProps extends HTMLNextUIProps<"ul"> {
    * The props to modify the framer motion animation. Use the `variants` API to create your own animation.
    */
   motionProps?: HTMLMotionProps<"ul">;
+  /**
+   * The prop to control the open state of the menu.
+   */
+  isOpen?: boolean;
 }
 
 const NavbarMenu = forwardRef<"ul", NavbarMenuProps>((props, ref) => {
-  const {className, children, portalContainer, motionProps, style, ...otherProps} = props;
+  const {
+    className,
+    children,
+    portalContainer,
+    motionProps,
+    style,
+    isOpen,
+    ...otherProps
+  } = props;
   const domRef = useDOMRef(ref);
 
-  const {slots, isMenuOpen, height, disableAnimation, classNames} = useNavbarContext();
+  const navBarContext = useNavbarContext();
+  const { slots, height, disableAnimation, classNames } = navBarContext;
+  let isMenuOpen: boolean | undefined;
+  if (isOpen == undefined) {
+    isMenuOpen = navBarContext.isMenuOpen;
+  } else {
+    isMenuOpen = isOpen;
+  }
 
   const styles = clsx(classNames?.menu, className);
 
   const MenuWrapper = useCallback(
-    ({children}: {children: ReactElement}) => {
+    ({ children }: { children: ReactElement }) => {
       return (
         <RemoveScroll forwardProps enabled={isMenuOpen} removeScrollBar={false}>
           {children}
         </RemoveScroll>
       );
     },
-    [isMenuOpen],
+    [isMenuOpen]
   );
 
   const contents = disableAnimation ? (
     <MenuWrapper>
       <ul
         ref={domRef}
-        className={slots.menu?.({class: styles})}
+        className={slots.menu?.({ class: styles })}
         data-open={dataAttr(isMenuOpen)}
         style={{
           // @ts-expect-error
@@ -66,7 +85,7 @@ const NavbarMenu = forwardRef<"ul", NavbarMenuProps>((props, ref) => {
               ref={domRef}
               layoutScroll
               animate="enter"
-              className={slots.menu?.({class: styles})}
+              className={slots.menu?.({ class: styles })}
               data-open={dataAttr(isMenuOpen)}
               exit="exit"
               initial="exit"\n
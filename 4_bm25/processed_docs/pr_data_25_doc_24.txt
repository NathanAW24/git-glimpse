Pull Request Number: 942
Title: Feat/docs support section
Base Branch: next
Head Branch: feat/docs-support-section
Author: jrgarciadev
URL: https://github.com/nextui-org/nextui/pull/942
State: MERGED
Created At: 2022-12-11T15:06:03Z
Merged At: 2022-12-11T15:06:26Z
Participants: jrgarciadev

Description:
üìù Description
A new section for displaying the NextUI Open Collective Sponsors
üí£ Is this a breaking change (Yes/No): No

üìù Additional Information

Commits:
- feat(docs): first iteration of support section added\n- feat(docs): support wave added\n- feat(docs): support section done\n

Labels:


Comments:
- vercel: **The latest updates on your projects**. Learn more about [Vercel for Git ‚ÜóÔ∏é](https://vercel.link/github-learn-more)

| Name | Status | Preview | Updated |
| :--- | :----- | :------ | :------ |
| **nextui-docs** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-docs/336XMXN65G4nHvzdQgdQUvDtCc4H)) | [Visit Preview](https://nextui-docs-git-feat-docs-support-section-nextui-org.vercel.app) | Dec 11, 2022 at 3:06PM (UTC) |
| **nextui-storybook** | ‚úÖ Ready ([Inspect](https://vercel.com/nextui-org/nextui-storybook/2unfTH6etDXXxL7sGW8Hu7kCDign)) | [Visit Preview](https://nextui-storybook-git-feat-docs-support-section-nextui-org.vercel.app) | Dec 11, 2022 at 3:06PM (UTC) |


\n

Files Changed:
- apps/docs/src/components/features-grid/features-grid.tsx (modified, 31 changes)\n  Patch: @@ -2,6 +2,7 @@ import React from "react";
 import {Grid, GridProps, Text, Row, CSS} from "@nextui-org/react";
 import withDefaults from "@utils/with-defaults";
 import {useRouter} from "next/router";
+import {LinkIcon} from "@components";
 
 import {FeatureItem} from "./styles";
 
@@ -10,6 +11,7 @@ export interface Feature {
   description: string;
   icon: React.ReactNode;
   href?: string;
+  isExternal?: boolean;
 }
 
 interface Props {
@@ -35,23 +37,29 @@ const FeaturesGrid: React.FC<FeaturesGridProps> = ({
   sm,
   lg,
   css,
+
   itemCss,
   ...props
 }) => {
   const router = useRouter();
-  const handleClick = (href: string) => {
-    router.push(href);
+  const handleClick = (feat: Feature) => {
+    if (!feat.href) {
+      return;
+    }
+
+    if (feat.isExternal) {
+      window.open(feat.href, "_blank");
+
+      return;
+    }
+    router.push(feat.href);
   };
 
   return (
     <Grid.Container css={{px: 0, ...css}} gap={2} {...props}>
       {features.map((feat: Feature, index: number) => (
         <Grid key={`${feat.title}_${index}`} lg={lg} sm={sm} xs={xs}>
-          <FeatureItem
-            clickable={!!feat.href}
-            css={itemCss}
-            onClick={() => (feat.href ? handleClick(feat.href) : undefined)}
-          >
+          <FeatureItem clickable={!!feat.href} css={itemCss} onClick={() => handleClick(feat)}>
             <Row align="center">
               <div className="icon-wrapper">{feat.icon}</div>
               <Text
@@ -65,6 +73,15 @@ const FeaturesGrid: React.FC<FeaturesGridProps> = ({
               >
                 {feat.title}
               </Text>
+              {feat.isExternal && (
+                <LinkIcon
+                  css={{
+                    ml: "$4",
+                  }}
+                  fill="var(--nextui-colors-accents7)"
+                  size={18}
+                />
+              )}
             </Row>
             <Row align="center" css={{px: "$2", pt: "$4", pb: "$2"}}>
               <Text className="feature-description" css={{color: "$accents8"}}>\n- apps/docs/src/components/home/index.ts (modified, 2 changes)\n  Patch: @@ -4,6 +4,7 @@ import CustomizationSection from "./customization";
 import DarkModeSection from "./dark-mode";
 import BuiltInStitchesSection from "./built-in-stitches";
 import LastButNotLeastSection from "./last-but-not-least";
+import SupportSection from "./support";
 
 export {
   CustomThemesSection,
@@ -12,4 +13,5 @@ export {
   DarkModeSection,
   BuiltInStitchesSection,
   LastButNotLeastSection,
+  SupportSection,
 };\n- apps/docs/src/components/home/support.tsx (added, 193 changes)\n  Patch: @@ -0,0 +1,193 @@
+import React, {useState, useMemo} from "react";
+import {Heart, OpenCollectiveLogo, PatreonLogo, Plus, FeaturesGrid, SonarPulse} from "@components";
+import {Section, Title, Subtitle} from "@primitives";
+import {styled, Row, Spacer, Tooltip, Avatar, AvatarProps} from "@nextui-org/react";
+import {InView} from "react-intersection-observer";
+import {Sponsor, SPONSOR_TIERS, SPONSOR_COLORS} from "@lib/docs/sponsors";
+import {pulse} from "@utils/animations";
+import {clamp} from "lodash";
+
+const supportAccounts = [
+  {
+    title: "Open Collective",
+    description: "Sponsor the NextUI maintainers.",
+    icon: <OpenCollectiveLogo fill="#FF4ECD" />,
+    href: "https://opencollective.com/nextui",
+    isExternal: true,
+  },
+  {
+    title: "Patreon",
+    description: "Sponsor the creator, Junior Garcia.",
+    icon: <PatreonLogo fill="#FF4ECD" />,
+    href: "https://www.patreon.com/jrgarciadev?fan_landing=true",
+    isExternal: true,
+  },
+];
+
+const SONAR_PULSE_SIZE = 80;
+const SONAR_PULSE_CIRCLES_COUNT = 4;
+const SONAR_PULSE_RADIUS = 130;
+
+const StyledPlusWrapper = styled("div", {
+  display: "flex",
+  alignItems: "center",
+  justifyContent: "center",
+  borderRadius: "50%",
+  background: "linear-gradient(180deg, #FF1CF7 0%, #7928CA 100%)",
+  boxShadow: "0px 5px 15px rgba(0, 0, 0, 0.2)",
+  cursor: "pointer",
+  transition: "opacity 0.25s ease",
+  "&:active": {
+    opacity: 0.8,
+  },
+});
+
+const StyledSponsorsWrapper = styled("div", {
+  position: "absolute",
+  size: SONAR_PULSE_RADIUS,
+  borderRadius: "50%",
+  background: "transparent",
+  top: (SONAR_PULSE_RADIUS / 2) * -1,
+  left: (SONAR_PULSE_RADIUS / 2) * -1,
+});
+
+export interface SupportSectionProps {
+  sponsors: Sponsor[];
+}
+
+const SupportSection: React.FC<SupportSectionProps> = ({sponsors = []}) => {
+  const [isSonarVisible, setIsSonarVisible] = useState(false);
+
+  const handleExternalLinkClick = (href: string) => {
+    if (!href) return;
+    window.open(href, "_blank");
+  };
+
+  const getSponsorName = (sponsor: Sponsor) => {
+    if (!sponsor.name) {
+      return "";
+    }
+
+    return sponsor.name.slice(0, 2).toUpperCase();
+  };
+
+  const getSponsorSize = (sponsor: Sponsor) => {
+    let size: AvatarProps["size"] = "md";
+
+    switch (sponsor.tier) {
+      case SPONSOR_TIERS.BRONZE:
+        size = "md";
+        break;
+      case SPONSOR_TIERS.SILVER:
+        size = "md";
+        break;
+      case SPONSOR_TIERS.GOLD:
+        size = "xl";
+        break;
+      case SPONSOR_TIERS.PLATINUM:
+        size = "xl";
+        break;
+      default:
+        size = "md";
+    }
+
+    return size;
+  };
+
+  const getSponsorColor = (sponsor: Sponsor) => {
+    return SPONSOR_COLORS[sponsor.tier] || "default";
+  };
+
+  const getSponsorCss = (index: number) => {
+    const angle = (index * 360) / sponsors.length;
+    const radius = SONAR_PULSE_RADIUS;
+
+    // position the avatar randomly inside the sonar pulse
+    const randomRadius = clamp(Math.floor((index + 1) * radius), radius * 0.4, radius);
+
+    const x = randomRadius * Math.cos((angle * Math.PI) / 180);
+    const y = randomRadius * Math.sin((angle * Math.PI) / 180);
+
+    return {
+      position: "absolute",
+      top: "calc(50% - 20px)",
+      left: "calc(50% - 20px)",
+      transform: `translate(${x}px, ${y}px)`,
+    };
+  };
+
+  const renderSponsors = useMemo(() => {
+    if (!sponsors.length) return null;
+
+    return (
+      <StyledSponsorsWrapper>
+        {sponsors.map((sponsor, index) => (
+          <Avatar
+            key={`${sponsor.MemberId}-${index}`}
+            bordered
+            pointer
+            color={getSponsorColor(sponsor) as AvatarProps["color"]}
+            css={getSponsorCss(index)}
+            size={getSponsorSize(sponsor)}
+            src={sponsor.image}
+            text={getSponsorName(sponsor)}
+            onClick={() => handleExternalLinkClick(sponsor.profile)}
+          />
+        ))}
+      </StyledSponsorsWrapper>
+    );
+  }, [sponsors]);
+
+  return (
+    <Section css={{zIndex: "$10"}}>
+      <Spacer css={{"@xsMax": {mt: "$14"}}} y={6} />
+      <Row
+        align="center"
+        css={{
+          svg: {
+            animation: `${pulse} 2.5s infinite`,
+          },
+        }}
+        justify="center"
+      >
+        <Title css={{mr: "$6"}}>Support NextUI</Title>
+        <Heart filled fill="#FF4ECD" size={50} />
+      </Row>
+      <Row justify="center">
+        <Subtitle css={{textAlign: "center", maxW: "920px"}}>
+          If you run a business that intends to use NextUI in a revenue-generating product, or if
+          you&apos;re a freelancer and NextUI saves you time in your work, or you&apos;re just using
+          it in a fun project, your contributions will help to make NextUI better.
+        </Subtitle>
+      </Row>
+      <Spacer y={2} />
+      <FeaturesGrid features={supportAccounts} justify="center" sm={6} xs={12} />
+      <Spacer y={7} />
+      <InView as="section" className="inview-section" onChange={setIsSonarVisible}>
+        <Row justify="center">
+          <SonarPulse
+            circlesCount={SONAR_PULSE_CIRCLES_COUNT}
+            color="#7928CA"
+            icon={
+              <Tooltip rounded color="secondary" content={"Become a sponsor"} offset={86}>
+                <StyledPlusWrapper
+                  role="button"
+                  onClick={() => handleExternalLinkClick(supportAccounts[0].href)}
+                >
+                  <Plus fill="#fff" size={54} />
+                </StyledPlusWrapper>
+              </Tooltip>
+            }
+            playState={isSonarVisible ? "running" : "paused"}
+            size={SONAR_PULSE_SIZE}
+          >
+            {renderSponsors}
+          </SonarPulse>
+        </Row>
+      </InView>
+      <Spacer y={5} />
+    </Section>
+  );
+};
+
+export default SupportSection;\n- apps/docs/src/components/icons/index.ts (modified, 4 changes)\n  Patch: @@ -73,3 +73,7 @@ export {default as TypescriptLogo} from "./typescript";
 export {default as JavascriptLogo} from "./javascript";
 export {default as Scale} from "./scale";
 export {default as Sparkle} from "./sparkle";
+export {default as OpenCollectiveLogo} from "./open-collective";
+export {default as PatreonLogo} from "./patreon";
+export {default as LinkIcon} from "./link";
+export {default as PlusBoldIcon} from "./plus-bold";\n- apps/docs/src/components/icons/link.tsx (added, 45 changes)\n  Patch: @@ -0,0 +1,45 @@
+import React from "react";
+import {CSS, styled} from "@nextui-org/react";
+
+export const StyledLinkIcon = styled("svg", {
+  ml: "$1",
+  as: "center",
+  display: "flex",
+  color: "currentColor",
+});
+
+export interface Props {
+  fill?: string;
+  width?: number;
+  height?: number;
+  size?: number;
+  css?: CSS;
+}
+
+const LinkIcon: React.FC<Props> = ({
+  fill = "currentColor",
+  size,
+  width = 24,
+  height = 24,
+  ...props
+}) => (
+  <StyledLinkIcon
+    className="nextui-link-icon"
+    fill="none"
+    height={size || height}
+    shapeRendering="geometricPrecision"
+    stroke={fill}
+    strokeLinecap="round"
+    strokeLinejoin="round"
+    strokeWidth="1.5"
+    viewBox="0 0 24 24"
+    width={size || width}
+    {...props}
+  >
+    <path d="M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6" />
+    <path d="M15 3h6v6" />
+    <path d="M10 14L21 3" />
+  </StyledLinkIcon>
+);
+
+export default LinkIcon;\n- apps/docs/src/components/icons/open-collective.tsx (added, 33 changes)\n  Patch: @@ -0,0 +1,33 @@
+import * as React from "react";
+
+export interface Props {
+  fill?: string;
+  width?: number;
+  height?: number;
+  size?: number;
+}
+
+const OpenCollective: React.FC<Props> = ({fill, size, width = 24, height = 24, ...props}) => {
+  return (
+    <svg
+      fill="none"
+      height={size || height}
+      viewBox="0 0 24 24"
+      width={size || width}
+      xmlns="http://www.w3.org/2000/svg"
+      {...props}
+    >
+      <g clipPath="url(#a)" clipRule="evenodd" fill={fill} fillRule="evenodd">
+        <path d="M21.865 5.166A11.945 11.945 0 0 1 24 12.001c0 2.54-.789 4.895-2.135 6.834l-3.109-3.109A7.679 7.679 0 0 0 19.714 12a7.679 7.679 0 0 0-.958-3.725l3.109-3.109Z" />
+        <path d="m18.834 2.135-3.108 3.109a7.714 7.714 0 1 0 0 13.513l3.108 3.108A11.946 11.946 0 0 1 12 24C5.373 24 0 18.627 0 12S5.373 0 12 0c2.54 0 4.895.789 6.834 2.135Z" />
+      </g>
+      <defs>
+        <clipPath id="a">
+          <path d="M0 0h24v24H0z" fill="#fff" />
+        </clipPath>
+      </defs>
+    </svg>
+  );
+};
+
+export default OpenCollective;\n- apps/docs/src/components/icons/patreon.tsx (added, 32 changes)\n  Patch: @@ -0,0 +1,32 @@
+import * as React from "react";
+
+export interface Props {
+  fill?: string;
+  width?: number;
+  height?: number;
+  size?: number;
+}
+
+const Patreon: React.FC<Props> = ({fill, size, width = 24, height = 24, ...props}) => {
+  return (
+    <svg
+      fill="none"
+      height={size || height}
+      viewBox="0 0 24 24"
+      width={size || width}
+      xmlns="http://www.w3.org/2000/svg"
+      {...props}
+    >
+      <g clipPath="url(#a)" fill={fill}>
+        <path d="M15.294 17.986c4.766 0 8.63-4.026 8.63-8.993C23.923 4.026 20.06 0 15.293 0c-4.766 0-8.63 4.026-8.63 8.993 0 4.967 3.864 8.993 8.63 8.993ZM4.218 0H0v23.991h4.218V0Z" />
+      </g>
+      <defs>
+        <clipPath id="a">
+          <path d="M0 0h24v24H0z" fill="#fff" />
+        </clipPath>
+      </defs>
+    </svg>
+  );
+};
+
+export default Patreon;\n- apps/docs/src/components/icons/plus-bold.tsx (added, 31 changes)\n  Patch: @@ -0,0 +1,31 @@
+import React from "react";
+import {styled, CSS} from "@nextui-org/react";
+
+export interface Props {
+  fill?: string;
+  width?: number;
+  height?: number;
+  size?: number;
+  css?: CSS;
+}
+
+const StyledSvg = styled("svg", {});
+
+const PlusBold: React.FC<Props> = ({fill, size, height, width, ...props}) => {
+  return (
+    <StyledSvg
+      height={size || height || 24}
+      viewBox="0 0 24 24"
+      width={size || width || 24}
+      xmlns="http://www.w3.org/2000/svg"
+      {...props}
+    >
+      <path
+        d="M12 2C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2Zm4 10.75h-3.25V16c0 .41-.34.75-.75.75s-.75-.34-.75-.75v-3.25H8c-.41 0-.75-.34-.75-.75s.34-.75.75-.75h3.25V8c0-.41.34-.75.75-.75s.75.34.75.75v3.25H16c.41 0 .75.34.75.75s-.34.75-.75.75Z"
+        fill={fill}
+      />
+    </StyledSvg>
+  );
+};
+
+export default PlusBold;\n- apps/docs/src/components/index.ts (modified, 1 changes)\n  Patch: @@ -41,5 +41,6 @@ export {default as NotifyBanner} from "./notify-banner";
 export {default as WindowActions} from "./window-actions";
 export {default as SandpackEditor} from "./sandpack";
 export {default as Sparkles} from "./sparkles";
+export {default as SonarPulse} from "./sonar-pulse";
 export * as Examples from "./examples";
 export * from "./sandpack";\n- apps/docs/src/components/sonar-pulse/index.ts (added, 3 changes)\n  Patch: @@ -0,0 +1,3 @@
+import SonarPulse from "./sonar-pulse";
+
+export default SonarPulse;\n- apps/docs/src/components/sonar-pulse/sonar-pulse.styles.ts (added, 42 changes)\n  Patch: @@ -0,0 +1,42 @@
+import {styled} from "@nextui-org/react";
+import {growCircles} from "@utils/animations";
+
+export const StyledSonarPulse = styled("div", {
+  position: "relative",
+  display: "inline-block",
+});
+
+export const StyledIconWrapper = styled("div", {
+  position: "relative",
+  width: "$$sonarSize",
+  height: "$$sonarSize",
+  textAlign: "center",
+  display: "flex",
+  justifyContent: "center",
+  alignItems: "center",
+  borderRadius: "50%",
+  background: "transparent",
+  zIndex: 2,
+});
+
+export const StyledSonarElements = styled("div", {
+  top: "50%",
+  left: "50%",
+  transform: "translate(-50%, -50%)",
+  overflow: "visible",
+  position: "absolute",
+  zIndex: -1,
+  size: "$$sonarSize * 4",
+});
+
+export const StyledSonarCircle = styled("div", {
+  $$circleSize: "calc($$sonarSize * $$factor)",
+  borderRadius: "50%",
+  position: "absolute",
+  width: "$$circleSize",
+  height: "$$circleSize",
+  top: "calc($$circleSize / 2 * -1)",
+  left: "calc($$circleSize / 2 * -1)",
+  animation: `6s linear infinite both $$playState ${growCircles} `,
+  animationDelay: "$$delay",
+});\n- apps/docs/src/components/sonar-pulse/sonar-pulse.tsx (added, 86 changes)\n  Patch: @@ -0,0 +1,86 @@
+import {hexToRGBA} from "@utils/index";
+import React, {useMemo} from "react";
+import {growCirclesWithoutDisappear} from "@utils/animations";
+
+import {
+  StyledSonarPulse,
+  StyledIconWrapper,
+  StyledSonarElements,
+  StyledSonarCircle,
+} from "./sonar-pulse.styles";
+
+interface SonarPulseProps {
+  children: React.ReactNode;
+  icon?: React.ReactNode;
+  size?: number;
+  circlesCount?: number;
+  playState?: "running" | "paused";
+  color?: string;
+}
+
+const SonarPulse: React.FC<SonarPulseProps> = ({
+  children,
+  color = "#FF4ECD",
+  icon,
+  size = 80,
+  circlesCount = 4,
+  playState = "paused",
+}) => {
+  const initialSizeFactor = 1.5;
+
+  const rgbaColors = useMemo(() => {
+    const alpha = 0.4;
+    const length = circlesCount;
+    const factor = alpha / circlesCount;
+
+    return Array.from({length}).map((_, i) => hexToRGBA(color, alpha - i * factor));
+  }, [circlesCount, color]);
+
+  const renderCircles = useMemo(() => {
+    const circles = [];
+
+    for (let i = 1; i < circlesCount; i++) {
+      circles.push(
+        <StyledSonarCircle
+          className={`circle circle-${i}`}
+          css={{
+            $$factor: initialSizeFactor + i,
+            $$delay: `${i * 0.5}s`,
+            $$playState: playState,
+            border: `1px solid ${rgbaColors[i - 1]}`,
+            background: `linear-gradient(-180deg, ${rgbaColors[i]} 20%, $background 100%)`,
+          }}
+        />,
+      );
+    }
+
+    return circles;
+  }, [rgbaColors, circlesCount, playState]);
+
+  return (
+    <StyledSonarPulse
+      css={{
+        $$sonarSize: `${size}px`,
+      }}
+    >
+      <StyledIconWrapper>{icon}</StyledIconWrapper>
+      <StyledSonarElements>
+        <StyledSonarCircle
+          className={`circle circle-static`}
+          css={{
+            $$factor: initialSizeFactor,
+            $$playState: playState,
+            animation: `6s ease-out infinite both $$playState ${growCirclesWithoutDisappear} `,
+            animationDelay: "1s",
+            border: `1.5px solid ${rgbaColors[0]}`,
+            background: `linear-gradient(-180deg, ${rgbaColors[0]} 40%, $background 100%)`,
+          }}
+        />
+        {renderCircles}
+        {children}
+      </StyledSonarElements>
+    </StyledSonarPulse>
+  );
+};
+
+export default SonarPulse;\n- apps/docs/src/lib/docs/sponsors.ts (added, 65 changes)\n  Patch: @@ -0,0 +1,65 @@
+import {uniqBy} from "lodash";
+
+export type SponsorType = "USER" | "ORGANIZATION" | "COLLECTIVE";
+
+export type SponsorRole = "ADMIN" | "BACKER" | "CONTRIBUTOR" | "HOST" | "MEMBER" | "FUNDRAISER";
+
+export const SPONSOR_TIERS = {
+  BACKER: "Backer üñ§",
+  BRONZE: "Bronze Sponsor ü•â",
+  SILVER: "Silver Sponsor ü•à",
+  GOLD: "Gold Sponsor ü•á",
+  PLATINUM: "Platinum Sponsor ‚≠êÔ∏è",
+  HERO: "Hero Sponsor üéñ",
+};
+
+export const SPONSOR_COLORS = {
+  [SPONSOR_TIERS.BACKER]: "default",
+  [SPONSOR_TIERS.BRONZE]: "default",
+  [SPONSOR_TIERS.SILVER]: "default",
+  [SPONSOR_TIERS.GOLD]: "warning",
+  [SPONSOR_TIERS.PLATINUM]: "primary",
+  [SPONSOR_TIERS.HERO]: "secondary",
+};
+
+export type SponsorTiers =
+  | "Backer üñ§"
+  | "Bronze Sponsor ü•â"
+  | "Silver Sponsor ü•à"
+  | "Gold Sponsor ü•á"
+  | "Platinum Sponsor ‚≠êÔ∏è"
+  | "Hero Sponsor üéñ";
+
+export type Sponsor = {
+  MemberId: number;
+  type: SponsorType;
+  role: SponsorRole;
+  isActive: boolean;
+  totalAmountDonated: number;
+  currency: string;
+  lastTransactionAt: string;
+  lastTransactionAmount: number;
+  profile: string;
+  name: string;
+  tier: SponsorTiers;
+  company: string;
+  description: string;
+  image: string;
+  email: string;
+  twitter: string;
+  github: string;
+  website: string;
+  createdAt: string;
+};
+
+export const getSponsors = async () => {
+  const res = await fetch("https://opencollective.com/nextui/members/all.json");
+  const data = await res.json();
+
+  // filter out repeated sponsors
+  const sponsors = uniqBy<Sponsor>(data, "profile").filter(
+    (sponsor) => sponsor.role !== "ADMIN" && sponsor.role !== "HOST",
+  );
+
+  return sponsors;
+};\n- apps/docs/src/pages/index.tsx (modified, 8 changes)\n  Patch: @@ -13,21 +13,24 @@ import {
   CustomizationSection,
   BuiltInStitchesSection,
   LastButNotLeastSection,
+  SupportSection,
 } from "@components";
 import landingContent from "@content/landing";
 import DefaultLayout from "@layouts/default";
 import {getSlug} from "@lib/docs/utils";
 import {Route, getCurrentTag, fetchDocsManifest} from "@lib/docs/page";
+import {Sponsor, getSponsors} from "@lib/docs/sponsors";
 import {Action, useRegisterActions} from "kbar";
 import {Spacer} from "@nextui-org/react";
 import {getId} from "@utils/collections";
 
 interface Props {
   routes: Route[];
+  sponsors: Sponsor[];
   currentRoute: Route;
 }
 
-const IndexPage: React.FC<Props> = ({routes, currentRoute}) => {
+const IndexPage: React.FC<Props> = ({routes, sponsors, currentRoute}) => {
   const {query} = useRouter();
   const {tag, slug} = getSlug(query);
 
@@ -59,6 +62,7 @@ const IndexPage: React.FC<Props> = ({routes, currentRoute}) => {
       <CustomizationSection />
       <BuiltInStitchesSection />
       <LastButNotLeastSection />
+      <SupportSection sponsors={sponsors} />
       {/* Installation banner */}
       <Section css={{zIndex: "$10"}}>
         <Spacer css={{"@xsMax": {mt: "$16"}}} y={6} />
@@ -76,10 +80,12 @@ const IndexPage: React.FC<Props> = ({routes, currentRoute}) => {
 export const getStaticProps: GetStaticProps = async () => {
   const tag = await getCurrentTag();
   const manifest = await fetchDocsManifest(tag);
+  const sponsors = await getSponsors();
 
   return {
     props: {
       routes: manifest.routes,
+      sponsors,
     },
   };
 };\n- apps/docs/src/utils/animations.ts (modified, 42 changes)\n  Patch: @@ -38,3 +38,45 @@ export const pulse = keyframes({
     transform: "scale(1)",
   },
 });
+
+export const growCircles = keyframes({
+  "0%": {
+    opacity: 0,
+    transform: "scale(1)",
+  },
+  "50%": {
+    opacity: 1,
+    transform: "scale(1.3)",
+  },
+  "100%": {
+    opacity: 0,
+    transform: "scale(1.295)",
+  },
+});
+
+export const growCirclesWithoutDisappear = keyframes({
+  "0%": {
+    transform: "scale(1)",
+  },
+  "50%": {
+    transform: "scale(1.2)",
+  },
+  "100%": {
+    transform: "scale(1)",
+  },
+});
+
+export const pulseWave = keyframes({
+  "0%": {
+    opacity: 0,
+    transform: "scale(0.1)",
+  },
+  "50%": {
+    opacity: 1,
+    transform: "scale(0.5)",
+  },
+  "100%": {
+    opacity: 0,
+    transform: "scale(1.0)",
+  },
+});\n